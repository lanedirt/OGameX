/*! jQuery v1.12.4 | (c) jQuery Foundation | jquery.org/license */
!function(a,b){"object"==typeof module&&"object"==typeof module.exports?module.exports=a.document?b(a,!0):function(a){if(!a.document)throw new Error("jQuery requires a window with a document");return b(a)}:b(a)}("undefined"!=typeof window?window:this,function(a,b){var c=[],d=a.document,e=c.slice,f=c.concat,g=c.push,h=c.indexOf,i={},j=i.toString,k=i.hasOwnProperty,l={},m="1.12.4",n=function(a,b){return new n.fn.init(a,b)},o=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,p=/^-ms-/,q=/-([\da-z])/gi,r=function(a,b){return b.toUpperCase()};n.fn=n.prototype={jquery:m,constructor:n,selector:"",length:0,toArray:function(){return e.call(this)},get:function(a){return null!=a?0>a?this[a+this.length]:this[a]:e.call(this)},pushStack:function(a){var b=n.merge(this.constructor(),a);return b.prevObject=this,b.context=this.context,b},each:function(a){return n.each(this,a)},map:function(a){return this.pushStack(n.map(this,function(b,c){return a.call(b,c,b)}))},slice:function(){return this.pushStack(e.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(a){var b=this.length,c=+a+(0>a?b:0);return this.pushStack(c>=0&&b>c?[this[c]]:[])},end:function(){return this.prevObject||this.constructor()},push:g,sort:c.sort,splice:c.splice},n.extend=n.fn.extend=function(){var a,b,c,d,e,f,g=arguments[0]||{},h=1,i=arguments.length,j=!1;for("boolean"==typeof g&&(j=g,g=arguments[h]||{},h++),"object"==typeof g||n.isFunction(g)||(g={}),h===i&&(g=this,h--);i>h;h++)if(null!=(e=arguments[h]))for(d in e)a=g[d],c=e[d],g!==c&&(j&&c&&(n.isPlainObject(c)||(b=n.isArray(c)))?(b?(b=!1,f=a&&n.isArray(a)?a:[]):f=a&&n.isPlainObject(a)?a:{},g[d]=n.extend(j,f,c)):void 0!==c&&(g[d]=c));return g},n.extend({expando:"jQuery"+(m+Math.random()).replace(/\D/g,""),isReady:!0,error:function(a){throw new Error(a)},noop:function(){},isFunction:function(a){return"function"===n.type(a)},isArray:Array.isArray||function(a){return"array"===n.type(a)},isWindow:function(a){return null!=a&&a==a.window},isNumeric:function(a){var b=a&&a.toString();return!n.isArray(a)&&b-parseFloat(b)+1>=0},isEmptyObject:function(a){var b;for(b in a)return!1;return!0},isPlainObject:function(a){var b;if(!a||"object"!==n.type(a)||a.nodeType||n.isWindow(a))return!1;try{if(a.constructor&&!k.call(a,"constructor")&&!k.call(a.constructor.prototype,"isPrototypeOf"))return!1}catch(c){return!1}if(!l.ownFirst)for(b in a)return k.call(a,b);for(b in a);return void 0===b||k.call(a,b)},type:function(a){return null==a?a+"":"object"==typeof a||"function"==typeof a?i[j.call(a)]||"object":typeof a},globalEval:function(b){b&&n.trim(b)&&(a.execScript||function(b){a.eval.call(a,b)})(b)},camelCase:function(a){return a.replace(p,"ms-").replace(q,r)},nodeName:function(a,b){return a.nodeName&&a.nodeName.toLowerCase()===b.toLowerCase()},each:function(a,b){var c,d=0;if(s(a)){for(c=a.length;c>d;d++)if(b.call(a[d],d,a[d])===!1)break}else for(d in a)if(b.call(a[d],d,a[d])===!1)break;return a},trim:function(a){return null==a?"":(a+"").replace(o,"")},makeArray:function(a,b){var c=b||[];return null!=a&&(s(Object(a))?n.merge(c,"string"==typeof a?[a]:a):g.call(c,a)),c},inArray:function(a,b,c){var d;if(b){if(h)return h.call(b,a,c);for(d=b.length,c=c?0>c?Math.max(0,d+c):c:0;d>c;c++)if(c in b&&b[c]===a)return c}return-1},merge:function(a,b){var c=+b.length,d=0,e=a.length;while(c>d)a[e++]=b[d++];if(c!==c)while(void 0!==b[d])a[e++]=b[d++];return a.length=e,a},grep:function(a,b,c){for(var d,e=[],f=0,g=a.length,h=!c;g>f;f++)d=!b(a[f],f),d!==h&&e.push(a[f]);return e},map:function(a,b,c){var d,e,g=0,h=[];if(s(a))for(d=a.length;d>g;g++)e=b(a[g],g,c),null!=e&&h.push(e);else for(g in a)e=b(a[g],g,c),null!=e&&h.push(e);return f.apply([],h)},guid:1,proxy:function(a,b){var c,d,f;return"string"==typeof b&&(f=a[b],b=a,a=f),n.isFunction(a)?(c=e.call(arguments,2),d=function(){return a.apply(b||this,c.concat(e.call(arguments)))},d.guid=a.guid=a.guid||n.guid++,d):void 0},now:function(){return+new Date},support:l}),"function"==typeof Symbol&&(n.fn[Symbol.iterator]=c[Symbol.iterator]),n.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(a,b){i["[object "+b+"]"]=b.toLowerCase()});function s(a){var b=!!a&&"length"in a&&a.length,c=n.type(a);return"function"===c||n.isWindow(a)?!1:"array"===c||0===b||"number"==typeof b&&b>0&&b-1 in a}var t=function(a){var b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u="sizzle"+1*new Date,v=a.document,w=0,x=0,y=ga(),z=ga(),A=ga(),B=function(a,b){return a===b&&(l=!0),0},C=1<<31,D={}.hasOwnProperty,E=[],F=E.pop,G=E.push,H=E.push,I=E.slice,J=function(a,b){for(var c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",L="[\\x20\\t\\r\\n\\f]",M="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",N="\\["+L+"*("+M+")(?:"+L+"*([*^$|!~]?=)"+L+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+M+"))|)"+L+"*\\]",O=":("+M+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+N+")*)|.*)\\)|)",P=new RegExp(L+"+","g"),Q=new RegExp("^"+L+"+|((?:^|[^\\\\])(?:\\\\.)*)"+L+"+$","g"),R=new RegExp("^"+L+"*,"+L+"*"),S=new RegExp("^"+L+"*([>+~]|"+L+")"+L+"*"),T=new RegExp("="+L+"*([^\\]'\"]*?)"+L+"*\\]","g"),U=new RegExp(O),V=new RegExp("^"+M+"$"),W={ID:new RegExp("^#("+M+")"),CLASS:new RegExp("^\\.("+M+")"),TAG:new RegExp("^("+M+"|[*])"),ATTR:new RegExp("^"+N),PSEUDO:new RegExp("^"+O),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+L+"*(even|odd|(([+-]|)(\\d*)n|)"+L+"*(?:([+-]|)"+L+"*(\\d+)|))"+L+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+L+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+L+"*((?:-\\d)?\\d*)"+L+"*\\)|)(?=[^-]|$)","i")},X=/^(?:input|select|textarea|button)$/i,Y=/^h\d$/i,Z=/^[^{]+\{\s*\[native \w/,$=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,_=/[+~]/,aa=/'|\\/g,ba=new RegExp("\\\\([\\da-f]{1,6}"+L+"?|("+L+")|.)","ig"),ca=function(a,b,c){var d="0x"+b-65536;return d!==d||c?b:0>d?String.fromCharCode(d+65536):String.fromCharCode(d>>10|55296,1023&d|56320)},da=function(){m()};try{H.apply(E=I.call(v.childNodes),v.childNodes),E[v.childNodes.length].nodeType}catch(ea){H={apply:E.length?function(a,b){G.apply(a,I.call(b))}:function(a,b){var c=a.length,d=0;while(a[c++]=b[d++]);a.length=c-1}}}function fa(a,b,d,e){var f,h,j,k,l,o,r,s,w=b&&b.ownerDocument,x=b?b.nodeType:9;if(d=d||[],"string"!=typeof a||!a||1!==x&&9!==x&&11!==x)return d;if(!e&&((b?b.ownerDocument||b:v)!==n&&m(b),b=b||n,p)){if(11!==x&&(o=$.exec(a)))if(f=o[1]){if(9===x){if(!(j=b.getElementById(f)))return d;if(j.id===f)return d.push(j),d}else if(w&&(j=w.getElementById(f))&&t(b,j)&&j.id===f)return d.push(j),d}else{if(o[2])return H.apply(d,b.getElementsByTagName(a)),d;if((f=o[3])&&c.getElementsByClassName&&b.getElementsByClassName)return H.apply(d,b.getElementsByClassName(f)),d}if(c.qsa&&!A[a+" "]&&(!q||!q.test(a))){if(1!==x)w=b,s=a;else if("object"!==b.nodeName.toLowerCase()){(k=b.getAttribute("id"))?k=k.replace(aa,"\\$&"):b.setAttribute("id",k=u),r=g(a),h=r.length,l=V.test(k)?"#"+k:"[id='"+k+"']";while(h--)r[h]=l+" "+qa(r[h]);s=r.join(","),w=_.test(a)&&oa(b.parentNode)||b}if(s)try{return H.apply(d,w.querySelectorAll(s)),d}catch(y){}finally{k===u&&b.removeAttribute("id")}}}return i(a.replace(Q,"$1"),b,d,e)}function ga(){var a=[];function b(c,e){return a.push(c+" ")>d.cacheLength&&delete b[a.shift()],b[c+" "]=e}return b}function ha(a){return a[u]=!0,a}function ia(a){var b=n.createElement("div");try{return!!a(b)}catch(c){return!1}finally{b.parentNode&&b.parentNode.removeChild(b),b=null}}function ja(a,b){var c=a.split("|"),e=c.length;while(e--)d.attrHandle[c[e]]=b}function ka(a,b){var c=b&&a,d=c&&1===a.nodeType&&1===b.nodeType&&(~b.sourceIndex||C)-(~a.sourceIndex||C);if(d)return d;if(c)while(c=c.nextSibling)if(c===b)return-1;return a?1:-1}function la(a){return function(b){var c=b.nodeName.toLowerCase();return"input"===c&&b.type===a}}function ma(a){return function(b){var c=b.nodeName.toLowerCase();return("input"===c||"button"===c)&&b.type===a}}function na(a){return ha(function(b){return b=+b,ha(function(c,d){var e,f=a([],c.length,b),g=f.length;while(g--)c[e=f[g]]&&(c[e]=!(d[e]=c[e]))})})}function oa(a){return a&&"undefined"!=typeof a.getElementsByTagName&&a}c=fa.support={},f=fa.isXML=function(a){var b=a&&(a.ownerDocument||a).documentElement;return b?"HTML"!==b.nodeName:!1},m=fa.setDocument=function(a){var b,e,g=a?a.ownerDocument||a:v;return g!==n&&9===g.nodeType&&g.documentElement?(n=g,o=n.documentElement,p=!f(n),(e=n.defaultView)&&e.top!==e&&(e.addEventListener?e.addEventListener("unload",da,!1):e.attachEvent&&e.attachEvent("onunload",da)),c.attributes=ia(function(a){return a.className="i",!a.getAttribute("className")}),c.getElementsByTagName=ia(function(a){return a.appendChild(n.createComment("")),!a.getElementsByTagName("*").length}),c.getElementsByClassName=Z.test(n.getElementsByClassName),c.getById=ia(function(a){return o.appendChild(a).id=u,!n.getElementsByName||!n.getElementsByName(u).length}),c.getById?(d.find.ID=function(a,b){if("undefined"!=typeof b.getElementById&&p){var c=b.getElementById(a);return c?[c]:[]}},d.filter.ID=function(a){var b=a.replace(ba,ca);return function(a){return a.getAttribute("id")===b}}):(delete d.find.ID,d.filter.ID=function(a){var b=a.replace(ba,ca);return function(a){var c="undefined"!=typeof a.getAttributeNode&&a.getAttributeNode("id");return c&&c.value===b}}),d.find.TAG=c.getElementsByTagName?function(a,b){return"undefined"!=typeof b.getElementsByTagName?b.getElementsByTagName(a):c.qsa?b.querySelectorAll(a):void 0}:function(a,b){var c,d=[],e=0,f=b.getElementsByTagName(a);if("*"===a){while(c=f[e++])1===c.nodeType&&d.push(c);return d}return f},d.find.CLASS=c.getElementsByClassName&&function(a,b){return"undefined"!=typeof b.getElementsByClassName&&p?b.getElementsByClassName(a):void 0},r=[],q=[],(c.qsa=Z.test(n.querySelectorAll))&&(ia(function(a){o.appendChild(a).innerHTML="<a id='"+u+"'></a><select id='"+u+"-\r\\' msallowcapture=''><option selected=''></option></select>",a.querySelectorAll("[msallowcapture^='']").length&&q.push("[*^$]="+L+"*(?:''|\"\")"),a.querySelectorAll("[selected]").length||q.push("\\["+L+"*(?:value|"+K+")"),a.querySelectorAll("[id~="+u+"-]").length||q.push("~="),a.querySelectorAll(":checked").length||q.push(":checked"),a.querySelectorAll("a#"+u+"+*").length||q.push(".#.+[+~]")}),ia(function(a){var b=n.createElement("input");b.setAttribute("type","hidden"),a.appendChild(b).setAttribute("name","D"),a.querySelectorAll("[name=d]").length&&q.push("name"+L+"*[*^$|!~]?="),a.querySelectorAll(":enabled").length||q.push(":enabled",":disabled"),a.querySelectorAll("*,:x"),q.push(",.*:")})),(c.matchesSelector=Z.test(s=o.matches||o.webkitMatchesSelector||o.mozMatchesSelector||o.oMatchesSelector||o.msMatchesSelector))&&ia(function(a){c.disconnectedMatch=s.call(a,"div"),s.call(a,"[s!='']:x"),r.push("!=",O)}),q=q.length&&new RegExp(q.join("|")),r=r.length&&new RegExp(r.join("|")),b=Z.test(o.compareDocumentPosition),t=b||Z.test(o.contains)?function(a,b){var c=9===a.nodeType?a.documentElement:a,d=b&&b.parentNode;return a===d||!(!d||1!==d.nodeType||!(c.contains?c.contains(d):a.compareDocumentPosition&&16&a.compareDocumentPosition(d)))}:function(a,b){if(b)while(b=b.parentNode)if(b===a)return!0;return!1},B=b?function(a,b){if(a===b)return l=!0,0;var d=!a.compareDocumentPosition-!b.compareDocumentPosition;return d?d:(d=(a.ownerDocument||a)===(b.ownerDocument||b)?a.compareDocumentPosition(b):1,1&d||!c.sortDetached&&b.compareDocumentPosition(a)===d?a===n||a.ownerDocument===v&&t(v,a)?-1:b===n||b.ownerDocument===v&&t(v,b)?1:k?J(k,a)-J(k,b):0:4&d?-1:1)}:function(a,b){if(a===b)return l=!0,0;var c,d=0,e=a.parentNode,f=b.parentNode,g=[a],h=[b];if(!e||!f)return a===n?-1:b===n?1:e?-1:f?1:k?J(k,a)-J(k,b):0;if(e===f)return ka(a,b);c=a;while(c=c.parentNode)g.unshift(c);c=b;while(c=c.parentNode)h.unshift(c);while(g[d]===h[d])d++;return d?ka(g[d],h[d]):g[d]===v?-1:h[d]===v?1:0},n):n},fa.matches=function(a,b){return fa(a,null,null,b)},fa.matchesSelector=function(a,b){if((a.ownerDocument||a)!==n&&m(a),b=b.replace(T,"='$1']"),c.matchesSelector&&p&&!A[b+" "]&&(!r||!r.test(b))&&(!q||!q.test(b)))try{var d=s.call(a,b);if(d||c.disconnectedMatch||a.document&&11!==a.document.nodeType)return d}catch(e){}return fa(b,n,null,[a]).length>0},fa.contains=function(a,b){return(a.ownerDocument||a)!==n&&m(a),t(a,b)},fa.attr=function(a,b){(a.ownerDocument||a)!==n&&m(a);var e=d.attrHandle[b.toLowerCase()],f=e&&D.call(d.attrHandle,b.toLowerCase())?e(a,b,!p):void 0;return void 0!==f?f:c.attributes||!p?a.getAttribute(b):(f=a.getAttributeNode(b))&&f.specified?f.value:null},fa.error=function(a){throw new Error("Syntax error, unrecognized expression: "+a)},fa.uniqueSort=function(a){var b,d=[],e=0,f=0;if(l=!c.detectDuplicates,k=!c.sortStable&&a.slice(0),a.sort(B),l){while(b=a[f++])b===a[f]&&(e=d.push(f));while(e--)a.splice(d[e],1)}return k=null,a},e=fa.getText=function(a){var b,c="",d=0,f=a.nodeType;if(f){if(1===f||9===f||11===f){if("string"==typeof a.textContent)return a.textContent;for(a=a.firstChild;a;a=a.nextSibling)c+=e(a)}else if(3===f||4===f)return a.nodeValue}else while(b=a[d++])c+=e(b);return c},d=fa.selectors={cacheLength:50,createPseudo:ha,match:W,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(a){return a[1]=a[1].replace(ba,ca),a[3]=(a[3]||a[4]||a[5]||"").replace(ba,ca),"~="===a[2]&&(a[3]=" "+a[3]+" "),a.slice(0,4)},CHILD:function(a){return a[1]=a[1].toLowerCase(),"nth"===a[1].slice(0,3)?(a[3]||fa.error(a[0]),a[4]=+(a[4]?a[5]+(a[6]||1):2*("even"===a[3]||"odd"===a[3])),a[5]=+(a[7]+a[8]||"odd"===a[3])):a[3]&&fa.error(a[0]),a},PSEUDO:function(a){var b,c=!a[6]&&a[2];return W.CHILD.test(a[0])?null:(a[3]?a[2]=a[4]||a[5]||"":c&&U.test(c)&&(b=g(c,!0))&&(b=c.indexOf(")",c.length-b)-c.length)&&(a[0]=a[0].slice(0,b),a[2]=c.slice(0,b)),a.slice(0,3))}},filter:{TAG:function(a){var b=a.replace(ba,ca).toLowerCase();return"*"===a?function(){return!0}:function(a){return a.nodeName&&a.nodeName.toLowerCase()===b}},CLASS:function(a){var b=y[a+" "];return b||(b=new RegExp("(^|"+L+")"+a+"("+L+"|$)"))&&y(a,function(a){return b.test("string"==typeof a.className&&a.className||"undefined"!=typeof a.getAttribute&&a.getAttribute("class")||"")})},ATTR:function(a,b,c){return function(d){var e=fa.attr(d,a);return null==e?"!="===b:b?(e+="","="===b?e===c:"!="===b?e!==c:"^="===b?c&&0===e.indexOf(c):"*="===b?c&&e.indexOf(c)>-1:"$="===b?c&&e.slice(-c.length)===c:"~="===b?(" "+e.replace(P," ")+" ").indexOf(c)>-1:"|="===b?e===c||e.slice(0,c.length+1)===c+"-":!1):!0}},CHILD:function(a,b,c,d,e){var f="nth"!==a.slice(0,3),g="last"!==a.slice(-4),h="of-type"===b;return 1===d&&0===e?function(a){return!!a.parentNode}:function(b,c,i){var j,k,l,m,n,o,p=f!==g?"nextSibling":"previousSibling",q=b.parentNode,r=h&&b.nodeName.toLowerCase(),s=!i&&!h,t=!1;if(q){if(f){while(p){m=b;while(m=m[p])if(h?m.nodeName.toLowerCase()===r:1===m.nodeType)return!1;o=p="only"===a&&!o&&"nextSibling"}return!0}if(o=[g?q.firstChild:q.lastChild],g&&s){m=q,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n&&j[2],m=n&&q.childNodes[n];while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if(1===m.nodeType&&++t&&m===b){k[a]=[w,n,t];break}}else if(s&&(m=b,l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),j=k[a]||[],n=j[0]===w&&j[1],t=n),t===!1)while(m=++n&&m&&m[p]||(t=n=0)||o.pop())if((h?m.nodeName.toLowerCase()===r:1===m.nodeType)&&++t&&(s&&(l=m[u]||(m[u]={}),k=l[m.uniqueID]||(l[m.uniqueID]={}),k[a]=[w,t]),m===b))break;return t-=e,t===d||t%d===0&&t/d>=0}}},PSEUDO:function(a,b){var c,e=d.pseudos[a]||d.setFilters[a.toLowerCase()]||fa.error("unsupported pseudo: "+a);return e[u]?e(b):e.length>1?(c=[a,a,"",b],d.setFilters.hasOwnProperty(a.toLowerCase())?ha(function(a,c){var d,f=e(a,b),g=f.length;while(g--)d=J(a,f[g]),a[d]=!(c[d]=f[g])}):function(a){return e(a,0,c)}):e}},pseudos:{not:ha(function(a){var b=[],c=[],d=h(a.replace(Q,"$1"));return d[u]?ha(function(a,b,c,e){var f,g=d(a,null,e,[]),h=a.length;while(h--)(f=g[h])&&(a[h]=!(b[h]=f))}):function(a,e,f){return b[0]=a,d(b,null,f,c),b[0]=null,!c.pop()}}),has:ha(function(a){return function(b){return fa(a,b).length>0}}),contains:ha(function(a){return a=a.replace(ba,ca),function(b){return(b.textContent||b.innerText||e(b)).indexOf(a)>-1}}),lang:ha(function(a){return V.test(a||"")||fa.error("unsupported lang: "+a),a=a.replace(ba,ca).toLowerCase(),function(b){var c;do if(c=p?b.lang:b.getAttribute("xml:lang")||b.getAttribute("lang"))return c=c.toLowerCase(),c===a||0===c.indexOf(a+"-");while((b=b.parentNode)&&1===b.nodeType);return!1}}),target:function(b){var c=a.location&&a.location.hash;return c&&c.slice(1)===b.id},root:function(a){return a===o},focus:function(a){return a===n.activeElement&&(!n.hasFocus||n.hasFocus())&&!!(a.type||a.href||~a.tabIndex)},enabled:function(a){return a.disabled===!1},disabled:function(a){return a.disabled===!0},checked:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&!!a.checked||"option"===b&&!!a.selected},selected:function(a){return a.parentNode&&a.parentNode.selectedIndex,a.selected===!0},empty:function(a){for(a=a.firstChild;a;a=a.nextSibling)if(a.nodeType<6)return!1;return!0},parent:function(a){return!d.pseudos.empty(a)},header:function(a){return Y.test(a.nodeName)},input:function(a){return X.test(a.nodeName)},button:function(a){var b=a.nodeName.toLowerCase();return"input"===b&&"button"===a.type||"button"===b},text:function(a){var b;return"input"===a.nodeName.toLowerCase()&&"text"===a.type&&(null==(b=a.getAttribute("type"))||"text"===b.toLowerCase())},first:na(function(){return[0]}),last:na(function(a,b){return[b-1]}),eq:na(function(a,b,c){return[0>c?c+b:c]}),even:na(function(a,b){for(var c=0;b>c;c+=2)a.push(c);return a}),odd:na(function(a,b){for(var c=1;b>c;c+=2)a.push(c);return a}),lt:na(function(a,b,c){for(var d=0>c?c+b:c;--d>=0;)a.push(d);return a}),gt:na(function(a,b,c){for(var d=0>c?c+b:c;++d<b;)a.push(d);return a})}},d.pseudos.nth=d.pseudos.eq;for(b in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})d.pseudos[b]=la(b);for(b in{submit:!0,reset:!0})d.pseudos[b]=ma(b);function pa(){}pa.prototype=d.filters=d.pseudos,d.setFilters=new pa,g=fa.tokenize=function(a,b){var c,e,f,g,h,i,j,k=z[a+" "];if(k)return b?0:k.slice(0);h=a,i=[],j=d.preFilter;while(h){c&&!(e=R.exec(h))||(e&&(h=h.slice(e[0].length)||h),i.push(f=[])),c=!1,(e=S.exec(h))&&(c=e.shift(),f.push({value:c,type:e[0].replace(Q," ")}),h=h.slice(c.length));for(g in d.filter)!(e=W[g].exec(h))||j[g]&&!(e=j[g](e))||(c=e.shift(),f.push({value:c,type:g,matches:e}),h=h.slice(c.length));if(!c)break}return b?h.length:h?fa.error(a):z(a,i).slice(0)};function qa(a){for(var b=0,c=a.length,d="";c>b;b++)d+=a[b].value;return d}function ra(a,b,c){var d=b.dir,e=c&&"parentNode"===d,f=x++;return b.first?function(b,c,f){while(b=b[d])if(1===b.nodeType||e)return a(b,c,f)}:function(b,c,g){var h,i,j,k=[w,f];if(g){while(b=b[d])if((1===b.nodeType||e)&&a(b,c,g))return!0}else while(b=b[d])if(1===b.nodeType||e){if(j=b[u]||(b[u]={}),i=j[b.uniqueID]||(j[b.uniqueID]={}),(h=i[d])&&h[0]===w&&h[1]===f)return k[2]=h[2];if(i[d]=k,k[2]=a(b,c,g))return!0}}}function sa(a){return a.length>1?function(b,c,d){var e=a.length;while(e--)if(!a[e](b,c,d))return!1;return!0}:a[0]}function ta(a,b,c){for(var d=0,e=b.length;e>d;d++)fa(a,b[d],c);return c}function ua(a,b,c,d,e){for(var f,g=[],h=0,i=a.length,j=null!=b;i>h;h++)(f=a[h])&&(c&&!c(f,d,e)||(g.push(f),j&&b.push(h)));return g}function va(a,b,c,d,e,f){return d&&!d[u]&&(d=va(d)),e&&!e[u]&&(e=va(e,f)),ha(function(f,g,h,i){var j,k,l,m=[],n=[],o=g.length,p=f||ta(b||"*",h.nodeType?[h]:h,[]),q=!a||!f&&b?p:ua(p,m,a,h,i),r=c?e||(f?a:o||d)?[]:g:q;if(c&&c(q,r,h,i),d){j=ua(r,n),d(j,[],h,i),k=j.length;while(k--)(l=j[k])&&(r[n[k]]=!(q[n[k]]=l))}if(f){if(e||a){if(e){j=[],k=r.length;while(k--)(l=r[k])&&j.push(q[k]=l);e(null,r=[],j,i)}k=r.length;while(k--)(l=r[k])&&(j=e?J(f,l):m[k])>-1&&(f[j]=!(g[j]=l))}}else r=ua(r===g?r.splice(o,r.length):r),e?e(null,g,r,i):H.apply(g,r)})}function wa(a){for(var b,c,e,f=a.length,g=d.relative[a[0].type],h=g||d.relative[" "],i=g?1:0,k=ra(function(a){return a===b},h,!0),l=ra(function(a){return J(b,a)>-1},h,!0),m=[function(a,c,d){var e=!g&&(d||c!==j)||((b=c).nodeType?k(a,c,d):l(a,c,d));return b=null,e}];f>i;i++)if(c=d.relative[a[i].type])m=[ra(sa(m),c)];else{if(c=d.filter[a[i].type].apply(null,a[i].matches),c[u]){for(e=++i;f>e;e++)if(d.relative[a[e].type])break;return va(i>1&&sa(m),i>1&&qa(a.slice(0,i-1).concat({value:" "===a[i-2].type?"*":""})).replace(Q,"$1"),c,e>i&&wa(a.slice(i,e)),f>e&&wa(a=a.slice(e)),f>e&&qa(a))}m.push(c)}return sa(m)}function xa(a,b){var c=b.length>0,e=a.length>0,f=function(f,g,h,i,k){var l,o,q,r=0,s="0",t=f&&[],u=[],v=j,x=f||e&&d.find.TAG("*",k),y=w+=null==v?1:Math.random()||.1,z=x.length;for(k&&(j=g===n||g||k);s!==z&&null!=(l=x[s]);s++){if(e&&l){o=0,g||l.ownerDocument===n||(m(l),h=!p);while(q=a[o++])if(q(l,g||n,h)){i.push(l);break}k&&(w=y)}c&&((l=!q&&l)&&r--,f&&t.push(l))}if(r+=s,c&&s!==r){o=0;while(q=b[o++])q(t,u,g,h);if(f){if(r>0)while(s--)t[s]||u[s]||(u[s]=F.call(i));u=ua(u)}H.apply(i,u),k&&!f&&u.length>0&&r+b.length>1&&fa.uniqueSort(i)}return k&&(w=y,j=v),t};return c?ha(f):f}return h=fa.compile=function(a,b){var c,d=[],e=[],f=A[a+" "];if(!f){b||(b=g(a)),c=b.length;while(c--)f=wa(b[c]),f[u]?d.push(f):e.push(f);f=A(a,xa(e,d)),f.selector=a}return f},i=fa.select=function(a,b,e,f){var i,j,k,l,m,n="function"==typeof a&&a,o=!f&&g(a=n.selector||a);if(e=e||[],1===o.length){if(j=o[0]=o[0].slice(0),j.length>2&&"ID"===(k=j[0]).type&&c.getById&&9===b.nodeType&&p&&d.relative[j[1].type]){if(b=(d.find.ID(k.matches[0].replace(ba,ca),b)||[])[0],!b)return e;n&&(b=b.parentNode),a=a.slice(j.shift().value.length)}i=W.needsContext.test(a)?0:j.length;while(i--){if(k=j[i],d.relative[l=k.type])break;if((m=d.find[l])&&(f=m(k.matches[0].replace(ba,ca),_.test(j[0].type)&&oa(b.parentNode)||b))){if(j.splice(i,1),a=f.length&&qa(j),!a)return H.apply(e,f),e;break}}}return(n||h(a,o))(f,b,!p,e,!b||_.test(a)&&oa(b.parentNode)||b),e},c.sortStable=u.split("").sort(B).join("")===u,c.detectDuplicates=!!l,m(),c.sortDetached=ia(function(a){return 1&a.compareDocumentPosition(n.createElement("div"))}),ia(function(a){return a.innerHTML="<a href='#'></a>","#"===a.firstChild.getAttribute("href")})||ja("type|href|height|width",function(a,b,c){return c?void 0:a.getAttribute(b,"type"===b.toLowerCase()?1:2)}),c.attributes&&ia(function(a){return a.innerHTML="<input/>",a.firstChild.setAttribute("value",""),""===a.firstChild.getAttribute("value")})||ja("value",function(a,b,c){return c||"input"!==a.nodeName.toLowerCase()?void 0:a.defaultValue}),ia(function(a){return null==a.getAttribute("disabled")})||ja(K,function(a,b,c){var d;return c?void 0:a[b]===!0?b.toLowerCase():(d=a.getAttributeNode(b))&&d.specified?d.value:null}),fa}(a);n.find=t,n.expr=t.selectors,n.expr[":"]=n.expr.pseudos,n.uniqueSort=n.unique=t.uniqueSort,n.text=t.getText,n.isXMLDoc=t.isXML,n.contains=t.contains;var u=function(a,b,c){var d=[],e=void 0!==c;while((a=a[b])&&9!==a.nodeType)if(1===a.nodeType){if(e&&n(a).is(c))break;d.push(a)}return d},v=function(a,b){for(var c=[];a;a=a.nextSibling)1===a.nodeType&&a!==b&&c.push(a);return c},w=n.expr.match.needsContext,x=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,y=/^.[^:#\[\.,]*$/;function z(a,b,c){if(n.isFunction(b))return n.grep(a,function(a,d){return!!b.call(a,d,a)!==c});if(b.nodeType)return n.grep(a,function(a){return a===b!==c});if("string"==typeof b){if(y.test(b))return n.filter(b,a,c);b=n.filter(b,a)}return n.grep(a,function(a){return n.inArray(a,b)>-1!==c})}n.filter=function(a,b,c){var d=b[0];return c&&(a=":not("+a+")"),1===b.length&&1===d.nodeType?n.find.matchesSelector(d,a)?[d]:[]:n.find.matches(a,n.grep(b,function(a){return 1===a.nodeType}))},n.fn.extend({find:function(a){var b,c=[],d=this,e=d.length;if("string"!=typeof a)return this.pushStack(n(a).filter(function(){for(b=0;e>b;b++)if(n.contains(d[b],this))return!0}));for(b=0;e>b;b++)n.find(a,d[b],c);return c=this.pushStack(e>1?n.unique(c):c),c.selector=this.selector?this.selector+" "+a:a,c},filter:function(a){return this.pushStack(z(this,a||[],!1))},not:function(a){return this.pushStack(z(this,a||[],!0))},is:function(a){return!!z(this,"string"==typeof a&&w.test(a)?n(a):a||[],!1).length}});var A,B=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,C=n.fn.init=function(a,b,c){var e,f;if(!a)return this;if(c=c||A,"string"==typeof a){if(e="<"===a.charAt(0)&&">"===a.charAt(a.length-1)&&a.length>=3?[null,a,null]:B.exec(a),!e||!e[1]&&b)return!b||b.jquery?(b||c).find(a):this.constructor(b).find(a);if(e[1]){if(b=b instanceof n?b[0]:b,n.merge(this,n.parseHTML(e[1],b&&b.nodeType?b.ownerDocument||b:d,!0)),x.test(e[1])&&n.isPlainObject(b))for(e in b)n.isFunction(this[e])?this[e](b[e]):this.attr(e,b[e]);return this}if(f=d.getElementById(e[2]),f&&f.parentNode){if(f.id!==e[2])return A.find(a);this.length=1,this[0]=f}return this.context=d,this.selector=a,this}return a.nodeType?(this.context=this[0]=a,this.length=1,this):n.isFunction(a)?"undefined"!=typeof c.ready?c.ready(a):a(n):(void 0!==a.selector&&(this.selector=a.selector,this.context=a.context),n.makeArray(a,this))};C.prototype=n.fn,A=n(d);var D=/^(?:parents|prev(?:Until|All))/,E={children:!0,contents:!0,next:!0,prev:!0};n.fn.extend({has:function(a){var b,c=n(a,this),d=c.length;return this.filter(function(){for(b=0;d>b;b++)if(n.contains(this,c[b]))return!0})},closest:function(a,b){for(var c,d=0,e=this.length,f=[],g=w.test(a)||"string"!=typeof a?n(a,b||this.context):0;e>d;d++)for(c=this[d];c&&c!==b;c=c.parentNode)if(c.nodeType<11&&(g?g.index(c)>-1:1===c.nodeType&&n.find.matchesSelector(c,a))){f.push(c);break}return this.pushStack(f.length>1?n.uniqueSort(f):f)},index:function(a){return a?"string"==typeof a?n.inArray(this[0],n(a)):n.inArray(a.jquery?a[0]:a,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(a,b){return this.pushStack(n.uniqueSort(n.merge(this.get(),n(a,b))))},addBack:function(a){return this.add(null==a?this.prevObject:this.prevObject.filter(a))}});function F(a,b){do a=a[b];while(a&&1!==a.nodeType);return a}n.each({parent:function(a){var b=a.parentNode;return b&&11!==b.nodeType?b:null},parents:function(a){return u(a,"parentNode")},parentsUntil:function(a,b,c){return u(a,"parentNode",c)},next:function(a){return F(a,"nextSibling")},prev:function(a){return F(a,"previousSibling")},nextAll:function(a){return u(a,"nextSibling")},prevAll:function(a){return u(a,"previousSibling")},nextUntil:function(a,b,c){return u(a,"nextSibling",c)},prevUntil:function(a,b,c){return u(a,"previousSibling",c)},siblings:function(a){return v((a.parentNode||{}).firstChild,a)},children:function(a){return v(a.firstChild)},contents:function(a){return n.nodeName(a,"iframe")?a.contentDocument||a.contentWindow.document:n.merge([],a.childNodes)}},function(a,b){n.fn[a]=function(c,d){var e=n.map(this,b,c);return"Until"!==a.slice(-5)&&(d=c),d&&"string"==typeof d&&(e=n.filter(d,e)),this.length>1&&(E[a]||(e=n.uniqueSort(e)),D.test(a)&&(e=e.reverse())),this.pushStack(e)}});var G=/\S+/g;function H(a){var b={};return n.each(a.match(G)||[],function(a,c){b[c]=!0}),b}n.Callbacks=function(a){a="string"==typeof a?H(a):n.extend({},a);var b,c,d,e,f=[],g=[],h=-1,i=function(){for(e=a.once,d=b=!0;g.length;h=-1){c=g.shift();while(++h<f.length)f[h].apply(c[0],c[1])===!1&&a.stopOnFalse&&(h=f.length,c=!1)}a.memory||(c=!1),b=!1,e&&(f=c?[]:"")},j={add:function(){return f&&(c&&!b&&(h=f.length-1,g.push(c)),function d(b){n.each(b,function(b,c){n.isFunction(c)?a.unique&&j.has(c)||f.push(c):c&&c.length&&"string"!==n.type(c)&&d(c)})}(arguments),c&&!b&&i()),this},remove:function(){return n.each(arguments,function(a,b){var c;while((c=n.inArray(b,f,c))>-1)f.splice(c,1),h>=c&&h--}),this},has:function(a){return a?n.inArray(a,f)>-1:f.length>0},empty:function(){return f&&(f=[]),this},disable:function(){return e=g=[],f=c="",this},disabled:function(){return!f},lock:function(){return e=!0,c||j.disable(),this},locked:function(){return!!e},fireWith:function(a,c){return e||(c=c||[],c=[a,c.slice?c.slice():c],g.push(c),b||i()),this},fire:function(){return j.fireWith(this,arguments),this},fired:function(){return!!d}};return j},n.extend({Deferred:function(a){var b=[["resolve","done",n.Callbacks("once memory"),"resolved"],["reject","fail",n.Callbacks("once memory"),"rejected"],["notify","progress",n.Callbacks("memory")]],c="pending",d={state:function(){return c},always:function(){return e.done(arguments).fail(arguments),this},then:function(){var a=arguments;return n.Deferred(function(c){n.each(b,function(b,f){var g=n.isFunction(a[b])&&a[b];e[f[1]](function(){var a=g&&g.apply(this,arguments);a&&n.isFunction(a.promise)?a.promise().progress(c.notify).done(c.resolve).fail(c.reject):c[f[0]+"With"](this===d?c.promise():this,g?[a]:arguments)})}),a=null}).promise()},promise:function(a){return null!=a?n.extend(a,d):d}},e={};return d.pipe=d.then,n.each(b,function(a,f){var g=f[2],h=f[3];d[f[1]]=g.add,h&&g.add(function(){c=h},b[1^a][2].disable,b[2][2].lock),e[f[0]]=function(){return e[f[0]+"With"](this===e?d:this,arguments),this},e[f[0]+"With"]=g.fireWith}),d.promise(e),a&&a.call(e,e),e},when:function(a){var b=0,c=e.call(arguments),d=c.length,f=1!==d||a&&n.isFunction(a.promise)?d:0,g=1===f?a:n.Deferred(),h=function(a,b,c){return function(d){b[a]=this,c[a]=arguments.length>1?e.call(arguments):d,c===i?g.notifyWith(b,c):--f||g.resolveWith(b,c)}},i,j,k;if(d>1)for(i=new Array(d),j=new Array(d),k=new Array(d);d>b;b++)c[b]&&n.isFunction(c[b].promise)?c[b].promise().progress(h(b,j,i)).done(h(b,k,c)).fail(g.reject):--f;return f||g.resolveWith(k,c),g.promise()}});var I;n.fn.ready=function(a){return n.ready.promise().done(a),this},n.extend({isReady:!1,readyWait:1,holdReady:function(a){a?n.readyWait++:n.ready(!0)},ready:function(a){(a===!0?--n.readyWait:n.isReady)||(n.isReady=!0,a!==!0&&--n.readyWait>0||(I.resolveWith(d,[n]),n.fn.triggerHandler&&(n(d).triggerHandler("ready"),n(d).off("ready"))))}});function J(){d.addEventListener?(d.removeEventListener("DOMContentLoaded",K),a.removeEventListener("load",K)):(d.detachEvent("onreadystatechange",K),a.detachEvent("onload",K))}function K(){(d.addEventListener||"load"===a.event.type||"complete"===d.readyState)&&(J(),n.ready())}n.ready.promise=function(b){if(!I)if(I=n.Deferred(),"complete"===d.readyState||"loading"!==d.readyState&&!d.documentElement.doScroll)a.setTimeout(n.ready);else if(d.addEventListener)d.addEventListener("DOMContentLoaded",K),a.addEventListener("load",K);else{d.attachEvent("onreadystatechange",K),a.attachEvent("onload",K);var c=!1;try{c=null==a.frameElement&&d.documentElement}catch(e){}c&&c.doScroll&&!function f(){if(!n.isReady){try{c.doScroll("left")}catch(b){return a.setTimeout(f,50)}J(),n.ready()}}()}return I.promise(b)},n.ready.promise();var L;for(L in n(l))break;l.ownFirst="0"===L,l.inlineBlockNeedsLayout=!1,n(function(){var a,b,c,e;c=d.getElementsByTagName("body")[0],c&&c.style&&(b=d.createElement("div"),e=d.createElement("div"),e.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(e).appendChild(b),"undefined"!=typeof b.style.zoom&&(b.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",l.inlineBlockNeedsLayout=a=3===b.offsetWidth,a&&(c.style.zoom=1)),c.removeChild(e))}),function(){var a=d.createElement("div");l.deleteExpando=!0;try{delete a.test}catch(b){l.deleteExpando=!1}a=null}();var M=function(a){var b=n.noData[(a.nodeName+" ").toLowerCase()],c=+a.nodeType||1;return 1!==c&&9!==c?!1:!b||b!==!0&&a.getAttribute("classid")===b},N=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,O=/([A-Z])/g;function P(a,b,c){if(void 0===c&&1===a.nodeType){var d="data-"+b.replace(O,"-$1").toLowerCase();if(c=a.getAttribute(d),"string"==typeof c){try{c="true"===c?!0:"false"===c?!1:"null"===c?null:+c+""===c?+c:N.test(c)?n.parseJSON(c):c}catch(e){}n.data(a,b,c)}else c=void 0;
}return c}function Q(a){var b;for(b in a)if(("data"!==b||!n.isEmptyObject(a[b]))&&"toJSON"!==b)return!1;return!0}function R(a,b,d,e){if(M(a)){var f,g,h=n.expando,i=a.nodeType,j=i?n.cache:a,k=i?a[h]:a[h]&&h;if(k&&j[k]&&(e||j[k].data)||void 0!==d||"string"!=typeof b)return k||(k=i?a[h]=c.pop()||n.guid++:h),j[k]||(j[k]=i?{}:{toJSON:n.noop}),"object"!=typeof b&&"function"!=typeof b||(e?j[k]=n.extend(j[k],b):j[k].data=n.extend(j[k].data,b)),g=j[k],e||(g.data||(g.data={}),g=g.data),void 0!==d&&(g[n.camelCase(b)]=d),"string"==typeof b?(f=g[b],null==f&&(f=g[n.camelCase(b)])):f=g,f}}function S(a,b,c){if(M(a)){var d,e,f=a.nodeType,g=f?n.cache:a,h=f?a[n.expando]:n.expando;if(g[h]){if(b&&(d=c?g[h]:g[h].data)){n.isArray(b)?b=b.concat(n.map(b,n.camelCase)):b in d?b=[b]:(b=n.camelCase(b),b=b in d?[b]:b.split(" ")),e=b.length;while(e--)delete d[b[e]];if(c?!Q(d):!n.isEmptyObject(d))return}(c||(delete g[h].data,Q(g[h])))&&(f?n.cleanData([a],!0):l.deleteExpando||g!=g.window?delete g[h]:g[h]=void 0)}}}n.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(a){return a=a.nodeType?n.cache[a[n.expando]]:a[n.expando],!!a&&!Q(a)},data:function(a,b,c){return R(a,b,c)},removeData:function(a,b){return S(a,b)},_data:function(a,b,c){return R(a,b,c,!0)},_removeData:function(a,b){return S(a,b,!0)}}),n.fn.extend({data:function(a,b){var c,d,e,f=this[0],g=f&&f.attributes;if(void 0===a){if(this.length&&(e=n.data(f),1===f.nodeType&&!n._data(f,"parsedAttrs"))){c=g.length;while(c--)g[c]&&(d=g[c].name,0===d.indexOf("data-")&&(d=n.camelCase(d.slice(5)),P(f,d,e[d])));n._data(f,"parsedAttrs",!0)}return e}return"object"==typeof a?this.each(function(){n.data(this,a)}):arguments.length>1?this.each(function(){n.data(this,a,b)}):f?P(f,a,n.data(f,a)):void 0},removeData:function(a){return this.each(function(){n.removeData(this,a)})}}),n.extend({queue:function(a,b,c){var d;return a?(b=(b||"fx")+"queue",d=n._data(a,b),c&&(!d||n.isArray(c)?d=n._data(a,b,n.makeArray(c)):d.push(c)),d||[]):void 0},dequeue:function(a,b){b=b||"fx";var c=n.queue(a,b),d=c.length,e=c.shift(),f=n._queueHooks(a,b),g=function(){n.dequeue(a,b)};"inprogress"===e&&(e=c.shift(),d--),e&&("fx"===b&&c.unshift("inprogress"),delete f.stop,e.call(a,g,f)),!d&&f&&f.empty.fire()},_queueHooks:function(a,b){var c=b+"queueHooks";return n._data(a,c)||n._data(a,c,{empty:n.Callbacks("once memory").add(function(){n._removeData(a,b+"queue"),n._removeData(a,c)})})}}),n.fn.extend({queue:function(a,b){var c=2;return"string"!=typeof a&&(b=a,a="fx",c--),arguments.length<c?n.queue(this[0],a):void 0===b?this:this.each(function(){var c=n.queue(this,a,b);n._queueHooks(this,a),"fx"===a&&"inprogress"!==c[0]&&n.dequeue(this,a)})},dequeue:function(a){return this.each(function(){n.dequeue(this,a)})},clearQueue:function(a){return this.queue(a||"fx",[])},promise:function(a,b){var c,d=1,e=n.Deferred(),f=this,g=this.length,h=function(){--d||e.resolveWith(f,[f])};"string"!=typeof a&&(b=a,a=void 0),a=a||"fx";while(g--)c=n._data(f[g],a+"queueHooks"),c&&c.empty&&(d++,c.empty.add(h));return h(),e.promise(b)}}),function(){var a;l.shrinkWrapBlocks=function(){if(null!=a)return a;a=!1;var b,c,e;return c=d.getElementsByTagName("body")[0],c&&c.style?(b=d.createElement("div"),e=d.createElement("div"),e.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",c.appendChild(e).appendChild(b),"undefined"!=typeof b.style.zoom&&(b.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",b.appendChild(d.createElement("div")).style.width="5px",a=3!==b.offsetWidth),c.removeChild(e),a):void 0}}();var T=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,U=new RegExp("^(?:([+-])=|)("+T+")([a-z%]*)$","i"),V=["Top","Right","Bottom","Left"],W=function(a,b){return a=b||a,"none"===n.css(a,"display")||!n.contains(a.ownerDocument,a)};function X(a,b,c,d){var e,f=1,g=20,h=d?function(){return d.cur()}:function(){return n.css(a,b,"")},i=h(),j=c&&c[3]||(n.cssNumber[b]?"":"px"),k=(n.cssNumber[b]||"px"!==j&&+i)&&U.exec(n.css(a,b));if(k&&k[3]!==j){j=j||k[3],c=c||[],k=+i||1;do f=f||".5",k/=f,n.style(a,b,k+j);while(f!==(f=h()/i)&&1!==f&&--g)}return c&&(k=+k||+i||0,e=c[1]?k+(c[1]+1)*c[2]:+c[2],d&&(d.unit=j,d.start=k,d.end=e)),e}var Y=function(a,b,c,d,e,f,g){var h=0,i=a.length,j=null==c;if("object"===n.type(c)){e=!0;for(h in c)Y(a,b,h,c[h],!0,f,g)}else if(void 0!==d&&(e=!0,n.isFunction(d)||(g=!0),j&&(g?(b.call(a,d),b=null):(j=b,b=function(a,b,c){return j.call(n(a),c)})),b))for(;i>h;h++)b(a[h],c,g?d:d.call(a[h],h,b(a[h],c)));return e?a:j?b.call(a):i?b(a[0],c):f},Z=/^(?:checkbox|radio)$/i,$=/<([\w:-]+)/,_=/^$|\/(?:java|ecma)script/i,aa=/^\s+/,ba="abbr|article|aside|audio|bdi|canvas|data|datalist|details|dialog|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|picture|progress|section|summary|template|time|video";function ca(a){var b=ba.split("|"),c=a.createDocumentFragment();if(c.createElement)while(b.length)c.createElement(b.pop());return c}!function(){var a=d.createElement("div"),b=d.createDocumentFragment(),c=d.createElement("input");a.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",l.leadingWhitespace=3===a.firstChild.nodeType,l.tbody=!a.getElementsByTagName("tbody").length,l.htmlSerialize=!!a.getElementsByTagName("link").length,l.html5Clone="<:nav></:nav>"!==d.createElement("nav").cloneNode(!0).outerHTML,c.type="checkbox",c.checked=!0,b.appendChild(c),l.appendChecked=c.checked,a.innerHTML="<textarea>x</textarea>",l.noCloneChecked=!!a.cloneNode(!0).lastChild.defaultValue,b.appendChild(a),c=d.createElement("input"),c.setAttribute("type","radio"),c.setAttribute("checked","checked"),c.setAttribute("name","t"),a.appendChild(c),l.checkClone=a.cloneNode(!0).cloneNode(!0).lastChild.checked,l.noCloneEvent=!!a.addEventListener,a[n.expando]=1,l.attributes=!a.getAttribute(n.expando)}();var da={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:l.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]};da.optgroup=da.option,da.tbody=da.tfoot=da.colgroup=da.caption=da.thead,da.th=da.td;function ea(a,b){var c,d,e=0,f="undefined"!=typeof a.getElementsByTagName?a.getElementsByTagName(b||"*"):"undefined"!=typeof a.querySelectorAll?a.querySelectorAll(b||"*"):void 0;if(!f)for(f=[],c=a.childNodes||a;null!=(d=c[e]);e++)!b||n.nodeName(d,b)?f.push(d):n.merge(f,ea(d,b));return void 0===b||b&&n.nodeName(a,b)?n.merge([a],f):f}function fa(a,b){for(var c,d=0;null!=(c=a[d]);d++)n._data(c,"globalEval",!b||n._data(b[d],"globalEval"))}var ga=/<|&#?\w+;/,ha=/<tbody/i;function ia(a){Z.test(a.type)&&(a.defaultChecked=a.checked)}function ja(a,b,c,d,e){for(var f,g,h,i,j,k,m,o=a.length,p=ca(b),q=[],r=0;o>r;r++)if(g=a[r],g||0===g)if("object"===n.type(g))n.merge(q,g.nodeType?[g]:g);else if(ga.test(g)){i=i||p.appendChild(b.createElement("div")),j=($.exec(g)||["",""])[1].toLowerCase(),m=da[j]||da._default,i.innerHTML=m[1]+n.htmlPrefilter(g)+m[2],f=m[0];while(f--)i=i.lastChild;if(!l.leadingWhitespace&&aa.test(g)&&q.push(b.createTextNode(aa.exec(g)[0])),!l.tbody){g="table"!==j||ha.test(g)?"<table>"!==m[1]||ha.test(g)?0:i:i.firstChild,f=g&&g.childNodes.length;while(f--)n.nodeName(k=g.childNodes[f],"tbody")&&!k.childNodes.length&&g.removeChild(k)}n.merge(q,i.childNodes),i.textContent="";while(i.firstChild)i.removeChild(i.firstChild);i=p.lastChild}else q.push(b.createTextNode(g));i&&p.removeChild(i),l.appendChecked||n.grep(ea(q,"input"),ia),r=0;while(g=q[r++])if(d&&n.inArray(g,d)>-1)e&&e.push(g);else if(h=n.contains(g.ownerDocument,g),i=ea(p.appendChild(g),"script"),h&&fa(i),c){f=0;while(g=i[f++])_.test(g.type||"")&&c.push(g)}return i=null,p}!function(){var b,c,e=d.createElement("div");for(b in{submit:!0,change:!0,focusin:!0})c="on"+b,(l[b]=c in a)||(e.setAttribute(c,"t"),l[b]=e.attributes[c].expando===!1);e=null}();var ka=/^(?:input|select|textarea)$/i,la=/^key/,ma=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,na=/^(?:focusinfocus|focusoutblur)$/,oa=/^([^.]*)(?:\.(.+)|)/;function pa(){return!0}function qa(){return!1}function ra(){try{return d.activeElement}catch(a){}}function sa(a,b,c,d,e,f){var g,h;if("object"==typeof b){"string"!=typeof c&&(d=d||c,c=void 0);for(h in b)sa(a,h,c,d,b[h],f);return a}if(null==d&&null==e?(e=c,d=c=void 0):null==e&&("string"==typeof c?(e=d,d=void 0):(e=d,d=c,c=void 0)),e===!1)e=qa;else if(!e)return a;return 1===f&&(g=e,e=function(a){return n().off(a),g.apply(this,arguments)},e.guid=g.guid||(g.guid=n.guid++)),a.each(function(){n.event.add(this,b,e,d,c)})}n.event={global:{},add:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=n._data(a);if(r){c.handler&&(i=c,c=i.handler,e=i.selector),c.guid||(c.guid=n.guid++),(g=r.events)||(g=r.events={}),(k=r.handle)||(k=r.handle=function(a){return"undefined"==typeof n||a&&n.event.triggered===a.type?void 0:n.event.dispatch.apply(k.elem,arguments)},k.elem=a),b=(b||"").match(G)||[""],h=b.length;while(h--)f=oa.exec(b[h])||[],o=q=f[1],p=(f[2]||"").split(".").sort(),o&&(j=n.event.special[o]||{},o=(e?j.delegateType:j.bindType)||o,j=n.event.special[o]||{},l=n.extend({type:o,origType:q,data:d,handler:c,guid:c.guid,selector:e,needsContext:e&&n.expr.match.needsContext.test(e),namespace:p.join(".")},i),(m=g[o])||(m=g[o]=[],m.delegateCount=0,j.setup&&j.setup.call(a,d,p,k)!==!1||(a.addEventListener?a.addEventListener(o,k,!1):a.attachEvent&&a.attachEvent("on"+o,k))),j.add&&(j.add.call(a,l),l.handler.guid||(l.handler.guid=c.guid)),e?m.splice(m.delegateCount++,0,l):m.push(l),n.event.global[o]=!0);a=null}},remove:function(a,b,c,d,e){var f,g,h,i,j,k,l,m,o,p,q,r=n.hasData(a)&&n._data(a);if(r&&(k=r.events)){b=(b||"").match(G)||[""],j=b.length;while(j--)if(h=oa.exec(b[j])||[],o=q=h[1],p=(h[2]||"").split(".").sort(),o){l=n.event.special[o]||{},o=(d?l.delegateType:l.bindType)||o,m=k[o]||[],h=h[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),i=f=m.length;while(f--)g=m[f],!e&&q!==g.origType||c&&c.guid!==g.guid||h&&!h.test(g.namespace)||d&&d!==g.selector&&("**"!==d||!g.selector)||(m.splice(f,1),g.selector&&m.delegateCount--,l.remove&&l.remove.call(a,g));i&&!m.length&&(l.teardown&&l.teardown.call(a,p,r.handle)!==!1||n.removeEvent(a,o,r.handle),delete k[o])}else for(o in k)n.event.remove(a,o+b[j],c,d,!0);n.isEmptyObject(k)&&(delete r.handle,n._removeData(a,"events"))}},trigger:function(b,c,e,f){var g,h,i,j,l,m,o,p=[e||d],q=k.call(b,"type")?b.type:b,r=k.call(b,"namespace")?b.namespace.split("."):[];if(i=m=e=e||d,3!==e.nodeType&&8!==e.nodeType&&!na.test(q+n.event.triggered)&&(q.indexOf(".")>-1&&(r=q.split("."),q=r.shift(),r.sort()),h=q.indexOf(":")<0&&"on"+q,b=b[n.expando]?b:new n.Event(q,"object"==typeof b&&b),b.isTrigger=f?2:3,b.namespace=r.join("."),b.rnamespace=b.namespace?new RegExp("(^|\\.)"+r.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,b.result=void 0,b.target||(b.target=e),c=null==c?[b]:n.makeArray(c,[b]),l=n.event.special[q]||{},f||!l.trigger||l.trigger.apply(e,c)!==!1)){if(!f&&!l.noBubble&&!n.isWindow(e)){for(j=l.delegateType||q,na.test(j+q)||(i=i.parentNode);i;i=i.parentNode)p.push(i),m=i;m===(e.ownerDocument||d)&&p.push(m.defaultView||m.parentWindow||a)}o=0;while((i=p[o++])&&!b.isPropagationStopped())b.type=o>1?j:l.bindType||q,g=(n._data(i,"events")||{})[b.type]&&n._data(i,"handle"),g&&g.apply(i,c),g=h&&i[h],g&&g.apply&&M(i)&&(b.result=g.apply(i,c),b.result===!1&&b.preventDefault());if(b.type=q,!f&&!b.isDefaultPrevented()&&(!l._default||l._default.apply(p.pop(),c)===!1)&&M(e)&&h&&e[q]&&!n.isWindow(e)){m=e[h],m&&(e[h]=null),n.event.triggered=q;try{e[q]()}catch(s){}n.event.triggered=void 0,m&&(e[h]=m)}return b.result}},dispatch:function(a){a=n.event.fix(a);var b,c,d,f,g,h=[],i=e.call(arguments),j=(n._data(this,"events")||{})[a.type]||[],k=n.event.special[a.type]||{};if(i[0]=a,a.delegateTarget=this,!k.preDispatch||k.preDispatch.call(this,a)!==!1){h=n.event.handlers.call(this,a,j),b=0;while((f=h[b++])&&!a.isPropagationStopped()){a.currentTarget=f.elem,c=0;while((g=f.handlers[c++])&&!a.isImmediatePropagationStopped())a.rnamespace&&!a.rnamespace.test(g.namespace)||(a.handleObj=g,a.data=g.data,d=((n.event.special[g.origType]||{}).handle||g.handler).apply(f.elem,i),void 0!==d&&(a.result=d)===!1&&(a.preventDefault(),a.stopPropagation()))}return k.postDispatch&&k.postDispatch.call(this,a),a.result}},handlers:function(a,b){var c,d,e,f,g=[],h=b.delegateCount,i=a.target;if(h&&i.nodeType&&("click"!==a.type||isNaN(a.button)||a.button<1))for(;i!=this;i=i.parentNode||this)if(1===i.nodeType&&(i.disabled!==!0||"click"!==a.type)){for(d=[],c=0;h>c;c++)f=b[c],e=f.selector+" ",void 0===d[e]&&(d[e]=f.needsContext?n(e,this).index(i)>-1:n.find(e,this,null,[i]).length),d[e]&&d.push(f);d.length&&g.push({elem:i,handlers:d})}return h<b.length&&g.push({elem:this,handlers:b.slice(h)}),g},fix:function(a){if(a[n.expando])return a;var b,c,e,f=a.type,g=a,h=this.fixHooks[f];h||(this.fixHooks[f]=h=ma.test(f)?this.mouseHooks:la.test(f)?this.keyHooks:{}),e=h.props?this.props.concat(h.props):this.props,a=new n.Event(g),b=e.length;while(b--)c=e[b],a[c]=g[c];return a.target||(a.target=g.srcElement||d),3===a.target.nodeType&&(a.target=a.target.parentNode),a.metaKey=!!a.metaKey,h.filter?h.filter(a,g):a},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(a,b){return null==a.which&&(a.which=null!=b.charCode?b.charCode:b.keyCode),a}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(a,b){var c,e,f,g=b.button,h=b.fromElement;return null==a.pageX&&null!=b.clientX&&(e=a.target.ownerDocument||d,f=e.documentElement,c=e.body,a.pageX=b.clientX+(f&&f.scrollLeft||c&&c.scrollLeft||0)-(f&&f.clientLeft||c&&c.clientLeft||0),a.pageY=b.clientY+(f&&f.scrollTop||c&&c.scrollTop||0)-(f&&f.clientTop||c&&c.clientTop||0)),!a.relatedTarget&&h&&(a.relatedTarget=h===a.target?b.toElement:h),a.which||void 0===g||(a.which=1&g?1:2&g?3:4&g?2:0),a}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==ra()&&this.focus)try{return this.focus(),!1}catch(a){}},delegateType:"focusin"},blur:{trigger:function(){return this===ra()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return n.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(a){return n.nodeName(a.target,"a")}},beforeunload:{postDispatch:function(a){void 0!==a.result&&a.originalEvent&&(a.originalEvent.returnValue=a.result)}}},simulate:function(a,b,c){var d=n.extend(new n.Event,c,{type:a,isSimulated:!0});n.event.trigger(d,null,b),d.isDefaultPrevented()&&c.preventDefault()}},n.removeEvent=d.removeEventListener?function(a,b,c){a.removeEventListener&&a.removeEventListener(b,c)}:function(a,b,c){var d="on"+b;a.detachEvent&&("undefined"==typeof a[d]&&(a[d]=null),a.detachEvent(d,c))},n.Event=function(a,b){return this instanceof n.Event?(a&&a.type?(this.originalEvent=a,this.type=a.type,this.isDefaultPrevented=a.defaultPrevented||void 0===a.defaultPrevented&&a.returnValue===!1?pa:qa):this.type=a,b&&n.extend(this,b),this.timeStamp=a&&a.timeStamp||n.now(),void(this[n.expando]=!0)):new n.Event(a,b)},n.Event.prototype={constructor:n.Event,isDefaultPrevented:qa,isPropagationStopped:qa,isImmediatePropagationStopped:qa,preventDefault:function(){var a=this.originalEvent;this.isDefaultPrevented=pa,a&&(a.preventDefault?a.preventDefault():a.returnValue=!1)},stopPropagation:function(){var a=this.originalEvent;this.isPropagationStopped=pa,a&&!this.isSimulated&&(a.stopPropagation&&a.stopPropagation(),a.cancelBubble=!0)},stopImmediatePropagation:function(){var a=this.originalEvent;this.isImmediatePropagationStopped=pa,a&&a.stopImmediatePropagation&&a.stopImmediatePropagation(),this.stopPropagation()}},n.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(a,b){n.event.special[a]={delegateType:b,bindType:b,handle:function(a){var c,d=this,e=a.relatedTarget,f=a.handleObj;return e&&(e===d||n.contains(d,e))||(a.type=f.origType,c=f.handler.apply(this,arguments),a.type=b),c}}}),l.submit||(n.event.special.submit={setup:function(){return n.nodeName(this,"form")?!1:void n.event.add(this,"click._submit keypress._submit",function(a){var b=a.target,c=n.nodeName(b,"input")||n.nodeName(b,"button")?n.prop(b,"form"):void 0;c&&!n._data(c,"submit")&&(n.event.add(c,"submit._submit",function(a){a._submitBubble=!0}),n._data(c,"submit",!0))})},postDispatch:function(a){a._submitBubble&&(delete a._submitBubble,this.parentNode&&!a.isTrigger&&n.event.simulate("submit",this.parentNode,a))},teardown:function(){return n.nodeName(this,"form")?!1:void n.event.remove(this,"._submit")}}),l.change||(n.event.special.change={setup:function(){return ka.test(this.nodeName)?("checkbox"!==this.type&&"radio"!==this.type||(n.event.add(this,"propertychange._change",function(a){"checked"===a.originalEvent.propertyName&&(this._justChanged=!0)}),n.event.add(this,"click._change",function(a){this._justChanged&&!a.isTrigger&&(this._justChanged=!1),n.event.simulate("change",this,a)})),!1):void n.event.add(this,"beforeactivate._change",function(a){var b=a.target;ka.test(b.nodeName)&&!n._data(b,"change")&&(n.event.add(b,"change._change",function(a){!this.parentNode||a.isSimulated||a.isTrigger||n.event.simulate("change",this.parentNode,a)}),n._data(b,"change",!0))})},handle:function(a){var b=a.target;return this!==b||a.isSimulated||a.isTrigger||"radio"!==b.type&&"checkbox"!==b.type?a.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return n.event.remove(this,"._change"),!ka.test(this.nodeName)}}),l.focusin||n.each({focus:"focusin",blur:"focusout"},function(a,b){var c=function(a){n.event.simulate(b,a.target,n.event.fix(a))};n.event.special[b]={setup:function(){var d=this.ownerDocument||this,e=n._data(d,b);e||d.addEventListener(a,c,!0),n._data(d,b,(e||0)+1)},teardown:function(){var d=this.ownerDocument||this,e=n._data(d,b)-1;e?n._data(d,b,e):(d.removeEventListener(a,c,!0),n._removeData(d,b))}}}),n.fn.extend({on:function(a,b,c,d){return sa(this,a,b,c,d)},one:function(a,b,c,d){return sa(this,a,b,c,d,1)},off:function(a,b,c){var d,e;if(a&&a.preventDefault&&a.handleObj)return d=a.handleObj,n(a.delegateTarget).off(d.namespace?d.origType+"."+d.namespace:d.origType,d.selector,d.handler),this;if("object"==typeof a){for(e in a)this.off(e,b,a[e]);return this}return b!==!1&&"function"!=typeof b||(c=b,b=void 0),c===!1&&(c=qa),this.each(function(){n.event.remove(this,a,c,b)})},trigger:function(a,b){return this.each(function(){n.event.trigger(a,b,this)})},triggerHandler:function(a,b){var c=this[0];return c?n.event.trigger(a,b,c,!0):void 0}});var ta=/ jQuery\d+="(?:null|\d+)"/g,ua=new RegExp("<(?:"+ba+")[\\s/>]","i"),va=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,wa=/<script|<style|<link/i,xa=/checked\s*(?:[^=]|=\s*.checked.)/i,ya=/^true\/(.*)/,za=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,Aa=ca(d),Ba=Aa.appendChild(d.createElement("div"));function Ca(a,b){return n.nodeName(a,"table")&&n.nodeName(11!==b.nodeType?b:b.firstChild,"tr")?a.getElementsByTagName("tbody")[0]||a.appendChild(a.ownerDocument.createElement("tbody")):a}function Da(a){return a.type=(null!==n.find.attr(a,"type"))+"/"+a.type,a}function Ea(a){var b=ya.exec(a.type);return b?a.type=b[1]:a.removeAttribute("type"),a}function Fa(a,b){if(1===b.nodeType&&n.hasData(a)){var c,d,e,f=n._data(a),g=n._data(b,f),h=f.events;if(h){delete g.handle,g.events={};for(c in h)for(d=0,e=h[c].length;e>d;d++)n.event.add(b,c,h[c][d])}g.data&&(g.data=n.extend({},g.data))}}function Ga(a,b){var c,d,e;if(1===b.nodeType){if(c=b.nodeName.toLowerCase(),!l.noCloneEvent&&b[n.expando]){e=n._data(b);for(d in e.events)n.removeEvent(b,d,e.handle);b.removeAttribute(n.expando)}"script"===c&&b.text!==a.text?(Da(b).text=a.text,Ea(b)):"object"===c?(b.parentNode&&(b.outerHTML=a.outerHTML),l.html5Clone&&a.innerHTML&&!n.trim(b.innerHTML)&&(b.innerHTML=a.innerHTML)):"input"===c&&Z.test(a.type)?(b.defaultChecked=b.checked=a.checked,b.value!==a.value&&(b.value=a.value)):"option"===c?b.defaultSelected=b.selected=a.defaultSelected:"input"!==c&&"textarea"!==c||(b.defaultValue=a.defaultValue)}}function Ha(a,b,c,d){b=f.apply([],b);var e,g,h,i,j,k,m=0,o=a.length,p=o-1,q=b[0],r=n.isFunction(q);if(r||o>1&&"string"==typeof q&&!l.checkClone&&xa.test(q))return a.each(function(e){var f=a.eq(e);r&&(b[0]=q.call(this,e,f.html())),Ha(f,b,c,d)});if(o&&(k=ja(b,a[0].ownerDocument,!1,a,d),e=k.firstChild,1===k.childNodes.length&&(k=e),e||d)){for(i=n.map(ea(k,"script"),Da),h=i.length;o>m;m++)g=k,m!==p&&(g=n.clone(g,!0,!0),h&&n.merge(i,ea(g,"script"))),c.call(a[m],g,m);if(h)for(j=i[i.length-1].ownerDocument,n.map(i,Ea),m=0;h>m;m++)g=i[m],_.test(g.type||"")&&!n._data(g,"globalEval")&&n.contains(j,g)&&(g.src?n._evalUrl&&n._evalUrl(g.src):n.globalEval((g.text||g.textContent||g.innerHTML||"").replace(za,"")));k=e=null}return a}function Ia(a,b,c){for(var d,e=b?n.filter(b,a):a,f=0;null!=(d=e[f]);f++)c||1!==d.nodeType||n.cleanData(ea(d)),d.parentNode&&(c&&n.contains(d.ownerDocument,d)&&fa(ea(d,"script")),d.parentNode.removeChild(d));return a}n.extend({htmlPrefilter:function(a){return a.replace(va,"<$1></$2>")},clone:function(a,b,c){var d,e,f,g,h,i=n.contains(a.ownerDocument,a);if(l.html5Clone||n.isXMLDoc(a)||!ua.test("<"+a.nodeName+">")?f=a.cloneNode(!0):(Ba.innerHTML=a.outerHTML,Ba.removeChild(f=Ba.firstChild)),!(l.noCloneEvent&&l.noCloneChecked||1!==a.nodeType&&11!==a.nodeType||n.isXMLDoc(a)))for(d=ea(f),h=ea(a),g=0;null!=(e=h[g]);++g)d[g]&&Ga(e,d[g]);if(b)if(c)for(h=h||ea(a),d=d||ea(f),g=0;null!=(e=h[g]);g++)Fa(e,d[g]);else Fa(a,f);return d=ea(f,"script"),d.length>0&&fa(d,!i&&ea(a,"script")),d=h=e=null,f},cleanData:function(a,b){for(var d,e,f,g,h=0,i=n.expando,j=n.cache,k=l.attributes,m=n.event.special;null!=(d=a[h]);h++)if((b||M(d))&&(f=d[i],g=f&&j[f])){if(g.events)for(e in g.events)m[e]?n.event.remove(d,e):n.removeEvent(d,e,g.handle);j[f]&&(delete j[f],k||"undefined"==typeof d.removeAttribute?d[i]=void 0:d.removeAttribute(i),c.push(f))}}}),n.fn.extend({domManip:Ha,detach:function(a){return Ia(this,a,!0)},remove:function(a){return Ia(this,a)},text:function(a){return Y(this,function(a){return void 0===a?n.text(this):this.empty().append((this[0]&&this[0].ownerDocument||d).createTextNode(a))},null,a,arguments.length)},append:function(){return Ha(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ca(this,a);b.appendChild(a)}})},prepend:function(){return Ha(this,arguments,function(a){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var b=Ca(this,a);b.insertBefore(a,b.firstChild)}})},before:function(){return Ha(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this)})},after:function(){return Ha(this,arguments,function(a){this.parentNode&&this.parentNode.insertBefore(a,this.nextSibling)})},empty:function(){for(var a,b=0;null!=(a=this[b]);b++){1===a.nodeType&&n.cleanData(ea(a,!1));while(a.firstChild)a.removeChild(a.firstChild);a.options&&n.nodeName(a,"select")&&(a.options.length=0)}return this},clone:function(a,b){return a=null==a?!1:a,b=null==b?a:b,this.map(function(){return n.clone(this,a,b)})},html:function(a){return Y(this,function(a){var b=this[0]||{},c=0,d=this.length;if(void 0===a)return 1===b.nodeType?b.innerHTML.replace(ta,""):void 0;if("string"==typeof a&&!wa.test(a)&&(l.htmlSerialize||!ua.test(a))&&(l.leadingWhitespace||!aa.test(a))&&!da[($.exec(a)||["",""])[1].toLowerCase()]){a=n.htmlPrefilter(a);try{for(;d>c;c++)b=this[c]||{},1===b.nodeType&&(n.cleanData(ea(b,!1)),b.innerHTML=a);b=0}catch(e){}}b&&this.empty().append(a)},null,a,arguments.length)},replaceWith:function(){var a=[];return Ha(this,arguments,function(b){var c=this.parentNode;n.inArray(this,a)<0&&(n.cleanData(ea(this)),c&&c.replaceChild(b,this))},a)}}),n.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(a,b){n.fn[a]=function(a){for(var c,d=0,e=[],f=n(a),h=f.length-1;h>=d;d++)c=d===h?this:this.clone(!0),n(f[d])[b](c),g.apply(e,c.get());return this.pushStack(e)}});var Ja,Ka={HTML:"block",BODY:"block"};function La(a,b){var c=n(b.createElement(a)).appendTo(b.body),d=n.css(c[0],"display");return c.detach(),d}function Ma(a){var b=d,c=Ka[a];return c||(c=La(a,b),"none"!==c&&c||(Ja=(Ja||n("<iframe frameborder='0' width='0' height='0'/>")).appendTo(b.documentElement),b=(Ja[0].contentWindow||Ja[0].contentDocument).document,b.write(),b.close(),c=La(a,b),Ja.detach()),Ka[a]=c),c}var Na=/^margin/,Oa=new RegExp("^("+T+")(?!px)[a-z%]+$","i"),Pa=function(a,b,c,d){var e,f,g={};for(f in b)g[f]=a.style[f],a.style[f]=b[f];e=c.apply(a,d||[]);for(f in b)a.style[f]=g[f];return e},Qa=d.documentElement;!function(){var b,c,e,f,g,h,i=d.createElement("div"),j=d.createElement("div");if(j.style){j.style.cssText="float:left;opacity:.5",l.opacity="0.5"===j.style.opacity,l.cssFloat=!!j.style.cssFloat,j.style.backgroundClip="content-box",j.cloneNode(!0).style.backgroundClip="",l.clearCloneStyle="content-box"===j.style.backgroundClip,i=d.createElement("div"),i.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",j.innerHTML="",i.appendChild(j),l.boxSizing=""===j.style.boxSizing||""===j.style.MozBoxSizing||""===j.style.WebkitBoxSizing,n.extend(l,{reliableHiddenOffsets:function(){return null==b&&k(),f},boxSizingReliable:function(){return null==b&&k(),e},pixelMarginRight:function(){return null==b&&k(),c},pixelPosition:function(){return null==b&&k(),b},reliableMarginRight:function(){return null==b&&k(),g},reliableMarginLeft:function(){return null==b&&k(),h}});function k(){var k,l,m=d.documentElement;m.appendChild(i),j.style.cssText="-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",b=e=h=!1,c=g=!0,a.getComputedStyle&&(l=a.getComputedStyle(j),b="1%"!==(l||{}).top,h="2px"===(l||{}).marginLeft,e="4px"===(l||{width:"4px"}).width,j.style.marginRight="50%",c="4px"===(l||{marginRight:"4px"}).marginRight,k=j.appendChild(d.createElement("div")),k.style.cssText=j.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",k.style.marginRight=k.style.width="0",j.style.width="1px",g=!parseFloat((a.getComputedStyle(k)||{}).marginRight),j.removeChild(k)),j.style.display="none",f=0===j.getClientRects().length,f&&(j.style.display="",j.innerHTML="<table><tr><td></td><td>t</td></tr></table>",j.childNodes[0].style.borderCollapse="separate",k=j.getElementsByTagName("td"),k[0].style.cssText="margin:0;border:0;padding:0;display:none",f=0===k[0].offsetHeight,f&&(k[0].style.display="",k[1].style.display="none",f=0===k[0].offsetHeight)),m.removeChild(i)}}}();var Ra,Sa,Ta=/^(top|right|bottom|left)$/;a.getComputedStyle?(Ra=function(b){var c=b.ownerDocument.defaultView;return c&&c.opener||(c=a),c.getComputedStyle(b)},Sa=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ra(a),g=c?c.getPropertyValue(b)||c[b]:void 0,""!==g&&void 0!==g||n.contains(a.ownerDocument,a)||(g=n.style(a,b)),c&&!l.pixelMarginRight()&&Oa.test(g)&&Na.test(b)&&(d=h.width,e=h.minWidth,f=h.maxWidth,h.minWidth=h.maxWidth=h.width=g,g=c.width,h.width=d,h.minWidth=e,h.maxWidth=f),void 0===g?g:g+""}):Qa.currentStyle&&(Ra=function(a){return a.currentStyle},Sa=function(a,b,c){var d,e,f,g,h=a.style;return c=c||Ra(a),g=c?c[b]:void 0,null==g&&h&&h[b]&&(g=h[b]),Oa.test(g)&&!Ta.test(b)&&(d=h.left,e=a.runtimeStyle,f=e&&e.left,f&&(e.left=a.currentStyle.left),h.left="fontSize"===b?"1em":g,g=h.pixelLeft+"px",h.left=d,f&&(e.left=f)),void 0===g?g:g+""||"auto"});function Ua(a,b){return{get:function(){return a()?void delete this.get:(this.get=b).apply(this,arguments)}}}var Va=/alpha\([^)]*\)/i,Wa=/opacity\s*=\s*([^)]*)/i,Xa=/^(none|table(?!-c[ea]).+)/,Ya=new RegExp("^("+T+")(.*)$","i"),Za={position:"absolute",visibility:"hidden",display:"block"},$a={letterSpacing:"0",fontWeight:"400"},_a=["Webkit","O","Moz","ms"],ab=d.createElement("div").style;function bb(a){if(a in ab)return a;var b=a.charAt(0).toUpperCase()+a.slice(1),c=_a.length;while(c--)if(a=_a[c]+b,a in ab)return a}function cb(a,b){for(var c,d,e,f=[],g=0,h=a.length;h>g;g++)d=a[g],d.style&&(f[g]=n._data(d,"olddisplay"),c=d.style.display,b?(f[g]||"none"!==c||(d.style.display=""),""===d.style.display&&W(d)&&(f[g]=n._data(d,"olddisplay",Ma(d.nodeName)))):(e=W(d),(c&&"none"!==c||!e)&&n._data(d,"olddisplay",e?c:n.css(d,"display"))));for(g=0;h>g;g++)d=a[g],d.style&&(b&&"none"!==d.style.display&&""!==d.style.display||(d.style.display=b?f[g]||"":"none"));return a}function db(a,b,c){var d=Ya.exec(b);return d?Math.max(0,d[1]-(c||0))+(d[2]||"px"):b}function eb(a,b,c,d,e){for(var f=c===(d?"border":"content")?4:"width"===b?1:0,g=0;4>f;f+=2)"margin"===c&&(g+=n.css(a,c+V[f],!0,e)),d?("content"===c&&(g-=n.css(a,"padding"+V[f],!0,e)),"margin"!==c&&(g-=n.css(a,"border"+V[f]+"Width",!0,e))):(g+=n.css(a,"padding"+V[f],!0,e),"padding"!==c&&(g+=n.css(a,"border"+V[f]+"Width",!0,e)));return g}function fb(a,b,c){var d=!0,e="width"===b?a.offsetWidth:a.offsetHeight,f=Ra(a),g=l.boxSizing&&"border-box"===n.css(a,"boxSizing",!1,f);if(0>=e||null==e){if(e=Sa(a,b,f),(0>e||null==e)&&(e=a.style[b]),Oa.test(e))return e;d=g&&(l.boxSizingReliable()||e===a.style[b]),e=parseFloat(e)||0}return e+eb(a,b,c||(g?"border":"content"),d,f)+"px"}n.extend({cssHooks:{opacity:{get:function(a,b){if(b){var c=Sa(a,"opacity");return""===c?"1":c}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":l.cssFloat?"cssFloat":"styleFloat"},style:function(a,b,c,d){if(a&&3!==a.nodeType&&8!==a.nodeType&&a.style){var e,f,g,h=n.camelCase(b),i=a.style;if(b=n.cssProps[h]||(n.cssProps[h]=bb(h)||h),g=n.cssHooks[b]||n.cssHooks[h],void 0===c)return g&&"get"in g&&void 0!==(e=g.get(a,!1,d))?e:i[b];if(f=typeof c,"string"===f&&(e=U.exec(c))&&e[1]&&(c=X(a,b,e),f="number"),null!=c&&c===c&&("number"===f&&(c+=e&&e[3]||(n.cssNumber[h]?"":"px")),l.clearCloneStyle||""!==c||0!==b.indexOf("background")||(i[b]="inherit"),!(g&&"set"in g&&void 0===(c=g.set(a,c,d)))))try{i[b]=c}catch(j){}}},css:function(a,b,c,d){var e,f,g,h=n.camelCase(b);return b=n.cssProps[h]||(n.cssProps[h]=bb(h)||h),g=n.cssHooks[b]||n.cssHooks[h],g&&"get"in g&&(f=g.get(a,!0,c)),void 0===f&&(f=Sa(a,b,d)),"normal"===f&&b in $a&&(f=$a[b]),""===c||c?(e=parseFloat(f),c===!0||isFinite(e)?e||0:f):f}}),n.each(["height","width"],function(a,b){n.cssHooks[b]={get:function(a,c,d){return c?Xa.test(n.css(a,"display"))&&0===a.offsetWidth?Pa(a,Za,function(){return fb(a,b,d)}):fb(a,b,d):void 0},set:function(a,c,d){var e=d&&Ra(a);return db(a,c,d?eb(a,b,d,l.boxSizing&&"border-box"===n.css(a,"boxSizing",!1,e),e):0)}}}),l.opacity||(n.cssHooks.opacity={get:function(a,b){return Wa.test((b&&a.currentStyle?a.currentStyle.filter:a.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":b?"1":""},set:function(a,b){var c=a.style,d=a.currentStyle,e=n.isNumeric(b)?"alpha(opacity="+100*b+")":"",f=d&&d.filter||c.filter||"";c.zoom=1,(b>=1||""===b)&&""===n.trim(f.replace(Va,""))&&c.removeAttribute&&(c.removeAttribute("filter"),""===b||d&&!d.filter)||(c.filter=Va.test(f)?f.replace(Va,e):f+" "+e)}}),n.cssHooks.marginRight=Ua(l.reliableMarginRight,function(a,b){return b?Pa(a,{display:"inline-block"},Sa,[a,"marginRight"]):void 0}),n.cssHooks.marginLeft=Ua(l.reliableMarginLeft,function(a,b){return b?(parseFloat(Sa(a,"marginLeft"))||(n.contains(a.ownerDocument,a)?a.getBoundingClientRect().left-Pa(a,{
marginLeft:0},function(){return a.getBoundingClientRect().left}):0))+"px":void 0}),n.each({margin:"",padding:"",border:"Width"},function(a,b){n.cssHooks[a+b]={expand:function(c){for(var d=0,e={},f="string"==typeof c?c.split(" "):[c];4>d;d++)e[a+V[d]+b]=f[d]||f[d-2]||f[0];return e}},Na.test(a)||(n.cssHooks[a+b].set=db)}),n.fn.extend({css:function(a,b){return Y(this,function(a,b,c){var d,e,f={},g=0;if(n.isArray(b)){for(d=Ra(a),e=b.length;e>g;g++)f[b[g]]=n.css(a,b[g],!1,d);return f}return void 0!==c?n.style(a,b,c):n.css(a,b)},a,b,arguments.length>1)},show:function(){return cb(this,!0)},hide:function(){return cb(this)},toggle:function(a){return"boolean"==typeof a?a?this.show():this.hide():this.each(function(){W(this)?n(this).show():n(this).hide()})}});function gb(a,b,c,d,e){return new gb.prototype.init(a,b,c,d,e)}n.Tween=gb,gb.prototype={constructor:gb,init:function(a,b,c,d,e,f){this.elem=a,this.prop=c,this.easing=e||n.easing._default,this.options=b,this.start=this.now=this.cur(),this.end=d,this.unit=f||(n.cssNumber[c]?"":"px")},cur:function(){var a=gb.propHooks[this.prop];return a&&a.get?a.get(this):gb.propHooks._default.get(this)},run:function(a){var b,c=gb.propHooks[this.prop];return this.options.duration?this.pos=b=n.easing[this.easing](a,this.options.duration*a,0,1,this.options.duration):this.pos=b=a,this.now=(this.end-this.start)*b+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),c&&c.set?c.set(this):gb.propHooks._default.set(this),this}},gb.prototype.init.prototype=gb.prototype,gb.propHooks={_default:{get:function(a){var b;return 1!==a.elem.nodeType||null!=a.elem[a.prop]&&null==a.elem.style[a.prop]?a.elem[a.prop]:(b=n.css(a.elem,a.prop,""),b&&"auto"!==b?b:0)},set:function(a){n.fx.step[a.prop]?n.fx.step[a.prop](a):1!==a.elem.nodeType||null==a.elem.style[n.cssProps[a.prop]]&&!n.cssHooks[a.prop]?a.elem[a.prop]=a.now:n.style(a.elem,a.prop,a.now+a.unit)}}},gb.propHooks.scrollTop=gb.propHooks.scrollLeft={set:function(a){a.elem.nodeType&&a.elem.parentNode&&(a.elem[a.prop]=a.now)}},n.easing={linear:function(a){return a},swing:function(a){return.5-Math.cos(a*Math.PI)/2},_default:"swing"},n.fx=gb.prototype.init,n.fx.step={};var hb,ib,jb=/^(?:toggle|show|hide)$/,kb=/queueHooks$/;function lb(){return a.setTimeout(function(){hb=void 0}),hb=n.now()}function mb(a,b){var c,d={height:a},e=0;for(b=b?1:0;4>e;e+=2-b)c=V[e],d["margin"+c]=d["padding"+c]=a;return b&&(d.opacity=d.width=a),d}function nb(a,b,c){for(var d,e=(qb.tweeners[b]||[]).concat(qb.tweeners["*"]),f=0,g=e.length;g>f;f++)if(d=e[f].call(c,b,a))return d}function ob(a,b,c){var d,e,f,g,h,i,j,k,m=this,o={},p=a.style,q=a.nodeType&&W(a),r=n._data(a,"fxshow");c.queue||(h=n._queueHooks(a,"fx"),null==h.unqueued&&(h.unqueued=0,i=h.empty.fire,h.empty.fire=function(){h.unqueued||i()}),h.unqueued++,m.always(function(){m.always(function(){h.unqueued--,n.queue(a,"fx").length||h.empty.fire()})})),1===a.nodeType&&("height"in b||"width"in b)&&(c.overflow=[p.overflow,p.overflowX,p.overflowY],j=n.css(a,"display"),k="none"===j?n._data(a,"olddisplay")||Ma(a.nodeName):j,"inline"===k&&"none"===n.css(a,"float")&&(l.inlineBlockNeedsLayout&&"inline"!==Ma(a.nodeName)?p.zoom=1:p.display="inline-block")),c.overflow&&(p.overflow="hidden",l.shrinkWrapBlocks()||m.always(function(){p.overflow=c.overflow[0],p.overflowX=c.overflow[1],p.overflowY=c.overflow[2]}));for(d in b)if(e=b[d],jb.exec(e)){if(delete b[d],f=f||"toggle"===e,e===(q?"hide":"show")){if("show"!==e||!r||void 0===r[d])continue;q=!0}o[d]=r&&r[d]||n.style(a,d)}else j=void 0;if(n.isEmptyObject(o))"inline"===("none"===j?Ma(a.nodeName):j)&&(p.display=j);else{r?"hidden"in r&&(q=r.hidden):r=n._data(a,"fxshow",{}),f&&(r.hidden=!q),q?n(a).show():m.done(function(){n(a).hide()}),m.done(function(){var b;n._removeData(a,"fxshow");for(b in o)n.style(a,b,o[b])});for(d in o)g=nb(q?r[d]:0,d,m),d in r||(r[d]=g.start,q&&(g.end=g.start,g.start="width"===d||"height"===d?1:0))}}function pb(a,b){var c,d,e,f,g;for(c in a)if(d=n.camelCase(c),e=b[d],f=a[c],n.isArray(f)&&(e=f[1],f=a[c]=f[0]),c!==d&&(a[d]=f,delete a[c]),g=n.cssHooks[d],g&&"expand"in g){f=g.expand(f),delete a[d];for(c in f)c in a||(a[c]=f[c],b[c]=e)}else b[d]=e}function qb(a,b,c){var d,e,f=0,g=qb.prefilters.length,h=n.Deferred().always(function(){delete i.elem}),i=function(){if(e)return!1;for(var b=hb||lb(),c=Math.max(0,j.startTime+j.duration-b),d=c/j.duration||0,f=1-d,g=0,i=j.tweens.length;i>g;g++)j.tweens[g].run(f);return h.notifyWith(a,[j,f,c]),1>f&&i?c:(h.resolveWith(a,[j]),!1)},j=h.promise({elem:a,props:n.extend({},b),opts:n.extend(!0,{specialEasing:{},easing:n.easing._default},c),originalProperties:b,originalOptions:c,startTime:hb||lb(),duration:c.duration,tweens:[],createTween:function(b,c){var d=n.Tween(a,j.opts,b,c,j.opts.specialEasing[b]||j.opts.easing);return j.tweens.push(d),d},stop:function(b){var c=0,d=b?j.tweens.length:0;if(e)return this;for(e=!0;d>c;c++)j.tweens[c].run(1);return b?(h.notifyWith(a,[j,1,0]),h.resolveWith(a,[j,b])):h.rejectWith(a,[j,b]),this}}),k=j.props;for(pb(k,j.opts.specialEasing);g>f;f++)if(d=qb.prefilters[f].call(j,a,k,j.opts))return n.isFunction(d.stop)&&(n._queueHooks(j.elem,j.opts.queue).stop=n.proxy(d.stop,d)),d;return n.map(k,nb,j),n.isFunction(j.opts.start)&&j.opts.start.call(a,j),n.fx.timer(n.extend(i,{elem:a,anim:j,queue:j.opts.queue})),j.progress(j.opts.progress).done(j.opts.done,j.opts.complete).fail(j.opts.fail).always(j.opts.always)}n.Animation=n.extend(qb,{tweeners:{"*":[function(a,b){var c=this.createTween(a,b);return X(c.elem,a,U.exec(b),c),c}]},tweener:function(a,b){n.isFunction(a)?(b=a,a=["*"]):a=a.match(G);for(var c,d=0,e=a.length;e>d;d++)c=a[d],qb.tweeners[c]=qb.tweeners[c]||[],qb.tweeners[c].unshift(b)},prefilters:[ob],prefilter:function(a,b){b?qb.prefilters.unshift(a):qb.prefilters.push(a)}}),n.speed=function(a,b,c){var d=a&&"object"==typeof a?n.extend({},a):{complete:c||!c&&b||n.isFunction(a)&&a,duration:a,easing:c&&b||b&&!n.isFunction(b)&&b};return d.duration=n.fx.off?0:"number"==typeof d.duration?d.duration:d.duration in n.fx.speeds?n.fx.speeds[d.duration]:n.fx.speeds._default,null!=d.queue&&d.queue!==!0||(d.queue="fx"),d.old=d.complete,d.complete=function(){n.isFunction(d.old)&&d.old.call(this),d.queue&&n.dequeue(this,d.queue)},d},n.fn.extend({fadeTo:function(a,b,c,d){return this.filter(W).css("opacity",0).show().end().animate({opacity:b},a,c,d)},animate:function(a,b,c,d){var e=n.isEmptyObject(a),f=n.speed(b,c,d),g=function(){var b=qb(this,n.extend({},a),f);(e||n._data(this,"finish"))&&b.stop(!0)};return g.finish=g,e||f.queue===!1?this.each(g):this.queue(f.queue,g)},stop:function(a,b,c){var d=function(a){var b=a.stop;delete a.stop,b(c)};return"string"!=typeof a&&(c=b,b=a,a=void 0),b&&a!==!1&&this.queue(a||"fx",[]),this.each(function(){var b=!0,e=null!=a&&a+"queueHooks",f=n.timers,g=n._data(this);if(e)g[e]&&g[e].stop&&d(g[e]);else for(e in g)g[e]&&g[e].stop&&kb.test(e)&&d(g[e]);for(e=f.length;e--;)f[e].elem!==this||null!=a&&f[e].queue!==a||(f[e].anim.stop(c),b=!1,f.splice(e,1));!b&&c||n.dequeue(this,a)})},finish:function(a){return a!==!1&&(a=a||"fx"),this.each(function(){var b,c=n._data(this),d=c[a+"queue"],e=c[a+"queueHooks"],f=n.timers,g=d?d.length:0;for(c.finish=!0,n.queue(this,a,[]),e&&e.stop&&e.stop.call(this,!0),b=f.length;b--;)f[b].elem===this&&f[b].queue===a&&(f[b].anim.stop(!0),f.splice(b,1));for(b=0;g>b;b++)d[b]&&d[b].finish&&d[b].finish.call(this);delete c.finish})}}),n.each(["toggle","show","hide"],function(a,b){var c=n.fn[b];n.fn[b]=function(a,d,e){return null==a||"boolean"==typeof a?c.apply(this,arguments):this.animate(mb(b,!0),a,d,e)}}),n.each({slideDown:mb("show"),slideUp:mb("hide"),slideToggle:mb("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(a,b){n.fn[a]=function(a,c,d){return this.animate(b,a,c,d)}}),n.timers=[],n.fx.tick=function(){var a,b=n.timers,c=0;for(hb=n.now();c<b.length;c++)a=b[c],a()||b[c]!==a||b.splice(c--,1);b.length||n.fx.stop(),hb=void 0},n.fx.timer=function(a){n.timers.push(a),a()?n.fx.start():n.timers.pop()},n.fx.interval=13,n.fx.start=function(){ib||(ib=a.setInterval(n.fx.tick,n.fx.interval))},n.fx.stop=function(){a.clearInterval(ib),ib=null},n.fx.speeds={slow:600,fast:200,_default:400},n.fn.delay=function(b,c){return b=n.fx?n.fx.speeds[b]||b:b,c=c||"fx",this.queue(c,function(c,d){var e=a.setTimeout(c,b);d.stop=function(){a.clearTimeout(e)}})},function(){var a,b=d.createElement("input"),c=d.createElement("div"),e=d.createElement("select"),f=e.appendChild(d.createElement("option"));c=d.createElement("div"),c.setAttribute("className","t"),c.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",a=c.getElementsByTagName("a")[0],b.setAttribute("type","checkbox"),c.appendChild(b),a=c.getElementsByTagName("a")[0],a.style.cssText="top:1px",l.getSetAttribute="t"!==c.className,l.style=/top/.test(a.getAttribute("style")),l.hrefNormalized="/a"===a.getAttribute("href"),l.checkOn=!!b.value,l.optSelected=f.selected,l.enctype=!!d.createElement("form").enctype,e.disabled=!0,l.optDisabled=!f.disabled,b=d.createElement("input"),b.setAttribute("value",""),l.input=""===b.getAttribute("value"),b.value="t",b.setAttribute("type","radio"),l.radioValue="t"===b.value}();var rb=/\r/g,sb=/[\x20\t\r\n\f]+/g;n.fn.extend({val:function(a){var b,c,d,e=this[0];{if(arguments.length)return d=n.isFunction(a),this.each(function(c){var e;1===this.nodeType&&(e=d?a.call(this,c,n(this).val()):a,null==e?e="":"number"==typeof e?e+="":n.isArray(e)&&(e=n.map(e,function(a){return null==a?"":a+""})),b=n.valHooks[this.type]||n.valHooks[this.nodeName.toLowerCase()],b&&"set"in b&&void 0!==b.set(this,e,"value")||(this.value=e))});if(e)return b=n.valHooks[e.type]||n.valHooks[e.nodeName.toLowerCase()],b&&"get"in b&&void 0!==(c=b.get(e,"value"))?c:(c=e.value,"string"==typeof c?c.replace(rb,""):null==c?"":c)}}}),n.extend({valHooks:{option:{get:function(a){var b=n.find.attr(a,"value");return null!=b?b:n.trim(n.text(a)).replace(sb," ")}},select:{get:function(a){for(var b,c,d=a.options,e=a.selectedIndex,f="select-one"===a.type||0>e,g=f?null:[],h=f?e+1:d.length,i=0>e?h:f?e:0;h>i;i++)if(c=d[i],(c.selected||i===e)&&(l.optDisabled?!c.disabled:null===c.getAttribute("disabled"))&&(!c.parentNode.disabled||!n.nodeName(c.parentNode,"optgroup"))){if(b=n(c).val(),f)return b;g.push(b)}return g},set:function(a,b){var c,d,e=a.options,f=n.makeArray(b),g=e.length;while(g--)if(d=e[g],n.inArray(n.valHooks.option.get(d),f)>-1)try{d.selected=c=!0}catch(h){d.scrollHeight}else d.selected=!1;return c||(a.selectedIndex=-1),e}}}}),n.each(["radio","checkbox"],function(){n.valHooks[this]={set:function(a,b){return n.isArray(b)?a.checked=n.inArray(n(a).val(),b)>-1:void 0}},l.checkOn||(n.valHooks[this].get=function(a){return null===a.getAttribute("value")?"on":a.value})});var tb,ub,vb=n.expr.attrHandle,wb=/^(?:checked|selected)$/i,xb=l.getSetAttribute,yb=l.input;n.fn.extend({attr:function(a,b){return Y(this,n.attr,a,b,arguments.length>1)},removeAttr:function(a){return this.each(function(){n.removeAttr(this,a)})}}),n.extend({attr:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return"undefined"==typeof a.getAttribute?n.prop(a,b,c):(1===f&&n.isXMLDoc(a)||(b=b.toLowerCase(),e=n.attrHooks[b]||(n.expr.match.bool.test(b)?ub:tb)),void 0!==c?null===c?void n.removeAttr(a,b):e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:(a.setAttribute(b,c+""),c):e&&"get"in e&&null!==(d=e.get(a,b))?d:(d=n.find.attr(a,b),null==d?void 0:d))},attrHooks:{type:{set:function(a,b){if(!l.radioValue&&"radio"===b&&n.nodeName(a,"input")){var c=a.value;return a.setAttribute("type",b),c&&(a.value=c),b}}}},removeAttr:function(a,b){var c,d,e=0,f=b&&b.match(G);if(f&&1===a.nodeType)while(c=f[e++])d=n.propFix[c]||c,n.expr.match.bool.test(c)?yb&&xb||!wb.test(c)?a[d]=!1:a[n.camelCase("default-"+c)]=a[d]=!1:n.attr(a,c,""),a.removeAttribute(xb?c:d)}}),ub={set:function(a,b,c){return b===!1?n.removeAttr(a,c):yb&&xb||!wb.test(c)?a.setAttribute(!xb&&n.propFix[c]||c,c):a[n.camelCase("default-"+c)]=a[c]=!0,c}},n.each(n.expr.match.bool.source.match(/\w+/g),function(a,b){var c=vb[b]||n.find.attr;yb&&xb||!wb.test(b)?vb[b]=function(a,b,d){var e,f;return d||(f=vb[b],vb[b]=e,e=null!=c(a,b,d)?b.toLowerCase():null,vb[b]=f),e}:vb[b]=function(a,b,c){return c?void 0:a[n.camelCase("default-"+b)]?b.toLowerCase():null}}),yb&&xb||(n.attrHooks.value={set:function(a,b,c){return n.nodeName(a,"input")?void(a.defaultValue=b):tb&&tb.set(a,b,c)}}),xb||(tb={set:function(a,b,c){var d=a.getAttributeNode(c);return d||a.setAttributeNode(d=a.ownerDocument.createAttribute(c)),d.value=b+="","value"===c||b===a.getAttribute(c)?b:void 0}},vb.id=vb.name=vb.coords=function(a,b,c){var d;return c?void 0:(d=a.getAttributeNode(b))&&""!==d.value?d.value:null},n.valHooks.button={get:function(a,b){var c=a.getAttributeNode(b);return c&&c.specified?c.value:void 0},set:tb.set},n.attrHooks.contenteditable={set:function(a,b,c){tb.set(a,""===b?!1:b,c)}},n.each(["width","height"],function(a,b){n.attrHooks[b]={set:function(a,c){return""===c?(a.setAttribute(b,"auto"),c):void 0}}})),l.style||(n.attrHooks.style={get:function(a){return a.style.cssText||void 0},set:function(a,b){return a.style.cssText=b+""}});var zb=/^(?:input|select|textarea|button|object)$/i,Ab=/^(?:a|area)$/i;n.fn.extend({prop:function(a,b){return Y(this,n.prop,a,b,arguments.length>1)},removeProp:function(a){return a=n.propFix[a]||a,this.each(function(){try{this[a]=void 0,delete this[a]}catch(b){}})}}),n.extend({prop:function(a,b,c){var d,e,f=a.nodeType;if(3!==f&&8!==f&&2!==f)return 1===f&&n.isXMLDoc(a)||(b=n.propFix[b]||b,e=n.propHooks[b]),void 0!==c?e&&"set"in e&&void 0!==(d=e.set(a,c,b))?d:a[b]=c:e&&"get"in e&&null!==(d=e.get(a,b))?d:a[b]},propHooks:{tabIndex:{get:function(a){var b=n.find.attr(a,"tabindex");return b?parseInt(b,10):zb.test(a.nodeName)||Ab.test(a.nodeName)&&a.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),l.hrefNormalized||n.each(["href","src"],function(a,b){n.propHooks[b]={get:function(a){return a.getAttribute(b,4)}}}),l.optSelected||(n.propHooks.selected={get:function(a){var b=a.parentNode;return b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex),null},set:function(a){var b=a.parentNode;b&&(b.selectedIndex,b.parentNode&&b.parentNode.selectedIndex)}}),n.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){n.propFix[this.toLowerCase()]=this}),l.enctype||(n.propFix.enctype="encoding");var Bb=/[\t\r\n\f]/g;function Cb(a){return n.attr(a,"class")||""}n.fn.extend({addClass:function(a){var b,c,d,e,f,g,h,i=0;if(n.isFunction(a))return this.each(function(b){n(this).addClass(a.call(this,b,Cb(this)))});if("string"==typeof a&&a){b=a.match(G)||[];while(c=this[i++])if(e=Cb(c),d=1===c.nodeType&&(" "+e+" ").replace(Bb," ")){g=0;while(f=b[g++])d.indexOf(" "+f+" ")<0&&(d+=f+" ");h=n.trim(d),e!==h&&n.attr(c,"class",h)}}return this},removeClass:function(a){var b,c,d,e,f,g,h,i=0;if(n.isFunction(a))return this.each(function(b){n(this).removeClass(a.call(this,b,Cb(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof a&&a){b=a.match(G)||[];while(c=this[i++])if(e=Cb(c),d=1===c.nodeType&&(" "+e+" ").replace(Bb," ")){g=0;while(f=b[g++])while(d.indexOf(" "+f+" ")>-1)d=d.replace(" "+f+" "," ");h=n.trim(d),e!==h&&n.attr(c,"class",h)}}return this},toggleClass:function(a,b){var c=typeof a;return"boolean"==typeof b&&"string"===c?b?this.addClass(a):this.removeClass(a):n.isFunction(a)?this.each(function(c){n(this).toggleClass(a.call(this,c,Cb(this),b),b)}):this.each(function(){var b,d,e,f;if("string"===c){d=0,e=n(this),f=a.match(G)||[];while(b=f[d++])e.hasClass(b)?e.removeClass(b):e.addClass(b)}else void 0!==a&&"boolean"!==c||(b=Cb(this),b&&n._data(this,"__className__",b),n.attr(this,"class",b||a===!1?"":n._data(this,"__className__")||""))})},hasClass:function(a){var b,c,d=0;b=" "+a+" ";while(c=this[d++])if(1===c.nodeType&&(" "+Cb(c)+" ").replace(Bb," ").indexOf(b)>-1)return!0;return!1}}),n.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(a,b){n.fn[b]=function(a,c){return arguments.length>0?this.on(b,null,a,c):this.trigger(b)}}),n.fn.extend({hover:function(a,b){return this.mouseenter(a).mouseleave(b||a)}});var Db=a.location,Eb=n.now(),Fb=/\?/,Gb=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;n.parseJSON=function(b){if(a.JSON&&a.JSON.parse)return a.JSON.parse(b+"");var c,d=null,e=n.trim(b+"");return e&&!n.trim(e.replace(Gb,function(a,b,e,f){return c&&b&&(d=0),0===d?a:(c=e||b,d+=!f-!e,"")}))?Function("return "+e)():n.error("Invalid JSON: "+b)},n.parseXML=function(b){var c,d;if(!b||"string"!=typeof b)return null;try{a.DOMParser?(d=new a.DOMParser,c=d.parseFromString(b,"text/xml")):(c=new a.ActiveXObject("Microsoft.XMLDOM"),c.async="false",c.loadXML(b))}catch(e){c=void 0}return c&&c.documentElement&&!c.getElementsByTagName("parsererror").length||n.error("Invalid XML: "+b),c};var Hb=/#.*$/,Ib=/([?&])_=[^&]*/,Jb=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Kb=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Lb=/^(?:GET|HEAD)$/,Mb=/^\/\//,Nb=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Ob={},Pb={},Qb="*/".concat("*"),Rb=Db.href,Sb=Nb.exec(Rb.toLowerCase())||[];function Tb(a){return function(b,c){"string"!=typeof b&&(c=b,b="*");var d,e=0,f=b.toLowerCase().match(G)||[];if(n.isFunction(c))while(d=f[e++])"+"===d.charAt(0)?(d=d.slice(1)||"*",(a[d]=a[d]||[]).unshift(c)):(a[d]=a[d]||[]).push(c)}}function Ub(a,b,c,d){var e={},f=a===Pb;function g(h){var i;return e[h]=!0,n.each(a[h]||[],function(a,h){var j=h(b,c,d);return"string"!=typeof j||f||e[j]?f?!(i=j):void 0:(b.dataTypes.unshift(j),g(j),!1)}),i}return g(b.dataTypes[0])||!e["*"]&&g("*")}function Vb(a,b){var c,d,e=n.ajaxSettings.flatOptions||{};for(d in b)void 0!==b[d]&&((e[d]?a:c||(c={}))[d]=b[d]);return c&&n.extend(!0,a,c),a}function Wb(a,b,c){var d,e,f,g,h=a.contents,i=a.dataTypes;while("*"===i[0])i.shift(),void 0===e&&(e=a.mimeType||b.getResponseHeader("Content-Type"));if(e)for(g in h)if(h[g]&&h[g].test(e)){i.unshift(g);break}if(i[0]in c)f=i[0];else{for(g in c){if(!i[0]||a.converters[g+" "+i[0]]){f=g;break}d||(d=g)}f=f||d}return f?(f!==i[0]&&i.unshift(f),c[f]):void 0}function Xb(a,b,c,d){var e,f,g,h,i,j={},k=a.dataTypes.slice();if(k[1])for(g in a.converters)j[g.toLowerCase()]=a.converters[g];f=k.shift();while(f)if(a.responseFields[f]&&(c[a.responseFields[f]]=b),!i&&d&&a.dataFilter&&(b=a.dataFilter(b,a.dataType)),i=f,f=k.shift())if("*"===f)f=i;else if("*"!==i&&i!==f){if(g=j[i+" "+f]||j["* "+f],!g)for(e in j)if(h=e.split(" "),h[1]===f&&(g=j[i+" "+h[0]]||j["* "+h[0]])){g===!0?g=j[e]:j[e]!==!0&&(f=h[0],k.unshift(h[1]));break}if(g!==!0)if(g&&a["throws"])b=g(b);else try{b=g(b)}catch(l){return{state:"parsererror",error:g?l:"No conversion from "+i+" to "+f}}}return{state:"success",data:b}}n.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Rb,type:"GET",isLocal:Kb.test(Sb[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Qb,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":n.parseJSON,"text xml":n.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(a,b){return b?Vb(Vb(a,n.ajaxSettings),b):Vb(n.ajaxSettings,a)},ajaxPrefilter:Tb(Ob),ajaxTransport:Tb(Pb),ajax:function(b,c){"object"==typeof b&&(c=b,b=void 0),c=c||{};var d,e,f,g,h,i,j,k,l=n.ajaxSetup({},c),m=l.context||l,o=l.context&&(m.nodeType||m.jquery)?n(m):n.event,p=n.Deferred(),q=n.Callbacks("once memory"),r=l.statusCode||{},s={},t={},u=0,v="canceled",w={readyState:0,getResponseHeader:function(a){var b;if(2===u){if(!k){k={};while(b=Jb.exec(g))k[b[1].toLowerCase()]=b[2]}b=k[a.toLowerCase()]}return null==b?null:b},getAllResponseHeaders:function(){return 2===u?g:null},setRequestHeader:function(a,b){var c=a.toLowerCase();return u||(a=t[c]=t[c]||a,s[a]=b),this},overrideMimeType:function(a){return u||(l.mimeType=a),this},statusCode:function(a){var b;if(a)if(2>u)for(b in a)r[b]=[r[b],a[b]];else w.always(a[w.status]);return this},abort:function(a){var b=a||v;return j&&j.abort(b),y(0,b),this}};if(p.promise(w).complete=q.add,w.success=w.done,w.error=w.fail,l.url=((b||l.url||Rb)+"").replace(Hb,"").replace(Mb,Sb[1]+"//"),l.type=c.method||c.type||l.method||l.type,l.dataTypes=n.trim(l.dataType||"*").toLowerCase().match(G)||[""],null==l.crossDomain&&(d=Nb.exec(l.url.toLowerCase()),l.crossDomain=!(!d||d[1]===Sb[1]&&d[2]===Sb[2]&&(d[3]||("http:"===d[1]?"80":"443"))===(Sb[3]||("http:"===Sb[1]?"80":"443")))),l.data&&l.processData&&"string"!=typeof l.data&&(l.data=n.param(l.data,l.traditional)),Ub(Ob,l,c,w),2===u)return w;i=n.event&&l.global,i&&0===n.active++&&n.event.trigger("ajaxStart"),l.type=l.type.toUpperCase(),l.hasContent=!Lb.test(l.type),f=l.url,l.hasContent||(l.data&&(f=l.url+=(Fb.test(f)?"&":"?")+l.data,delete l.data),l.cache===!1&&(l.url=Ib.test(f)?f.replace(Ib,"$1_="+Eb++):f+(Fb.test(f)?"&":"?")+"_="+Eb++)),l.ifModified&&(n.lastModified[f]&&w.setRequestHeader("If-Modified-Since",n.lastModified[f]),n.etag[f]&&w.setRequestHeader("If-None-Match",n.etag[f])),(l.data&&l.hasContent&&l.contentType!==!1||c.contentType)&&w.setRequestHeader("Content-Type",l.contentType),w.setRequestHeader("Accept",l.dataTypes[0]&&l.accepts[l.dataTypes[0]]?l.accepts[l.dataTypes[0]]+("*"!==l.dataTypes[0]?", "+Qb+"; q=0.01":""):l.accepts["*"]);for(e in l.headers)w.setRequestHeader(e,l.headers[e]);if(l.beforeSend&&(l.beforeSend.call(m,w,l)===!1||2===u))return w.abort();v="abort";for(e in{success:1,error:1,complete:1})w[e](l[e]);if(j=Ub(Pb,l,c,w)){if(w.readyState=1,i&&o.trigger("ajaxSend",[w,l]),2===u)return w;l.async&&l.timeout>0&&(h=a.setTimeout(function(){w.abort("timeout")},l.timeout));try{u=1,j.send(s,y)}catch(x){if(!(2>u))throw x;y(-1,x)}}else y(-1,"No Transport");function y(b,c,d,e){var k,s,t,v,x,y=c;2!==u&&(u=2,h&&a.clearTimeout(h),j=void 0,g=e||"",w.readyState=b>0?4:0,k=b>=200&&300>b||304===b,d&&(v=Wb(l,w,d)),v=Xb(l,v,w,k),k?(l.ifModified&&(x=w.getResponseHeader("Last-Modified"),x&&(n.lastModified[f]=x),x=w.getResponseHeader("etag"),x&&(n.etag[f]=x)),204===b||"HEAD"===l.type?y="nocontent":304===b?y="notmodified":(y=v.state,s=v.data,t=v.error,k=!t)):(t=y,!b&&y||(y="error",0>b&&(b=0))),w.status=b,w.statusText=(c||y)+"",k?p.resolveWith(m,[s,y,w]):p.rejectWith(m,[w,y,t]),w.statusCode(r),r=void 0,i&&o.trigger(k?"ajaxSuccess":"ajaxError",[w,l,k?s:t]),q.fireWith(m,[w,y]),i&&(o.trigger("ajaxComplete",[w,l]),--n.active||n.event.trigger("ajaxStop")))}return w},getJSON:function(a,b,c){return n.get(a,b,c,"json")},getScript:function(a,b){return n.get(a,void 0,b,"script")}}),n.each(["get","post"],function(a,b){n[b]=function(a,c,d,e){return n.isFunction(c)&&(e=e||d,d=c,c=void 0),n.ajax(n.extend({url:a,type:b,dataType:e,data:c,success:d},n.isPlainObject(a)&&a))}}),n._evalUrl=function(a){return n.ajax({url:a,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},n.fn.extend({wrapAll:function(a){if(n.isFunction(a))return this.each(function(b){n(this).wrapAll(a.call(this,b))});if(this[0]){var b=n(a,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&b.insertBefore(this[0]),b.map(function(){var a=this;while(a.firstChild&&1===a.firstChild.nodeType)a=a.firstChild;return a}).append(this)}return this},wrapInner:function(a){return n.isFunction(a)?this.each(function(b){n(this).wrapInner(a.call(this,b))}):this.each(function(){var b=n(this),c=b.contents();c.length?c.wrapAll(a):b.append(a)})},wrap:function(a){var b=n.isFunction(a);return this.each(function(c){n(this).wrapAll(b?a.call(this,c):a)})},unwrap:function(){return this.parent().each(function(){n.nodeName(this,"body")||n(this).replaceWith(this.childNodes)}).end()}});function Yb(a){return a.style&&a.style.display||n.css(a,"display")}function Zb(a){if(!n.contains(a.ownerDocument||d,a))return!0;while(a&&1===a.nodeType){if("none"===Yb(a)||"hidden"===a.type)return!0;a=a.parentNode}return!1}n.expr.filters.hidden=function(a){return l.reliableHiddenOffsets()?a.offsetWidth<=0&&a.offsetHeight<=0&&!a.getClientRects().length:Zb(a)},n.expr.filters.visible=function(a){return!n.expr.filters.hidden(a)};var $b=/%20/g,_b=/\[\]$/,ac=/\r?\n/g,bc=/^(?:submit|button|image|reset|file)$/i,cc=/^(?:input|select|textarea|keygen)/i;function dc(a,b,c,d){var e;if(n.isArray(b))n.each(b,function(b,e){c||_b.test(a)?d(a,e):dc(a+"["+("object"==typeof e&&null!=e?b:"")+"]",e,c,d)});else if(c||"object"!==n.type(b))d(a,b);else for(e in b)dc(a+"["+e+"]",b[e],c,d)}n.param=function(a,b){var c,d=[],e=function(a,b){b=n.isFunction(b)?b():null==b?"":b,d[d.length]=encodeURIComponent(a)+"="+encodeURIComponent(b)};if(void 0===b&&(b=n.ajaxSettings&&n.ajaxSettings.traditional),n.isArray(a)||a.jquery&&!n.isPlainObject(a))n.each(a,function(){e(this.name,this.value)});else for(c in a)dc(c,a[c],b,e);return d.join("&").replace($b,"+")},n.fn.extend({serialize:function(){return n.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var a=n.prop(this,"elements");return a?n.makeArray(a):this}).filter(function(){var a=this.type;return this.name&&!n(this).is(":disabled")&&cc.test(this.nodeName)&&!bc.test(a)&&(this.checked||!Z.test(a))}).map(function(a,b){var c=n(this).val();return null==c?null:n.isArray(c)?n.map(c,function(a){return{name:b.name,value:a.replace(ac,"\r\n")}}):{name:b.name,value:c.replace(ac,"\r\n")}}).get()}}),n.ajaxSettings.xhr=void 0!==a.ActiveXObject?function(){return this.isLocal?ic():d.documentMode>8?hc():/^(get|post|head|put|delete|options)$/i.test(this.type)&&hc()||ic()}:hc;var ec=0,fc={},gc=n.ajaxSettings.xhr();a.attachEvent&&a.attachEvent("onunload",function(){for(var a in fc)fc[a](void 0,!0)}),l.cors=!!gc&&"withCredentials"in gc,gc=l.ajax=!!gc,gc&&n.ajaxTransport(function(b){if(!b.crossDomain||l.cors){var c;return{send:function(d,e){var f,g=b.xhr(),h=++ec;if(g.open(b.type,b.url,b.async,b.username,b.password),b.xhrFields)for(f in b.xhrFields)g[f]=b.xhrFields[f];b.mimeType&&g.overrideMimeType&&g.overrideMimeType(b.mimeType),b.crossDomain||d["X-Requested-With"]||(d["X-Requested-With"]="XMLHttpRequest");for(f in d)void 0!==d[f]&&g.setRequestHeader(f,d[f]+"");g.send(b.hasContent&&b.data||null),c=function(a,d){var f,i,j;if(c&&(d||4===g.readyState))if(delete fc[h],c=void 0,g.onreadystatechange=n.noop,d)4!==g.readyState&&g.abort();else{j={},f=g.status,"string"==typeof g.responseText&&(j.text=g.responseText);try{i=g.statusText}catch(k){i=""}f||!b.isLocal||b.crossDomain?1223===f&&(f=204):f=j.text?200:404}j&&e(f,i,j,g.getAllResponseHeaders())},b.async?4===g.readyState?a.setTimeout(c):g.onreadystatechange=fc[h]=c:c()},abort:function(){c&&c(void 0,!0)}}}});function hc(){try{return new a.XMLHttpRequest}catch(b){}}function ic(){try{return new a.ActiveXObject("Microsoft.XMLHTTP")}catch(b){}}n.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(a){return n.globalEval(a),a}}}),n.ajaxPrefilter("script",function(a){void 0===a.cache&&(a.cache=!1),a.crossDomain&&(a.type="GET",a.global=!1)}),n.ajaxTransport("script",function(a){if(a.crossDomain){var b,c=d.head||n("head")[0]||d.documentElement;return{send:function(e,f){b=d.createElement("script"),b.async=!0,a.scriptCharset&&(b.charset=a.scriptCharset),b.src=a.url,b.onload=b.onreadystatechange=function(a,c){(c||!b.readyState||/loaded|complete/.test(b.readyState))&&(b.onload=b.onreadystatechange=null,b.parentNode&&b.parentNode.removeChild(b),b=null,c||f(200,"success"))},c.insertBefore(b,c.firstChild)},abort:function(){b&&b.onload(void 0,!0)}}}});var jc=[],kc=/(=)\?(?=&|$)|\?\?/;n.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var a=jc.pop()||n.expando+"_"+Eb++;return this[a]=!0,a}}),n.ajaxPrefilter("json jsonp",function(b,c,d){var e,f,g,h=b.jsonp!==!1&&(kc.test(b.url)?"url":"string"==typeof b.data&&0===(b.contentType||"").indexOf("application/x-www-form-urlencoded")&&kc.test(b.data)&&"data");return h||"jsonp"===b.dataTypes[0]?(e=b.jsonpCallback=n.isFunction(b.jsonpCallback)?b.jsonpCallback():b.jsonpCallback,h?b[h]=b[h].replace(kc,"$1"+e):b.jsonp!==!1&&(b.url+=(Fb.test(b.url)?"&":"?")+b.jsonp+"="+e),b.converters["script json"]=function(){return g||n.error(e+" was not called"),g[0]},b.dataTypes[0]="json",f=a[e],a[e]=function(){g=arguments},d.always(function(){void 0===f?n(a).removeProp(e):a[e]=f,b[e]&&(b.jsonpCallback=c.jsonpCallback,jc.push(e)),g&&n.isFunction(f)&&f(g[0]),g=f=void 0}),"script"):void 0}),n.parseHTML=function(a,b,c){if(!a||"string"!=typeof a)return null;"boolean"==typeof b&&(c=b,b=!1),b=b||d;var e=x.exec(a),f=!c&&[];return e?[b.createElement(e[1])]:(e=ja([a],b,f),f&&f.length&&n(f).remove(),n.merge([],e.childNodes))};var lc=n.fn.load;n.fn.load=function(a,b,c){if("string"!=typeof a&&lc)return lc.apply(this,arguments);var d,e,f,g=this,h=a.indexOf(" ");return h>-1&&(d=n.trim(a.slice(h,a.length)),a=a.slice(0,h)),n.isFunction(b)?(c=b,b=void 0):b&&"object"==typeof b&&(e="POST"),g.length>0&&n.ajax({url:a,type:e||"GET",dataType:"html",data:b}).done(function(a){f=arguments,g.html(d?n("<div>").append(n.parseHTML(a)).find(d):a)}).always(c&&function(a,b){g.each(function(){c.apply(this,f||[a.responseText,b,a])})}),this},n.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(a,b){n.fn[b]=function(a){return this.on(b,a)}}),n.expr.filters.animated=function(a){return n.grep(n.timers,function(b){return a===b.elem}).length};function mc(a){return n.isWindow(a)?a:9===a.nodeType?a.defaultView||a.parentWindow:!1}n.offset={setOffset:function(a,b,c){var d,e,f,g,h,i,j,k=n.css(a,"position"),l=n(a),m={};"static"===k&&(a.style.position="relative"),h=l.offset(),f=n.css(a,"top"),i=n.css(a,"left"),j=("absolute"===k||"fixed"===k)&&n.inArray("auto",[f,i])>-1,j?(d=l.position(),g=d.top,e=d.left):(g=parseFloat(f)||0,e=parseFloat(i)||0),n.isFunction(b)&&(b=b.call(a,c,n.extend({},h))),null!=b.top&&(m.top=b.top-h.top+g),null!=b.left&&(m.left=b.left-h.left+e),"using"in b?b.using.call(a,m):l.css(m)}},n.fn.extend({offset:function(a){if(arguments.length)return void 0===a?this:this.each(function(b){n.offset.setOffset(this,a,b)});var b,c,d={top:0,left:0},e=this[0],f=e&&e.ownerDocument;if(f)return b=f.documentElement,n.contains(b,e)?("undefined"!=typeof e.getBoundingClientRect&&(d=e.getBoundingClientRect()),c=mc(f),{top:d.top+(c.pageYOffset||b.scrollTop)-(b.clientTop||0),left:d.left+(c.pageXOffset||b.scrollLeft)-(b.clientLeft||0)}):d},position:function(){if(this[0]){var a,b,c={top:0,left:0},d=this[0];return"fixed"===n.css(d,"position")?b=d.getBoundingClientRect():(a=this.offsetParent(),b=this.offset(),n.nodeName(a[0],"html")||(c=a.offset()),c.top+=n.css(a[0],"borderTopWidth",!0),c.left+=n.css(a[0],"borderLeftWidth",!0)),{top:b.top-c.top-n.css(d,"marginTop",!0),left:b.left-c.left-n.css(d,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var a=this.offsetParent;while(a&&!n.nodeName(a,"html")&&"static"===n.css(a,"position"))a=a.offsetParent;return a||Qa})}}),n.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(a,b){var c=/Y/.test(b);n.fn[a]=function(d){return Y(this,function(a,d,e){var f=mc(a);return void 0===e?f?b in f?f[b]:f.document.documentElement[d]:a[d]:void(f?f.scrollTo(c?n(f).scrollLeft():e,c?e:n(f).scrollTop()):a[d]=e)},a,d,arguments.length,null)}}),n.each(["top","left"],function(a,b){n.cssHooks[b]=Ua(l.pixelPosition,function(a,c){return c?(c=Sa(a,b),Oa.test(c)?n(a).position()[b]+"px":c):void 0})}),n.each({Height:"height",Width:"width"},function(a,b){n.each({
padding:"inner"+a,content:b,"":"outer"+a},function(c,d){n.fn[d]=function(d,e){var f=arguments.length&&(c||"boolean"!=typeof d),g=c||(d===!0||e===!0?"margin":"border");return Y(this,function(b,c,d){var e;return n.isWindow(b)?b.document.documentElement["client"+a]:9===b.nodeType?(e=b.documentElement,Math.max(b.body["scroll"+a],e["scroll"+a],b.body["offset"+a],e["offset"+a],e["client"+a])):void 0===d?n.css(b,c,g):n.style(b,c,d,g)},b,f?d:void 0,f,null)}})}),n.fn.extend({bind:function(a,b,c){return this.on(a,null,b,c)},unbind:function(a,b){return this.off(a,null,b)},delegate:function(a,b,c,d){return this.on(b,a,c,d)},undelegate:function(a,b,c){return 1===arguments.length?this.off(a,"**"):this.off(b,a||"**",c)}}),n.fn.size=function(){return this.length},n.fn.andSelf=n.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return n});var nc=a.jQuery,oc=a.$;return n.noConflict=function(b){return a.$===n&&(a.$=oc),b&&a.jQuery===n&&(a.jQuery=nc),n},b||(a.jQuery=a.$=n),n});

document.createElement("canvas").getContext || function () {
    function q() {
    }

    function n(D) {
        this.type_ = D, this.r1_ = this.y1_ = this.x1_ = this.r0_ = this.y0_ = this.x0_ = 0, this.colors_ = []
    }

    function l(E, F, D) {
        !A(F) || (E.m_ = F, D && (E.lineScale_ = ah(ag(F[0][0] * F[1][1] - F[0][1] * F[1][0]))))
    }

    function A(E) {
        var F = 0;
        for (; F < 3; F++) {
            var D = 0;
            for (; D < 2; D++) {
                if (!isFinite(E[F][D]) || isNaN(E[F][D])) {
                    return !1
                }
            }
        }
        return !0
    }

    function y(F, G, D, E) {
        F.currentPath_.push({
            type: "bezierCurveTo",
            cp1x: G.x,
            cp1y: G.y,
            cp2x: D.x,
            cp2y: D.y,
            x: E.x,
            y: E.y
        }), F.currentX_ = E.x, F.currentY_ = E.y
    }

    function w(D) {
        this.m_ = p(), this.mStack_ = [], this.aStack_ = [], this.currentPath_ = [], this.fillStyle = this.strokeStyle = "#000", this.lineWidth = 1, this.lineJoin = "miter", this.lineCap = "butt", this.miterLimit = a * 1, this.globalAlpha = 1, this.canvas = D;
        var E = D.ownerDocument.createElement("div");
        E.style.width = D.clientWidth + "px", E.style.height = D.clientHeight + "px", E.style.overflow = "hidden", E.style.position = "absolute", D.appendChild(E), this.element_ = E, this.lineScale_ = this.arcScaleY_ = this.arcScaleX_ = 1
    }

    function v(D) {
        switch (D) {
            case"butt":
                return "flat";
            case"round":
                return "round";
            case"square":
            default:
                return "square"
        }
    }

    function u(F) {
        var G, H = 1;
        F = String(F);
        if (F.substring(0, 3) == "rgb") {
            var I = F.indexOf("(", 3), J = F.indexOf(")", I + 1), D = F.substring(I + 1, J).split(",");
            G = "#";
            var E = 0;
            for (; E < 3; E++) {
                G += k[Number(D[E])]
            }
            D.length == 4 && F.substr(3, 1) == "a" && (H = D[3])
        } else {
            G = F
        }
        return {color: G, alpha: H}
    }

    function s(D, E) {
        E.fillStyle = D.fillStyle, E.lineCap = D.lineCap, E.lineJoin = D.lineJoin, E.lineWidth = D.lineWidth, E.miterLimit = D.miterLimit, E.shadowBlur = D.shadowBlur, E.shadowColor = D.shadowColor, E.shadowOffsetX = D.shadowOffsetX, E.shadowOffsetY = D.shadowOffsetY, E.strokeStyle = D.strokeStyle, E.globalAlpha = D.globalAlpha, E.arcScaleX_ = D.arcScaleX_, E.arcScaleY_ = D.arcScaleY_, E.lineScale_ = D.lineScale_
    }

    function r(F, G) {
        var H = p(), I = 0;
        for (; I < 3; I++) {
            var J = 0;
            for (; J < 3; J++) {
                var D = 0, E = 0;
                for (; E < 3; E++) {
                    D += F[I][E] * G[E][J]
                }
                H[I][J] = D
            }
        }
        return H
    }

    function p() {
        return [[1, 0, 0], [0, 1, 0], [0, 0, 1]]
    }

    function h(D) {
        var E = D.srcElement;
        E.firstChild && (E.firstChild.style.width = E.clientWidth + "px", E.firstChild.style.height = E.clientHeight + "px")
    }

    function g(D) {
        var E = D.srcElement;
        switch (D.propertyName) {
            case"width":
                E.style.width = E.attributes.width.nodeValue + "px", E.getContext().clearRect();
                break;
            case"height":
                E.style.height = E.attributes.height.nodeValue + "px", E.getContext().clearRect()
        }
    }

    function e(E, F) {
        var D = d.call(arguments, 2);
        return function () {
            return E.apply(F, D.concat(d.call(arguments)))
        }
    }

    function c() {
        return this.context_ || (this.context_ = new w(this))
    }

    var B = Math, C = B.round, ae = B.sin, af = B.cos, ag = B.abs, ah = B.sqrt, a = 10, b = a / 2, d = Array.prototype.slice, f = {
        init: function (D) {
            if (/MSIE/.test(navigator.userAgent) && !window.opera) {
                var E = D || document;
                E.createElement("canvas"), E.attachEvent("onreadystatechange", e(this.init_, this, E))
            }
        }, init_: function (F) {
            F.namespaces.g_vml_ || F.namespaces.add("g_vml_", "urn:schemas-microsoft-com:vml", "#default#VML"), F.namespaces.g_o_ || F.namespaces.add("g_o_", "urn:schemas-microsoft-com:office:office", "#default#VML");
            if (!F.styleSheets.ex_canvas_) {
                var G = F.createStyleSheet();
                G.owningElement.id = "ex_canvas_", G.cssText = "canvas{display:inline-block;overflow:hidden;text-align:left;width:300px;height:150px}g_vml_\\:*{behavior:url(#default#VML)}g_o_\\:*{behavior:url(#default#VML)}"
            }
            var D = F.getElementsByTagName("canvas"), E = 0;
            for (; E < D.length; E++) {
                this.initElement(D[E])
            }
        }, initElement: function (D) {
            if (!D.getContext) {
                D.getContext = c, D.innerHTML = "", D.attachEvent("onpropertychange", g), D.attachEvent("onresize", h);
                var E = D.attributes;
                E.width && E.width.specified ? D.style.width = E.width.nodeValue + "px" : D.width = D.clientWidth, E.height && E.height.specified ? D.style.height = E.height.nodeValue + "px" : D.height = D.clientHeight
            }
            return D
        }
    };
    f.init();
    var k = [], m = 0;
    for (; m < 16; m++) {
        var o = 0;
        for (; o < 16; o++) {
            k[m * 16 + o] = m.toString(16) + o.toString(16)
        }
    }
    var x = w.prototype;
    x.clearRect = function () {
        this.element_.innerHTML = ""
    }, x.beginPath = function () {
        this.currentPath_ = []
    }, x.moveTo = function (E, F) {
        var D = this.getCoords_(E, F);
        this.currentPath_.push({
            type: "moveTo",
            x: D.x,
            y: D.y
        }), this.currentX_ = D.x, this.currentY_ = D.y
    }, x.lineTo = function (E, F) {
        var D = this.getCoords_(E, F);
        this.currentPath_.push({
            type: "lineTo",
            x: D.x,
            y: D.y
        }), this.currentX_ = D.x, this.currentY_ = D.y
    }, x.bezierCurveTo = function (L, D, E, F, G, H) {
        var I = this.getCoords_(G, H), J = this.getCoords_(L, D), K = this.getCoords_(E, F);
        y(this, J, K, I)
    }, x.quadraticCurveTo = function (F, G, H, I) {
        var J = this.getCoords_(F, G), D = this.getCoords_(H, I), E = {
            x: this.currentX_ + 0.6666666666666666 * (J.x - this.currentX_),
            y: this.currentY_ + 0.6666666666666666 * (J.y - this.currentY_)
        };
        y(this, E, {
            x: E.x + (D.x - this.currentX_) / 3,
            y: E.y + (D.y - this.currentY_) / 3
        }, D)
    }, x.arc = function (L, D, E, F, K, M) {
        E *= a;
        var N = M ? "at" : "wa", O = L + af(F) * E - b, P = D + ae(F) * E - b, Q = L + af(K) * E - b, G = D + ae(K) * E - b;
        O == Q && !M && (O += 0.125);
        var H = this.getCoords_(L, D), I = this.getCoords_(O, P), J = this.getCoords_(Q, G);
        this.currentPath_.push({
            type: N,
            x: H.x,
            y: H.y,
            radius: E,
            xStart: I.x,
            yStart: I.y,
            xEnd: J.x,
            yEnd: J.y
        })
    }, x.rect = function (F, G, D, E) {
        this.moveTo(F, G), this.lineTo(F + D, G), this.lineTo(F + D, G + E), this.lineTo(F, G + E), this.closePath()
    }, x.strokeRect = function (G, H, D, E) {
        var F = this.currentPath_;
        this.beginPath(), this.moveTo(G, H), this.lineTo(G + D, H), this.lineTo(G + D, H + E), this.lineTo(G, H + E), this.closePath(), this.stroke(), this.currentPath_ = F
    }, x.fillRect = function (G, H, D, E) {
        var F = this.currentPath_;
        this.beginPath(), this.moveTo(G, H), this.lineTo(G + D, H), this.lineTo(G + D, H + E), this.lineTo(G, H + E), this.closePath(), this.fill(), this.currentPath_ = F
    }, x.createLinearGradient = function (G, H, D, E) {
        var F = new n("gradient");
        F.x0_ = G, F.y0_ = H, F.x1_ = D, F.y1_ = E;
        return F
    }, x.createRadialGradient = function (F, G, H, I, J, D) {
        var E = new n("gradientradial");
        E.x0_ = F, E.y0_ = G, E.r0_ = H, E.x1_ = I, E.y1_ = J, E.r1_ = D;
        return E
    }, x.drawImage = function (G) {
        var I, K, L, M, N, O, P, Q, R = G.runtimeStyle.width, T = G.runtimeStyle.height;
        G.runtimeStyle.width = "auto", G.runtimeStyle.height = "auto";
        var U = G.width, F = G.height;
        G.runtimeStyle.width = R, G.runtimeStyle.height = T;
        if (arguments.length == 3) {
            I = arguments[1], K = arguments[2], N = O = 0, P = L = U, Q = M = F
        } else {
            if (arguments.length == 5) {
                I = arguments[1], K = arguments[2], L = arguments[3], M = arguments[4], N = O = 0, P = U, Q = F
            } else {
                if (arguments.length == 9) {
                    N = arguments[1], O = arguments[2], P = arguments[3], Q = arguments[4], I = arguments[5], K = arguments[6], L = arguments[7], M = arguments[8]
                } else {
                    throw Error("Invalid number of arguments")
                }
            }
        }
        var H = this.getCoords_(I, K), J = [];
        J.push(" <g_vml_:group", ' coordsize="', a * 10, ",", a * 10, '"', ' coordorigin="0,0"', ' style="width:', 10, "px;height:", 10, "px;position:absolute;");
        if (this.m_[0][0] != 1 || this.m_[0][1]) {
            var D = [];
            D.push("M11=", this.m_[0][0], ",", "M12=", this.m_[1][0], ",", "M21=", this.m_[0][1], ",", "M22=", this.m_[1][1], ",", "Dx=", C(H.x / a), ",", "Dy=", C(H.y / a), "");
            var E = H, S = this.getCoords_(I + L, K), V = this.getCoords_(I, K + M), W = this.getCoords_(I + L, K + M);
            E.x = B.max(E.x, S.x, V.x, W.x), E.y = B.max(E.y, S.y, V.y, W.y), J.push("padding:0 ", C(E.x / a), "px ", C(E.y / a), "px 0;filter:progid:DXImageTransform.Microsoft.Matrix(", D.join(""), ", sizingmethod='clip');")
        } else {
            J.push("top:", C(H.y / a), "px;left:", C(H.x / a), "px;")
        }
        J.push(' ">', '<g_vml_:image src="', G.src, '"', ' style="width:', a * L, "px;", " height:", a * M, 'px;"', ' cropleft="', N / U, '"', ' croptop="', O / F, '"', ' cropright="', (U - N - P) / U, '"', ' cropbottom="', (F - O - Q) / F, '"', " />", "</g_vml_:group>"), this.element_.insertAdjacentHTML("BeforeEnd", J.join(""))
    }, x.stroke = function (K) {
        var M = [], O = u(K ? this.fillStyle : this.strokeStyle), Q = O.color, R = O.alpha * this.globalAlpha;
        M.push("<g_vml_:shape", ' filled="', !!K, '"', ' style="position:absolute;width:', 10, "px;height:", 10, 'px;"', ' coordorigin="0 0" coordsize="', a * 10, " ", a * 10, '"', ' stroked="', !K, '"', ' path="');
        var U = {x: null, y: null}, D = {x: null, y: null}, E = 0;
        for (; E < this.currentPath_.length; E++) {
            var F = this.currentPath_[E];
            switch (F.type) {
                case"moveTo":
                    M.push(" m ", C(F.x), ",", C(F.y));
                    break;
                case"lineTo":
                    M.push(" l ", C(F.x), ",", C(F.y));
                    break;
                case"close":
                    M.push(" x "), F = null;
                    break;
                case"bezierCurveTo":
                    M.push(" c ", C(F.cp1x), ",", C(F.cp1y), ",", C(F.cp2x), ",", C(F.cp2y), ",", C(F.x), ",", C(F.y));
                    break;
                case"at":
                case"wa":
                    M.push(" ", F.type, " ", C(F.x - this.arcScaleX_ * F.radius), ",", C(F.y - this.arcScaleY_ * F.radius), " ", C(F.x + this.arcScaleX_ * F.radius), ",", C(F.y + this.arcScaleY_ * F.radius), " ", C(F.xStart), ",", C(F.yStart), " ", C(F.xEnd), ",", C(F.yEnd))
            }
            if (F) {
                if (U.x == null || F.x < U.x) {
                    U.x = F.x
                }
                if (D.x == null || F.x > D.x) {
                    D.x = F.x
                }
                if (U.y == null || F.y < U.y) {
                    U.y = F.y
                }
                if (D.y == null || F.y > D.y) {
                    D.y = F.y
                }
            }
        }
        M.push(' ">');
        if (K) {
            if (typeof this.fillStyle == "object") {
                var H = this.fillStyle, J = 0, L = {x: 0, y: 0}, N = 0, S = 1;
                if (H.type_ == "gradient") {
                    var V = H.x1_ / this.arcScaleX_, X = H.y1_ / this.arcScaleY_, Z = this.getCoords_(H.x0_ / this.arcScaleX_, H.y0_ / this.arcScaleY_), ak = this.getCoords_(V, X);
                    J = Math.atan2(ak.x - Z.x, ak.y - Z.y) * 180 / Math.PI, J < 0 && (J += 360), J < 0.000001 && (J = 0)
                } else {
                    var Z = this.getCoords_(H.x0_, H.y0_), I = D.x - U.x, al = D.y - U.y;
                    L = {
                        x: (Z.x - U.x) / I,
                        y: (Z.y - U.y) / al
                    }, I /= this.arcScaleX_ * a, al /= this.arcScaleY_ * a;
                    var am = B.max(I, al);
                    N = 2 * H.r0_ / am, S = 2 * H.r1_ / am - N
                }
                var P = H.colors_;
                P.sort(function (ai, aj) {
                    return ai.offset - aj.offset
                });
                var T = P.length, W = P[0].color, Y = P[T - 1].color, aa = P[0].alpha * this.globalAlpha, ab = P[T - 1].alpha * this.globalAlpha, ad = [], E = 0;
                for (; E < T; E++) {
                    var G = P[E];
                    ad.push(G.offset * S + N + " " + G.color)
                }
                M.push('<g_vml_:fill type="', H.type_, '"', ' method="none" focus="100%"', ' color="', W, '"', ' color2="', Y, '"', ' colors="', ad.join(","), '"', ' opacity="', ab, '"', ' g_o_:opacity2="', aa, '"', ' angle="', J, '"', ' focusposition="', L.x, ",", L.y, '" />')
            } else {
                M.push('<g_vml_:fill color="', Q, '" opacity="', R, '" />')
            }
        } else {
            var ac = this.lineScale_ * this.lineWidth;
            ac < 1 && (R *= ac), M.push("<g_vml_:stroke", ' opacity="', R, '"', ' joinstyle="', this.lineJoin, '"', ' miterlimit="', this.miterLimit, '"', ' endcap="', v(this.lineCap), '"', ' weight="', ac, 'px"', ' color="', Q, '" />')
        }
        M.push("</g_vml_:shape>"), this.element_.insertAdjacentHTML("beforeEnd", M.join(""))
    }, x.fill = function () {
        this.stroke(!0)
    }, x.closePath = function () {
        this.currentPath_.push({type: "close"})
    }, x.getCoords_ = function (E, F) {
        var D = this.m_;
        return {
            x: a * (E * D[0][0] + F * D[1][0] + D[2][0]) - b,
            y: a * (E * D[0][1] + F * D[1][1] + D[2][1]) - b
        }
    }, x.save = function () {
        var D = {};
        s(this, D), this.aStack_.push(D), this.mStack_.push(this.m_), this.m_ = r(p(), this.m_)
    }, x.restore = function () {
        s(this.aStack_.pop(), this), this.m_ = this.mStack_.pop()
    }, x.translate = function (D, E) {
        l(this, r([[1, 0, 0], [0, 1, 0], [D, E, 1]], this.m_), !1)
    }, x.rotate = function (E) {
        var F = af(E), D = ae(E);
        l(this, r([[F, D, 0], [-D, F, 0], [0, 0, 1]], this.m_), !1)
    }, x.scale = function (D, E) {
        this.arcScaleX_ *= D, this.arcScaleY_ *= E, l(this, r([[D, 0, 0], [0, E, 0], [0, 0, 1]], this.m_), !0)
    }, x.transform = function (G, H, I, D, E, F) {
        l(this, r([[G, H, 0], [I, D, 0], [E, F, 1]], this.m_), !0)
    }, x.setTransform = function (G, H, I, D, E, F) {
        l(this, [[G, H, 0], [I, D, 0], [E, F, 1]], !0)
    }, x.clip = function () {
    }, x.arcTo = function () {
    }, x.createPattern = function () {
        return new q
    }, n.prototype.addColorStop = function (D, E) {
        E = u(E), this.colors_.push({offset: D, color: E.color, alpha: E.alpha})
    }, G_vmlCanvasManager = f, CanvasRenderingContext2D = w, CanvasGradient = n, CanvasPattern = q
}();
/* jQuery UI - v1.11.4 - 2015-03-11
 * http://jqueryui.com
 * Includes: core.js, widget.js, mouse.js, position.js, accordion.js, autocomplete.js, button.js, datepicker.js, dialog.js, draggable.js, droppable.js, effect.js, effect-blind.js, effect-bounce.js, effect-clip.js, effect-drop.js, effect-explode.js, effect-fade.js, effect-fold.js, effect-highlight.js, effect-puff.js, effect-pulsate.js, effect-scale.js, effect-shake.js, effect-size.js, effect-slide.js, effect-transfer.js, menu.js, progressbar.js, resizable.js, selectable.js, selectmenu.js, slider.js, sortable.js, spinner.js, tabs.js, tooltip.js
 * Copyright 2015 jQuery Foundation and other contributors; Licensed MIT */
(function (b) {
    "function" == typeof define && define.amd ? define(["./jquery"], b) : b(jQuery)
})(function (e) {
    function l(B, A) {
        var q, k, w, x = B.nodeName.toLowerCase();
        return "area" === x ? (q = B.parentNode, k = q.name, B.href && k && "map" === q.nodeName.toLowerCase() ? (w = e("img[usemap='#" + k + "']")[0], !!w && m(w)) : !1) : (/^(input|select|textarea|button|object)$/.test(x) ? !B.disabled : "a" === x ? B.href || A : A) && m(B)
    }

    function m(k) {
        return e.expr.filters.visible(k) && !e(k).parents().addBack().filter(function () {
            return "hidden" === e.css(this, "visibility")
        }).length
    }

    function Q(w) {
        for (var k, q; w.length && w[0] !== document;) {
            if (k = w.css("position"), ("absolute" === k || "relative" === k || "fixed" === k) && (q = parseInt(w.css("zIndex"), 10), !isNaN(q) && 0 !== q)) {
                return q
            }
            w = w.parent()
        }
        return 0
    }

    function r() {
        this._curInst = null, this._keyEvent = !1, this._disabledInputs = [], this._datepickerShowing = !1, this._inDialog = !1, this._mainDivId = "ui-datepicker-div", this._inlineClass = "ui-datepicker-inline", this._appendClass = "ui-datepicker-append", this._triggerClass = "ui-datepicker-trigger", this._dialogClass = "ui-datepicker-dialog", this._disableClass = "ui-datepicker-disabled", this._unselectableClass = "ui-datepicker-unselectable", this._currentClass = "ui-datepicker-current-day", this._dayOverClass = "ui-datepicker-days-cell-over", this.regional = [], this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            weekHeader: "Wk",
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: !1,
            showMonthAfterYear: !1,
            yearSuffix: ""
        }, this._defaults = {
            showOn: "focus",
            showAnim: "fadeIn",
            showOptions: {},
            defaultDate: null,
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: !1,
            hideIfNoPrevNext: !1,
            navigationAsDateFormat: !1,
            gotoCurrent: !1,
            changeMonth: !1,
            changeYear: !1,
            yearRange: "c-10:c+10",
            showOtherMonths: !1,
            selectOtherMonths: !1,
            showWeek: !1,
            calculateWeek: this.iso8601Week,
            shortYearCutoff: "+10",
            minDate: null,
            maxDate: null,
            duration: "fast",
            beforeShowDay: null,
            beforeShow: null,
            onSelect: null,
            onChangeMonthYear: null,
            onClose: null,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: !0,
            showButtonPanel: !1,
            autoSize: !1,
            disabled: !1
        }, e.extend(this._defaults, this.regional[""]), this.regional.en = e.extend(!0, {}, this.regional[""]), this.regional["en-US"] = e.extend(!0, {}, this.regional.en), this.dpDiv = a(e("<div id='" + this._mainDivId + "' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>"))
    }

    function a(k) {
        var q = "button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a";
        return k.delegate(q, "mouseout", function () {
            e(this).removeClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && e(this).removeClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && e(this).removeClass("ui-datepicker-next-hover")
        }).delegate(q, "mouseover", s)
    }

    function s() {
        e.datepicker._isDisabledDatepicker(v.inline ? v.dpDiv.parent()[0] : v.input[0]) || (e(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover"), e(this).addClass("ui-state-hover"), -1 !== this.className.indexOf("ui-datepicker-prev") && e(this).addClass("ui-datepicker-prev-hover"), -1 !== this.className.indexOf("ui-datepicker-next") && e(this).addClass("ui-datepicker-next-hover"))
    }

    function y(k, q) {
        e.extend(k, q);
        for (var w in q) {
            null == q[w] && (k[w] = q[w])
        }
        return k
    }

    function h(k) {
        return function () {
            var q = this.element.val();
            k.apply(this, arguments), this._refresh(), q !== this.element.val() && this._trigger("change")
        }
    }

    e.ui = e.ui || {}, e.extend(e.ui, {
        version: "1.11.4",
        keyCode: {
            BACKSPACE: 8,
            COMMA: 188,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            LEFT: 37,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    }), e.fn.extend({
        scrollParent: function (x) {
            var A = this.css("position"), w = "absolute" === A, q = x ? /(auto|scroll|hidden)/ : /(auto|scroll)/, k = this.parents().filter(function () {
                var B = e(this);
                return w && "static" === B.css("position") ? !1 : q.test(B.css("overflow") + B.css("overflow-y") + B.css("overflow-x"))
            }).eq(0);
            return "fixed" !== A && k.length ? k : e(this[0].ownerDocument || document)
        }, uniqueId: function () {
            var k = 0;
            return function () {
                return this.each(function () {
                    this.id || (this.id = "ui-id-" + ++k)
                })
            }
        }(), removeUniqueId: function () {
            return this.each(function () {
                /^ui-id-\d+$/.test(this.id) && e(this).removeAttr("id")
            })
        }
    }), e.extend(e.expr[":"], {
        data: e.expr.createPseudo ? e.expr.createPseudo(function (k) {
            return function (q) {
                return !!e.data(q, k)
            }
        }) : function (k, q, w) {
            return !!e.data(k, w[3])
        }, focusable: function (k) {
            return l(k, !isNaN(e.attr(k, "tabindex")))
        }, tabbable: function (q) {
            var k = e.attr(q, "tabindex"), w = isNaN(k);
            return (w || k >= 0) && l(q, !w)
        }
    }), e("<a>").outerWidth(1).jquery || e.each(["Width", "Height"], function (A, B) {
        function x(C, D, F, E) {
            return e.each(q, function () {
                D -= parseFloat(e.css(C, "padding" + this)) || 0, F && (D -= parseFloat(e.css(C, "border" + this + "Width")) || 0), E && (D -= parseFloat(e.css(C, "margin" + this)) || 0)
            }), D
        }

        var q = "Width" === B ? ["Left", "Right"] : ["Top", "Bottom"], k = B.toLowerCase(), w = {
            innerWidth: e.fn.innerWidth,
            innerHeight: e.fn.innerHeight,
            outerWidth: e.fn.outerWidth,
            outerHeight: e.fn.outerHeight
        };
        e.fn["inner" + B] = function (C) {
            return void 0 === C ? w["inner" + B].call(this) : this.each(function () {
                e(this).css(k, x(this, C) + "px")
            })
        }, e.fn["outer" + B] = function (C, D) {
            return "number" != typeof C ? w["outer" + B].call(this, C) : this.each(function () {
                e(this).css(k, x(this, C, !0, D) + "px")
            })
        }
    }), e.fn.addBack || (e.fn.addBack = function (k) {
        return this.add(null == k ? this.prevObject : this.prevObject.filter(k))
    }), e("<a>").data("a-b", "a").removeData("a-b").data("a-b") && (e.fn.removeData = function (k) {
        return function (q) {
            return arguments.length ? k.call(this, e.camelCase(q)) : k.call(this)
        }
    }(e.fn.removeData)), e.ui.ie = !!/msie [\w.]+/.exec(navigator.userAgent.toLowerCase()), e.fn.extend({
        focus: function (k) {
            return function (q, w) {
                return "number" == typeof q ? this.each(function () {
                    var x = this;
                    setTimeout(function () {
                        e(x).focus(), w && w.call(x)
                    }, q)
                }) : k.apply(this, arguments)
            }
        }(e.fn.focus), disableSelection: function () {
            var k = "onselectstart" in document.createElement("div") ? "selectstart" : "mousedown";
            return function () {
                return this.bind(k + ".ui-disableSelection", function (q) {
                    q.preventDefault()
                })
            }
        }(), enableSelection: function () {
            return this.unbind(".ui-disableSelection")
        }, zIndex: function (k) {
            if (void 0 !== k) {
                return this.css("zIndex", k)
            }
            if (this.length) {
                for (var q, x, w = e(this[0]); w.length && w[0] !== document;) {
                    if (q = w.css("position"), ("absolute" === q || "relative" === q || "fixed" === q) && (x = parseInt(w.css("zIndex"), 10), !isNaN(x) && 0 !== x)) {
                        return x
                    }
                    w = w.parent()
                }
            }
            return 0
        }
    }), e.ui.plugin = {
        add: function (x, A, w) {
            var q, k = e.ui[x].prototype;
            for (q in w) {
                k.plugins[q] = k.plugins[q] || [], k.plugins[q].push([A, w[q]])
            }
        }, call: function (w, A, B, x) {
            var q, k = w.plugins[A];
            if (k && (x || w.element[0].parentNode && 11 !== w.element[0].parentNode.nodeType)) {
                for (q = 0; k.length > q; q++) {
                    w.options[k[q][0]] && k[q][1].apply(w.element, B)
                }
            }
        }
    };
    var o = 0, n = Array.prototype.slice;
    e.cleanData = function (k) {
        return function (B) {
            var A, w, q;
            for (q = 0; null != (w = B[q]); q++) {
                try {
                    A = e._data(w, "events"), A && A.remove && e(w).triggerHandler("remove")
                } catch (x) {
                }
            }
            k(B)
        }
    }(e.cleanData), e.widget = function (k, x, E) {
        var B, q, C, D, w = {}, A = k.split(".")[0];
        return k = k.split(".")[1], B = A + "-" + k, E || (E = x, x = e.Widget), e.expr[":"][B.toLowerCase()] = function (F) {
            return !!e.data(F, B)
        }, e[A] = e[A] || {}, q = e[A][k], C = e[A][k] = function (G, F) {
            return this._createWidget ? (arguments.length && this._createWidget(G, F), void 0) : new C(G, F)
        }, e.extend(C, q, {
            version: E.version,
            _proto: e.extend({}, E),
            _childConstructors: []
        }), D = new x, D.options = e.widget.extend({}, D.options), e.each(E, function (F, G) {
            return e.isFunction(G) ? (w[F] = function () {
                var H = function () {
                    return x.prototype[F].apply(this, arguments)
                }, I = function (J) {
                    return x.prototype[F].apply(this, J)
                };
                return function () {
                    var J, K = this._super, L = this._superApply;
                    return this._super = H, this._superApply = I, J = G.apply(this, arguments), this._super = K, this._superApply = L, J
                }
            }(), void 0) : (w[F] = G, void 0)
        }), C.prototype = e.widget.extend(D, {widgetEventPrefix: q ? D.widgetEventPrefix || k : k}, w, {
            constructor: C,
            namespace: A,
            widgetName: k,
            widgetFullName: B
        }), q ? (e.each(q._childConstructors, function (H, G) {
            var F = G.prototype;
            e.widget(F.namespace + "." + F.widgetName, C, G._proto)
        }), delete q._childConstructors) : x._childConstructors.push(C), e.widget.bridge(k, C), C
    }, e.widget.extend = function (A) {
        for (var B, x, q = n.call(arguments, 1), k = 0, w = q.length; w > k; k++) {
            for (B in q[k]) {
                x = q[k][B], q[k].hasOwnProperty(B) && void 0 !== x && (A[B] = e.isPlainObject(x) ? e.isPlainObject(A[B]) ? e.widget.extend({}, A[B], x) : e.widget.extend({}, x) : x)
            }
        }
        return A
    }, e.widget.bridge = function (k, q) {
        var w = q.prototype.widgetFullName || k;
        e.fn[k] = function (x) {
            var C = "string" == typeof x, A = n.call(arguments, 1), B = this;
            return C ? this.each(function () {
                var D, E = e.data(this, w);
                return "instance" === x ? (B = E, !1) : E ? e.isFunction(E[x]) && "_" !== x.charAt(0) ? (D = E[x].apply(E, A), D !== E && void 0 !== D ? (B = D && D.jquery ? B.pushStack(D.get()) : D, !1) : void 0) : e.error("no such method '" + x + "' for " + k + " widget instance") : e.error("cannot call methods on " + k + " prior to initialization; attempted to call method '" + x + "'")
            }) : (A.length && (x = e.widget.extend.apply(null, [x].concat(A))), this.each(function () {
                var D = e.data(this, w);
                D ? (D.option(x || {}), D._init && D._init()) : e.data(this, w, new q(x, this))
            })), B
        }
    }, e.Widget = function () {
    }, e.Widget._childConstructors = [], e.Widget.prototype = {
        widgetName: "widget",
        widgetEventPrefix: "",
        defaultElement: "<div>",
        options: {disabled: !1, create: null},
        _createWidget: function (k, q) {
            q = e(q || this.defaultElement || this)[0], this.element = e(q), this.uuid = o++, this.eventNamespace = "." + this.widgetName + this.uuid, this.bindings = e(), this.hoverable = e(), this.focusable = e(), q !== this && (e.data(q, this.widgetFullName, this), this._on(!0, this.element, {
                remove: function (w) {
                    w.target === q && this.destroy()
                }
            }), this.document = e(q.style ? q.ownerDocument : q.document || q), this.window = e(this.document[0].defaultView || this.document[0].parentWindow)), this.options = e.widget.extend({}, this.options, this._getCreateOptions(), k), this._create(), this._trigger("create", null, this._getCreateEventData()), this._init()
        },
        _getCreateOptions: e.noop,
        _getCreateEventData: e.noop,
        _create: e.noop,
        _init: e.noop,
        destroy: function () {
            this._destroy(), this.element.unbind(this.eventNamespace).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)), this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName + "-disabled ui-state-disabled"), this.bindings.unbind(this.eventNamespace), this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus")
        },
        _destroy: e.noop,
        widget: function () {
            return this.element
        },
        option: function (A, B) {
            var x, q, k, w = A;
            if (0 === arguments.length) {
                return e.widget.extend({}, this.options)
            }
            if ("string" == typeof A) {
                if (w = {}, x = A.split("."), A = x.shift(), x.length) {
                    for (q = w[A] = e.widget.extend({}, this.options[A]), k = 0; x.length - 1 > k; k++) {
                        q[x[k]] = q[x[k]] || {}, q = q[x[k]]
                    }
                    if (A = x.pop(), 1 === arguments.length) {
                        return void 0 === q[A] ? null : q[A]
                    }
                    q[A] = B
                } else {
                    if (1 === arguments.length) {
                        return void 0 === this.options[A] ? null : this.options[A]
                    }
                    w[A] = B
                }
            }
            return this._setOptions(w), this
        },
        _setOptions: function (k) {
            var q;
            for (q in k) {
                this._setOption(q, k[q])
            }
            return this
        },
        _setOption: function (k, q) {
            return this.options[k] = q, "disabled" === k && (this.widget().toggleClass(this.widgetFullName + "-disabled", !!q), q && (this.hoverable.removeClass("ui-state-hover"), this.focusable.removeClass("ui-state-focus"))), this
        },
        enable: function () {
            return this._setOptions({disabled: !1})
        },
        disable: function () {
            return this._setOptions({disabled: !0})
        },
        _on: function (x, A, w) {
            var q, k = this;
            "boolean" != typeof x && (w = A, A = x, x = !1), w ? (A = q = e(A), this.bindings = this.bindings.add(A)) : (w = A, A = this.element, q = this.widget()), e.each(w, function (G, D) {
                function F() {
                    return x || k.options.disabled !== !0 && !e(this).hasClass("ui-state-disabled") ? ("string" == typeof D ? k[D] : D).apply(k, arguments) : void 0
                }

                "string" != typeof D && (F.guid = D.guid = D.guid || F.guid || e.guid++);
                var B = G.match(/^([\w:-]*)\s*(.*)$/), C = B[1] + k.eventNamespace, E = B[2];
                E ? q.delegate(E, C, F) : A.bind(C, F)
            })
        },
        _off: function (k, q) {
            q = (q || "").split(" ").join(this.eventNamespace + " ") + this.eventNamespace, k.unbind(q).undelegate(q), this.bindings = e(this.bindings.not(k).get()), this.focusable = e(this.focusable.not(k).get()), this.hoverable = e(this.hoverable.not(k).get())
        },
        _delay: function (w, k) {
            function q() {
                return ("string" == typeof w ? x[w] : w).apply(x, arguments)
            }

            var x = this;
            return setTimeout(q, k || 0)
        },
        _hoverable: function (k) {
            this.hoverable = this.hoverable.add(k), this._on(k, {
                mouseenter: function (q) {
                    e(q.currentTarget).addClass("ui-state-hover")
                }, mouseleave: function (q) {
                    e(q.currentTarget).removeClass("ui-state-hover")
                }
            })
        },
        _focusable: function (k) {
            this.focusable = this.focusable.add(k), this._on(k, {
                focusin: function (q) {
                    e(q.currentTarget).addClass("ui-state-focus")
                }, focusout: function (q) {
                    e(q.currentTarget).removeClass("ui-state-focus")
                }
            })
        },
        _trigger: function (A, B, x) {
            var q, k, w = this.options[A];
            if (x = x || {}, B = e.Event(B), B.type = (A === this.widgetEventPrefix ? A : this.widgetEventPrefix + A).toLowerCase(), B.target = this.element[0], k = B.originalEvent) {
                for (q in k) {
                    q in B || (B[q] = k[q])
                }
            }
            return this.element.trigger(B, x), !(e.isFunction(w) && w.apply(this.element[0], [B].concat(x)) === !1 || B.isDefaultPrevented())
        }
    }, e.each({show: "fadeIn", hide: "fadeOut"}, function (k, q) {
        e.Widget.prototype["_" + k] = function (B, w, C) {
            "string" == typeof w && (w = {effect: w});
            var x, A = w ? w === !0 || "number" == typeof w ? q : w.effect || q : k;
            w = w || {}, "number" == typeof w && (w = {duration: w}), x = !e.isEmptyObject(w), w.complete = C, w.delay && B.delay(w.delay), x && e.effects && e.effects.effect[A] ? B[k](w) : A !== k && B[A] ? B[A](w.duration, w.easing, C) : B.queue(function (D) {
                e(this)[k](), C && C.call(B[0]), D()
            })
        }
    }), e.widget;
    var d = !1;
    e(document).mouseup(function () {
        d = !1
    }), e.widget("ui.mouse", {
        version: "1.11.4",
        options: {
            cancel: "input,textarea,button,select,option",
            distance: 1,
            delay: 0
        },
        _mouseInit: function () {
            var k = this;
            this.element.bind("mousedown." + this.widgetName, function (q) {
                return k._mouseDown(q)
            }).bind("click." + this.widgetName, function (q) {
                return !0 === e.data(q.target, k.widgetName + ".preventClickEvent") ? (e.removeData(q.target, k.widgetName + ".preventClickEvent"), q.stopImmediatePropagation(), !1) : void 0
            }), this.started = !1
        },
        _mouseDestroy: function () {
            this.element.unbind("." + this.widgetName), this._mouseMoveDelegate && this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate)
        },
        _mouseDown: function (k) {
            if (!d) {
                this._mouseMoved = !1, this._mouseStarted && this._mouseUp(k), this._mouseDownEvent = k;
                var q = this, x = 1 === k.which, w = "string" == typeof this.options.cancel && k.target.nodeName ? e(k.target).closest(this.options.cancel).length : !1;
                return x && !w && this._mouseCapture(k) ? (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function () {
                    q.mouseDelayMet = !0
                }, this.options.delay)), this._mouseDistanceMet(k) && this._mouseDelayMet(k) && (this._mouseStarted = this._mouseStart(k) !== !1, !this._mouseStarted) ? (k.preventDefault(), !0) : (!0 === e.data(k.target, this.widgetName + ".preventClickEvent") && e.removeData(k.target, this.widgetName + ".preventClickEvent"), this._mouseMoveDelegate = function (A) {
                    return q._mouseMove(A)
                }, this._mouseUpDelegate = function (A) {
                    return q._mouseUp(A)
                }, this.document.bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate), k.preventDefault(), d = !0, !0)) : !0
            }
        },
        _mouseMove: function (k) {
            if (this._mouseMoved) {
                if (e.ui.ie && (!document.documentMode || 9 > document.documentMode) && !k.button) {
                    return this._mouseUp(k)
                }
                if (!k.which) {
                    return this._mouseUp(k)
                }
            }
            return (k.which || k.button) && (this._mouseMoved = !0), this._mouseStarted ? (this._mouseDrag(k), k.preventDefault()) : (this._mouseDistanceMet(k) && this._mouseDelayMet(k) && (this._mouseStarted = this._mouseStart(this._mouseDownEvent, k) !== !1, this._mouseStarted ? this._mouseDrag(k) : this._mouseUp(k)), !this._mouseStarted)
        },
        _mouseUp: function (k) {
            return this.document.unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, k.target === this._mouseDownEvent.target && e.data(k.target, this.widgetName + ".preventClickEvent", !0), this._mouseStop(k)), d = !1, !1
        },
        _mouseDistanceMet: function (k) {
            return Math.max(Math.abs(this._mouseDownEvent.pageX - k.pageX), Math.abs(this._mouseDownEvent.pageY - k.pageY)) >= this.options.distance
        },
        _mouseDelayMet: function () {
            return this.mouseDelayMet
        },
        _mouseStart: function () {
        },
        _mouseDrag: function () {
        },
        _mouseStop: function () {
        },
        _mouseCapture: function () {
            return !0
        }
    }), function () {
        function q(L, M, K) {
            return [parseFloat(L[0]) * (G.test(L[0]) ? M / 100 : 1), parseFloat(L[1]) * (G.test(L[1]) ? K / 100 : 1)]
        }

        function H(L, K) {
            return parseInt(e.css(L, K), 10) || 0
        }

        function k(L) {
            var K = L[0];
            return 9 === K.nodeType ? {
                width: L.width(),
                height: L.height(),
                offset: {top: 0, left: 0}
            } : e.isWindow(K) ? {
                width: L.width(),
                height: L.height(),
                offset: {top: L.scrollTop(), left: L.scrollLeft()}
            } : K.preventDefault ? {
                width: 0,
                height: 0,
                offset: {top: K.pageY, left: K.pageX}
            } : {
                width: L.outerWidth(),
                height: L.outerHeight(),
                offset: L.offset()
            }
        }

        e.ui = e.ui || {};
        var x, A, F = Math.max, I = Math.abs, E = Math.round, J = /left|center|right/, w = /top|center|bottom/, C = /[\+\-]\d+(\.[\d]+)?%?/, B = /^\w+/, G = /%$/, D = e.fn.position;
        e.position = {
            scrollbarWidth: function () {
                if (void 0 !== x) {
                    return x
                }
                var L, M, K = e("<div style='display:block;position:absolute;width:50px;height:50px;overflow:hidden;'><div style='height:100px;width:auto;'></div></div>"), N = K.children()[0];
                return e("body").append(K), L = N.offsetWidth, K.css("overflow", "scroll"), M = N.offsetWidth, L === M && (M = K[0].clientWidth), K.remove(), x = L - M
            }, getScrollInfo: function (M) {
                var N = M.isWindow || M.isDocument ? "" : M.element.css("overflow-x"), L = M.isWindow || M.isDocument ? "" : M.element.css("overflow-y"), K = "scroll" === N || "auto" === N && M.width < M.element[0].scrollWidth, O = "scroll" === L || "auto" === L && M.height < M.element[0].scrollHeight;
                return {
                    width: O ? e.position.scrollbarWidth() : 0,
                    height: K ? e.position.scrollbarWidth() : 0
                }
            }, getWithinInfo: function (N) {
                var K = e(N || window), M = e.isWindow(K[0]), L = !!K[0] && 9 === K[0].nodeType;
                return {
                    element: K,
                    isWindow: M,
                    isDocument: L,
                    offset: K.offset() || {left: 0, top: 0},
                    scrollLeft: K.scrollLeft(),
                    scrollTop: K.scrollTop(),
                    width: M || L ? K.width() : K.outerWidth(),
                    height: M || L ? K.height() : K.outerHeight()
                }
            }
        }, e.fn.position = function (U) {
            if (!U || !U.of) {
                return D.apply(this, arguments)
            }
            U = e.extend({}, U);
            var V, T, O, L, N, K, M = e(U.of), X = e.position.getWithinInfo(U.within), W = e.position.getScrollInfo(X), P = (U.collision || "flip").split(" "), S = {};
            return K = k(M), M[0].preventDefault && (U.at = "left top"), T = K.width, O = K.height, L = K.offset, N = e.extend({}, L), e.each(["my", "at"], function () {
                var Z, Y, aa = (U[this] || "").split(" ");
                1 === aa.length && (aa = J.test(aa[0]) ? aa.concat(["center"]) : w.test(aa[0]) ? ["center"].concat(aa) : ["center", "center"]), aa[0] = J.test(aa[0]) ? aa[0] : "center", aa[1] = w.test(aa[1]) ? aa[1] : "center", Z = C.exec(aa[0]), Y = C.exec(aa[1]), S[this] = [Z ? Z[0] : 0, Y ? Y[0] : 0], U[this] = [B.exec(aa[0])[0], B.exec(aa[1])[0]]
            }), 1 === P.length && (P[1] = P[0]), "right" === U.at[0] ? N.left += T : "center" === U.at[0] && (N.left += T / 2), "bottom" === U.at[1] ? N.top += O : "center" === U.at[1] && (N.top += O / 2), V = q(S.at, T, O), N.left += V[0], N.top += V[1], this.each(function () {
                var aj, Y, ak = e(this), an = ak.outerWidth(), am = ak.outerHeight(), ap = H(this, "marginLeft"), al = H(this, "marginTop"), aa = an + ap + H(this, "marginRight") + W.width, aq = am + al + H(this, "marginBottom") + W.height, ao = e.extend({}, N), Z = q(S.my, ak.outerWidth(), ak.outerHeight());
                "right" === U.my[0] ? ao.left -= an : "center" === U.my[0] && (ao.left -= an / 2), "bottom" === U.my[1] ? ao.top -= am : "center" === U.my[1] && (ao.top -= am / 2), ao.left += Z[0], ao.top += Z[1], A || (ao.left = E(ao.left), ao.top = E(ao.top)), aj = {
                    marginLeft: ap,
                    marginTop: al
                }, e.each(["left", "top"], function (ab, ac) {
                    e.ui.position[P[ab]] && e.ui.position[P[ab]][ac](ao, {
                        targetWidth: T,
                        targetHeight: O,
                        elemWidth: an,
                        elemHeight: am,
                        collisionPosition: aj,
                        collisionWidth: aa,
                        collisionHeight: aq,
                        offset: [V[0] + Z[0], V[1] + Z[1]],
                        my: U.my,
                        at: U.at,
                        within: X,
                        elem: ak
                    })
                }), U.using && (Y = function (ab) {
                    var ae = L.left - ao.left, af = ae + T - an, ac = L.top - ao.top, ag = ac + O - am, ad = {
                        target: {
                            element: M,
                            left: L.left,
                            top: L.top,
                            width: T,
                            height: O
                        },
                        element: {
                            element: ak,
                            left: ao.left,
                            top: ao.top,
                            width: an,
                            height: am
                        },
                        horizontal: 0 > af ? "left" : ae > 0 ? "right" : "center",
                        vertical: 0 > ag ? "top" : ac > 0 ? "bottom" : "middle"
                    };
                    an > T && T > I(ae + af) && (ad.horizontal = "center"), am > O && O > I(ac + ag) && (ad.vertical = "middle"), ad.important = F(I(ae), I(af)) > F(I(ac), I(ag)) ? "horizontal" : "vertical", U.using.call(this, ab, ad)
                }), ak.offset(e.extend(ao, {using: Y}))
            })
        }, e.ui.position = {
            fit: {
                left: function (U, L) {
                    var O, K = L.within, S = K.isWindow ? K.scrollLeft : K.offset.left, M = K.width, T = U.left - L.collisionPosition.marginLeft, N = S - T, P = T + L.collisionWidth - M - S;
                    L.collisionWidth > M ? N > 0 && 0 >= P ? (O = U.left + N + L.collisionWidth - M - S, U.left += N - O) : U.left = P > 0 && 0 >= N ? S : N > P ? S + M - L.collisionWidth : S : N > 0 ? U.left += N : P > 0 ? U.left -= P : U.left = F(U.left - T, U.left)
                }, top: function (U, L) {
                    var O, K = L.within, S = K.isWindow ? K.scrollTop : K.offset.top, M = L.within.height, T = U.top - L.collisionPosition.marginTop, N = S - T, P = T + L.collisionHeight - M - S;
                    L.collisionHeight > M ? N > 0 && 0 >= P ? (O = U.top + N + L.collisionHeight - M - S, U.top += N - O) : U.top = P > 0 && 0 >= N ? S : N > P ? S + M - L.collisionHeight : S : N > 0 ? U.top += N : P > 0 ? U.top -= P : U.top = F(U.top - T, U.top)
                }
            }, flip: {
                left: function (W, P) {
                    var ad, O, M = P.within, T = M.offset.left + M.scrollLeft, N = M.width, aa = M.isWindow ? M.scrollLeft : M.offset.left, L = W.left - P.collisionPosition.marginLeft, S = L - aa, V = L + P.collisionWidth - N - aa, U = "left" === P.my[0] ? -P.elemWidth : "right" === P.my[0] ? P.elemWidth : 0, K = "left" === P.at[0] ? P.targetWidth : "right" === P.at[0] ? -P.targetWidth : 0, X = -2 * P.offset[0];
                    0 > S ? (ad = W.left + U + K + X + P.collisionWidth - N - T, (0 > ad || I(S) > ad) && (W.left += U + K + X)) : V > 0 && (O = W.left - P.collisionPosition.marginLeft + U + K + X - aa, (O > 0 || V > I(O)) && (W.left += U + K + X))
                }, top: function (W, P) {
                    var ae, O, M = P.within, T = M.offset.top + M.scrollTop, N = M.height, aa = M.isWindow ? M.scrollTop : M.offset.top, af = W.top - P.collisionPosition.marginTop, S = af - aa, V = af + P.collisionHeight - N - aa, U = "top" === P.my[1], L = U ? -P.elemHeight : "bottom" === P.my[1] ? P.elemHeight : 0, X = "top" === P.at[1] ? P.targetHeight : "bottom" === P.at[1] ? -P.targetHeight : 0, K = -2 * P.offset[1];
                    0 > S ? (O = W.top + L + X + K + P.collisionHeight - N - T, (0 > O || I(S) > O) && (W.top += L + X + K)) : V > 0 && (ae = W.top - P.collisionPosition.marginTop + L + X + K - aa, (ae > 0 || V > I(ae)) && (W.top += L + X + K))
                }
            }, flipfit: {
                left: function () {
                    e.ui.position.flip.left.apply(this, arguments), e.ui.position.fit.left.apply(this, arguments)
                }, top: function () {
                    e.ui.position.flip.top.apply(this, arguments), e.ui.position.fit.top.apply(this, arguments)
                }
            }
        }, function () {
            var S, L, N, M, O, K = document.getElementsByTagName("body")[0], P = document.createElement("div");
            S = document.createElement(K ? "div" : "body"), N = {
                visibility: "hidden",
                width: 0,
                height: 0,
                border: 0,
                margin: 0,
                background: "none"
            }, K && e.extend(N, {
                position: "absolute",
                left: "-1000px",
                top: "-1000px"
            });
            for (O in N) {
                S.style[O] = N[O]
            }
            S.appendChild(P), L = K || document.documentElement, L.insertBefore(S, L.firstChild), P.style.cssText = "position: absolute; left: 10.7432222px;", M = e(P).offset().left, A = M > 10 && 11 > M, S.innerHTML = "", L.removeChild(S)
        }()
    }(), e.ui.position, e.widget("ui.accordion", {
        version: "1.11.4",
        options: {
            active: 0,
            animate: {},
            collapsible: !1,
            event: "click",
            header: "> li > :first-child,> :not(li):even",
            heightStyle: "auto",
            icons: {
                activeHeader: "ui-icon-triangle-1-s",
                header: "ui-icon-triangle-1-e"
            },
            activate: null,
            beforeActivate: null
        },
        hideProps: {
            borderTopWidth: "hide",
            borderBottomWidth: "hide",
            paddingTop: "hide",
            paddingBottom: "hide",
            height: "hide"
        },
        showProps: {
            borderTopWidth: "show",
            borderBottomWidth: "show",
            paddingTop: "show",
            paddingBottom: "show",
            height: "show"
        },
        _create: function () {
            var k = this.options;
            this.prevShow = this.prevHide = e(), this.element.addClass("ui-accordion ui-widget ui-helper-reset").attr("role", "tablist"), k.collapsible || k.active !== !1 && null != k.active || (k.active = 0), this._processPanels(), 0 > k.active && (k.active += this.headers.length), this._refresh()
        },
        _getCreateEventData: function () {
            return {
                header: this.active,
                panel: this.active.length ? this.active.next() : e()
            }
        },
        _createIcons: function () {
            var k = this.options.icons;
            k && (e("<span>").addClass("ui-accordion-header-icon ui-icon " + k.header).prependTo(this.headers), this.active.children(".ui-accordion-header-icon").removeClass(k.header).addClass(k.activeHeader), this.headers.addClass("ui-accordion-icons"))
        },
        _destroyIcons: function () {
            this.headers.removeClass("ui-accordion-icons").children(".ui-accordion-header-icon").remove()
        },
        _destroy: function () {
            var k;
            this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"), this.headers.removeClass("ui-accordion-header ui-accordion-header-active ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("aria-controls").removeAttr("tabIndex").removeUniqueId(), this._destroyIcons(), k = this.headers.next().removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-state-disabled").css("display", "").removeAttr("role").removeAttr("aria-hidden").removeAttr("aria-labelledby").removeUniqueId(), "content" !== this.options.heightStyle && k.css("height", "")
        },
        _setOption: function (k, q) {
            return "active" === k ? (this._activate(q), void 0) : ("event" === k && (this.options.event && this._off(this.headers, this.options.event), this._setupEvents(q)), this._super(k, q), "collapsible" !== k || q || this.options.active !== !1 || this._activate(0), "icons" === k && (this._destroyIcons(), q && this._createIcons()), "disabled" === k && (this.element.toggleClass("ui-state-disabled", !!q).attr("aria-disabled", q), this.headers.add(this.headers.next()).toggleClass("ui-state-disabled", !!q)), void 0)
        },
        _keydown: function (x) {
            if (!x.altKey && !x.ctrlKey) {
                var A = e.ui.keyCode, w = this.headers.length, q = this.headers.index(x.target), k = !1;
                switch (x.keyCode) {
                    case A.RIGHT:
                    case A.DOWN:
                        k = this.headers[(q + 1) % w];
                        break;
                    case A.LEFT:
                    case A.UP:
                        k = this.headers[(q - 1 + w) % w];
                        break;
                    case A.SPACE:
                    case A.ENTER:
                        this._eventHandler(x);
                        break;
                    case A.HOME:
                        k = this.headers[0];
                        break;
                    case A.END:
                        k = this.headers[w - 1]
                }
                k && (e(x.target).attr("tabIndex", -1), e(k).attr("tabIndex", 0), k.focus(), x.preventDefault())
            }
        },
        _panelKeyDown: function (k) {
            k.keyCode === e.ui.keyCode.UP && k.ctrlKey && e(k.currentTarget).prev().focus()
        },
        refresh: function () {
            var k = this.options;
            this._processPanels(), k.active === !1 && k.collapsible === !0 || !this.headers.length ? (k.active = !1, this.active = e()) : k.active === !1 ? this._activate(0) : this.active.length && !e.contains(this.element[0], this.active[0]) ? this.headers.length === this.headers.find(".ui-state-disabled").length ? (k.active = !1, this.active = e()) : this._activate(Math.max(0, k.active - 1)) : k.active = this.headers.index(this.active), this._destroyIcons(), this._refresh()
        },
        _processPanels: function () {
            var k = this.headers, q = this.panels;
            this.headers = this.element.find(this.options.header).addClass("ui-accordion-header ui-state-default ui-corner-all"), this.panels = this.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom").filter(":not(.ui-accordion-content-active)").hide(), q && (this._off(k.not(this.headers)), this._off(q.not(this.panels)))
        },
        _refresh: function () {
            var k, q = this.options, x = q.heightStyle, w = this.element.parent();
            this.active = this._findActive(q.active).addClass("ui-accordion-header-active ui-state-active ui-corner-top").removeClass("ui-corner-all"), this.active.next().addClass("ui-accordion-content-active").show(), this.headers.attr("role", "tab").each(function () {
                var C = e(this), D = C.uniqueId().attr("id"), B = C.next(), A = B.uniqueId().attr("id");
                C.attr("aria-controls", A), B.attr("aria-labelledby", D)
            }).next().attr("role", "tabpanel"), this.headers.not(this.active).attr({
                "aria-selected": "false",
                "aria-expanded": "false",
                tabIndex: -1
            }).next().attr({"aria-hidden": "true"}).hide(), this.active.length ? this.active.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            }).next().attr({"aria-hidden": "false"}) : this.headers.eq(0).attr("tabIndex", 0), this._createIcons(), this._setupEvents(q.event), "fill" === x ? (k = w.height(), this.element.siblings(":visible").each(function () {
                var B = e(this), A = B.css("position");
                "absolute" !== A && "fixed" !== A && (k -= B.outerHeight(!0))
            }), this.headers.each(function () {
                k -= e(this).outerHeight(!0)
            }), this.headers.next().each(function () {
                e(this).height(Math.max(0, k - e(this).innerHeight() + e(this).height()))
            }).css("overflow", "auto")) : "auto" === x && (k = 0, this.headers.next().each(function () {
                k = Math.max(k, e(this).css("height", "").height())
            }).height(k))
        },
        _activate: function (k) {
            var q = this._findActive(k)[0];
            q !== this.active[0] && (q = q || this.active[0], this._eventHandler({
                target: q,
                currentTarget: q,
                preventDefault: e.noop
            }))
        },
        _findActive: function (k) {
            return "number" == typeof k ? this.headers.eq(k) : e()
        },
        _setupEvents: function (k) {
            var q = {keydown: "_keydown"};
            k && e.each(k.split(" "), function (w, x) {
                q[x] = "_eventHandler"
            }), this._off(this.headers.add(this.headers.next())), this._on(this.headers, q), this._on(this.headers.next(), {keydown: "_panelKeyDown"}), this._hoverable(this.headers), this._focusable(this.headers)
        },
        _eventHandler: function (k) {
            var x = this.options, E = this.active, B = e(k.currentTarget), q = B[0] === E[0], C = q && x.collapsible, D = C ? e() : B.next(), w = E.next(), A = {
                oldHeader: E,
                oldPanel: w,
                newHeader: C ? e() : B,
                newPanel: D
            };
            k.preventDefault(), q && !x.collapsible || this._trigger("beforeActivate", k, A) === !1 || (x.active = C ? !1 : this.headers.index(B), this.active = q ? e() : B, this._toggle(A), E.removeClass("ui-accordion-header-active ui-state-active"), x.icons && E.children(".ui-accordion-header-icon").removeClass(x.icons.activeHeader).addClass(x.icons.header), q || (B.removeClass("ui-corner-all").addClass("ui-accordion-header-active ui-state-active ui-corner-top"), x.icons && B.children(".ui-accordion-header-icon").removeClass(x.icons.header).addClass(x.icons.activeHeader), B.next().addClass("ui-accordion-content-active")))
        },
        _toggle: function (k) {
            var q = k.newPanel, w = this.prevShow.length ? this.prevShow : k.oldPanel;
            this.prevShow.add(this.prevHide).stop(!0, !0), this.prevShow = q, this.prevHide = w, this.options.animate ? this._animate(q, w, k) : (w.hide(), q.show(), this._toggleComplete(k)), w.attr({"aria-hidden": "true"}), w.prev().attr({
                "aria-selected": "false",
                "aria-expanded": "false"
            }), q.length && w.length ? w.prev().attr({
                tabIndex: -1,
                "aria-expanded": "false"
            }) : q.length && this.headers.filter(function () {
                return 0 === parseInt(e(this).attr("tabIndex"), 10)
            }).attr("tabIndex", -1), q.attr("aria-hidden", "false").prev().attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            })
        },
        _animate: function (G, x, k) {
            var w, E, B, F = this, H = 0, I = G.css("box-sizing"), q = G.length && (!x.length || G.index() < x.index()), A = this.options.animate || {}, D = q && A.down || A, C = function () {
                F._toggleComplete(k)
            };
            return "number" == typeof D && (B = D), "string" == typeof D && (E = D), E = E || D.easing || A.easing, B = B || D.duration || A.duration, x.length ? G.length ? (w = G.show().outerHeight(), x.animate(this.hideProps, {
                duration: B,
                easing: E,
                step: function (K, J) {
                    J.now = Math.round(K)
                }
            }), G.hide().animate(this.showProps, {
                duration: B,
                easing: E,
                complete: C,
                step: function (K, J) {
                    J.now = Math.round(K), "height" !== J.prop ? "content-box" === I && (H += J.now) : "content" !== F.options.heightStyle && (J.now = Math.round(w - x.outerHeight() - H), H = 0)
                }
            }), void 0) : x.animate(this.hideProps, B, E, C) : G.animate(this.showProps, B, E, C)
        },
        _toggleComplete: function (k) {
            var q = k.oldPanel;
            q.removeClass("ui-accordion-content-active").prev().removeClass("ui-corner-top").addClass("ui-corner-all"), q.length && (q.parent()[0].className = q.parent()[0].className), this._trigger("activate", null, k)
        }
    }), e.widget("ui.menu", {
        version: "1.11.4",
        defaultElement: "<ul>",
        delay: 300,
        options: {
            icons: {submenu: "ui-icon-carat-1-e"},
            items: "> *",
            menus: "ul",
            position: {my: "left-1 top", at: "right top"},
            role: "menu",
            blur: null,
            focus: null,
            select: null
        },
        _create: function () {
            this.activeMenu = this.element, this.mouseHandled = !1, this.element.uniqueId().addClass("ui-menu ui-widget ui-widget-content").toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length).attr({
                role: this.options.role,
                tabIndex: 0
            }), this.options.disabled && this.element.addClass("ui-state-disabled").attr("aria-disabled", "true"), this._on({
                "mousedown .ui-menu-item": function (k) {
                    k.preventDefault()
                },
                "click .ui-menu-item": function (k) {
                    var q = e(k.target);
                    !this.mouseHandled && q.not(".ui-state-disabled").length && (this.select(k), k.isPropagationStopped() || (this.mouseHandled = !0), q.has(".ui-menu").length ? this.expand(k) : !this.element.is(":focus") && e(this.document[0].activeElement).closest(".ui-menu").length && (this.element.trigger("focus", [!0]), this.active && 1 === this.active.parents(".ui-menu").length && clearTimeout(this.timer)))
                },
                "mouseenter .ui-menu-item": function (k) {
                    if (!this.previousFilter) {
                        var q = e(k.currentTarget);
                        q.siblings(".ui-state-active").removeClass("ui-state-active"), this.focus(k, q)
                    }
                },
                mouseleave: "collapseAll",
                "mouseleave .ui-menu": "collapseAll",
                focus: function (w, k) {
                    var q = this.active || this.element.find(this.options.items).eq(0);
                    k || this.focus(w, q)
                },
                blur: function (k) {
                    this._delay(function () {
                        e.contains(this.element[0], this.document[0].activeElement) || this.collapseAll(k)
                    })
                },
                keydown: "_keydown"
            }), this.refresh(), this._on(this.document, {
                click: function (k) {
                    this._closeOnDocumentClick(k) && this.collapseAll(k), this.mouseHandled = !1
                }
            })
        },
        _destroy: function () {
            this.element.removeAttr("aria-activedescendant").find(".ui-menu").addBack().removeClass("ui-menu ui-widget ui-widget-content ui-menu-icons ui-front").removeAttr("role").removeAttr("tabIndex").removeAttr("aria-labelledby").removeAttr("aria-expanded").removeAttr("aria-hidden").removeAttr("aria-disabled").removeUniqueId().show(), this.element.find(".ui-menu-item").removeClass("ui-menu-item").removeAttr("role").removeAttr("aria-disabled").removeUniqueId().removeClass("ui-state-hover").removeAttr("tabIndex").removeAttr("role").removeAttr("aria-haspopup").children().each(function () {
                var k = e(this);
                k.data("ui-menu-submenu-carat") && k.remove()
            }), this.element.find(".ui-menu-divider").removeClass("ui-menu-divider ui-widget-content")
        },
        _keydown: function (A) {
            var B, x, q, k, w = !0;
            switch (A.keyCode) {
                case e.ui.keyCode.PAGE_UP:
                    this.previousPage(A);
                    break;
                case e.ui.keyCode.PAGE_DOWN:
                    this.nextPage(A);
                    break;
                case e.ui.keyCode.HOME:
                    this._move("first", "first", A);
                    break;
                case e.ui.keyCode.END:
                    this._move("last", "last", A);
                    break;
                case e.ui.keyCode.UP:
                    this.previous(A);
                    break;
                case e.ui.keyCode.DOWN:
                    this.next(A);
                    break;
                case e.ui.keyCode.LEFT:
                    this.collapse(A);
                    break;
                case e.ui.keyCode.RIGHT:
                    this.active && !this.active.is(".ui-state-disabled") && this.expand(A);
                    break;
                case e.ui.keyCode.ENTER:
                case e.ui.keyCode.SPACE:
                    this._activate(A);
                    break;
                case e.ui.keyCode.ESCAPE:
                    this.collapse(A);
                    break;
                default:
                    w = !1, x = this.previousFilter || "", q = String.fromCharCode(A.keyCode), k = !1, clearTimeout(this.filterTimer), q === x ? k = !0 : q = x + q, B = this._filterMenuItems(q), B = k && -1 !== B.index(this.active.next()) ? this.active.nextAll(".ui-menu-item") : B, B.length || (q = String.fromCharCode(A.keyCode), B = this._filterMenuItems(q)), B.length ? (this.focus(A, B), this.previousFilter = q, this.filterTimer = this._delay(function () {
                        delete this.previousFilter
                    }, 1000)) : delete this.previousFilter
            }
            w && A.preventDefault()
        },
        _activate: function (k) {
            this.active.is(".ui-state-disabled") || (this.active.is("[aria-haspopup='true']") ? this.expand(k) : this.select(k))
        },
        refresh: function () {
            var x, A, w = this, q = this.options.icons.submenu, k = this.element.find(this.options.menus);
            this.element.toggleClass("ui-menu-icons", !!this.element.find(".ui-icon").length), k.filter(":not(.ui-menu)").addClass("ui-menu ui-widget ui-widget-content ui-front").hide().attr({
                role: this.options.role,
                "aria-hidden": "true",
                "aria-expanded": "false"
            }).each(function () {
                var D = e(this), B = D.parent(), C = e("<span>").addClass("ui-menu-icon ui-icon " + q).data("ui-menu-submenu-carat", !0);
                B.attr("aria-haspopup", "true").prepend(C), D.attr("aria-labelledby", B.attr("id"))
            }), x = k.add(this.element), A = x.find(this.options.items), A.not(".ui-menu-item").each(function () {
                var B = e(this);
                w._isDivider(B) && B.addClass("ui-widget-content ui-menu-divider")
            }), A.not(".ui-menu-item, .ui-menu-divider").addClass("ui-menu-item").uniqueId().attr({
                tabIndex: -1,
                role: this._itemRole()
            }), A.filter(".ui-state-disabled").attr("aria-disabled", "true"), this.active && !e.contains(this.element[0], this.active[0]) && this.blur()
        },
        _itemRole: function () {
            return {menu: "menuitem", listbox: "option"}[this.options.role]
        },
        _setOption: function (k, q) {
            "icons" === k && this.element.find(".ui-menu-icon").removeClass(this.options.icons.submenu).addClass(q.submenu), "disabled" === k && this.element.toggleClass("ui-state-disabled", !!q).attr("aria-disabled", q), this._super(k, q)
        },
        focus: function (w, k) {
            var q, x;
            this.blur(w, w && "focus" === w.type), this._scrollIntoView(k), this.active = k.first(), x = this.active.addClass("ui-state-focus").removeClass("ui-state-active"), this.options.role && this.element.attr("aria-activedescendant", x.attr("id")), this.active.parent().closest(".ui-menu-item").addClass("ui-state-active"), w && "keydown" === w.type ? this._close() : this.timer = this._delay(function () {
                this._close()
            }, this.delay), q = k.children(".ui-menu"), q.length && w && /^mouse/.test(w.type) && this._startOpening(q), this.activeMenu = k.parent(), this._trigger("focus", w, {item: k})
        },
        _scrollIntoView: function (B) {
            var C, A, q, k, w, x;
            this._hasScroll() && (C = parseFloat(e.css(this.activeMenu[0], "borderTopWidth")) || 0, A = parseFloat(e.css(this.activeMenu[0], "paddingTop")) || 0, q = B.offset().top - this.activeMenu.offset().top - C - A, k = this.activeMenu.scrollTop(), w = this.activeMenu.height(), x = B.outerHeight(), 0 > q ? this.activeMenu.scrollTop(k + q) : q + x > w && this.activeMenu.scrollTop(k + q - w + x))
        },
        blur: function (k, q) {
            q || clearTimeout(this.timer), this.active && (this.active.removeClass("ui-state-focus"), this.active = null, this._trigger("blur", k, {item: this.active}))
        },
        _startOpening: function (k) {
            clearTimeout(this.timer), "true" === k.attr("aria-hidden") && (this.timer = this._delay(function () {
                this._close(), this._open(k)
            }, this.delay))
        },
        _open: function (k) {
            var q = e.extend({of: this.active}, this.options.position);
            clearTimeout(this.timer), this.element.find(".ui-menu").not(k.parents(".ui-menu")).hide().attr("aria-hidden", "true"), k.show().removeAttr("aria-hidden").attr("aria-expanded", "true").position(q)
        },
        collapseAll: function (k, q) {
            clearTimeout(this.timer), this.timer = this._delay(function () {
                var w = q ? this.element : e(k && k.target).closest(this.element.find(".ui-menu"));
                w.length || (w = this.element), this._close(w), this.blur(k), this.activeMenu = w
            }, this.delay)
        },
        _close: function (k) {
            k || (k = this.active ? this.active.parent() : this.element), k.find(".ui-menu").hide().attr("aria-hidden", "true").attr("aria-expanded", "false").end().find(".ui-state-active").not(".ui-state-focus").removeClass("ui-state-active")
        },
        _closeOnDocumentClick: function (k) {
            return !e(k.target).closest(".ui-menu").length
        },
        _isDivider: function (k) {
            return !/[^\-\u2014\u2013\s]/.test(k.text())
        },
        collapse: function (k) {
            var q = this.active && this.active.parent().closest(".ui-menu-item", this.element);
            q && q.length && (this._close(), this.focus(k, q))
        },
        expand: function (k) {
            var q = this.active && this.active.children(".ui-menu ").find(this.options.items).first();
            q && q.length && (this._open(q.parent()), this._delay(function () {
                this.focus(k, q)
            }))
        },
        next: function (k) {
            this._move("next", "first", k)
        },
        previous: function (k) {
            this._move("prev", "last", k)
        },
        isFirstItem: function () {
            return this.active && !this.active.prevAll(".ui-menu-item").length
        },
        isLastItem: function () {
            return this.active && !this.active.nextAll(".ui-menu-item").length
        },
        _move: function (w, k, q) {
            var x;
            this.active && (x = "first" === w || "last" === w ? this.active["first" === w ? "prevAll" : "nextAll"](".ui-menu-item").eq(-1) : this.active[w + "All"](".ui-menu-item").eq(0)), x && x.length && this.active || (x = this.activeMenu.find(this.options.items)[k]()), this.focus(q, x)
        },
        nextPage: function (k) {
            var q, x, w;
            return this.active ? (this.isLastItem() || (this._hasScroll() ? (x = this.active.offset().top, w = this.element.height(), this.active.nextAll(".ui-menu-item").each(function () {
                return q = e(this), 0 > q.offset().top - x - w
            }), this.focus(k, q)) : this.focus(k, this.activeMenu.find(this.options.items)[this.active ? "last" : "first"]())), void 0) : (this.next(k), void 0)
        },
        previousPage: function (k) {
            var q, x, w;
            return this.active ? (this.isFirstItem() || (this._hasScroll() ? (x = this.active.offset().top, w = this.element.height(), this.active.prevAll(".ui-menu-item").each(function () {
                return q = e(this), q.offset().top - x + w > 0
            }), this.focus(k, q)) : this.focus(k, this.activeMenu.find(this.options.items).first())), void 0) : (this.next(k), void 0)
        },
        _hasScroll: function () {
            return this.element.outerHeight() < this.element.prop("scrollHeight")
        },
        select: function (k) {
            this.active = this.active || e(k.target).closest(".ui-menu-item");
            var q = {item: this.active};
            this.active.has(".ui-menu").length || this.collapseAll(k, !0), this._trigger("select", k, q)
        },
        _filterMenuItems: function (k) {
            var q = k.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&"), w = RegExp("^" + q, "i");
            return this.activeMenu.find(this.options.items).filter(".ui-menu-item").filter(function () {
                return w.test(e.trim(e(this).text()))
            })
        }
    }), e.widget("ui.autocomplete", {
        version: "1.11.4",
        defaultElement: "<input>",
        options: {
            appendTo: null,
            autoFocus: !1,
            delay: 300,
            minLength: 1,
            position: {my: "left top", at: "left bottom", collision: "none"},
            source: null,
            change: null,
            close: null,
            focus: null,
            open: null,
            response: null,
            search: null,
            select: null
        },
        requestIndex: 0,
        pending: 0,
        _create: function () {
            var A, B, x, q = this.element[0].nodeName.toLowerCase(), k = "textarea" === q, w = "input" === q;
            this.isMultiLine = k ? !0 : w ? !1 : this.element.prop("isContentEditable"), this.valueMethod = this.element[k || w ? "val" : "text"], this.isNewMenu = !0, this.element.addClass("ui-autocomplete-input").attr("autocomplete", "off"), this._on(this.element, {
                keydown: function (C) {
                    if (this.element.prop("readOnly")) {
                        return A = !0, x = !0, B = !0, void 0
                    }
                    A = !1, x = !1, B = !1;
                    var D = e.ui.keyCode;
                    switch (C.keyCode) {
                        case D.PAGE_UP:
                            A = !0, this._move("previousPage", C);
                            break;
                        case D.PAGE_DOWN:
                            A = !0, this._move("nextPage", C);
                            break;
                        case D.UP:
                            A = !0, this._keyEvent("previous", C);
                            break;
                        case D.DOWN:
                            A = !0, this._keyEvent("next", C);
                            break;
                        case D.ENTER:
                            this.menu.active && (A = !0, C.preventDefault(), this.menu.select(C));
                            break;
                        case D.TAB:
                            this.menu.active && this.menu.select(C);
                            break;
                        case D.ESCAPE:
                            this.menu.element.is(":visible") && (this.isMultiLine || this._value(this.term), this.close(C), C.preventDefault());
                            break;
                        default:
                            B = !0, this._searchTimeout(C)
                    }
                }, keypress: function (C) {
                    if (A) {
                        return A = !1, (!this.isMultiLine || this.menu.element.is(":visible")) && C.preventDefault(), void 0
                    }
                    if (!B) {
                        var D = e.ui.keyCode;
                        switch (C.keyCode) {
                            case D.PAGE_UP:
                                this._move("previousPage", C);
                                break;
                            case D.PAGE_DOWN:
                                this._move("nextPage", C);
                                break;
                            case D.UP:
                                this._keyEvent("previous", C);
                                break;
                            case D.DOWN:
                                this._keyEvent("next", C)
                        }
                    }
                }, input: function (C) {
                    return x ? (x = !1, C.preventDefault(), void 0) : (this._searchTimeout(C), void 0)
                }, focus: function () {
                    this.selectedItem = null, this.previous = this._value()
                }, blur: function (C) {
                    return this.cancelBlur ? (delete this.cancelBlur, void 0) : (clearTimeout(this.searching), this.close(C), this._change(C), void 0)
                }
            }), this._initSource(), this.menu = e("<ul>").addClass("ui-autocomplete ui-front").appendTo(this._appendTo()).menu({role: null}).hide().menu("instance"), this._on(this.menu.element, {
                mousedown: function (D) {
                    D.preventDefault(), this.cancelBlur = !0, this._delay(function () {
                        delete this.cancelBlur
                    });
                    var C = this.menu.element[0];
                    e(D.target).closest(".ui-menu-item").length || this._delay(function () {
                        var E = this;
                        this.document.one("mousedown", function (F) {
                            F.target === E.element[0] || F.target === C || e.contains(C, F.target) || E.close()
                        })
                    })
                }, menufocus: function (F, E) {
                    var D, C;
                    return this.isNewMenu && (this.isNewMenu = !1, F.originalEvent && /^mouse/.test(F.originalEvent.type)) ? (this.menu.blur(), this.document.one("mousemove", function () {
                        e(F.target).trigger(F.originalEvent)
                    }), void 0) : (C = E.item.data("ui-autocomplete-item"), !1 !== this._trigger("focus", F, {item: C}) && F.originalEvent && /^key/.test(F.originalEvent.type) && this._value(C.value), D = E.item.attr("aria-label") || C.value, D && e.trim(D).length && (this.liveRegion.children().hide(), e("<div>").text(D).appendTo(this.liveRegion)), void 0)
                }, menuselect: function (C, F) {
                    var E = F.item.data("ui-autocomplete-item"), D = this.previous;
                    this.element[0] !== this.document[0].activeElement && (this.element.focus(), this.previous = D, this._delay(function () {
                        this.previous = D, this.selectedItem = E
                    })), !1 !== this._trigger("select", C, {item: E}) && this._value(E.value), this.term = this._value(), this.close(C), this.selectedItem = E
                }
            }), this.liveRegion = e("<span>", {
                role: "status",
                "aria-live": "assertive",
                "aria-relevant": "additions"
            }).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body), this._on(this.window, {
                beforeunload: function () {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _destroy: function () {
            clearTimeout(this.searching), this.element.removeClass("ui-autocomplete-input").removeAttr("autocomplete"), this.menu.element.remove(), this.liveRegion.remove()
        },
        _setOption: function (k, q) {
            this._super(k, q), "source" === k && this._initSource(), "appendTo" === k && this.menu.element.appendTo(this._appendTo()), "disabled" === k && q && this.xhr && this.xhr.abort()
        },
        _appendTo: function () {
            var k = this.options.appendTo;
            return k && (k = k.jquery || k.nodeType ? e(k) : this.document.find(k).eq(0)), k && k[0] || (k = this.element.closest(".ui-front")), k.length || (k = this.document[0].body), k
        },
        _initSource: function () {
            var k, q, w = this;
            e.isArray(this.options.source) ? (k = this.options.source, this.source = function (A, x) {
                x(e.ui.autocomplete.filter(k, A.term))
            }) : "string" == typeof this.options.source ? (q = this.options.source, this.source = function (A, x) {
                w.xhr && w.xhr.abort(), w.xhr = e.ajax({
                    url: q,
                    data: A,
                    dataType: "json",
                    success: function (B) {
                        x(B)
                    },
                    error: function () {
                        x([])
                    }
                })
            }) : this.source = this.options.source
        },
        _searchTimeout: function (k) {
            clearTimeout(this.searching), this.searching = this._delay(function () {
                var x = this.term === this._value(), q = this.menu.element.is(":visible"), w = k.altKey || k.ctrlKey || k.metaKey || k.shiftKey;
                (!x || x && !q && !w) && (this.selectedItem = null, this.search(null, k))
            }, this.options.delay)
        },
        search: function (k, q) {
            return k = null != k ? k : this._value(), this.term = this._value(), k.length < this.options.minLength ? this.close(q) : this._trigger("search", q) !== !1 ? this._search(k) : void 0
        },
        _search: function (k) {
            this.pending++, this.element.addClass("ui-autocomplete-loading"), this.cancelSearch = !1, this.source({term: k}, this._response())
        },
        _response: function () {
            var k = ++this.requestIndex;
            return e.proxy(function (q) {
                k === this.requestIndex && this.__response(q), this.pending--, this.pending || this.element.removeClass("ui-autocomplete-loading")
            }, this)
        },
        __response: function (k) {
            k && (k = this._normalize(k)), this._trigger("response", null, {content: k}), !this.options.disabled && k && k.length && !this.cancelSearch ? (this._suggest(k), this._trigger("open")) : this._close()
        },
        close: function (k) {
            this.cancelSearch = !0, this._close(k)
        },
        _close: function (k) {
            this.menu.element.is(":visible") && (this.menu.element.hide(), this.menu.blur(), this.isNewMenu = !0, this._trigger("close", k))
        },
        _change: function (k) {
            this.previous !== this._value() && this._trigger("change", k, {item: this.selectedItem})
        },
        _normalize: function (k) {
            return k.length && k[0].label && k[0].value ? k : e.map(k, function (q) {
                return "string" == typeof q ? {
                    label: q,
                    value: q
                } : e.extend({}, q, {
                    label: q.label || q.value,
                    value: q.value || q.label
                })
            })
        },
        _suggest: function (k) {
            var q = this.menu.element.empty();
            this._renderMenu(q, k), this.isNewMenu = !0, this.menu.refresh(), q.show(), this._resizeMenu(), q.position(e.extend({of: this.element}, this.options.position)), this.options.autoFocus && this.menu.next()
        },
        _resizeMenu: function () {
            var k = this.menu.element;
            k.outerWidth(Math.max(k.width("").outerWidth() + 1, this.element.outerWidth()))
        },
        _renderMenu: function (k, q) {
            var w = this;
            e.each(q, function (x, A) {
                w._renderItemData(k, A)
            })
        },
        _renderItemData: function (k, q) {
            return this._renderItem(k, q).data("ui-autocomplete-item", q)
        },
        _renderItem: function (k, q) {
            return e("<li>").text(q.label).appendTo(k)
        },
        _move: function (k, q) {
            return this.menu.element.is(":visible") ? this.menu.isFirstItem() && /^previous/.test(k) || this.menu.isLastItem() && /^next/.test(k) ? (this.isMultiLine || this._value(this.term), this.menu.blur(), void 0) : (this.menu[k](q), void 0) : (this.search(null, q), void 0)
        },
        widget: function () {
            return this.menu.element
        },
        _value: function () {
            return this.valueMethod.apply(this.element, arguments)
        },
        _keyEvent: function (k, q) {
            (!this.isMultiLine || this.menu.element.is(":visible")) && (this._move(k, q), q.preventDefault())
        }
    }), e.extend(e.ui.autocomplete, {
        escapeRegex: function (k) {
            return k.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&")
        }, filter: function (k, q) {
            var w = RegExp(e.ui.autocomplete.escapeRegex(q), "i");
            return e.grep(k, function (x) {
                return w.test(x.label || x.value || x)
            })
        }
    }), e.widget("ui.autocomplete", e.ui.autocomplete, {
        options: {
            messages: {
                noResults: "No search results.",
                results: function (k) {
                    return k + (k > 1 ? " results are" : " result is") + " available, use up and down arrow keys to navigate."
                }
            }
        }, __response: function (k) {
            var q;
            this._superApply(arguments), this.options.disabled || this.cancelSearch || (q = k && k.length ? this.options.messages.results(k.length) : this.options.messages.noResults, this.liveRegion.children().hide(), e("<div>").text(q).appendTo(this.liveRegion))
        }
    }), e.ui.autocomplete;
    var c, u = "ui-button ui-widget ui-state-default ui-corner-all", f = "ui-button-icons-only ui-button-icon-only ui-button-text-icons ui-button-text-icon-primary ui-button-text-icon-secondary ui-button-text-only", p = function () {
        var k = e(this);
        setTimeout(function () {
            k.find(":ui-button").button("refresh")
        }, 1)
    }, g = function (k) {
        var q = k.name, x = k.form, w = e([]);
        return q && (q = q.replace(/'/g, "\\'"), w = x ? e(x).find("[name='" + q + "'][type=radio]") : e("[name='" + q + "'][type=radio]", k.ownerDocument).filter(function () {
            return !this.form
        })), w
    };
    e.widget("ui.button", {
        version: "1.11.4",
        defaultElement: "<button>",
        options: {
            disabled: null,
            text: !0,
            label: null,
            icons: {primary: null, secondary: null}
        },
        _create: function () {
            this.element.closest("form").unbind("reset" + this.eventNamespace).bind("reset" + this.eventNamespace, p), "boolean" != typeof this.options.disabled ? this.options.disabled = !!this.element.prop("disabled") : this.element.prop("disabled", this.options.disabled), this._determineButtonType(), this.hasTitle = !!this.buttonElement.attr("title");
            var k = this, q = this.options, x = "checkbox" === this.type || "radio" === this.type, w = x ? "" : "ui-state-active";
            null === q.label && (q.label = "input" === this.type ? this.buttonElement.val() : this.buttonElement.html()), this._hoverable(this.buttonElement), this.buttonElement.addClass(u).attr("role", "button").bind("mouseenter" + this.eventNamespace, function () {
                q.disabled || this === c && e(this).addClass("ui-state-active")
            }).bind("mouseleave" + this.eventNamespace, function () {
                q.disabled || e(this).removeClass(w)
            }).bind("click" + this.eventNamespace, function (A) {
                q.disabled && (A.preventDefault(), A.stopImmediatePropagation())
            }), this._on({
                focus: function () {
                    this.buttonElement.addClass("ui-state-focus")
                }, blur: function () {
                    this.buttonElement.removeClass("ui-state-focus")
                }
            }), x && this.element.bind("change" + this.eventNamespace, function () {
                k.refresh()
            }), "checkbox" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function () {
                return q.disabled ? !1 : void 0
            }) : "radio" === this.type ? this.buttonElement.bind("click" + this.eventNamespace, function () {
                if (q.disabled) {
                    return !1
                }
                e(this).addClass("ui-state-active"), k.buttonElement.attr("aria-pressed", "true");
                var A = k.element[0];
                g(A).not(A).map(function () {
                    return e(this).button("widget")[0]
                }).removeClass("ui-state-active").attr("aria-pressed", "false")
            }) : (this.buttonElement.bind("mousedown" + this.eventNamespace, function () {
                return q.disabled ? !1 : (e(this).addClass("ui-state-active"), c = this, k.document.one("mouseup", function () {
                    c = null
                }), void 0)
            }).bind("mouseup" + this.eventNamespace, function () {
                return q.disabled ? !1 : (e(this).removeClass("ui-state-active"), void 0)
            }).bind("keydown" + this.eventNamespace, function (A) {
                return q.disabled ? !1 : ((A.keyCode === e.ui.keyCode.SPACE || A.keyCode === e.ui.keyCode.ENTER) && e(this).addClass("ui-state-active"), void 0)
            }).bind("keyup" + this.eventNamespace + " blur" + this.eventNamespace, function () {
                e(this).removeClass("ui-state-active")
            }), this.buttonElement.is("a") && this.buttonElement.keyup(function (A) {
                A.keyCode === e.ui.keyCode.SPACE && e(this).click()
            })), this._setOption("disabled", q.disabled), this._resetButton()
        },
        _determineButtonType: function () {
            var w, k, q;
            this.type = this.element.is("[type=checkbox]") ? "checkbox" : this.element.is("[type=radio]") ? "radio" : this.element.is("input") ? "input" : "button", "checkbox" === this.type || "radio" === this.type ? (w = this.element.parents().last(), k = "label[for='" + this.element.attr("id") + "']", this.buttonElement = w.find(k), this.buttonElement.length || (w = w.length ? w.siblings() : this.element.siblings(), this.buttonElement = w.filter(k), this.buttonElement.length || (this.buttonElement = w.find(k))), this.element.addClass("ui-helper-hidden-accessible"), q = this.element.is(":checked"), q && this.buttonElement.addClass("ui-state-active"), this.buttonElement.prop("aria-pressed", q)) : this.buttonElement = this.element
        },
        widget: function () {
            return this.buttonElement
        },
        _destroy: function () {
            this.element.removeClass("ui-helper-hidden-accessible"), this.buttonElement.removeClass(u + " ui-state-active " + f).removeAttr("role").removeAttr("aria-pressed").html(this.buttonElement.find(".ui-button-text").html()), this.hasTitle || this.buttonElement.removeAttr("title")
        },
        _setOption: function (k, q) {
            return this._super(k, q), "disabled" === k ? (this.widget().toggleClass("ui-state-disabled", !!q), this.element.prop("disabled", !!q), q && ("checkbox" === this.type || "radio" === this.type ? this.buttonElement.removeClass("ui-state-focus") : this.buttonElement.removeClass("ui-state-focus ui-state-active")), void 0) : (this._resetButton(), void 0)
        },
        refresh: function () {
            var k = this.element.is("input, button") ? this.element.is(":disabled") : this.element.hasClass("ui-button-disabled");
            k !== this.options.disabled && this._setOption("disabled", k), "radio" === this.type ? g(this.element[0]).each(function () {
                e(this).is(":checked") ? e(this).button("widget").addClass("ui-state-active").attr("aria-pressed", "true") : e(this).button("widget").removeClass("ui-state-active").attr("aria-pressed", "false")
            }) : "checkbox" === this.type && (this.element.is(":checked") ? this.buttonElement.addClass("ui-state-active").attr("aria-pressed", "true") : this.buttonElement.removeClass("ui-state-active").attr("aria-pressed", "false"))
        },
        _resetButton: function () {
            if ("input" === this.type) {
                return this.options.label && this.element.val(this.options.label), void 0
            }
            var x = this.buttonElement.removeClass(f), A = e("<span></span>", this.document[0]).addClass("ui-button-text").html(this.options.label).appendTo(x.empty()).text(), w = this.options.icons, q = w.primary && w.secondary, k = [];
            w.primary || w.secondary ? (this.options.text && k.push("ui-button-text-icon" + (q ? "s" : w.primary ? "-primary" : "-secondary")), w.primary && x.prepend("<span class='ui-button-icon-primary ui-icon " + w.primary + "'></span>"), w.secondary && x.append("<span class='ui-button-icon-secondary ui-icon " + w.secondary + "'></span>"), this.options.text || (k.push(q ? "ui-button-icons-only" : "ui-button-icon-only"), this.hasTitle || x.attr("title", e.trim(A)))) : k.push("ui-button-text-only"), x.addClass(k.join(" "))
        }
    }), e.widget("ui.buttonset", {
        version: "1.11.4",
        options: {items: "button, input[type=button], input[type=submit], input[type=reset], input[type=checkbox], input[type=radio], a, :data(ui-button)"},
        _create: function () {
            this.element.addClass("ui-buttonset")
        },
        _init: function () {
            this.refresh()
        },
        _setOption: function (k, q) {
            "disabled" === k && this.buttons.button("option", k, q), this._super(k, q)
        },
        refresh: function () {
            var k = "rtl" === this.element.css("direction"), q = this.element.find(this.options.items), w = q.filter(":ui-button");
            q.not(":ui-button").button(), w.button("refresh"), this.buttons = q.map(function () {
                return e(this).button("widget")[0]
            }).removeClass("ui-corner-all ui-corner-left ui-corner-right").filter(":first").addClass(k ? "ui-corner-right" : "ui-corner-left").end().filter(":last").addClass(k ? "ui-corner-left" : "ui-corner-right").end().end()
        },
        _destroy: function () {
            this.element.removeClass("ui-buttonset"), this.buttons.map(function () {
                return e(this).button("widget")[0]
            }).removeClass("ui-corner-left ui-corner-right").end().button("destroy")
        }
    }), e.ui.button, e.extend(e.ui, {datepicker: {version: "1.11.4"}});
    var v;
    e.extend(r.prototype, {
        markerClassName: "hasDatepicker",
        maxRows: 4,
        _widgetDatepicker: function () {
            return this.dpDiv
        },
        setDefaults: function (k) {
            return y(this._defaults, k || {}), this
        },
        _attachDatepicker: function (x, A) {
            var w, q, k;
            w = x.nodeName.toLowerCase(), q = "div" === w || "span" === w, x.id || (this.uuid += 1, x.id = "dp" + this.uuid), k = this._newInst(e(x), q), k.settings = e.extend({}, A || {}), "input" === w ? this._connectDatepicker(x, k) : q && this._inlineDatepicker(x, k)
        },
        _newInst: function (k, q) {
            var w = k[0].id.replace(/([^A-Za-z0-9_\-])/g, "\\\\$1");
            return {
                id: w,
                input: k,
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0,
                drawMonth: 0,
                drawYear: 0,
                inline: q,
                dpDiv: q ? a(e("<div class='" + this._inlineClass + " ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>")) : this.dpDiv
            }
        },
        _connectDatepicker: function (k, q) {
            var w = e(k);
            q.append = e([]), q.trigger = e([]), w.hasClass(this.markerClassName) || (this._attachments(w, q), w.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).keyup(this._doKeyUp), this._autoSize(q), e.data(k, "datepicker", q), q.settings.disabled && this._disableDatepicker(k))
        },
        _attachments: function (B, C) {
            var A, q, k, w = this._get(C, "appendText"), x = this._get(C, "isRTL");
            C.append && C.append.remove(), w && (C.append = e("<span class='" + this._appendClass + "'>" + w + "</span>"), B[x ? "before" : "after"](C.append)), B.unbind("focus", this._showDatepicker), C.trigger && C.trigger.remove(), A = this._get(C, "showOn"), ("focus" === A || "both" === A) && B.focus(this._showDatepicker), ("button" === A || "both" === A) && (q = this._get(C, "buttonText"), k = this._get(C, "buttonImage"), C.trigger = e(this._get(C, "buttonImageOnly") ? e("<img/>").addClass(this._triggerClass).attr({
                src: k,
                alt: q,
                title: q
            }) : e("<button type='button'></button>").addClass(this._triggerClass).html(k ? e("<img/>").attr({
                src: k,
                alt: q,
                title: q
            }) : q)), B[x ? "before" : "after"](C.trigger), C.trigger.click(function () {
                return e.datepicker._datepickerShowing && e.datepicker._lastInput === B[0] ? e.datepicker._hideDatepicker() : e.datepicker._datepickerShowing && e.datepicker._lastInput !== B[0] ? (e.datepicker._hideDatepicker(), e.datepicker._showDatepicker(B[0])) : e.datepicker._showDatepicker(B[0]), !1
            }))
        },
        _autoSize: function (x) {
            if (this._get(x, "autoSize") && !x.inline) {
                var B, C, A, q, k = new Date(2009, 11, 20), w = this._get(x, "dateFormat");
                w.match(/[DM]/) && (B = function (D) {
                    for (C = 0, A = 0, q = 0; D.length > q; q++) {
                        D[q].length > C && (C = D[q].length, A = q)
                    }
                    return A
                }, k.setMonth(B(this._get(x, w.match(/MM/) ? "monthNames" : "monthNamesShort"))), k.setDate(B(this._get(x, w.match(/DD/) ? "dayNames" : "dayNamesShort")) + 20 - k.getDay())), x.input.attr("size", this._formatDate(x, k).length)
            }
        },
        _inlineDatepicker: function (k, q) {
            var w = e(k);
            w.hasClass(this.markerClassName) || (w.addClass(this.markerClassName).append(q.dpDiv), e.data(k, "datepicker", q), this._setDate(q, this._getDefaultDate(q), !0), this._updateDatepicker(q), this._updateAlternate(q), q.settings.disabled && this._disableDatepicker(k), q.dpDiv.css("display", "block"))
        },
        _dialogDatepicker: function (A, B, x, D, G) {
            var F, w, C, E, q, k = this._dialogInst;
            return k || (this.uuid += 1, F = "dp" + this.uuid, this._dialogInput = e("<input type='text' id='" + F + "' style='position: absolute; top: -100px; width: 0px;'/>"), this._dialogInput.keydown(this._doKeyDown), e("body").append(this._dialogInput), k = this._dialogInst = this._newInst(this._dialogInput, !1), k.settings = {}, e.data(this._dialogInput[0], "datepicker", k)), y(k.settings, D || {}), B = B && B.constructor === Date ? this._formatDate(k, B) : B, this._dialogInput.val(B), this._pos = G ? G.length ? G : [G.pageX, G.pageY] : null, this._pos || (w = document.documentElement.clientWidth, C = document.documentElement.clientHeight, E = document.documentElement.scrollLeft || document.body.scrollLeft, q = document.documentElement.scrollTop || document.body.scrollTop, this._pos = [w / 2 - 100 + E, C / 2 - 150 + q]), this._dialogInput.css("left", this._pos[0] + 20 + "px").css("top", this._pos[1] + "px"), k.settings.onSelect = x, this._inDialog = !0, this.dpDiv.addClass(this._dialogClass), this._showDatepicker(this._dialogInput[0]), e.blockUI && e.blockUI(this.dpDiv), e.data(this._dialogInput[0], "datepicker", k), this
        },
        _destroyDatepicker: function (k) {
            var q, x = e(k), w = e.data(k, "datepicker");
            x.hasClass(this.markerClassName) && (q = k.nodeName.toLowerCase(), e.removeData(k, "datepicker"), "input" === q ? (w.append.remove(), w.trigger.remove(), x.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress).unbind("keyup", this._doKeyUp)) : ("div" === q || "span" === q) && x.removeClass(this.markerClassName).empty(), v === w && (v = null))
        },
        _enableDatepicker: function (x) {
            var A, w, q = e(x), k = e.data(x, "datepicker");
            q.hasClass(this.markerClassName) && (A = x.nodeName.toLowerCase(), "input" === A ? (x.disabled = !1, k.trigger.filter("button").each(function () {
                this.disabled = !1
            }).end().filter("img").css({
                opacity: "1.0",
                cursor: ""
            })) : ("div" === A || "span" === A) && (w = q.children("." + this._inlineClass), w.children().removeClass("ui-state-disabled"), w.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !1)), this._disabledInputs = e.map(this._disabledInputs, function (B) {
                return B === x ? null : B
            }))
        },
        _disableDatepicker: function (x) {
            var A, w, q = e(x), k = e.data(x, "datepicker");
            q.hasClass(this.markerClassName) && (A = x.nodeName.toLowerCase(), "input" === A ? (x.disabled = !0, k.trigger.filter("button").each(function () {
                this.disabled = !0
            }).end().filter("img").css({
                opacity: "0.5",
                cursor: "default"
            })) : ("div" === A || "span" === A) && (w = q.children("." + this._inlineClass), w.children().addClass("ui-state-disabled"), w.find("select.ui-datepicker-month, select.ui-datepicker-year").prop("disabled", !0)), this._disabledInputs = e.map(this._disabledInputs, function (B) {
                return B === x ? null : B
            }), this._disabledInputs[this._disabledInputs.length] = x)
        },
        _isDisabledDatepicker: function (k) {
            if (!k) {
                return !1
            }
            for (var q = 0; this._disabledInputs.length > q; q++) {
                if (this._disabledInputs[q] === k) {
                    return !0
                }
            }
            return !1
        },
        _getInst: function (k) {
            try {
                return e.data(k, "datepicker")
            } catch (q) {
                throw"Missing instance data for this datepicker"
            }
        },
        _optionDatepicker: function (B, C, w) {
            var A, D, q, x, k = this._getInst(B);
            return 2 === arguments.length && "string" == typeof C ? "defaults" === C ? e.extend({}, e.datepicker._defaults) : k ? "all" === C ? e.extend({}, k.settings) : this._get(k, C) : null : (A = C || {}, "string" == typeof C && (A = {}, A[C] = w), k && (this._curInst === k && this._hideDatepicker(), D = this._getDateDatepicker(B, !0), q = this._getMinMaxDate(k, "min"), x = this._getMinMaxDate(k, "max"), y(k.settings, A), null !== q && void 0 !== A.dateFormat && void 0 === A.minDate && (k.settings.minDate = this._formatDate(k, q)), null !== x && void 0 !== A.dateFormat && void 0 === A.maxDate && (k.settings.maxDate = this._formatDate(k, x)), "disabled" in A && (A.disabled ? this._disableDatepicker(B) : this._enableDatepicker(B)), this._attachments(e(B), k), this._autoSize(k), this._setDate(k, D), this._updateAlternate(k), this._updateDatepicker(k)), void 0)
        },
        _changeDatepicker: function (w, k, q) {
            this._optionDatepicker(w, k, q)
        },
        _refreshDatepicker: function (k) {
            var q = this._getInst(k);
            q && this._updateDatepicker(q)
        },
        _setDateDatepicker: function (w, k) {
            var q = this._getInst(w);
            q && (this._setDate(q, k), this._updateDatepicker(q), this._updateAlternate(q))
        },
        _getDateDatepicker: function (w, k) {
            var q = this._getInst(w);
            return q && !q.inline && this._setDateFromField(q, k), q ? this._getDate(q) : null
        },
        _doKeyDown: function (B) {
            var C, A, q, k = e.datepicker._getInst(B.target), w = !0, x = k.dpDiv.is(".ui-datepicker-rtl");
            if (k._keyEvent = !0, e.datepicker._datepickerShowing) {
                switch (B.keyCode) {
                    case 9:
                        e.datepicker._hideDatepicker(), w = !1;
                        break;
                    case 13:
                        return q = e("td." + e.datepicker._dayOverClass + ":not(." + e.datepicker._currentClass + ")", k.dpDiv), q[0] && e.datepicker._selectDay(B.target, k.selectedMonth, k.selectedYear, q[0]), C = e.datepicker._get(k, "onSelect"), C ? (A = e.datepicker._formatDate(k), C.apply(k.input ? k.input[0] : null, [A, k])) : e.datepicker._hideDatepicker(), !1;
                    case 27:
                        e.datepicker._hideDatepicker();
                        break;
                    case 33:
                        e.datepicker._adjustDate(B.target, B.ctrlKey ? -e.datepicker._get(k, "stepBigMonths") : -e.datepicker._get(k, "stepMonths"), "M");
                        break;
                    case 34:
                        e.datepicker._adjustDate(B.target, B.ctrlKey ? +e.datepicker._get(k, "stepBigMonths") : +e.datepicker._get(k, "stepMonths"), "M");
                        break;
                    case 35:
                        (B.ctrlKey || B.metaKey) && e.datepicker._clearDate(B.target), w = B.ctrlKey || B.metaKey;
                        break;
                    case 36:
                        (B.ctrlKey || B.metaKey) && e.datepicker._gotoToday(B.target), w = B.ctrlKey || B.metaKey;
                        break;
                    case 37:
                        (B.ctrlKey || B.metaKey) && e.datepicker._adjustDate(B.target, x ? 1 : -1, "D"), w = B.ctrlKey || B.metaKey, B.originalEvent.altKey && e.datepicker._adjustDate(B.target, B.ctrlKey ? -e.datepicker._get(k, "stepBigMonths") : -e.datepicker._get(k, "stepMonths"), "M");
                        break;
                    case 38:
                        (B.ctrlKey || B.metaKey) && e.datepicker._adjustDate(B.target, -7, "D"), w = B.ctrlKey || B.metaKey;
                        break;
                    case 39:
                        (B.ctrlKey || B.metaKey) && e.datepicker._adjustDate(B.target, x ? -1 : 1, "D"), w = B.ctrlKey || B.metaKey, B.originalEvent.altKey && e.datepicker._adjustDate(B.target, B.ctrlKey ? +e.datepicker._get(k, "stepBigMonths") : +e.datepicker._get(k, "stepMonths"), "M");
                        break;
                    case 40:
                        (B.ctrlKey || B.metaKey) && e.datepicker._adjustDate(B.target, 7, "D"), w = B.ctrlKey || B.metaKey;
                        break;
                    default:
                        w = !1
                }
            } else {
                36 === B.keyCode && B.ctrlKey ? e.datepicker._showDatepicker(this) : w = !1
            }
            w && (B.preventDefault(), B.stopPropagation())
        },
        _doKeyPress: function (k) {
            var q, x, w = e.datepicker._getInst(k.target);
            return e.datepicker._get(w, "constrainInput") ? (q = e.datepicker._possibleChars(e.datepicker._get(w, "dateFormat")), x = String.fromCharCode(null == k.charCode ? k.keyCode : k.charCode), k.ctrlKey || k.metaKey || " " > x || !q || q.indexOf(x) > -1) : void 0
        },
        _doKeyUp: function (k) {
            var q, x = e.datepicker._getInst(k.target);
            if (x.input.val() !== x.lastVal) {
                try {
                    q = e.datepicker.parseDate(e.datepicker._get(x, "dateFormat"), x.input ? x.input.val() : null, e.datepicker._getFormatConfig(x)), q && (e.datepicker._setDateFromField(x), e.datepicker._updateAlternate(x), e.datepicker._updateDatepicker(x))
                } catch (w) {
                }
            }
            return !0
        },
        _showDatepicker: function (x) {
            if (x = x.target || x, "input" !== x.nodeName.toLowerCase() && (x = e("input", x.parentNode)[0]), !e.datepicker._isDisabledDatepicker(x) && e.datepicker._lastInput !== x) {
                var B, A, D, q, w, k, C;
                B = e.datepicker._getInst(x), e.datepicker._curInst && e.datepicker._curInst !== B && (e.datepicker._curInst.dpDiv.stop(!0, !0), B && e.datepicker._datepickerShowing && e.datepicker._hideDatepicker(e.datepicker._curInst.input[0])), A = e.datepicker._get(B, "beforeShow"), D = A ? A.apply(x, [x, B]) : {}, D !== !1 && (y(B.settings, D), B.lastVal = null, e.datepicker._lastInput = x, e.datepicker._setDateFromField(B), e.datepicker._inDialog && (x.value = ""), e.datepicker._pos || (e.datepicker._pos = e.datepicker._findPos(x), e.datepicker._pos[1] += x.offsetHeight), q = !1, e(x).parents().each(function () {
                    return q |= "fixed" === e(this).css("position"), !q
                }), w = {
                    left: e.datepicker._pos[0],
                    top: e.datepicker._pos[1]
                }, e.datepicker._pos = null, B.dpDiv.empty(), B.dpDiv.css({
                    position: "absolute",
                    display: "block",
                    top: "-1000px"
                }), e.datepicker._updateDatepicker(B), w = e.datepicker._checkOffset(B, w, q), B.dpDiv.css({
                    position: e.datepicker._inDialog && e.blockUI ? "static" : q ? "fixed" : "absolute",
                    display: "none",
                    left: w.left + "px",
                    top: w.top + "px"
                }), B.inline || (k = e.datepicker._get(B, "showAnim"), C = e.datepicker._get(B, "duration"), B.dpDiv.css("z-index", Q(e(x)) + 1), e.datepicker._datepickerShowing = !0, e.effects && e.effects.effect[k] ? B.dpDiv.show(k, e.datepicker._get(B, "showOptions"), C) : B.dpDiv[k || "show"](k ? C : null), e.datepicker._shouldFocusInput(B) && B.input.focus(), e.datepicker._curInst = B))
            }
        },
        _updateDatepicker: function (A) {
            this.maxRows = 4, v = A, A.dpDiv.empty().append(this._generateHTML(A)), this._attachHandlers(A);
            var B, x = this._getNumberOfMonths(A), q = x[1], k = 17, w = A.dpDiv.find("." + this._dayOverClass + " a");
            w.length > 0 && s.apply(w.get(0)), A.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width(""), q > 1 && A.dpDiv.addClass("ui-datepicker-multi-" + q).css("width", k * q + "em"), A.dpDiv[(1 !== x[0] || 1 !== x[1] ? "add" : "remove") + "Class"]("ui-datepicker-multi"), A.dpDiv[(this._get(A, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl"), A === e.datepicker._curInst && e.datepicker._datepickerShowing && e.datepicker._shouldFocusInput(A) && A.input.focus(), A.yearshtml && (B = A.yearshtml, setTimeout(function () {
                B === A.yearshtml && A.yearshtml && A.dpDiv.find("select.ui-datepicker-year:first").replaceWith(A.yearshtml), B = A.yearshtml = null
            }, 0))
        },
        _shouldFocusInput: function (k) {
            return k.input && k.input.is(":visible") && !k.input.is(":disabled") && !k.input.is(":focus")
        },
        _checkOffset: function (k, x, E) {
            var B = k.dpDiv.outerWidth(), q = k.dpDiv.outerHeight(), C = k.input ? k.input.outerWidth() : 0, D = k.input ? k.input.outerHeight() : 0, w = document.documentElement.clientWidth + (E ? 0 : e(document).scrollLeft()), A = document.documentElement.clientHeight + (E ? 0 : e(document).scrollTop());
            return x.left -= this._get(k, "isRTL") ? B - C : 0, x.left -= E && x.left === k.input.offset().left ? e(document).scrollLeft() : 0, x.top -= E && x.top === k.input.offset().top + D ? e(document).scrollTop() : 0, x.left -= Math.min(x.left, x.left + B > w && w > B ? Math.abs(x.left + B - w) : 0), x.top -= Math.min(x.top, x.top + q > A && A > q ? Math.abs(q + D) : 0), x
        },
        _findPos: function (k) {
            for (var q, x = this._getInst(k), w = this._get(x, "isRTL"); k && ("hidden" === k.type || 1 !== k.nodeType || e.expr.filters.hidden(k));) {
                k = k[w ? "previousSibling" : "nextSibling"]
            }
            return q = e(k).offset(), [q.left, q.top]
        },
        _hideDatepicker: function (A) {
            var B, x, q, k, w = this._curInst;
            !w || A && w !== e.data(A, "datepicker") || this._datepickerShowing && (B = this._get(w, "showAnim"), x = this._get(w, "duration"), q = function () {
                e.datepicker._tidyDialog(w)
            }, e.effects && (e.effects.effect[B] || e.effects[B]) ? w.dpDiv.hide(B, e.datepicker._get(w, "showOptions"), x, q) : w.dpDiv["slideDown" === B ? "slideUp" : "fadeIn" === B ? "fadeOut" : "hide"](B ? x : null, q), B || q(), this._datepickerShowing = !1, k = this._get(w, "onClose"), k && k.apply(w.input ? w.input[0] : null, [w.input ? w.input.val() : "", w]), this._lastInput = null, this._inDialog && (this._dialogInput.css({
                position: "absolute",
                left: "0",
                top: "-100px"
            }), e.blockUI && (e.unblockUI(), e("body").append(this.dpDiv))), this._inDialog = !1)
        },
        _tidyDialog: function (k) {
            k.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
        },
        _checkExternalClick: function (k) {
            if (e.datepicker._curInst) {
                var q = e(k.target), w = e.datepicker._getInst(q[0]);
                (q[0].id !== e.datepicker._mainDivId && 0 === q.parents("#" + e.datepicker._mainDivId).length && !q.hasClass(e.datepicker.markerClassName) && !q.closest("." + e.datepicker._triggerClass).length && e.datepicker._datepickerShowing && (!e.datepicker._inDialog || !e.blockUI) || q.hasClass(e.datepicker.markerClassName) && e.datepicker._curInst !== w) && e.datepicker._hideDatepicker()
            }
        },
        _adjustDate: function (x, A, w) {
            var q = e(x), k = this._getInst(q[0]);
            this._isDisabledDatepicker(q[0]) || (this._adjustInstDate(k, A + ("M" === w ? this._get(k, "showCurrentAtPos") : 0), w), this._updateDatepicker(k))
        },
        _gotoToday: function (k) {
            var q, x = e(k), w = this._getInst(x[0]);
            this._get(w, "gotoCurrent") && w.currentDay ? (w.selectedDay = w.currentDay, w.drawMonth = w.selectedMonth = w.currentMonth, w.drawYear = w.selectedYear = w.currentYear) : (q = new Date, w.selectedDay = q.getDate(), w.drawMonth = w.selectedMonth = q.getMonth(), w.drawYear = w.selectedYear = q.getFullYear()), this._notifyChange(w), this._adjustDate(x)
        },
        _selectMonthYear: function (x, A, w) {
            var q = e(x), k = this._getInst(q[0]);
            k["selected" + ("M" === w ? "Month" : "Year")] = k["draw" + ("M" === w ? "Month" : "Year")] = parseInt(A.options[A.selectedIndex].value, 10), this._notifyChange(k), this._adjustDate(q)
        },
        _selectDay: function (A, B, x, q) {
            var k, w = e(A);
            e(q).hasClass(this._unselectableClass) || this._isDisabledDatepicker(w[0]) || (k = this._getInst(w[0]), k.selectedDay = k.currentDay = e("a", q).html(), k.selectedMonth = k.currentMonth = B, k.selectedYear = k.currentYear = x, this._selectDate(A, this._formatDate(k, k.currentDay, k.currentMonth, k.currentYear)))
        },
        _clearDate: function (k) {
            var q = e(k);
            this._selectDate(q, "")
        },
        _selectDate: function (x, A) {
            var w, q = e(x), k = this._getInst(q[0]);
            A = null != A ? A : this._formatDate(k), k.input && k.input.val(A), this._updateAlternate(k), w = this._get(k, "onSelect"), w ? w.apply(k.input ? k.input[0] : null, [A, k]) : k.input && k.input.trigger("change"), k.inline ? this._updateDatepicker(k) : (this._hideDatepicker(), this._lastInput = k.input[0], "object" != typeof k.input[0] && k.input.focus(), this._lastInput = null)
        },
        _updateAlternate: function (x) {
            var A, w, q, k = this._get(x, "altField");
            k && (A = this._get(x, "altFormat") || this._get(x, "dateFormat"), w = this._getDate(x), q = this.formatDate(A, w, this._getFormatConfig(x)), e(k).each(function () {
                e(this).val(q)
            }))
        },
        noWeekends: function (k) {
            var q = k.getDay();
            return [q > 0 && 6 > q, ""]
        },
        iso8601Week: function (w) {
            var k, q = new Date(w.getTime());
            return q.setDate(q.getDate() + 4 - (q.getDay() || 7)), k = q.getTime(), q.setMonth(0), q.setDate(1), Math.floor(Math.round((k - q) / 86400000) / 7) + 1
        },
        parseDate: function (B, P, A) {
            if (null == B || null == P) {
                throw"Invalid arguments"
            }
            if (P = "object" == typeof P ? "" + P : P + "", "" === P) {
                return null
            }
            var k, H, q, x, O = 0, ae = (A ? A.shortYearCutoff : null) || this._defaults.shortYearCutoff, C = "string" != typeof ae ? ae : (new Date).getFullYear() % 100 + parseInt(ae, 10), K = (A ? A.dayNamesShort : null) || this._defaults.dayNamesShort, J = (A ? A.dayNames : null) || this._defaults.dayNames, w = (A ? A.monthNamesShort : null) || this._defaults.monthNamesShort, L = (A ? A.monthNames : null) || this._defaults.monthNames, af = -1, N = -1, D = -1, M = -1, I = !1, G = function (S) {
                var T = B.length > k + 1 && B.charAt(k + 1) === S;
                return T && k++, T
            }, F = function (V) {
                var X = G(V), W = "@" === V ? 14 : "!" === V ? 20 : "y" === V && X ? 4 : "o" === V ? 3 : 2, T = "y" === V ? W : 1, S = RegExp("^\\d{" + T + "," + W + "}"), U = P.substring(O).match(S);
                if (!U) {
                    throw"Missing number at position " + O
                }
                return O += U[0].length, parseInt(U[0], 10)
            }, E = function (W, V, T) {
                var S = -1, U = e.map(G(W) ? T : V, function (Y, X) {
                    return [[X, Y]]
                }).sort(function (Y, X) {
                    return -(Y[1].length - X[1].length)
                });
                if (e.each(U, function (Y, X) {
                    var Z = X[1];
                    return P.substr(O, Z.length).toLowerCase() === Z.toLowerCase() ? (S = X[0], O += Z.length, !1) : void 0
                }), -1 !== S) {
                    return S + 1
                }
                throw"Unknown name at position " + O
            }, ad = function () {
                if (P.charAt(O) !== B.charAt(k)) {
                    throw"Unexpected literal at position " + O
                }
                O++
            };
            for (k = 0; B.length > k; k++) {
                if (I) {
                    "'" !== B.charAt(k) || G("'") ? ad() : I = !1
                } else {
                    switch (B.charAt(k)) {
                        case"d":
                            D = F("d");
                            break;
                        case"D":
                            E("D", K, J);
                            break;
                        case"o":
                            M = F("o");
                            break;
                        case"m":
                            N = F("m");
                            break;
                        case"M":
                            N = E("M", w, L);
                            break;
                        case"y":
                            af = F("y");
                            break;
                        case"@":
                            x = new Date(F("@")), af = x.getFullYear(), N = x.getMonth() + 1, D = x.getDate();
                            break;
                        case"!":
                            x = new Date((F("!") - this._ticksTo1970) / 10000), af = x.getFullYear(), N = x.getMonth() + 1, D = x.getDate();
                            break;
                        case"'":
                            G("'") ? ad() : I = !0;
                            break;
                        default:
                            ad()
                    }
                }
            }
            if (P.length > O && (q = P.substr(O), !/^\s+/.test(q))) {
                throw"Extra/unparsed characters found in date: " + q
            }
            if (-1 === af ? af = (new Date).getFullYear() : 100 > af && (af += (new Date).getFullYear() - (new Date).getFullYear() % 100 + (C >= af ? 0 : -100)), M > -1) {
                for (N = 1, D = M; ;) {
                    if (H = this._getDaysInMonth(af, N - 1), H >= D) {
                        break
                    }
                    N++, D -= H
                }
            }
            if (x = this._daylightSavingAdjust(new Date(af, N - 1, D)), x.getFullYear() !== af || x.getMonth() + 1 !== N || x.getDate() !== D) {
                throw"Invalid date"
            }
            return x
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TICKS: "!",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        _ticksTo1970: 10000000 * 60 * 60 * 24 * (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)),
        formatDate: function (G, x, k) {
            if (!x) {
                return ""
            }
            var w, E = (k ? k.dayNamesShort : null) || this._defaults.dayNamesShort, B = (k ? k.dayNames : null) || this._defaults.dayNames, F = (k ? k.monthNamesShort : null) || this._defaults.monthNamesShort, H = (k ? k.monthNames : null) || this._defaults.monthNames, I = function (K) {
                var J = G.length > w + 1 && G.charAt(w + 1) === K;
                return J && w++, J
            }, q = function (K, M, J) {
                var L = "" + M;
                if (I(K)) {
                    for (; J > L.length;) {
                        L = "0" + L
                    }
                }
                return L
            }, A = function (K, M, J, L) {
                return I(K) ? L[M] : J[M]
            }, D = "", C = !1;
            if (x) {
                for (w = 0; G.length > w; w++) {
                    if (C) {
                        "'" !== G.charAt(w) || I("'") ? D += G.charAt(w) : C = !1
                    } else {
                        switch (G.charAt(w)) {
                            case"d":
                                D += q("d", x.getDate(), 2);
                                break;
                            case"D":
                                D += A("D", x.getDay(), E, B);
                                break;
                            case"o":
                                D += q("o", Math.round((new Date(x.getFullYear(), x.getMonth(), x.getDate()).getTime() - new Date(x.getFullYear(), 0, 0).getTime()) / 86400000), 3);
                                break;
                            case"m":
                                D += q("m", x.getMonth() + 1, 2);
                                break;
                            case"M":
                                D += A("M", x.getMonth(), F, H);
                                break;
                            case"y":
                                D += I("y") ? x.getFullYear() : (10 > x.getYear() % 100 ? "0" : "") + x.getYear() % 100;
                                break;
                            case"@":
                                D += x.getTime();
                                break;
                            case"!":
                                D += 10000 * x.getTime() + this._ticksTo1970;
                                break;
                            case"'":
                                I("'") ? D += "'" : C = !0;
                                break;
                            default:
                                D += G.charAt(w)
                        }
                    }
                }
            }
            return D
        },
        _possibleChars: function (x) {
            var k, q = "", A = !1, w = function (C) {
                var B = x.length > k + 1 && x.charAt(k + 1) === C;
                return B && k++, B
            };
            for (k = 0; x.length > k; k++) {
                if (A) {
                    "'" !== x.charAt(k) || w("'") ? q += x.charAt(k) : A = !1
                } else {
                    switch (x.charAt(k)) {
                        case"d":
                        case"m":
                        case"y":
                        case"@":
                            q += "0123456789";
                            break;
                        case"D":
                        case"M":
                            return null;
                        case"'":
                            w("'") ? q += "'" : A = !0;
                            break;
                        default:
                            q += x.charAt(k)
                    }
                }
            }
            return q
        },
        _get: function (k, q) {
            return void 0 !== k.settings[q] ? k.settings[q] : this._defaults[q]
        },
        _setDateFromField: function (x, C) {
            if (x.input.val() !== x.lastVal) {
                var D = this._get(x, "dateFormat"), B = x.lastVal = x.input ? x.input.val() : null, q = this._getDefaultDate(x), k = q, w = this._getFormatConfig(x);
                try {
                    k = this.parseDate(D, B, w) || q
                } catch (A) {
                    B = C ? "" : B
                }
                x.selectedDay = k.getDate(), x.drawMonth = x.selectedMonth = k.getMonth(), x.drawYear = x.selectedYear = k.getFullYear(), x.currentDay = B ? k.getDate() : 0, x.currentMonth = B ? k.getMonth() : 0, x.currentYear = B ? k.getFullYear() : 0, this._adjustInstDate(x)
            }
        },
        _getDefaultDate: function (k) {
            return this._restrictMinMax(k, this._determineDate(k, this._get(k, "defaultDate"), new Date))
        },
        _determineDate: function (A, B, x) {
            var q = function (D) {
                var C = new Date;
                return C.setDate(C.getDate() + D), C
            }, k = function (E) {
                try {
                    return e.datepicker.parseDate(e.datepicker._get(A, "dateFormat"), E, e.datepicker._getFormatConfig(A))
                } catch (J) {
                }
                for (var F = (E.toLowerCase().match(/^c/) ? e.datepicker._getDate(A) : null) || new Date, I = F.getFullYear(), G = F.getMonth(), H = F.getDate(), D = /([+\-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g, C = D.exec(E); C;) {
                    switch (C[2] || "d") {
                        case"d":
                        case"D":
                            H += parseInt(C[1], 10);
                            break;
                        case"w":
                        case"W":
                            H += 7 * parseInt(C[1], 10);
                            break;
                        case"m":
                        case"M":
                            G += parseInt(C[1], 10), H = Math.min(H, e.datepicker._getDaysInMonth(I, G));
                            break;
                        case"y":
                        case"Y":
                            I += parseInt(C[1], 10), H = Math.min(H, e.datepicker._getDaysInMonth(I, G))
                    }
                    C = D.exec(E)
                }
                return new Date(I, G, H)
            }, w = null == B || "" === B ? x : "string" == typeof B ? k(B) : "number" == typeof B ? isNaN(B) ? x : q(B) : new Date(B.getTime());
            return w = w && "Invalid Date" == "" + w ? x : w, w && (w.setHours(0), w.setMinutes(0), w.setSeconds(0), w.setMilliseconds(0)), this._daylightSavingAdjust(w)
        },
        _daylightSavingAdjust: function (k) {
            return k ? (k.setHours(k.getHours() > 12 ? k.getHours() + 2 : 0), k) : null
        },
        _setDate: function (x, B, C) {
            var A = !B, q = x.selectedMonth, k = x.selectedYear, w = this._restrictMinMax(x, this._determineDate(x, B, new Date));
            x.selectedDay = x.currentDay = w.getDate(), x.drawMonth = x.selectedMonth = x.currentMonth = w.getMonth(), x.drawYear = x.selectedYear = x.currentYear = w.getFullYear(), q === x.selectedMonth && k === x.selectedYear || C || this._notifyChange(x), this._adjustInstDate(x), x.input && x.input.val(A ? "" : this._formatDate(x))
        },
        _getDate: function (k) {
            var q = !k.currentYear || k.input && "" === k.input.val() ? null : this._daylightSavingAdjust(new Date(k.currentYear, k.currentMonth, k.currentDay));
            return q
        },
        _attachHandlers: function (k) {
            var q = this._get(k, "stepMonths"), w = "#" + k.id.replace(/\\\\/g, "\\");
            k.dpDiv.find("[data-handler]").map(function () {
                var x = {
                    prev: function () {
                        e.datepicker._adjustDate(w, -q, "M")
                    }, next: function () {
                        e.datepicker._adjustDate(w, +q, "M")
                    }, hide: function () {
                        e.datepicker._hideDatepicker()
                    }, today: function () {
                        e.datepicker._gotoToday(w)
                    }, selectDay: function () {
                        return e.datepicker._selectDay(w, +this.getAttribute("data-month"), +this.getAttribute("data-year"), this), !1
                    }, selectMonth: function () {
                        return e.datepicker._selectMonthYear(w, this, "M"), !1
                    }, selectYear: function () {
                        return e.datepicker._selectMonthYear(w, this, "Y"), !1
                    }
                };
                e(this).bind(this.getAttribute("data-event"), x[this.getAttribute("data-handler")])
            })
        },
        _generateHTML: function (Y) {
            var ao, ac, an, ah, az, ai, am, ab, af, ap, X, aY, aj, Z, ag, aa, aq, au, aX, ay, at, ar, ae, O, w, N, H, q, I, ax, K, D, C, av, A, x, J, ad, T, G = new Date, M = this._daylightSavingAdjust(new Date(G.getFullYear(), G.getMonth(), G.getDate())), V = this._get(Y, "isRTL"), k = this._get(Y, "showButtonPanel"), E = this._get(Y, "hideIfNoPrevNext"), al = this._get(Y, "navigationAsDateFormat"), F = this._getNumberOfMonths(Y), S = this._get(Y, "showCurrentAtPos"), P = this._get(Y, "stepMonths"), L = 1 !== F[0] || 1 !== F[1], B = this._daylightSavingAdjust(Y.currentDay ? new Date(Y.currentYear, Y.currentMonth, Y.currentDay) : new Date(9999, 9, 9)), U = this._getMinMaxDate(Y, "min"), aw = this._getMinMaxDate(Y, "max"), W = Y.drawMonth - S, ak = Y.drawYear;
            if (0 > W && (W += 12, ak--), aw) {
                for (ao = this._daylightSavingAdjust(new Date(aw.getFullYear(), aw.getMonth() - F[0] * F[1] + 1, aw.getDate())), ao = U && U > ao ? U : ao; this._daylightSavingAdjust(new Date(ak, W, 1)) > ao;) {
                    W--, 0 > W && (W = 11, ak--)
                }
            }
            for (Y.drawMonth = W, Y.drawYear = ak, ac = this._get(Y, "prevText"), ac = al ? this.formatDate(ac, this._daylightSavingAdjust(new Date(ak, W - P, 1)), this._getFormatConfig(Y)) : ac, an = this._canAdjustMonth(Y, -1, ak, W) ? "<a class='ui-datepicker-prev ui-corner-all' data-handler='prev' data-event='click' title='" + ac + "'><span class='ui-icon ui-icon-circle-triangle-" + (V ? "e" : "w") + "'>" + ac + "</span></a>" : E ? "" : "<a class='ui-datepicker-prev ui-corner-all ui-state-disabled' title='" + ac + "'><span class='ui-icon ui-icon-circle-triangle-" + (V ? "e" : "w") + "'>" + ac + "</span></a>", ah = this._get(Y, "nextText"), ah = al ? this.formatDate(ah, this._daylightSavingAdjust(new Date(ak, W + P, 1)), this._getFormatConfig(Y)) : ah, az = this._canAdjustMonth(Y, 1, ak, W) ? "<a class='ui-datepicker-next ui-corner-all' data-handler='next' data-event='click' title='" + ah + "'><span class='ui-icon ui-icon-circle-triangle-" + (V ? "w" : "e") + "'>" + ah + "</span></a>" : E ? "" : "<a class='ui-datepicker-next ui-corner-all ui-state-disabled' title='" + ah + "'><span class='ui-icon ui-icon-circle-triangle-" + (V ? "w" : "e") + "'>" + ah + "</span></a>", ai = this._get(Y, "currentText"), am = this._get(Y, "gotoCurrent") && Y.currentDay ? B : M, ai = al ? this.formatDate(ai, am, this._getFormatConfig(Y)) : ai, ab = Y.inline ? "" : "<button type='button' class='ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all' data-handler='hide' data-event='click'>" + this._get(Y, "closeText") + "</button>", af = k ? "<div class='ui-datepicker-buttonpane ui-widget-content'>" + (V ? ab : "") + (this._isInRange(Y, am) ? "<button type='button' class='ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all' data-handler='today' data-event='click'>" + ai + "</button>" : "") + (V ? "" : ab) + "</div>" : "", ap = parseInt(this._get(Y, "firstDay"), 10), ap = isNaN(ap) ? 0 : ap, X = this._get(Y, "showWeek"), aY = this._get(Y, "dayNames"), aj = this._get(Y, "dayNamesMin"), Z = this._get(Y, "monthNames"), ag = this._get(Y, "monthNamesShort"), aa = this._get(Y, "beforeShowDay"), aq = this._get(Y, "showOtherMonths"), au = this._get(Y, "selectOtherMonths"), aX = this._getDefaultDate(Y), ay = "", ar = 0; F[0] > ar; ar++) {
                for (ae = "", this.maxRows = 4, O = 0; F[1] > O; O++) {
                    if (w = this._daylightSavingAdjust(new Date(ak, W, Y.selectedDay)), N = " ui-corner-all", H = "", L) {
                        if (H += "<div class='ui-datepicker-group", F[1] > 1) {
                            switch (O) {
                                case 0:
                                    H += " ui-datepicker-group-first", N = " ui-corner-" + (V ? "right" : "left");
                                    break;
                                case F[1] - 1:
                                    H += " ui-datepicker-group-last", N = " ui-corner-" + (V ? "left" : "right");
                                    break;
                                default:
                                    H += " ui-datepicker-group-middle", N = ""
                            }
                        }
                        H += "'>"
                    }
                    for (H += "<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix" + N + "'>" + (/all|left/.test(N) && 0 === ar ? V ? az : an : "") + (/all|right/.test(N) && 0 === ar ? V ? an : az : "") + this._generateMonthYearHeader(Y, W, ak, U, aw, ar > 0 || O > 0, Z, ag) + "</div><table class='ui-datepicker-calendar'><thead><tr>", q = X ? "<th class='ui-datepicker-week-col'>" + this._get(Y, "weekHeader") + "</th>" : "", at = 0; 7 > at; at++) {
                        I = (at + ap) % 7, q += "<th scope='col'" + ((at + ap + 6) % 7 >= 5 ? " class='ui-datepicker-week-end'" : "") + "><span title='" + aY[I] + "'>" + aj[I] + "</span></th>"
                    }
                    for (H += q + "</tr></thead><tbody>", ax = this._getDaysInMonth(ak, W), ak === Y.selectedYear && W === Y.selectedMonth && (Y.selectedDay = Math.min(Y.selectedDay, ax)), K = (this._getFirstDayOfMonth(ak, W) - ap + 7) % 7, D = Math.ceil((K + ax) / 7), C = L ? this.maxRows > D ? this.maxRows : D : D, this.maxRows = C, av = this._daylightSavingAdjust(new Date(ak, W, 1 - K)), A = 0; C > A; A++) {
                        for (H += "<tr>", x = X ? "<td class='ui-datepicker-week-col'>" + this._get(Y, "calculateWeek")(av) + "</td>" : "", at = 0; 7 > at; at++) {
                            J = aa ? aa.apply(Y.input ? Y.input[0] : null, [av]) : [!0, ""], ad = av.getMonth() !== W, T = ad && !au || !J[0] || U && U > av || aw && av > aw, x += "<td class='" + ((at + ap + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (ad ? " ui-datepicker-other-month" : "") + (av.getTime() === w.getTime() && W === Y.selectedMonth && Y._keyEvent || aX.getTime() === av.getTime() && aX.getTime() === w.getTime() ? " " + this._dayOverClass : "") + (T ? " " + this._unselectableClass + " ui-state-disabled" : "") + (ad && !aq ? "" : " " + J[1] + (av.getTime() === B.getTime() ? " " + this._currentClass : "") + (av.getTime() === M.getTime() ? " ui-datepicker-today" : "")) + "'" + (ad && !aq || !J[2] ? "" : " title='" + J[2].replace(/'/g, "&#39;") + "'") + (T ? "" : " data-handler='selectDay' data-event='click' data-month='" + av.getMonth() + "' data-year='" + av.getFullYear() + "'") + ">" + (ad && !aq ? "&#xa0;" : T ? "<span class='ui-state-default'>" + av.getDate() + "</span>" : "<a class='ui-state-default" + (av.getTime() === M.getTime() ? " ui-state-highlight" : "") + (av.getTime() === B.getTime() ? " ui-state-active" : "") + (ad ? " ui-priority-secondary" : "") + "' href='#'>" + av.getDate() + "</a>") + "</td>", av.setDate(av.getDate() + 1), av = this._daylightSavingAdjust(av)
                        }
                        H += x + "</tr>"
                    }
                    W++, W > 11 && (W = 0, ak++), H += "</tbody></table>" + (L ? "</div>" + (F[0] > 0 && O === F[1] - 1 ? "<div class='ui-datepicker-row-break'></div>" : "") : ""), ae += H
                }
                ay += ae
            }
            return ay += af, Y._keyEvent = !1, ay
        },
        _generateMonthYearHeader: function (L, C, P, B, q, H, w, A) {
            var O, ab, D, K, J, x, M, k, N = this._get(L, "changeMonth"), E = this._get(L, "changeYear"), F = this._get(L, "showMonthAfterYear"), I = "<div class='ui-datepicker-title'>", G = "";
            if (H || !N) {
                G += "<span class='ui-datepicker-month'>" + w[C] + "</span>"
            } else {
                for (O = B && B.getFullYear() === P, ab = q && q.getFullYear() === P, G += "<select class='ui-datepicker-month' data-handler='selectMonth' data-event='change'>", D = 0; 12 > D; D++) {
                    (!O || D >= B.getMonth()) && (!ab || q.getMonth() >= D) && (G += "<option value='" + D + "'" + (D === C ? " selected='selected'" : "") + ">" + A[D] + "</option>")
                }
                G += "</select>"
            }
            if (F || (I += G + (!H && N && E ? "" : "&#xa0;")), !L.yearshtml) {
                if (L.yearshtml = "", H || !E) {
                    I += "<span class='ui-datepicker-year'>" + P + "</span>"
                } else {
                    for (K = this._get(L, "yearRange").split(":"), J = (new Date).getFullYear(), x = function (S) {
                        var T = S.match(/c[+\-].*/) ? P + parseInt(S.substring(1), 10) : S.match(/[+\-].*/) ? J + parseInt(S, 10) : parseInt(S, 10);
                        return isNaN(T) ? J : T
                    }, M = x(K[0]), k = Math.max(M, x(K[1] || "")), M = B ? Math.max(M, B.getFullYear()) : M, k = q ? Math.min(k, q.getFullYear()) : k, L.yearshtml += "<select class='ui-datepicker-year' data-handler='selectYear' data-event='change'>"; k >= M; M++) {
                        L.yearshtml += "<option value='" + M + "'" + (M === P ? " selected='selected'" : "") + ">" + M + "</option>"
                    }
                    L.yearshtml += "</select>", I += L.yearshtml, L.yearshtml = null
                }
            }
            return I += this._get(L, "yearSuffix"), F && (I += (!H && N && E ? "" : "&#xa0;") + G), I += "</div>"
        },
        _adjustInstDate: function (x, B, C) {
            var A = x.drawYear + ("Y" === C ? B : 0), q = x.drawMonth + ("M" === C ? B : 0), k = Math.min(x.selectedDay, this._getDaysInMonth(A, q)) + ("D" === C ? B : 0), w = this._restrictMinMax(x, this._daylightSavingAdjust(new Date(A, q, k)));
            x.selectedDay = w.getDate(), x.drawMonth = x.selectedMonth = w.getMonth(), x.drawYear = x.selectedYear = w.getFullYear(), ("M" === C || "Y" === C) && this._notifyChange(x)
        },
        _restrictMinMax: function (x, k) {
            var q = this._getMinMaxDate(x, "min"), A = this._getMinMaxDate(x, "max"), w = q && q > k ? q : k;
            return A && w > A ? A : w
        },
        _notifyChange: function (k) {
            var q = this._get(k, "onChangeMonthYear");
            q && q.apply(k.input ? k.input[0] : null, [k.selectedYear, k.selectedMonth + 1, k])
        },
        _getNumberOfMonths: function (k) {
            var q = this._get(k, "numberOfMonths");
            return null == q ? [1, 1] : "number" == typeof q ? [1, q] : q
        },
        _getMinMaxDate: function (k, q) {
            return this._determineDate(k, this._get(k, q + "Date"), null)
        },
        _getDaysInMonth: function (k, q) {
            return 32 - this._daylightSavingAdjust(new Date(k, q, 32)).getDate()
        },
        _getFirstDayOfMonth: function (k, q) {
            return new Date(k, q, 1).getDay()
        },
        _canAdjustMonth: function (w, A, B, x) {
            var q = this._getNumberOfMonths(w), k = this._daylightSavingAdjust(new Date(B, x + (0 > A ? A : q[0] * q[1]), 1));
            return 0 > A && k.setDate(this._getDaysInMonth(k.getFullYear(), k.getMonth())), this._isInRange(w, k)
        },
        _isInRange: function (w, k) {
            var A, E, B = this._getMinMaxDate(w, "min"), q = this._getMinMaxDate(w, "max"), C = null, D = null, x = this._get(w, "yearRange");
            return x && (A = x.split(":"), E = (new Date).getFullYear(), C = parseInt(A[0], 10), D = parseInt(A[1], 10), A[0].match(/[+\-].*/) && (C += E), A[1].match(/[+\-].*/) && (D += E)), (!B || k.getTime() >= B.getTime()) && (!q || k.getTime() <= q.getTime()) && (!C || k.getFullYear() >= C) && (!D || D >= k.getFullYear())
        },
        _getFormatConfig: function (k) {
            var q = this._get(k, "shortYearCutoff");
            return q = "string" != typeof q ? q : (new Date).getFullYear() % 100 + parseInt(q, 10), {
                shortYearCutoff: q,
                dayNamesShort: this._get(k, "dayNamesShort"),
                dayNames: this._get(k, "dayNames"),
                monthNamesShort: this._get(k, "monthNamesShort"),
                monthNames: this._get(k, "monthNames")
            }
        },
        _formatDate: function (x, k, q, A) {
            k || (x.currentDay = x.selectedDay, x.currentMonth = x.selectedMonth, x.currentYear = x.selectedYear);
            var w = k ? "object" == typeof k ? k : this._daylightSavingAdjust(new Date(A, q, k)) : this._daylightSavingAdjust(new Date(x.currentYear, x.currentMonth, x.currentDay));
            return this.formatDate(this._get(x, "dateFormat"), w, this._getFormatConfig(x))
        }
    }), e.fn.datepicker = function (k) {
        if (!this.length) {
            return this
        }
        e.datepicker.initialized || (e(document).mousedown(e.datepicker._checkExternalClick), e.datepicker.initialized = !0), 0 === e("#" + e.datepicker._mainDivId).length && e("body").append(e.datepicker.dpDiv);
        var q = Array.prototype.slice.call(arguments, 1);
        return "string" != typeof k || "isDisabled" !== k && "getDate" !== k && "widget" !== k ? "option" === k && 2 === arguments.length && "string" == typeof arguments[1] ? e.datepicker["_" + k + "Datepicker"].apply(e.datepicker, [this[0]].concat(q)) : this.each(function () {
            "string" == typeof k ? e.datepicker["_" + k + "Datepicker"].apply(e.datepicker, [this].concat(q)) : e.datepicker._attachDatepicker(this, k)
        }) : e.datepicker["_" + k + "Datepicker"].apply(e.datepicker, [this[0]].concat(q))
    }, e.datepicker = new r, e.datepicker.initialized = !1, e.datepicker.uuid = (new Date).getTime(), e.datepicker.version = "1.11.4", e.datepicker, e.widget("ui.draggable", e.ui.mouse, {
        version: "1.11.4",
        widgetEventPrefix: "drag",
        options: {
            addClasses: !0,
            appendTo: "parent",
            axis: !1,
            connectToSortable: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            iframeFix: !1,
            opacity: !1,
            refreshPositions: !1,
            revert: !1,
            revertDuration: 500,
            scope: "default",
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: !1,
            snapMode: "both",
            snapTolerance: 20,
            stack: !1,
            zIndex: !1,
            drag: null,
            start: null,
            stop: null
        },
        _create: function () {
            "original" === this.options.helper && this._setPositionRelative(), this.options.addClasses && this.element.addClass("ui-draggable"), this.options.disabled && this.element.addClass("ui-draggable-disabled"), this._setHandleClassName(), this._mouseInit()
        },
        _setOption: function (k, q) {
            this._super(k, q), "handle" === k && (this._removeHandleClassName(), this._setHandleClassName())
        },
        _destroy: function () {
            return (this.helper || this.element).is(".ui-draggable-dragging") ? (this.destroyOnClear = !0, void 0) : (this.element.removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled"), this._removeHandleClassName(), this._mouseDestroy(), void 0)
        },
        _mouseCapture: function (k) {
            var q = this.options;
            return this._blurActiveElement(k), this.helper || q.disabled || e(k.target).closest(".ui-resizable-handle").length > 0 ? !1 : (this.handle = this._getHandle(k), this.handle ? (this._blockFrames(q.iframeFix === !0 ? "iframe" : q.iframeFix), !0) : !1)
        },
        _blockFrames: function (k) {
            this.iframeBlocks = this.document.find(k).map(function () {
                var q = e(this);
                return e("<div>").css("position", "absolute").appendTo(q.parent()).outerWidth(q.outerWidth()).outerHeight(q.outerHeight()).offset(q.offset())[0]
            })
        },
        _unblockFrames: function () {
            this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks)
        },
        _blurActiveElement: function (k) {
            var q = this.document[0];
            if (this.handleElement.is(k.target)) {
                try {
                    q.activeElement && "body" !== q.activeElement.nodeName.toLowerCase() && e(q.activeElement).blur()
                } catch (w) {
                }
            }
        },
        _mouseStart: function (k) {
            var q = this.options;
            return this.helper = this._createHelper(k), this.helper.addClass("ui-draggable-dragging"), this._cacheHelperProportions(), e.ui.ddmanager && (e.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css("position"), this.scrollParent = this.helper.scrollParent(!0), this.offsetParent = this.helper.offsetParent(), this.hasFixedAncestor = this.helper.parents().filter(function () {
                return "fixed" === e(this).css("position")
            }).length > 0, this.positionAbs = this.element.offset(), this._refreshOffsets(k), this.originalPosition = this.position = this._generatePosition(k, !1), this.originalPageX = k.pageX, this.originalPageY = k.pageY, q.cursorAt && this._adjustOffsetFromHelper(q.cursorAt), this._setContainment(), this._trigger("start", k) === !1 ? (this._clear(), !1) : (this._cacheHelperProportions(), e.ui.ddmanager && !q.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, k), this._normalizeRightBottom(), this._mouseDrag(k, !0), e.ui.ddmanager && e.ui.ddmanager.dragStart(this, k), !0)
        },
        _refreshOffsets: function (k) {
            this.offset = {
                top: this.positionAbs.top - this.margins.top,
                left: this.positionAbs.left - this.margins.left,
                scroll: !1,
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }, this.offset.click = {
                left: k.pageX - this.offset.left,
                top: k.pageY - this.offset.top
            }
        },
        _mouseDrag: function (k, q) {
            if (this.hasFixedAncestor && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(k, !0), this.positionAbs = this._convertPositionTo("absolute"), !q) {
                var w = this._uiHash();
                if (this._trigger("drag", k, w) === !1) {
                    return this._mouseUp({}), !1
                }
                this.position = w.position
            }
            return this.helper[0].style.left = this.position.left + "px", this.helper[0].style.top = this.position.top + "px", e.ui.ddmanager && e.ui.ddmanager.drag(this, k), !1
        },
        _mouseStop: function (k) {
            var q = this, w = !1;
            return e.ui.ddmanager && !this.options.dropBehaviour && (w = e.ui.ddmanager.drop(this, k)), this.dropped && (w = this.dropped, this.dropped = !1), "invalid" === this.options.revert && !w || "valid" === this.options.revert && w || this.options.revert === !0 || e.isFunction(this.options.revert) && this.options.revert.call(this.element, w) ? e(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () {
                q._trigger("stop", k) !== !1 && q._clear()
            }) : this._trigger("stop", k) !== !1 && this._clear(), !1
        },
        _mouseUp: function (k) {
            return this._unblockFrames(), e.ui.ddmanager && e.ui.ddmanager.dragStop(this, k), this.handleElement.is(k.target) && this.element.focus(), e.ui.mouse.prototype._mouseUp.call(this, k)
        },
        cancel: function () {
            return this.helper.is(".ui-draggable-dragging") ? this._mouseUp({}) : this._clear(), this
        },
        _getHandle: function (k) {
            return this.options.handle ? !!e(k.target).closest(this.element.find(this.options.handle)).length : !0
        },
        _setHandleClassName: function () {
            this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element, this.handleElement.addClass("ui-draggable-handle")
        },
        _removeHandleClassName: function () {
            this.handleElement.removeClass("ui-draggable-handle")
        },
        _createHelper: function (k) {
            var q = this.options, x = e.isFunction(q.helper), w = x ? e(q.helper.apply(this.element[0], [k])) : "clone" === q.helper ? this.element.clone().removeAttr("id") : this.element;
            return w.parents("body").length || w.appendTo("parent" === q.appendTo ? this.element[0].parentNode : q.appendTo), x && w[0] === this.element[0] && this._setPositionRelative(), w[0] === this.element[0] || /(fixed|absolute)/.test(w.css("position")) || w.css("position", "absolute"), w
        },
        _setPositionRelative: function () {
            /^(?:r|a|f)/.test(this.element.css("position")) || (this.element[0].style.position = "relative")
        },
        _adjustOffsetFromHelper: function (k) {
            "string" == typeof k && (k = k.split(" ")), e.isArray(k) && (k = {
                left: +k[0],
                top: +k[1] || 0
            }), "left" in k && (this.offset.click.left = k.left + this.margins.left), "right" in k && (this.offset.click.left = this.helperProportions.width - k.right + this.margins.left), "top" in k && (this.offset.click.top = k.top + this.margins.top), "bottom" in k && (this.offset.click.top = this.helperProportions.height - k.bottom + this.margins.top)
        },
        _isRootNode: function (k) {
            return /(html|body)/i.test(k.tagName) || k === this.document[0]
        },
        _getParentOffset: function () {
            var k = this.offsetParent.offset(), q = this.document[0];
            return "absolute" === this.cssPosition && this.scrollParent[0] !== q && e.contains(this.scrollParent[0], this.offsetParent[0]) && (k.left += this.scrollParent.scrollLeft(), k.top += this.scrollParent.scrollTop()), this._isRootNode(this.offsetParent[0]) && (k = {
                top: 0,
                left: 0
            }), {
                top: k.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: k.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function () {
            if ("relative" !== this.cssPosition) {
                return {top: 0, left: 0}
            }
            var k = this.element.position(), q = this._isRootNode(this.scrollParent[0]);
            return {
                top: k.top - (parseInt(this.helper.css("top"), 10) || 0) + (q ? 0 : this.scrollParent.scrollTop()),
                left: k.left - (parseInt(this.helper.css("left"), 10) || 0) + (q ? 0 : this.scrollParent.scrollLeft())
            }
        },
        _cacheMargins: function () {
            this.margins = {
                left: parseInt(this.element.css("marginLeft"), 10) || 0,
                top: parseInt(this.element.css("marginTop"), 10) || 0,
                right: parseInt(this.element.css("marginRight"), 10) || 0,
                bottom: parseInt(this.element.css("marginBottom"), 10) || 0
            }
        },
        _cacheHelperProportions: function () {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function () {
            var x, A, w, q = this.options, k = this.document[0];
            return this.relativeContainer = null, q.containment ? "window" === q.containment ? (this.containment = [e(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, e(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, e(window).scrollLeft() + e(window).width() - this.helperProportions.width - this.margins.left, e(window).scrollTop() + (e(window).height() || k.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : "document" === q.containment ? (this.containment = [0, 0, e(k).width() - this.helperProportions.width - this.margins.left, (e(k).height() || k.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top], void 0) : q.containment.constructor === Array ? (this.containment = q.containment, void 0) : ("parent" === q.containment && (q.containment = this.helper[0].parentNode), A = e(q.containment), w = A[0], w && (x = /(scroll|auto)/.test(A.css("overflow")), this.containment = [(parseInt(A.css("borderLeftWidth"), 10) || 0) + (parseInt(A.css("paddingLeft"), 10) || 0), (parseInt(A.css("borderTopWidth"), 10) || 0) + (parseInt(A.css("paddingTop"), 10) || 0), (x ? Math.max(w.scrollWidth, w.offsetWidth) : w.offsetWidth) - (parseInt(A.css("borderRightWidth"), 10) || 0) - (parseInt(A.css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (x ? Math.max(w.scrollHeight, w.offsetHeight) : w.offsetHeight) - (parseInt(A.css("borderBottomWidth"), 10) || 0) - (parseInt(A.css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relativeContainer = A), void 0) : (this.containment = null, void 0)
        },
        _convertPositionTo: function (w, k) {
            k || (k = this.position);
            var q = "absolute" === w ? 1 : -1, x = this._isRootNode(this.scrollParent[0]);
            return {
                top: k.top + this.offset.relative.top * q + this.offset.parent.top * q - ("fixed" === this.cssPosition ? -this.offset.scroll.top : x ? 0 : this.offset.scroll.top) * q,
                left: k.left + this.offset.relative.left * q + this.offset.parent.left * q - ("fixed" === this.cssPosition ? -this.offset.scroll.left : x ? 0 : this.offset.scroll.left) * q
            }
        },
        _generatePosition: function (k, E) {
            var w, C, A, F, B = this.options, D = this._isRootNode(this.scrollParent[0]), q = k.pageX, x = k.pageY;
            return D && this.offset.scroll || (this.offset.scroll = {
                top: this.scrollParent.scrollTop(),
                left: this.scrollParent.scrollLeft()
            }), E && (this.containment && (this.relativeContainer ? (C = this.relativeContainer.offset(), w = [this.containment[0] + C.left, this.containment[1] + C.top, this.containment[2] + C.left, this.containment[3] + C.top]) : w = this.containment, k.pageX - this.offset.click.left < w[0] && (q = w[0] + this.offset.click.left), k.pageY - this.offset.click.top < w[1] && (x = w[1] + this.offset.click.top), k.pageX - this.offset.click.left > w[2] && (q = w[2] + this.offset.click.left), k.pageY - this.offset.click.top > w[3] && (x = w[3] + this.offset.click.top)), B.grid && (A = B.grid[1] ? this.originalPageY + Math.round((x - this.originalPageY) / B.grid[1]) * B.grid[1] : this.originalPageY, x = w ? A - this.offset.click.top >= w[1] || A - this.offset.click.top > w[3] ? A : A - this.offset.click.top >= w[1] ? A - B.grid[1] : A + B.grid[1] : A, F = B.grid[0] ? this.originalPageX + Math.round((q - this.originalPageX) / B.grid[0]) * B.grid[0] : this.originalPageX, q = w ? F - this.offset.click.left >= w[0] || F - this.offset.click.left > w[2] ? F : F - this.offset.click.left >= w[0] ? F - B.grid[0] : F + B.grid[0] : F), "y" === B.axis && (q = this.originalPageX), "x" === B.axis && (x = this.originalPageY)), {
                top: x - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.offset.scroll.top : D ? 0 : this.offset.scroll.top),
                left: q - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.offset.scroll.left : D ? 0 : this.offset.scroll.left)
            }
        },
        _clear: function () {
            this.helper.removeClass("ui-draggable-dragging"), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1, this.destroyOnClear && this.destroy()
        },
        _normalizeRightBottom: function () {
            "y" !== this.options.axis && "auto" !== this.helper.css("right") && (this.helper.width(this.helper.width()), this.helper.css("right", "auto")), "x" !== this.options.axis && "auto" !== this.helper.css("bottom") && (this.helper.height(this.helper.height()), this.helper.css("bottom", "auto"))
        },
        _trigger: function (k, q, w) {
            return w = w || this._uiHash(), e.ui.plugin.call(this, k, [q, w, this], !0), /^(drag|start|stop)/.test(k) && (this.positionAbs = this._convertPositionTo("absolute"), w.offset = this.positionAbs), e.Widget.prototype._trigger.call(this, k, q, w)
        },
        plugins: {},
        _uiHash: function () {
            return {
                helper: this.helper,
                position: this.position,
                originalPosition: this.originalPosition,
                offset: this.positionAbs
            }
        }
    }), e.ui.plugin.add("draggable", "connectToSortable", {
        start: function (k, q, x) {
            var w = e.extend({}, q, {item: x.element});
            x.sortables = [], e(x.options.connectToSortable).each(function () {
                var A = e(this).sortable("instance");
                A && !A.options.disabled && (x.sortables.push(A), A.refreshPositions(), A._trigger("activate", k, w))
            })
        }, stop: function (k, q, x) {
            var w = e.extend({}, q, {item: x.element});
            x.cancelHelperRemoval = !1, e.each(x.sortables, function () {
                var A = this;
                A.isOver ? (A.isOver = 0, x.cancelHelperRemoval = !0, A.cancelHelperRemoval = !1, A._storedCSS = {
                    position: A.placeholder.css("position"),
                    top: A.placeholder.css("top"),
                    left: A.placeholder.css("left")
                }, A._mouseStop(k), A.options.helper = A.options._helper) : (A.cancelHelperRemoval = !0, A._trigger("deactivate", k, w))
            })
        }, drag: function (k, q, w) {
            e.each(w.sortables, function () {
                var x = !1, A = this;
                A.positionAbs = w.positionAbs, A.helperProportions = w.helperProportions, A.offset.click = w.offset.click, A._intersectsWith(A.containerCache) && (x = !0, e.each(w.sortables, function () {
                    return this.positionAbs = w.positionAbs, this.helperProportions = w.helperProportions, this.offset.click = w.offset.click, this !== A && this._intersectsWith(this.containerCache) && e.contains(A.element[0], this.element[0]) && (x = !1), x
                })), x ? (A.isOver || (A.isOver = 1, w._parent = q.helper.parent(), A.currentItem = q.helper.appendTo(A.element).data("ui-sortable-item", !0), A.options._helper = A.options.helper, A.options.helper = function () {
                    return q.helper[0]
                }, k.target = A.currentItem[0], A._mouseCapture(k, !0), A._mouseStart(k, !0, !0), A.offset.click.top = w.offset.click.top, A.offset.click.left = w.offset.click.left, A.offset.parent.left -= w.offset.parent.left - A.offset.parent.left, A.offset.parent.top -= w.offset.parent.top - A.offset.parent.top, w._trigger("toSortable", k), w.dropped = A.element, e.each(w.sortables, function () {
                    this.refreshPositions()
                }), w.currentItem = w.element, A.fromOutside = w), A.currentItem && (A._mouseDrag(k), q.position = A.position)) : A.isOver && (A.isOver = 0, A.cancelHelperRemoval = !0, A.options._revert = A.options.revert, A.options.revert = !1, A._trigger("out", k, A._uiHash(A)), A._mouseStop(k, !0), A.options.revert = A.options._revert, A.options.helper = A.options._helper, A.placeholder && A.placeholder.remove(), q.helper.appendTo(w._parent), w._refreshOffsets(k), q.position = w._generatePosition(k, !0), w._trigger("fromSortable", k), w.dropped = !1, e.each(w.sortables, function () {
                    this.refreshPositions()
                }))
            })
        }
    }), e.ui.plugin.add("draggable", "cursor", {
        start: function (x, A, w) {
            var q = e("body"), k = w.options;
            q.css("cursor") && (k._cursor = q.css("cursor")), q.css("cursor", k.cursor)
        }, stop: function (k, q, x) {
            var w = x.options;
            w._cursor && e("body").css("cursor", w._cursor)
        }
    }), e.ui.plugin.add("draggable", "opacity", {
        start: function (x, A, w) {
            var q = e(A.helper), k = w.options;
            q.css("opacity") && (k._opacity = q.css("opacity")), q.css("opacity", k.opacity)
        }, stop: function (k, q, x) {
            var w = x.options;
            w._opacity && e(q.helper).css("opacity", w._opacity)
        }
    }), e.ui.plugin.add("draggable", "scroll", {
        start: function (w, k, q) {
            q.scrollParentNotHidden || (q.scrollParentNotHidden = q.helper.scrollParent(!1)), q.scrollParentNotHidden[0] !== q.document[0] && "HTML" !== q.scrollParentNotHidden[0].tagName && (q.overflowOffset = q.scrollParentNotHidden.offset())
        }, drag: function (B, C, A) {
            var q = A.options, k = !1, w = A.scrollParentNotHidden[0], x = A.document[0];
            w !== x && "HTML" !== w.tagName ? (q.axis && "x" === q.axis || (A.overflowOffset.top + w.offsetHeight - B.pageY < q.scrollSensitivity ? w.scrollTop = k = w.scrollTop + q.scrollSpeed : B.pageY - A.overflowOffset.top < q.scrollSensitivity && (w.scrollTop = k = w.scrollTop - q.scrollSpeed)), q.axis && "y" === q.axis || (A.overflowOffset.left + w.offsetWidth - B.pageX < q.scrollSensitivity ? w.scrollLeft = k = w.scrollLeft + q.scrollSpeed : B.pageX - A.overflowOffset.left < q.scrollSensitivity && (w.scrollLeft = k = w.scrollLeft - q.scrollSpeed))) : (q.axis && "x" === q.axis || (B.pageY - e(x).scrollTop() < q.scrollSensitivity ? k = e(x).scrollTop(e(x).scrollTop() - q.scrollSpeed) : e(window).height() - (B.pageY - e(x).scrollTop()) < q.scrollSensitivity && (k = e(x).scrollTop(e(x).scrollTop() + q.scrollSpeed))), q.axis && "y" === q.axis || (B.pageX - e(x).scrollLeft() < q.scrollSensitivity ? k = e(x).scrollLeft(e(x).scrollLeft() - q.scrollSpeed) : e(window).width() - (B.pageX - e(x).scrollLeft()) < q.scrollSensitivity && (k = e(x).scrollLeft(e(x).scrollLeft() + q.scrollSpeed)))), k !== !1 && e.ui.ddmanager && !q.dropBehaviour && e.ui.ddmanager.prepareOffsets(A, B)
        }
    }), e.ui.plugin.add("draggable", "snap", {
        start: function (k, q, x) {
            var w = x.options;
            x.snapElements = [], e(w.snap.constructor !== String ? w.snap.items || ":data(ui-draggable)" : w.snap).each(function () {
                var A = e(this), B = A.offset();
                this !== x.element[0] && x.snapElements.push({
                    item: this,
                    width: A.outerWidth(),
                    height: A.outerHeight(),
                    top: B.top,
                    left: B.left
                })
            })
        }, drag: function (D, O, C) {
            var w, G, x, B, N, k, E, K, J, A, L = C.options, q = L.snapTolerance, M = O.offset.left, F = M + C.helperProportions.width, I = O.offset.top, H = I + C.helperProportions.height;
            for (J = C.snapElements.length - 1; J >= 0; J--) {
                N = C.snapElements[J].left - C.margins.left, k = N + C.snapElements[J].width, E = C.snapElements[J].top - C.margins.top, K = E + C.snapElements[J].height, N - q > F || M > k + q || E - q > H || I > K + q || !e.contains(C.snapElements[J].item.ownerDocument, C.snapElements[J].item) ? (C.snapElements[J].snapping && C.options.snap.release && C.options.snap.release.call(C.element, D, e.extend(C._uiHash(), {snapItem: C.snapElements[J].item})), C.snapElements[J].snapping = !1) : ("inner" !== L.snapMode && (w = q >= Math.abs(E - H), G = q >= Math.abs(K - I), x = q >= Math.abs(N - F), B = q >= Math.abs(k - M), w && (O.position.top = C._convertPositionTo("relative", {
                    top: E - C.helperProportions.height,
                    left: 0
                }).top), G && (O.position.top = C._convertPositionTo("relative", {
                    top: K,
                    left: 0
                }).top), x && (O.position.left = C._convertPositionTo("relative", {
                    top: 0,
                    left: N - C.helperProportions.width
                }).left), B && (O.position.left = C._convertPositionTo("relative", {
                    top: 0,
                    left: k
                }).left)), A = w || G || x || B, "outer" !== L.snapMode && (w = q >= Math.abs(E - I), G = q >= Math.abs(K - H), x = q >= Math.abs(N - M), B = q >= Math.abs(k - F), w && (O.position.top = C._convertPositionTo("relative", {
                    top: E,
                    left: 0
                }).top), G && (O.position.top = C._convertPositionTo("relative", {
                    top: K - C.helperProportions.height,
                    left: 0
                }).top), x && (O.position.left = C._convertPositionTo("relative", {
                    top: 0,
                    left: N
                }).left), B && (O.position.left = C._convertPositionTo("relative", {
                    top: 0,
                    left: k - C.helperProportions.width
                }).left)), !C.snapElements[J].snapping && (w || G || x || B || A) && C.options.snap.snap && C.options.snap.snap.call(C.element, D, e.extend(C._uiHash(), {snapItem: C.snapElements[J].item})), C.snapElements[J].snapping = w || G || x || B || A)
            }
        }
    }), e.ui.plugin.add("draggable", "stack", {
        start: function (A, B, x) {
            var q, k = x.options, w = e.makeArray(e(k.stack)).sort(function (D, C) {
                return (parseInt(e(D).css("zIndex"), 10) || 0) - (parseInt(e(C).css("zIndex"), 10) || 0)
            });
            w.length && (q = parseInt(e(w[0]).css("zIndex"), 10) || 0, e(w).each(function (C) {
                e(this).css("zIndex", q + C)
            }), this.css("zIndex", q + w.length))
        }
    }), e.ui.plugin.add("draggable", "zIndex", {
        start: function (x, A, w) {
            var q = e(A.helper), k = w.options;
            q.css("zIndex") && (k._zIndex = q.css("zIndex")), q.css("zIndex", k.zIndex)
        }, stop: function (k, q, x) {
            var w = x.options;
            w._zIndex && e(q.helper).css("zIndex", w._zIndex)
        }
    }), e.ui.draggable, e.widget("ui.resizable", e.ui.mouse, {
        version: "1.11.4",
        widgetEventPrefix: "resize",
        options: {
            alsoResize: !1,
            animate: !1,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: !1,
            autoHide: !1,
            containment: !1,
            ghost: !1,
            grid: !1,
            handles: "e,s,se",
            helper: !1,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 90,
            resize: null,
            start: null,
            stop: null
        },
        _num: function (k) {
            return parseInt(k, 10) || 0
        },
        _isNumber: function (k) {
            return !isNaN(parseInt(k, 10))
        },
        _hasScroll: function (k, q) {
            if ("hidden" === e(k).css("overflow")) {
                return !1
            }
            var x = q && "left" === q ? "scrollLeft" : "scrollTop", w = !1;
            return k[x] > 0 ? !0 : (k[x] = 1, w = k[x] > 0, k[x] = 0, w)
        },
        _create: function () {
            var B, C, A, q, k, w = this, x = this.options;
            if (this.element.addClass("ui-resizable"), e.extend(this, {
                _aspectRatio: !!x.aspectRatio,
                aspectRatio: x.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: x.helper || x.ghost || x.animate ? x.helper || "ui-resizable-helper" : null
            }), this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i) && (this.element.wrap(e("<div class='ui-wrapper' style='overflow: hidden;'></div>").css({
                position: this.element.css("position"),
                width: this.element.outerWidth(),
                height: this.element.outerHeight(),
                top: this.element.css("top"),
                left: this.element.css("left")
            })), this.element = this.element.parent().data("ui-resizable", this.element.resizable("instance")), this.elementIsWrapper = !0, this.element.css({
                marginLeft: this.originalElement.css("marginLeft"),
                marginTop: this.originalElement.css("marginTop"),
                marginRight: this.originalElement.css("marginRight"),
                marginBottom: this.originalElement.css("marginBottom")
            }), this.originalElement.css({
                marginLeft: 0,
                marginTop: 0,
                marginRight: 0,
                marginBottom: 0
            }), this.originalResizeStyle = this.originalElement.css("resize"), this.originalElement.css("resize", "none"), this._proportionallyResizeElements.push(this.originalElement.css({
                position: "static",
                zoom: 1,
                display: "block"
            })), this.originalElement.css({margin: this.originalElement.css("margin")}), this._proportionallyResize()), this.handles = x.handles || (e(".ui-resizable-handle", this.element).length ? {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            } : "e,s,se"), this._handles = e(), this.handles.constructor === String) {
                for ("all" === this.handles && (this.handles = "n,e,s,w,se,sw,ne,nw"), B = this.handles.split(","), this.handles = {}, C = 0; B.length > C; C++) {
                    A = e.trim(B[C]), k = "ui-resizable-" + A, q = e("<div class='ui-resizable-handle " + k + "'></div>"), q.css({zIndex: x.zIndex}), "se" === A && q.addClass("ui-icon ui-icon-gripsmall-diagonal-se"), this.handles[A] = ".ui-resizable-" + A, this.element.append(q)
                }
            }
            this._renderAxis = function (H) {
                var D, G, F, E;
                H = H || this.element;
                for (D in this.handles) {
                    this.handles[D].constructor === String ? this.handles[D] = this.element.children(this.handles[D]).first().show() : (this.handles[D].jquery || this.handles[D].nodeType) && (this.handles[D] = e(this.handles[D]), this._on(this.handles[D], {mousedown: w._mouseDown})), this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i) && (G = e(this.handles[D], this.element), E = /sw|ne|nw|se|n|s/.test(D) ? G.outerHeight() : G.outerWidth(), F = ["padding", /ne|nw|n/.test(D) ? "Top" : /se|sw|s/.test(D) ? "Bottom" : /^e$/.test(D) ? "Right" : "Left"].join(""), H.css(F, E), this._proportionallyResize()), this._handles = this._handles.add(this.handles[D])
                }
            }, this._renderAxis(this.element), this._handles = this._handles.add(this.element.find(".ui-resizable-handle")), this._handles.disableSelection(), this._handles.mouseover(function () {
                w.resizing || (this.className && (q = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), w.axis = q && q[1] ? q[1] : "se")
            }), x.autoHide && (this._handles.hide(), e(this.element).addClass("ui-resizable-autohide").mouseenter(function () {
                x.disabled || (e(this).removeClass("ui-resizable-autohide"), w._handles.show())
            }).mouseleave(function () {
                x.disabled || w.resizing || (e(this).addClass("ui-resizable-autohide"), w._handles.hide())
            })), this._mouseInit()
        },
        _destroy: function () {
            this._mouseDestroy();
            var k, q = function (w) {
                e(w).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").removeData("ui-resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
            };
            return this.elementIsWrapper && (q(this.element), k = this.element, this.originalElement.css({
                position: k.css("position"),
                width: k.outerWidth(),
                height: k.outerHeight(),
                top: k.css("top"),
                left: k.css("left")
            }).insertAfter(k), k.remove()), this.originalElement.css("resize", this.originalResizeStyle), q(this.originalElement), this
        },
        _mouseCapture: function (k) {
            var q, x, w = !1;
            for (q in this.handles) {
                x = e(this.handles[q])[0], (x === k.target || e.contains(x, k.target)) && (w = !0)
            }
            return !this.options.disabled && w
        },
        _mouseStart: function (A) {
            var B, x, q, k = this.options, w = this.element;
            return this.resizing = !0, this._renderProxy(), B = this._num(this.helper.css("left")), x = this._num(this.helper.css("top")), k.containment && (B += e(k.containment).scrollLeft() || 0, x += e(k.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = {
                left: B,
                top: x
            }, this.size = this._helper ? {
                width: this.helper.width(),
                height: this.helper.height()
            } : {
                width: w.width(),
                height: w.height()
            }, this.originalSize = this._helper ? {
                width: w.outerWidth(),
                height: w.outerHeight()
            } : {
                width: w.width(),
                height: w.height()
            }, this.sizeDiff = {
                width: w.outerWidth() - w.width(),
                height: w.outerHeight() - w.height()
            }, this.originalPosition = {
                left: B,
                top: x
            }, this.originalMousePosition = {
                left: A.pageX,
                top: A.pageY
            }, this.aspectRatio = "number" == typeof k.aspectRatio ? k.aspectRatio : this.originalSize.width / this.originalSize.height || 1, q = e(".ui-resizable-" + this.axis).css("cursor"), e("body").css("cursor", "auto" === q ? this.axis + "-resize" : q), w.addClass("ui-resizable-resizing"), this._propagate("start", A), !0
        },
        _mouseDrag: function (C) {
            var D, A, q = this.originalMousePosition, k = this.axis, w = C.pageX - q.left || 0, x = C.pageY - q.top || 0, B = this._change[k];
            return this._updatePrevProperties(), B ? (D = B.apply(this, [C, w, x]), this._updateVirtualBoundaries(C.shiftKey), (this._aspectRatio || C.shiftKey) && (D = this._updateRatio(D, C)), D = this._respectSize(D, C), this._updateCache(D), this._propagate("resize", C), A = this._applyChanges(), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), e.isEmptyObject(A) || (this._updatePrevProperties(), this._trigger("resize", C, this.ui()), this._applyChanges()), !1) : !1
        },
        _mouseStop: function (F) {
            this.resizing = !1;
            var x, D, B, q, C, E, w, A = this.options, k = this;
            return this._helper && (x = this._proportionallyResizeElements, D = x.length && /textarea/i.test(x[0].nodeName), B = D && this._hasScroll(x[0], "left") ? 0 : k.sizeDiff.height, q = D ? 0 : k.sizeDiff.width, C = {
                width: k.helper.width() - q,
                height: k.helper.height() - B
            }, E = parseInt(k.element.css("left"), 10) + (k.position.left - k.originalPosition.left) || null, w = parseInt(k.element.css("top"), 10) + (k.position.top - k.originalPosition.top) || null, A.animate || this.element.css(e.extend(C, {
                top: w,
                left: E
            })), k.helper.height(k.size.height), k.helper.width(k.size.width), this._helper && !A.animate && this._proportionallyResize()), e("body").css("cursor", "auto"), this.element.removeClass("ui-resizable-resizing"), this._propagate("stop", F), this._helper && this.helper.remove(), !1
        },
        _updatePrevProperties: function () {
            this.prevPosition = {
                top: this.position.top,
                left: this.position.left
            }, this.prevSize = {
                width: this.size.width,
                height: this.size.height
            }
        },
        _applyChanges: function () {
            var k = {};
            return this.position.top !== this.prevPosition.top && (k.top = this.position.top + "px"), this.position.left !== this.prevPosition.left && (k.left = this.position.left + "px"), this.size.width !== this.prevSize.width && (k.width = this.size.width + "px"), this.size.height !== this.prevSize.height && (k.height = this.size.height + "px"), this.helper.css(k), k
        },
        _updateVirtualBoundaries: function (x) {
            var B, C, A, q, k, w = this.options;
            k = {
                minWidth: this._isNumber(w.minWidth) ? w.minWidth : 0,
                maxWidth: this._isNumber(w.maxWidth) ? w.maxWidth : 1 / 0,
                minHeight: this._isNumber(w.minHeight) ? w.minHeight : 0,
                maxHeight: this._isNumber(w.maxHeight) ? w.maxHeight : 1 / 0
            }, (this._aspectRatio || x) && (B = k.minHeight * this.aspectRatio, A = k.minWidth / this.aspectRatio, C = k.maxHeight * this.aspectRatio, q = k.maxWidth / this.aspectRatio, B > k.minWidth && (k.minWidth = B), A > k.minHeight && (k.minHeight = A), k.maxWidth > C && (k.maxWidth = C), k.maxHeight > q && (k.maxHeight = q)), this._vBoundaries = k
        },
        _updateCache: function (k) {
            this.offset = this.helper.offset(), this._isNumber(k.left) && (this.position.left = k.left), this._isNumber(k.top) && (this.position.top = k.top), this._isNumber(k.height) && (this.size.height = k.height), this._isNumber(k.width) && (this.size.width = k.width)
        },
        _updateRatio: function (w) {
            var k = this.position, q = this.size, x = this.axis;
            return this._isNumber(w.height) ? w.width = w.height * this.aspectRatio : this._isNumber(w.width) && (w.height = w.width / this.aspectRatio), "sw" === x && (w.left = k.left + (q.width - w.width), w.top = null), "nw" === x && (w.top = k.top + (q.height - w.height), w.left = k.left + (q.width - w.width)), w
        },
        _respectSize: function (k) {
            var x = this._vBoundaries, A = this.axis, w = this._isNumber(k.width) && x.maxWidth && x.maxWidth < k.width, C = this._isNumber(k.height) && x.maxHeight && x.maxHeight < k.height, G = this._isNumber(k.width) && x.minWidth && x.minWidth > k.width, D = this._isNumber(k.height) && x.minHeight && x.minHeight > k.height, F = this.originalPosition.left + this.originalSize.width, q = this.position.top + this.size.height, B = /sw|nw|w/.test(A), E = /nw|ne|n/.test(A);
            return G && (k.width = x.minWidth), D && (k.height = x.minHeight), w && (k.width = x.maxWidth), C && (k.height = x.maxHeight), G && B && (k.left = F - x.minWidth), w && B && (k.left = F - x.maxWidth), D && E && (k.top = q - x.minHeight), C && E && (k.top = q - x.maxHeight), k.width || k.height || k.left || !k.top ? k.width || k.height || k.top || !k.left || (k.left = null) : k.top = null, k
        },
        _getPaddingPlusBorderDimensions: function (x) {
            for (var k = 0, q = [], A = [x.css("borderTopWidth"), x.css("borderRightWidth"), x.css("borderBottomWidth"), x.css("borderLeftWidth")], w = [x.css("paddingTop"), x.css("paddingRight"), x.css("paddingBottom"), x.css("paddingLeft")]; 4 > k; k++) {
                q[k] = parseInt(A[k], 10) || 0, q[k] += parseInt(w[k], 10) || 0
            }
            return {height: q[0] + q[2], width: q[1] + q[3]}
        },
        _proportionallyResize: function () {
            if (this._proportionallyResizeElements.length) {
                for (var w, k = 0, q = this.helper || this.element; this._proportionallyResizeElements.length > k; k++) {
                    w = this._proportionallyResizeElements[k], this.outerDimensions || (this.outerDimensions = this._getPaddingPlusBorderDimensions(w)), w.css({
                        height: q.height() - this.outerDimensions.height || 0,
                        width: q.width() - this.outerDimensions.width || 0
                    })
                }
            }
        },
        _renderProxy: function () {
            var k = this.element, q = this.options;
            this.elementOffset = k.offset(), this._helper ? (this.helper = this.helper || e("<div style='overflow:hidden;'></div>"), this.helper.addClass(this._helper).css({
                width: this.element.outerWidth() - 1,
                height: this.element.outerHeight() - 1,
                position: "absolute",
                left: this.elementOffset.left + "px",
                top: this.elementOffset.top + "px",
                zIndex: ++q.zIndex
            }), this.helper.appendTo("body").disableSelection()) : this.helper = this.element
        },
        _change: {
            e: function (k, q) {
                return {width: this.originalSize.width + q}
            }, w: function (w, k) {
                var q = this.originalSize, x = this.originalPosition;
                return {left: x.left + k, width: q.width - k}
            }, n: function (x, k, q) {
                var A = this.originalSize, w = this.originalPosition;
                return {top: w.top + q, height: A.height - q}
            }, s: function (w, k, q) {
                return {height: this.originalSize.height + q}
            }, se: function (k, q, w) {
                return e.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [k, q, w]))
            }, sw: function (k, q, w) {
                return e.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [k, q, w]))
            }, ne: function (k, q, w) {
                return e.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [k, q, w]))
            }, nw: function (k, q, w) {
                return e.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [k, q, w]))
            }
        },
        _propagate: function (k, q) {
            e.ui.plugin.call(this, k, [q, this.ui()]), "resize" !== k && this._trigger(k, q, this.ui())
        },
        plugins: {},
        ui: function () {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    }), e.ui.plugin.add("resizable", "animate", {
        stop: function (F) {
            var x = e(this).resizable("instance"), D = x.options, B = x._proportionallyResizeElements, q = B.length && /textarea/i.test(B[0].nodeName), C = q && x._hasScroll(B[0], "left") ? 0 : x.sizeDiff.height, E = q ? 0 : x.sizeDiff.width, w = {
                width: x.size.width - E,
                height: x.size.height - C
            }, A = parseInt(x.element.css("left"), 10) + (x.position.left - x.originalPosition.left) || null, k = parseInt(x.element.css("top"), 10) + (x.position.top - x.originalPosition.top) || null;
            x.element.animate(e.extend(w, k && A ? {
                top: k,
                left: A
            } : {}), {
                duration: D.animateDuration,
                easing: D.animateEasing,
                step: function () {
                    var G = {
                        width: parseInt(x.element.css("width"), 10),
                        height: parseInt(x.element.css("height"), 10),
                        top: parseInt(x.element.css("top"), 10),
                        left: parseInt(x.element.css("left"), 10)
                    };
                    B && B.length && e(B[0]).css({
                        width: G.width,
                        height: G.height
                    }), x._updateCache(G), x._propagate("resize", F)
                }
            })
        }
    }), e.ui.plugin.add("resizable", "containment", {
        start: function () {
            var x, q, w, D, B, E, G, k = e(this).resizable("instance"), C = k.options, A = k.element, H = C.containment, F = H instanceof e ? H.get(0) : /parent/.test(H) ? A.parent().get(0) : H;
            F && (k.containerElement = e(F), /document/.test(H) || H === document ? (k.containerOffset = {
                left: 0,
                top: 0
            }, k.containerPosition = {
                left: 0,
                top: 0
            }, k.parentData = {
                element: e(document),
                left: 0,
                top: 0,
                width: e(document).width(),
                height: e(document).height() || document.body.parentNode.scrollHeight
            }) : (x = e(F), q = [], e(["Top", "Right", "Left", "Bottom"]).each(function (J, I) {
                q[J] = k._num(x.css("padding" + I))
            }), k.containerOffset = x.offset(), k.containerPosition = x.position(), k.containerSize = {
                height: x.innerHeight() - q[3],
                width: x.innerWidth() - q[1]
            }, w = k.containerOffset, D = k.containerSize.height, B = k.containerSize.width, E = k._hasScroll(F, "left") ? F.scrollWidth : B, G = k._hasScroll(F) ? F.scrollHeight : D, k.parentData = {
                element: F,
                left: w.left,
                top: w.top,
                width: E,
                height: G
            }))
        }, resize: function (w) {
            var I, q, D, A, E = e(this).resizable("instance"), H = E.options, G = E.containerOffset, k = E.position, x = E._aspectRatio || w.shiftKey, C = {
                top: 0,
                left: 0
            }, B = E.containerElement, F = !0;
            B[0] !== document && /static/.test(B.css("position")) && (C = G), k.left < (E._helper ? G.left : 0) && (E.size.width = E.size.width + (E._helper ? E.position.left - G.left : E.position.left - C.left), x && (E.size.height = E.size.width / E.aspectRatio, F = !1), E.position.left = H.helper ? G.left : 0), k.top < (E._helper ? G.top : 0) && (E.size.height = E.size.height + (E._helper ? E.position.top - G.top : E.position.top), x && (E.size.width = E.size.height * E.aspectRatio, F = !1), E.position.top = E._helper ? G.top : 0), D = E.containerElement.get(0) === E.element.parent().get(0), A = /relative|absolute/.test(E.containerElement.css("position")), D && A ? (E.offset.left = E.parentData.left + E.position.left, E.offset.top = E.parentData.top + E.position.top) : (E.offset.left = E.element.offset().left, E.offset.top = E.element.offset().top), I = Math.abs(E.sizeDiff.width + (E._helper ? E.offset.left - C.left : E.offset.left - G.left)), q = Math.abs(E.sizeDiff.height + (E._helper ? E.offset.top - C.top : E.offset.top - G.top)), I + E.size.width >= E.parentData.width && (E.size.width = E.parentData.width - I, x && (E.size.height = E.size.width / E.aspectRatio, F = !1)), q + E.size.height >= E.parentData.height && (E.size.height = E.parentData.height - q, x && (E.size.width = E.size.height * E.aspectRatio, F = !1)), F || (E.position.left = E.prevPosition.left, E.position.top = E.prevPosition.top, E.size.width = E.prevSize.width, E.size.height = E.prevSize.height)
        }, stop: function () {
            var k = e(this).resizable("instance"), x = k.options, E = k.containerOffset, B = k.containerPosition, q = k.containerElement, C = e(k.helper), D = C.offset(), w = C.outerWidth() - k.sizeDiff.width, A = C.outerHeight() - k.sizeDiff.height;
            k._helper && !x.animate && /relative/.test(q.css("position")) && e(this).css({
                left: D.left - B.left - E.left,
                width: w,
                height: A
            }), k._helper && !x.animate && /static/.test(q.css("position")) && e(this).css({
                left: D.left - B.left - E.left,
                width: w,
                height: A
            })
        }
    }), e.ui.plugin.add("resizable", "alsoResize", {
        start: function () {
            var k = e(this).resizable("instance"), q = k.options;
            e(q.alsoResize).each(function () {
                var w = e(this);
                w.data("ui-resizable-alsoresize", {
                    width: parseInt(w.width(), 10),
                    height: parseInt(w.height(), 10),
                    left: parseInt(w.css("left"), 10),
                    top: parseInt(w.css("top"), 10)
                })
            })
        }, resize: function (B, C) {
            var A = e(this).resizable("instance"), q = A.options, k = A.originalSize, w = A.originalPosition, x = {
                height: A.size.height - k.height || 0,
                width: A.size.width - k.width || 0,
                top: A.position.top - w.top || 0,
                left: A.position.left - w.left || 0
            };
            e(q.alsoResize).each(function () {
                var D = e(this), G = e(this).data("ui-resizable-alsoresize"), F = {}, E = D.parents(C.originalElement[0]).length ? ["width", "height"] : ["width", "height", "top", "left"];
                e.each(E, function (I, J) {
                    var H = (G[J] || 0) + (x[J] || 0);
                    H && H >= 0 && (F[J] = H || null)
                }), D.css(F)
            })
        }, stop: function () {
            e(this).removeData("resizable-alsoresize")
        }
    }), e.ui.plugin.add("resizable", "ghost", {
        start: function () {
            var k = e(this).resizable("instance"), q = k.options, w = k.size;
            k.ghost = k.originalElement.clone(), k.ghost.css({
                opacity: 0.25,
                display: "block",
                position: "relative",
                height: w.height,
                width: w.width,
                margin: 0,
                left: 0,
                top: 0
            }).addClass("ui-resizable-ghost").addClass("string" == typeof q.ghost ? q.ghost : ""), k.ghost.appendTo(k.helper)
        }, resize: function () {
            var k = e(this).resizable("instance");
            k.ghost && k.ghost.css({
                position: "relative",
                height: k.size.height,
                width: k.size.width
            })
        }, stop: function () {
            var k = e(this).resizable("instance");
            k.ghost && k.helper && k.helper.get(0).removeChild(k.ghost.get(0))
        }
    }), e.ui.plugin.add("resizable", "grid", {
        resize: function () {
            var E, k = e(this).resizable("instance"), D = k.options, x = k.size, G = k.originalSize, A = k.originalPosition, C = k.axis, N = "number" == typeof D.grid ? [D.grid, D.grid] : D.grid, q = N[0] || 1, F = N[1] || 1, J = Math.round((x.width - G.width) / q) * q, I = Math.round((x.height - G.height) / F) * F, B = G.width + J, L = G.height + I, w = D.maxWidth && B > D.maxWidth, M = D.maxHeight && L > D.maxHeight, H = D.minWidth && D.minWidth > B, K = D.minHeight && D.minHeight > L;
            D.grid = N, H && (B += q), K && (L += F), w && (B -= q), M && (L -= F), /^(se|s|e)$/.test(C) ? (k.size.width = B, k.size.height = L) : /^(ne)$/.test(C) ? (k.size.width = B, k.size.height = L, k.position.top = A.top - I) : /^(sw)$/.test(C) ? (k.size.width = B, k.size.height = L, k.position.left = A.left - J) : ((0 >= L - F || 0 >= B - q) && (E = k._getPaddingPlusBorderDimensions(this)), L - F > 0 ? (k.size.height = L, k.position.top = A.top - I) : (L = F - E.height, k.size.height = L, k.position.top = A.top + G.height - L), B - q > 0 ? (k.size.width = B, k.position.left = A.left - J) : (B = q - E.width, k.size.width = B, k.position.left = A.left + G.width - B))
        }
    }), e.ui.resizable, e.widget("ui.dialog", {
        version: "1.11.4",
        options: {
            appendTo: "body",
            autoOpen: !0,
            buttons: [],
            closeOnEscape: !0,
            closeText: "Close",
            dialogClass: "",
            draggable: !0,
            hide: null,
            height: "auto",
            maxHeight: null,
            maxWidth: null,
            minHeight: 150,
            minWidth: 150,
            modal: !1,
            position: {
                my: "center",
                at: "center",
                of: window,
                collision: "fit",
                using: function (k) {
                    var q = e(this).css(k).offset().top;
                    0 > q && e(this).css("top", k.top - q)
                }
            },
            resizable: !0,
            show: null,
            title: null,
            width: 300,
            beforeClose: null,
            close: null,
            drag: null,
            dragStart: null,
            dragStop: null,
            focus: null,
            open: null,
            resize: null,
            resizeStart: null,
            resizeStop: null
        },
        sizeRelatedOptions: {
            buttons: !0,
            height: !0,
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0,
            width: !0
        },
        resizableRelatedOptions: {
            maxHeight: !0,
            maxWidth: !0,
            minHeight: !0,
            minWidth: !0
        },
        _create: function () {
            this.originalCss = {
                display: this.element[0].style.display,
                width: this.element[0].style.width,
                minHeight: this.element[0].style.minHeight,
                maxHeight: this.element[0].style.maxHeight,
                height: this.element[0].style.height
            }, this.originalPosition = {
                parent: this.element.parent(),
                index: this.element.parent().children().index(this.element)
            }, this.originalTitle = this.element.attr("title"), this.options.title = this.options.title || this.originalTitle, this._createWrapper(), this.element.show().removeAttr("title").addClass("ui-dialog-content ui-widget-content").appendTo(this.uiDialog), this._createTitlebar(), this._createButtonPane(), this.options.draggable && e.fn.draggable && this._makeDraggable(), this.options.resizable && e.fn.resizable && this._makeResizable(), this._isOpen = !1, this._trackFocus()
        },
        _init: function () {
            this.options.autoOpen && this.open()
        },
        _appendTo: function () {
            var k = this.options.appendTo;
            return k && (k.jquery || k.nodeType) ? e(k) : this.document.find(k || "body").eq(0)
        },
        _destroy: function () {
            var k, q = this.originalPosition;
            this._untrackInstance(), this._destroyOverlay(), this.element.removeUniqueId().removeClass("ui-dialog-content ui-widget-content").css(this.originalCss).detach(), this.uiDialog.stop(!0, !0).remove(), this.originalTitle && this.element.attr("title", this.originalTitle), k = q.parent.children().eq(q.index), k.length && k[0] !== this.element[0] ? k.before(this.element) : q.parent.append(this.element)
        },
        widget: function () {
            return this.uiDialog
        },
        disable: e.noop,
        enable: e.noop,
        close: function (k) {
            var q, x = this;
            if (this._isOpen && this._trigger("beforeClose", k) !== !1) {
                if (this._isOpen = !1, this._focusedElement = null, this._destroyOverlay(), this._untrackInstance(), !this.opener.filter(":focusable").focus().length) {
                    try {
                        q = this.document[0].activeElement, q && "body" !== q.nodeName.toLowerCase() && e(q).blur()
                    } catch (w) {
                    }
                }
                this._hide(this.uiDialog, this.options.hide, function () {
                    x._trigger("close", k)
                })
            }
        },
        isOpen: function () {
            return this._isOpen
        },
        moveToTop: function () {
            this._moveToTop()
        },
        _moveToTop: function (x, A) {
            var w = !1, q = this.uiDialog.siblings(".ui-front:visible").map(function () {
                return +e(this).css("z-index")
            }).get(), k = Math.max.apply(null, q);
            return k >= +this.uiDialog.css("z-index") && (this.uiDialog.css("z-index", k + 1), w = !0), w && !A && this._trigger("focus", x), w
        },
        open: function () {
            var k = this;
            return this._isOpen ? (this._moveToTop() && this._focusTabbable(), void 0) : (this._isOpen = !0, this.opener = e(this.document[0].activeElement), this._size(), this._position(), this._createOverlay(), this._moveToTop(null, !0), this.overlay && this.overlay.css("z-index", this.uiDialog.css("z-index") - 1), this._show(this.uiDialog, this.options.show, function () {
                k._focusTabbable(), k._trigger("focus")
            }), this._makeFocusTarget(), this._trigger("open"), void 0)
        },
        _focusTabbable: function () {
            var k = this._focusedElement;
            k || (k = this.element.find("[autofocus]")), k.length || (k = this.element.find(":tabbable")), k.length || (k = this.uiDialogButtonPane.find(":tabbable")), k.length || (k = this.uiDialogTitlebarClose.filter(":tabbable")), k.length || (k = this.uiDialog), k.eq(0).focus()
        },
        _keepFocus: function (k) {
            function q() {
                var w = this.document[0].activeElement, x = this.uiDialog[0] === w || e.contains(this.uiDialog[0], w);
                x || this._focusTabbable()
            }

            k.preventDefault(), q.call(this), this._delay(q)
        },
        _createWrapper: function () {
            this.uiDialog = e("<div>").addClass("ui-dialog ui-widget ui-widget-content ui-corner-all ui-front " + this.options.dialogClass).hide().attr({
                tabIndex: -1,
                role: "dialog"
            }).appendTo(this._appendTo()), this._on(this.uiDialog, {
                keydown: function (k) {
                    if (this.options.closeOnEscape && !k.isDefaultPrevented() && k.keyCode && k.keyCode === e.ui.keyCode.ESCAPE) {
                        return k.preventDefault(), this.close(k), void 0
                    }
                    if (k.keyCode === e.ui.keyCode.TAB && !k.isDefaultPrevented()) {
                        var q = this.uiDialog.find(":tabbable"), x = q.filter(":first"), w = q.filter(":last");
                        k.target !== w[0] && k.target !== this.uiDialog[0] || k.shiftKey ? k.target !== x[0] && k.target !== this.uiDialog[0] || !k.shiftKey || (this._delay(function () {
                            w.focus()
                        }), k.preventDefault()) : (this._delay(function () {
                            x.focus()
                        }), k.preventDefault())
                    }
                }, mousedown: function (k) {
                    this._moveToTop(k) && this._focusTabbable()
                }
            }), this.element.find("[aria-describedby]").length || this.uiDialog.attr({"aria-describedby": this.element.uniqueId().attr("id")})
        },
        _createTitlebar: function () {
            var k;
            this.uiDialogTitlebar = e("<div>").addClass("ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix").prependTo(this.uiDialog), this._on(this.uiDialogTitlebar, {
                mousedown: function (q) {
                    e(q.target).closest(".ui-dialog-titlebar-close") || this.uiDialog.focus()
                }
            }), this.uiDialogTitlebarClose = e("<button type='button'></button>").button({
                label: this.options.closeText,
                icons: {primary: "ui-icon-closethick"},
                text: !1
            }).addClass("ui-dialog-titlebar-close").appendTo(this.uiDialogTitlebar), this._on(this.uiDialogTitlebarClose, {
                click: function (q) {
                    q.preventDefault(), this.close(q)
                }
            }), k = e("<span>").uniqueId().addClass("ui-dialog-title").prependTo(this.uiDialogTitlebar), this._title(k), this.uiDialog.attr({"aria-labelledby": k.attr("id")})
        },
        _title: function (k) {
            this.options.title || k.html("&#160;"), k.text(this.options.title)
        },
        _createButtonPane: function () {
            this.uiDialogButtonPane = e("<div>").addClass("ui-dialog-buttonpane ui-widget-content ui-helper-clearfix"), this.uiButtonSet = e("<div>").addClass("ui-dialog-buttonset").appendTo(this.uiDialogButtonPane), this._createButtons()
        },
        _createButtons: function () {
            var k = this, q = this.options.buttons;
            return this.uiDialogButtonPane.remove(), this.uiButtonSet.empty(), e.isEmptyObject(q) || e.isArray(q) && !q.length ? (this.uiDialog.removeClass("ui-dialog-buttons"), void 0) : (e.each(q, function (A, x) {
                var w, B;
                x = e.isFunction(x) ? {
                    click: x,
                    text: A
                } : x, x = e.extend({type: "button"}, x), w = x.click, x.click = function () {
                    w.apply(k.element[0], arguments)
                }, B = {
                    icons: x.icons,
                    text: x.showText
                }, delete x.icons, delete x.showText, e("<button></button>", x).button(B).appendTo(k.uiButtonSet)
            }), this.uiDialog.addClass("ui-dialog-buttons"), this.uiDialogButtonPane.appendTo(this.uiDialog), void 0)
        },
        _makeDraggable: function () {
            function k(x) {
                return {position: x.position, offset: x.offset}
            }

            var q = this, w = this.options;
            this.uiDialog.draggable({
                cancel: ".ui-dialog-content, .ui-dialog-titlebar-close",
                handle: ".ui-dialog-titlebar",
                containment: "document",
                start: function (A, x) {
                    e(this).addClass("ui-dialog-dragging"), q._blockFrames(), q._trigger("dragStart", A, k(x))
                },
                drag: function (x, A) {
                    q._trigger("drag", x, k(A))
                },
                stop: function (x, C) {
                    var A = C.offset.left - q.document.scrollLeft(), B = C.offset.top - q.document.scrollTop();
                    w.position = {
                        my: "left top",
                        at: "left" + (A >= 0 ? "+" : "") + A + " top" + (B >= 0 ? "+" : "") + B,
                        of: q.window
                    }, e(this).removeClass("ui-dialog-dragging"), q._unblockFrames(), q._trigger("dragStop", x, k(C))
                }
            })
        },
        _makeResizable: function () {
            function A(C) {
                return {
                    originalPosition: C.originalPosition,
                    originalSize: C.originalSize,
                    position: C.position,
                    size: C.size
                }
            }

            var B = this, x = this.options, q = x.resizable, k = this.uiDialog.css("position"), w = "string" == typeof q ? q : "n,e,s,w,se,sw,ne,nw";
            this.uiDialog.resizable({
                cancel: ".ui-dialog-content",
                containment: "document",
                alsoResize: this.element,
                maxWidth: x.maxWidth,
                maxHeight: x.maxHeight,
                minWidth: x.minWidth,
                minHeight: this._minHeight(),
                handles: w,
                start: function (C, D) {
                    e(this).addClass("ui-dialog-resizing"), B._blockFrames(), B._trigger("resizeStart", C, A(D))
                },
                resize: function (D, C) {
                    B._trigger("resize", D, A(C))
                },
                stop: function (E, D) {
                    var F = B.uiDialog.offset(), G = F.left - B.document.scrollLeft(), C = F.top - B.document.scrollTop();
                    x.height = B.uiDialog.height(), x.width = B.uiDialog.width(), x.position = {
                        my: "left top",
                        at: "left" + (G >= 0 ? "+" : "") + G + " top" + (C >= 0 ? "+" : "") + C,
                        of: B.window
                    }, e(this).removeClass("ui-dialog-resizing"), B._unblockFrames(), B._trigger("resizeStop", E, A(D))
                }
            }).css("position", k)
        },
        _trackFocus: function () {
            this._on(this.widget(), {
                focusin: function (k) {
                    this._makeFocusTarget(), this._focusedElement = e(k.target)
                }
            })
        },
        _makeFocusTarget: function () {
            this._untrackInstance(), this._trackingInstances().unshift(this)
        },
        _untrackInstance: function () {
            var k = this._trackingInstances(), q = e.inArray(this, k);
            -1 !== q && k.splice(q, 1)
        },
        _trackingInstances: function () {
            var k = this.document.data("ui-dialog-instances");
            return k || (k = [], this.document.data("ui-dialog-instances", k)), k
        },
        _minHeight: function () {
            var k = this.options;
            return "auto" === k.height ? k.minHeight : Math.min(k.minHeight, k.height)
        },
        _position: function () {
            var k = this.uiDialog.is(":visible");
            k || this.uiDialog.show(), this.uiDialog.position(this.options.position), k || this.uiDialog.hide()
        },
        _setOptions: function (k) {
            var q = this, x = !1, w = {};
            e.each(k, function (A, B) {
                q._setOption(A, B), A in q.sizeRelatedOptions && (x = !0), A in q.resizableRelatedOptions && (w[A] = B)
            }), x && (this._size(), this._position()), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", w)
        },
        _setOption: function (x, k) {
            var q, A, w = this.uiDialog;
            "dialogClass" === x && w.removeClass(this.options.dialogClass).addClass(k), "disabled" !== x && (this._super(x, k), "appendTo" === x && this.uiDialog.appendTo(this._appendTo()), "buttons" === x && this._createButtons(), "closeText" === x && this.uiDialogTitlebarClose.button({label: "" + k}), "draggable" === x && (q = w.is(":data(ui-draggable)"), q && !k && w.draggable("destroy"), !q && k && this._makeDraggable()), "position" === x && this._position(), "resizable" === x && (A = w.is(":data(ui-resizable)"), A && !k && w.resizable("destroy"), A && "string" == typeof k && w.resizable("option", "handles", k), A || k === !1 || this._makeResizable()), "title" === x && this._title(this.uiDialogTitlebar.find(".ui-dialog-title")))
        },
        _size: function () {
            var w, k, q, x = this.options;
            this.element.show().css({
                width: "auto",
                minHeight: 0,
                maxHeight: "none",
                height: 0
            }), x.minWidth > x.width && (x.width = x.minWidth), w = this.uiDialog.css({
                height: "auto",
                width: x.width
            }).outerHeight(), k = Math.max(0, x.minHeight - w), q = "number" == typeof x.maxHeight ? Math.max(0, x.maxHeight - w) : "none", "auto" === x.height ? this.element.css({
                minHeight: k,
                maxHeight: q,
                height: "auto"
            }) : this.element.height(Math.max(0, x.height - w)), this.uiDialog.is(":data(ui-resizable)") && this.uiDialog.resizable("option", "minHeight", this._minHeight())
        },
        _blockFrames: function () {
            this.iframeBlocks = this.document.find("iframe").map(function () {
                var k = e(this);
                return e("<div>").css({
                    position: "absolute",
                    width: k.outerWidth(),
                    height: k.outerHeight()
                }).appendTo(k.parent()).offset(k.offset())[0]
            })
        },
        _unblockFrames: function () {
            this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks)
        },
        _allowInteraction: function (k) {
            return e(k.target).closest(".ui-dialog").length ? !0 : !!e(k.target).closest(".ui-datepicker").length
        },
        _createOverlay: function () {
            if (this.options.modal) {
                var k = !0;
                this._delay(function () {
                    k = !1
                }), this.document.data("ui-dialog-overlays") || this._on(this.document, {
                    focusin: function (q) {
                        k || this._allowInteraction(q) || (q.preventDefault(), this._trackingInstances()[0]._focusTabbable())
                    }
                }), this.overlay = e("<div>").addClass("ui-widget-overlay ui-front").appendTo(this._appendTo()), this._on(this.overlay, {mousedown: "_keepFocus"}), this.document.data("ui-dialog-overlays", (this.document.data("ui-dialog-overlays") || 0) + 1)
            }
        },
        _destroyOverlay: function () {
            if (this.options.modal && this.overlay) {
                var k = this.document.data("ui-dialog-overlays") - 1;
                k ? this.document.data("ui-dialog-overlays", k) : this.document.unbind("focusin").removeData("ui-dialog-overlays"), this.overlay.remove(), this.overlay = null
            }
        }
    }), e.widget("ui.droppable", {
        version: "1.11.4",
        widgetEventPrefix: "drop",
        options: {
            accept: "*",
            activeClass: !1,
            addClasses: !0,
            greedy: !1,
            hoverClass: !1,
            scope: "default",
            tolerance: "intersect",
            activate: null,
            deactivate: null,
            drop: null,
            out: null,
            over: null
        },
        _create: function () {
            var k, q = this.options, w = q.accept;
            this.isover = !1, this.isout = !0, this.accept = e.isFunction(w) ? w : function (x) {
                return x.is(w)
            }, this.proportions = function () {
                return arguments.length ? (k = arguments[0], void 0) : k ? k : k = {
                    width: this.element[0].offsetWidth,
                    height: this.element[0].offsetHeight
                }
            }, this._addToManager(q.scope), q.addClasses && this.element.addClass("ui-droppable")
        },
        _addToManager: function (k) {
            e.ui.ddmanager.droppables[k] = e.ui.ddmanager.droppables[k] || [], e.ui.ddmanager.droppables[k].push(this)
        },
        _splice: function (k) {
            for (var q = 0; k.length > q; q++) {
                k[q] === this && k.splice(q, 1)
            }
        },
        _destroy: function () {
            var k = e.ui.ddmanager.droppables[this.options.scope];
            this._splice(k), this.element.removeClass("ui-droppable ui-droppable-disabled")
        },
        _setOption: function (k, q) {
            if ("accept" === k) {
                this.accept = e.isFunction(q) ? q : function (x) {
                    return x.is(q)
                }
            } else {
                if ("scope" === k) {
                    var w = e.ui.ddmanager.droppables[this.options.scope];
                    this._splice(w), this._addToManager(q)
                }
            }
            this._super(k, q)
        },
        _activate: function (k) {
            var q = e.ui.ddmanager.current;
            this.options.activeClass && this.element.addClass(this.options.activeClass), q && this._trigger("activate", k, this.ui(q))
        },
        _deactivate: function (k) {
            var q = e.ui.ddmanager.current;
            this.options.activeClass && this.element.removeClass(this.options.activeClass), q && this._trigger("deactivate", k, this.ui(q))
        },
        _over: function (k) {
            var q = e.ui.ddmanager.current;
            q && (q.currentItem || q.element)[0] !== this.element[0] && this.accept.call(this.element[0], q.currentItem || q.element) && (this.options.hoverClass && this.element.addClass(this.options.hoverClass), this._trigger("over", k, this.ui(q)))
        },
        _out: function (k) {
            var q = e.ui.ddmanager.current;
            q && (q.currentItem || q.element)[0] !== this.element[0] && this.accept.call(this.element[0], q.currentItem || q.element) && (this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("out", k, this.ui(q)))
        },
        _drop: function (k, q) {
            var x = q || e.ui.ddmanager.current, w = !1;
            return x && (x.currentItem || x.element)[0] !== this.element[0] ? (this.element.find(":data(ui-droppable)").not(".ui-draggable-dragging").each(function () {
                var A = e(this).droppable("instance");
                return A.options.greedy && !A.options.disabled && A.options.scope === x.options.scope && A.accept.call(A.element[0], x.currentItem || x.element) && e.ui.intersect(x, e.extend(A, {offset: A.element.offset()}), A.options.tolerance, k) ? (w = !0, !1) : void 0
            }), w ? !1 : this.accept.call(this.element[0], x.currentItem || x.element) ? (this.options.activeClass && this.element.removeClass(this.options.activeClass), this.options.hoverClass && this.element.removeClass(this.options.hoverClass), this._trigger("drop", k, this.ui(x)), this.element) : !1) : !1
        },
        ui: function (k) {
            return {
                draggable: k.currentItem || k.element,
                helper: k.helper,
                position: k.position,
                offset: k.positionAbs
            }
        }
    }), e.ui.intersect = function () {
        function k(w, x, q) {
            return w >= x && x + q > w
        }

        return function (A, w, x, E) {
            if (!w.offset) {
                return !1
            }
            var C = (A.positionAbs || A.position.absolute).left + A.margins.left, F = (A.positionAbs || A.position.absolute).top + A.margins.top, H = C + A.helperProportions.width, q = F + A.helperProportions.height, D = w.offset.left, B = w.offset.top, I = D + w.proportions().width, G = B + w.proportions().height;
            switch (x) {
                case"fit":
                    return C >= D && I >= H && F >= B && G >= q;
                case"intersect":
                    return C + A.helperProportions.width / 2 > D && I > H - A.helperProportions.width / 2 && F + A.helperProportions.height / 2 > B && G > q - A.helperProportions.height / 2;
                case"pointer":
                    return k(E.pageY, B, w.proportions().height) && k(E.pageX, D, w.proportions().width);
                case"touch":
                    return (F >= B && G >= F || q >= B && G >= q || B > F && q > G) && (C >= D && I >= C || H >= D && I >= H || D > C && H > I);
                default:
                    return !1
            }
        }
    }(), e.ui.ddmanager = {
        current: null,
        droppables: {"default": []},
        prepareOffsets: function (B, C) {
            var A, q, k = e.ui.ddmanager.droppables[B.options.scope] || [], w = C ? C.type : null, x = (B.currentItem || B.element).find(":data(ui-droppable)").addBack();
            e:for (A = 0; k.length > A; A++) {
                if (!(k[A].options.disabled || B && !k[A].accept.call(k[A].element[0], B.currentItem || B.element))) {
                    for (q = 0; x.length > q; q++) {
                        if (x[q] === k[A].element[0]) {
                            k[A].proportions().height = 0;
                            continue e
                        }
                    }
                    k[A].visible = "none" !== k[A].element.css("display"), k[A].visible && ("mousedown" === w && k[A]._activate.call(k[A], C), k[A].offset = k[A].element.offset(), k[A].proportions({
                        width: k[A].element[0].offsetWidth,
                        height: k[A].element[0].offsetHeight
                    }))
                }
            }
        },
        drop: function (k, q) {
            var w = !1;
            return e.each((e.ui.ddmanager.droppables[k.options.scope] || []).slice(), function () {
                this.options && (!this.options.disabled && this.visible && e.ui.intersect(k, this, this.options.tolerance, q) && (w = this._drop.call(this, q) || w), !this.options.disabled && this.visible && this.accept.call(this.element[0], k.currentItem || k.element) && (this.isout = !0, this.isover = !1, this._deactivate.call(this, q)))
            }), w
        },
        dragStart: function (k, q) {
            k.element.parentsUntil("body").bind("scroll.droppable", function () {
                k.options.refreshPositions || e.ui.ddmanager.prepareOffsets(k, q)
            })
        },
        drag: function (k, q) {
            k.options.refreshPositions && e.ui.ddmanager.prepareOffsets(k, q), e.each(e.ui.ddmanager.droppables[k.options.scope] || [], function () {
                if (!this.options.disabled && !this.greedyChild && this.visible) {
                    var B, w, C, x = e.ui.intersect(k, this, this.options.tolerance, q), A = !x && this.isover ? "isout" : x && !this.isover ? "isover" : null;
                    A && (this.options.greedy && (w = this.options.scope, C = this.element.parents(":data(ui-droppable)").filter(function () {
                        return e(this).droppable("instance").options.scope === w
                    }), C.length && (B = e(C[0]).droppable("instance"), B.greedyChild = "isover" === A)), B && "isover" === A && (B.isover = !1, B.isout = !0, B._out.call(B, q)), this[A] = !0, this["isout" === A ? "isover" : "isout"] = !1, this["isover" === A ? "_over" : "_out"].call(this, q), B && "isout" === A && (B.isout = !1, B.isover = !0, B._over.call(B, q)))
                }
            })
        },
        dragStop: function (k, q) {
            k.element.parentsUntil("body").unbind("scroll.droppable"), k.options.refreshPositions || e.ui.ddmanager.prepareOffsets(k, q)
        }
    }, e.ui.droppable;
    var R = "ui-effects-", b = e;
    e.effects = {effect: {}}, function (D, q) {
        function G(M, O, L) {
            var N = C[O.type] || {};
            return null == M ? L || !O.def ? null : O.def : (M = N.floor ? ~~M : parseFloat(M), isNaN(M) ? O.def : N.mod ? (M + N.mod) % N.mod : 0 > M ? 0 : M > N.max ? N.max : M)
        }

        function k(L) {
            var N = I(), M = N._rgba = [];
            return L = L.toLowerCase(), E(F, function (O, V) {
                var U, P = V.re.exec(L), T = P && V.parse(P), S = V.space || "rgba";
                return T ? (U = N[S](T), N[w[S].cache] = U[w[S].cache], M = N._rgba = U._rgba, !1) : q
            }), M.length ? ("0,0,0,0" === M.join() && D.extend(M, x.transparent), N) : x[L]
        }

        function K(M, N, L) {
            return L = (L + 1) % 1, 1 > 6 * L ? M + 6 * (N - M) * L : 1 > 2 * L ? N : 2 > 3 * L ? M + 6 * (N - M) * (2 / 3 - L) : M
        }

        var x, B = "backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor", J = /^([\-+])=\s*(\d+\.?\d*)/, F = [{
            re: /rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function (L) {
                return [L[1], L[2], L[3], L[4]]
            }
        }, {
            re: /rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            parse: function (L) {
                return [2.55 * L[1], 2.55 * L[2], 2.55 * L[3], L[4]]
            }
        }, {
            re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/,
            parse: function (L) {
                return [parseInt(L[1], 16), parseInt(L[2], 16), parseInt(L[3], 16)]
            }
        }, {
            re: /#([a-f0-9])([a-f0-9])([a-f0-9])/, parse: function (L) {
                return [parseInt(L[1] + L[1], 16), parseInt(L[2] + L[2], 16), parseInt(L[3] + L[3], 16)]
            }
        }, {
            re: /hsla?\(\s*(\d+(?:\.\d+)?)\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d?(?:\.\d+)?)\s*)?\)/,
            space: "hsla",
            parse: function (L) {
                return [L[1], L[2] / 100, L[3] / 100, L[4]]
            }
        }], I = D.Color = function (O, L, N, M) {
            return new D.Color.fn.parse(O, L, N, M)
        }, w = {
            rgba: {
                props: {
                    red: {idx: 0, type: "byte"},
                    green: {idx: 1, type: "byte"},
                    blue: {idx: 2, type: "byte"}
                }
            },
            hsla: {
                props: {
                    hue: {idx: 0, type: "degrees"},
                    saturation: {idx: 1, type: "percent"},
                    lightness: {idx: 2, type: "percent"}
                }
            }
        }, C = {
            "byte": {floor: !0, max: 255},
            percent: {max: 1},
            degrees: {mod: 360, floor: !0}
        }, A = I.support = {}, H = D("<p>")[0], E = D.each;
        H.style.cssText = "background-color:rgba(1,1,1,.5)", A.rgba = H.style.backgroundColor.indexOf("rgba") > -1, E(w, function (M, L) {
            L.cache = "_" + M, L.props.alpha = {idx: 3, type: "percent", def: 1}
        }), I.fn = D.extend(I.prototype, {
            parse: function (T, O, S, M) {
                if (T === q) {
                    return this._rgba = [null, null, null, null], this
                }
                (T.jquery || T.nodeType) && (T = D(T).css(O), O = q);
                var L = this, N = D.type(T), P = this._rgba = [];
                return O !== q && (T = [T, O, S, M], N = "array"), "string" === N ? this.parse(k(T) || x._default) : "array" === N ? (E(w.rgba.props, function (U, V) {
                    P[V.idx] = G(T[V.idx], V)
                }), this) : "object" === N ? (T instanceof I ? E(w, function (U, V) {
                    T[V.cache] && (L[V.cache] = T[V.cache].slice())
                }) : E(w, function (V, U) {
                    var W = U.cache;
                    E(U.props, function (X, Y) {
                        if (!L[W] && U.to) {
                            if ("alpha" === X || null == T[X]) {
                                return
                            }
                            L[W] = U.to(L._rgba)
                        }
                        L[W][Y.idx] = G(T[X], Y, !0)
                    }), L[W] && 0 > D.inArray(null, L[W].slice(0, 3)) && (L[W][3] = 1, U.from && (L._rgba = U.from(L[W])))
                }), this) : q
            }, is: function (N) {
                var L = I(N), O = !0, M = this;
                return E(w, function (U, S) {
                    var T, P = L[S.cache];
                    return P && (T = M[S.cache] || S.to && S.to(M._rgba) || [], E(S.props, function (V, W) {
                        return null != P[W.idx] ? O = P[W.idx] === T[W.idx] : q
                    })), O
                }), O
            }, _space: function () {
                var M = [], L = this;
                return E(w, function (O, N) {
                    L[N.cache] && M.push(O)
                }), M.pop()
            }, transition: function (M, T) {
                var L = I(M), O = L._space(), U = w[O], S = 0 === this.alpha() ? I("transparent") : this, P = S[U.cache] || U.to(S._rgba), N = P.slice();
                return L = L[U.cache], E(U.props, function (aa, V) {
                    var Z = V.idx, Y = P[Z], X = L[Z], W = C[V.type] || {};
                    null !== X && (null === Y ? N[Z] = X : (W.mod && (X - Y > W.mod / 2 ? Y += W.mod : Y - X > W.mod / 2 && (Y -= W.mod)), N[Z] = G((X - Y) * T + Y, V)))
                }), this[O](N)
            }, blend: function (O) {
                if (1 === this._rgba[3]) {
                    return this
                }
                var L = this._rgba.slice(), N = L.pop(), M = I(O)._rgba;
                return I(D.map(L, function (P, S) {
                    return (1 - N) * M[S] + N * P
                }))
            }, toRgbaString: function () {
                var M = "rgba(", L = D.map(this._rgba, function (N, O) {
                    return null == N ? O > 2 ? 1 : 0 : N
                });
                return 1 === L[3] && (L.pop(), M = "rgb("), M + L.join() + ")"
            }, toHslaString: function () {
                var M = "hsla(", L = D.map(this.hsla(), function (N, O) {
                    return null == N && (N = O > 2 ? 1 : 0), O && 3 > O && (N = Math.round(100 * N) + "%"), N
                });
                return 1 === L[3] && (L.pop(), M = "hsl("), M + L.join() + ")"
            }, toHexString: function (N) {
                var L = this._rgba.slice(), M = L.pop();
                return N && L.push(~~(255 * M)), "#" + D.map(L, function (O) {
                    return O = (O || 0).toString(16), 1 === O.length ? "0" + O : O
                }).join("")
            }, toString: function () {
                return 0 === this._rgba[3] ? "transparent" : this.toRgbaString()
            }
        }), I.fn.parse.prototype = I.fn, w.hsla.to = function (W) {
            if (null == W[0] || null == W[1] || null == W[2]) {
                return [null, null, null, W[3]]
            }
            var S, Y, P = W[0] / 255, M = W[1] / 255, U = W[2] / 255, N = W[3], O = Math.max(P, M, U), X = Math.min(P, M, U), L = O - X, T = O + X, V = 0.5 * T;
            return S = X === O ? 0 : P === O ? 60 * (M - U) / L + 360 : M === O ? 60 * (U - P) / L + 120 : 60 * (P - M) / L + 240, Y = 0 === L ? 0 : 0.5 >= V ? L / T : L / (2 - T), [Math.round(S) % 360, Y, V, null == N ? 1 : N]
        }, w.hsla.from = function (T) {
            if (null == T[0] || null == T[1] || null == T[2]) {
                return [null, null, null, T[3]]
            }
            var N = T[0] / 360, P = T[1], M = T[2], S = T[3], O = 0.5 >= M ? M * (1 + P) : M + P - M * P, L = 2 * M - O;
            return [Math.round(255 * K(L, O, N + 1 / 3)), Math.round(255 * K(L, O, N)), Math.round(255 * K(L, O, N - 1 / 3)), S]
        }, E(w, function (M, O) {
            var S = O.props, L = O.cache, N = O.to, P = O.from;
            I.fn[M] = function (T) {
                if (N && !this[L] && (this[L] = N(this._rgba)), T === q) {
                    return this[L].slice()
                }
                var W, V = D.type(T), X = "array" === V || "object" === V ? T : arguments, U = this[L].slice();
                return E(S, function (Z, aa) {
                    var Y = X["object" === V ? Z : aa.idx];
                    null == Y && (Y = U[aa.idx]), U[aa.idx] = G(Y, aa)
                }), P ? (W = I(P(U)), W[L] = U, W) : I(U)
            }, E(S, function (U, T) {
                I.fn[U] || (I.fn[U] = function (W) {
                    var V, Y = D.type(W), Z = "alpha" === U ? this._hsla ? "hsla" : "rgba" : M, X = this[Z](), ab = X[T.idx];
                    return "undefined" === Y ? ab : ("function" === Y && (W = W.call(this, ab), Y = D.type(W)), null == W && T.empty ? this : ("string" === Y && (V = J.exec(W), V && (W = ab + parseFloat(V[2]) * ("+" === V[1] ? 1 : -1))), X[T.idx] = W, this[Z](X)))
                })
            })
        }), I.hook = function (M) {
            var L = M.split(" ");
            E(L, function (N, O) {
                D.cssHooks[O] = {
                    set: function (P, W) {
                        var U, S, T = "";
                        if ("transparent" !== W && ("string" !== D.type(W) || (U = k(W)))) {
                            if (W = I(U || W), !A.rgba && 1 !== W._rgba[3]) {
                                for (S = "backgroundColor" === O ? P.parentNode : P; ("" === T || "transparent" === T) && S && S.style;) {
                                    try {
                                        T = D.css(S, "backgroundColor"), S = S.parentNode
                                    } catch (V) {
                                    }
                                }
                                W = W.blend(T && "transparent" !== T ? T : "_default")
                            }
                            W = W.toRgbaString()
                        }
                        try {
                            P.style[O] = W
                        } catch (V) {
                        }
                    }
                }, D.fx.step[O] = function (P) {
                    P.colorInit || (P.start = I(P.elem, O), P.end = I(P.end), P.colorInit = !0), D.cssHooks[O].set(P.elem, P.start.transition(P.end, P.pos))
                }
            })
        }, I.hook(B), D.cssHooks.borderColor = {
            expand: function (M) {
                var L = {};
                return E(["Top", "Right", "Bottom", "Left"], function (O, N) {
                    L["border" + N + "Color"] = M
                }), L
            }
        }, x = D.Color.names = {
            aqua: "#00ffff",
            black: "#000000",
            blue: "#0000ff",
            fuchsia: "#ff00ff",
            gray: "#808080",
            green: "#008000",
            lime: "#00ff00",
            maroon: "#800000",
            navy: "#000080",
            olive: "#808000",
            purple: "#800080",
            red: "#ff0000",
            silver: "#c0c0c0",
            teal: "#008080",
            white: "#ffffff",
            yellow: "#ffff00",
            transparent: [null, null, null, 0],
            _default: "#ffffff"
        }
    }(b), function () {
        function k(C) {
            var D, B, A = C.ownerDocument.defaultView ? C.ownerDocument.defaultView.getComputedStyle(C, null) : C.currentStyle, E = {};
            if (A && A.length && A[0] && A[A[0]]) {
                for (B = A.length; B--;) {
                    D = A[B], "string" == typeof A[D] && (E[e.camelCase(D)] = A[D])
                }
            } else {
                for (D in A) {
                    "string" == typeof A[D] && (E[D] = A[D])
                }
            }
            return E
        }

        function q(C, D) {
            var B, E, A = {};
            for (B in D) {
                E = D[B], C[B] !== E && (w[B] || (e.fx.step[B] || !isNaN(parseFloat(E))) && (A[B] = E))
            }
            return A
        }

        var x = ["add", "remove", "toggle"], w = {
            border: 1,
            borderBottom: 1,
            borderColor: 1,
            borderLeft: 1,
            borderRight: 1,
            borderTop: 1,
            borderWidth: 1,
            margin: 1,
            padding: 1
        };
        e.each(["borderLeftStyle", "borderRightStyle", "borderBottomStyle", "borderTopStyle"], function (A, B) {
            e.fx.step[B] = function (C) {
                ("none" !== C.end && !C.setAttr || 1 === C.pos && !C.setAttr) && (b.style(C.elem, B, C.end), C.setAttr = !0)
            }
        }), e.fn.addBack || (e.fn.addBack = function (A) {
            return this.add(null == A ? this.prevObject : this.prevObject.filter(A))
        }), e.effects.animateClass = function (A, E, B, C) {
            var D = e.speed(E, B, C);
            return this.queue(function () {
                var I, G = e(this), H = G.attr("class") || "", F = D.children ? G.find("*").addBack() : G;
                F = F.map(function () {
                    var J = e(this);
                    return {el: J, start: k(this)}
                }), I = function () {
                    e.each(x, function (J, K) {
                        A[K] && G[K + "Class"](A[K])
                    })
                }, I(), F = F.map(function () {
                    return this.end = k(this.el[0]), this.diff = q(this.start, this.end), this
                }), G.attr("class", H), F = F.map(function () {
                    var K = this, L = e.Deferred(), J = e.extend({}, D, {
                        queue: !1,
                        complete: function () {
                            L.resolve(K)
                        }
                    });
                    return this.el.animate(this.diff, J), L.promise()
                }), e.when.apply(e, F.get()).done(function () {
                    I(), e.each(arguments, function () {
                        var J = this.el;
                        e.each(this.diff, function (K) {
                            J.css(K, "")
                        })
                    }), D.complete.call(G[0])
                })
            })
        }, e.fn.extend({
            addClass: function (A) {
                return function (D, C, B, E) {
                    return C ? e.effects.animateClass.call(this, {add: D}, C, B, E) : A.apply(this, arguments)
                }
            }(e.fn.addClass), removeClass: function (A) {
                return function (D, C, B, E) {
                    return arguments.length > 1 ? e.effects.animateClass.call(this, {remove: D}, C, B, E) : A.apply(this, arguments)
                }
            }(e.fn.removeClass), toggleClass: function (A) {
                return function (E, D, B, F, C) {
                    return "boolean" == typeof D || void 0 === D ? B ? e.effects.animateClass.call(this, D ? {add: E} : {remove: E}, B, F, C) : A.apply(this, arguments) : e.effects.animateClass.call(this, {toggle: E}, D, B, F)
                }
            }(e.fn.toggleClass), switchClass: function (C, D, B, A, E) {
                return e.effects.animateClass.call(this, {
                    add: D,
                    remove: C
                }, B, A, E)
            }
        })
    }(), function () {
        function k(A, B, x, w) {
            return e.isPlainObject(A) && (B = A, A = A.effect), A = {effect: A}, null == B && (B = {}), e.isFunction(B) && (w = B, x = null, B = {}), ("number" == typeof B || e.fx.speeds[B]) && (w = x, x = B, B = {}), e.isFunction(x) && (w = x, x = null), B && e.extend(A, B), x = x || B.duration, A.duration = e.fx.off ? 0 : "number" == typeof x ? x : x in e.fx.speeds ? e.fx.speeds[x] : e.fx.speeds._default, A.complete = w || B.complete, A
        }

        function q(w) {
            return !w || "number" == typeof w || e.fx.speeds[w] ? !0 : "string" != typeof w || e.effects.effect[w] ? e.isFunction(w) ? !0 : "object" != typeof w || w.effect ? !1 : !0 : !0
        }

        e.extend(e.effects, {
            version: "1.11.4", save: function (w, x) {
                for (var A = 0; x.length > A; A++) {
                    null !== x[A] && w.data(R + x[A], w[0].style[x[A]])
                }
            }, restore: function (w, A) {
                var B, x;
                for (x = 0; A.length > x; x++) {
                    null !== A[x] && (B = w.data(R + A[x]), void 0 === B && (B = ""), w.css(A[x], B))
                }
            }, setMode: function (w, x) {
                return "toggle" === x && (x = w.is(":hidden") ? "show" : "hide"), x
            }, getBaseline: function (w, A) {
                var B, x;
                switch (w[0]) {
                    case"top":
                        B = 0;
                        break;
                    case"middle":
                        B = 0.5;
                        break;
                    case"bottom":
                        B = 1;
                        break;
                    default:
                        B = w[0] / A.height
                }
                switch (w[1]) {
                    case"left":
                        x = 0;
                        break;
                    case"center":
                        x = 0.5;
                        break;
                    case"right":
                        x = 1;
                        break;
                    default:
                        x = w[1] / A.width
                }
                return {x: x, y: B}
            }, createWrapper: function (B) {
                if (B.parent().is(".ui-effects-wrapper")) {
                    return B.parent()
                }
                var C = {
                    width: B.outerWidth(!0),
                    height: B.outerHeight(!0),
                    "float": B.css("float")
                }, A = e("<div></div>").addClass("ui-effects-wrapper").css({
                    fontSize: "100%",
                    background: "transparent",
                    border: "none",
                    margin: 0,
                    padding: 0
                }), w = {
                    width: B.width(),
                    height: B.height()
                }, D = document.activeElement;
                try {
                    D.id
                } catch (x) {
                    D = document.body
                }
                return B.wrap(A), (B[0] === D || e.contains(B[0], D)) && e(D).focus(), A = B.parent(), "static" === B.css("position") ? (A.css({position: "relative"}), B.css({position: "relative"})) : (e.extend(C, {
                    position: B.css("position"),
                    zIndex: B.css("z-index")
                }), e.each(["top", "left", "bottom", "right"], function (E, F) {
                    C[F] = B.css(F), isNaN(parseInt(C[F], 10)) && (C[F] = "auto")
                }), B.css({
                    position: "relative",
                    top: 0,
                    left: 0,
                    right: "auto",
                    bottom: "auto"
                })), B.css(w), A.css(C).show()
            }, removeWrapper: function (w) {
                var x = document.activeElement;
                return w.parent().is(".ui-effects-wrapper") && (w.parent().replaceWith(w), (w[0] === x || e.contains(w[0], x)) && e(x).focus()), w
            }, setTransition: function (A, B, x, w) {
                return w = w || {}, e.each(B, function (C, D) {
                    var E = A.cssUnit(D);
                    E[0] > 0 && (w[D] = E[0] * x + E[1])
                }), w
            }
        }), e.fn.extend({
            effect: function () {
                function B(D) {
                    function E() {
                        e.isFunction(F) && F.call(G[0]), e.isFunction(D) && D()
                    }

                    var G = e(this), F = A.complete, H = A.mode;
                    (G.is(":hidden") ? "hide" === H : "show" === H) ? (G[H](), E()) : x.call(G[0], A, E)
                }

                var A = k.apply(this, arguments), w = A.mode, C = A.queue, x = e.effects.effect[A.effect];
                return e.fx.off || !x ? w ? this[w](A.duration, A.complete) : this.each(function () {
                    A.complete && A.complete.call(this)
                }) : C === !1 ? this.each(B) : this.queue(C || "fx", B)
            }, show: function (w) {
                return function (A) {
                    if (q(A)) {
                        return w.apply(this, arguments)
                    }
                    var x = k.apply(this, arguments);
                    return x.mode = "show", this.effect.call(this, x)
                }
            }(e.fn.show), hide: function (w) {
                return function (A) {
                    if (q(A)) {
                        return w.apply(this, arguments)
                    }
                    var x = k.apply(this, arguments);
                    return x.mode = "hide", this.effect.call(this, x)
                }
            }(e.fn.hide), toggle: function (w) {
                return function (A) {
                    if (q(A) || "boolean" == typeof A) {
                        return w.apply(this, arguments)
                    }
                    var x = k.apply(this, arguments);
                    return x.mode = "toggle", this.effect.call(this, x)
                }
            }(e.fn.toggle), cssUnit: function (x) {
                var A = this.css(x), w = [];
                return e.each(["em", "px", "%", "pt"], function (B, C) {
                    A.indexOf(C) > 0 && (w = [parseFloat(A), C])
                }), w
            }
        })
    }(), function () {
        var k = {};
        e.each(["Quad", "Cubic", "Quart", "Quint", "Expo"], function (w, q) {
            k[q] = function (x) {
                return Math.pow(x, w + 2)
            }
        }), e.extend(k, {
            Sine: function (q) {
                return 1 - Math.cos(q * Math.PI / 2)
            }, Circ: function (q) {
                return 1 - Math.sqrt(1 - q * q)
            }, Elastic: function (q) {
                return 0 === q || 1 === q ? q : -Math.pow(2, 8 * (q - 1)) * Math.sin((80 * (q - 1) - 7.5) * Math.PI / 15)
            }, Back: function (q) {
                return q * q * (3 * q - 2)
            }, Bounce: function (w) {
                for (var x, q = 4; ((x = Math.pow(2, --q)) - 1) / 11 > w;) {
                }
                return 1 / Math.pow(4, 3 - q) - 7.5625 * Math.pow((3 * x - 2) / 22 - w, 2)
            }
        }), e.each(k, function (w, q) {
            e.easing["easeIn" + w] = q, e.easing["easeOut" + w] = function (x) {
                return 1 - q(1 - x)
            }, e.easing["easeInOut" + w] = function (x) {
                return 0.5 > x ? q(2 * x) / 2 : 1 - q(-2 * x + 2) / 2
            }
        })
    }(), e.effects, e.effects.effect.blind = function (L, D) {
        var K, G, q, I = e(this), J = /up|down|vertical/, C = /up|left|vertical|horizontal/, E = ["position", "top", "bottom", "left", "right", "height", "width"], M = e.effects.setMode(I, L.mode || "hide"), x = L.direction || "up", w = J.test(x), H = w ? "height" : "width", A = w ? "top" : "left", F = C.test(x), B = {}, k = "show" === M;
        I.parent().is(".ui-effects-wrapper") ? e.effects.save(I.parent(), E) : e.effects.save(I, E), I.show(), K = e.effects.createWrapper(I).css({overflow: "hidden"}), G = K[H](), q = parseFloat(K.css(A)) || 0, B[H] = k ? G : 0, F || (I.css(w ? "bottom" : "right", 0).css(w ? "top" : "left", "auto").css({position: "absolute"}), B[A] = k ? q : G + q), k && (K.css(H, 0), F || K.css(A, q + G)), K.animate(B, {
            duration: L.duration,
            easing: L.easing,
            queue: !1,
            complete: function () {
                "hide" === M && I.hide(), e.effects.restore(I, E), e.effects.removeWrapper(I), D()
            }
        })
    }, e.effects.effect.bounce = function (D, P) {
        var C, w, H, x = e(this), B = ["position", "top", "bottom", "left", "right", "height", "width"], O = e.effects.setMode(x, D.mode || "effect"), k = "hide" === O, E = "show" === O, L = D.direction || "up", K = D.distance, A = D.times || 5, M = 2 * A + (E || k ? 1 : 0), q = D.duration / M, N = D.easing, F = "up" === L || "down" === L ? "top" : "left", J = "up" === L || "left" === L, I = x.queue(), G = I.length;
        for ((E || k) && B.push("opacity"), e.effects.save(x, B), x.show(), e.effects.createWrapper(x), K || (K = x["top" === F ? "outerHeight" : "outerWidth"]() / 3), E && (H = {opacity: 1}, H[F] = 0, x.css("opacity", 0).css(F, J ? 2 * -K : 2 * K).animate(H, q, N)), k && (K /= Math.pow(2, A - 1)), H = {}, H[F] = 0, C = 0; A > C; C++) {
            w = {}, w[F] = (J ? "-=" : "+=") + K, x.animate(w, q, N).animate(H, q, N), K = k ? 2 * K : K / 2
        }
        k && (w = {opacity: 0}, w[F] = (J ? "-=" : "+=") + K, x.animate(w, q, N)), x.queue(function () {
            k && x.hide(), e.effects.restore(x, B), e.effects.removeWrapper(x), P()
        }), G > 1 && I.splice.apply(I, [1, 0].concat(I.splice(G, M + 1))), x.dequeue()
    }, e.effects.effect.clip = function (q, H) {
        var k, x, A, F = e(this), I = ["position", "top", "bottom", "left", "right", "height", "width"], E = e.effects.setMode(F, q.mode || "hide"), J = "show" === E, w = q.direction || "vertical", C = "vertical" === w, B = C ? "height" : "width", G = C ? "top" : "left", D = {};
        e.effects.save(F, I), F.show(), k = e.effects.createWrapper(F).css({overflow: "hidden"}), x = "IMG" === F[0].tagName ? k : F, A = x[B](), J && (x.css(B, 0), x.css(G, A / 2)), D[B] = J ? A : 0, D[G] = J ? 0 : A / 2, x.animate(D, {
            queue: !1,
            duration: q.duration,
            easing: q.easing,
            complete: function () {
                J || F.hide(), e.effects.restore(F, I), e.effects.removeWrapper(F), H()
            }
        })
    }, e.effects.effect.drop = function (x, A) {
        var w, C = e(this), G = ["position", "top", "bottom", "left", "right", "opacity", "height", "width"], D = e.effects.setMode(C, x.mode || "hide"), F = "show" === D, q = x.direction || "left", B = "up" === q || "down" === q ? "top" : "left", E = "up" === q || "left" === q ? "pos" : "neg", k = {opacity: F ? 1 : 0};
        e.effects.save(C, G), C.show(), e.effects.createWrapper(C), w = x.distance || C["top" === B ? "outerHeight" : "outerWidth"](!0) / 2, F && C.css("opacity", 0).css(B, "pos" === E ? -w : w), k[B] = (F ? "pos" === E ? "+=" : "-=" : "pos" === E ? "-=" : "+=") + w, C.animate(k, {
            queue: !1,
            duration: x.duration,
            easing: x.easing,
            complete: function () {
                "hide" === D && C.hide(), e.effects.restore(C, G), e.effects.removeWrapper(C), A()
            }
        })
    }, e.effects.effect.explode = function (D, O) {
        function C() {
            H.push(this), H.length === K * J && w()
        }

        function w() {
            A.css({visibility: "visible"}), e(H).remove(), q || A.hide(), O()
        }

        var G, x, B, N, k, E, K = D.pieces ? Math.round(Math.sqrt(D.pieces)) : 3, J = K, A = e(this), L = e.effects.setMode(A, D.mode || "hide"), q = "show" === L, M = A.show().css("visibility", "hidden").offset(), F = Math.ceil(A.outerWidth() / J), I = Math.ceil(A.outerHeight() / K), H = [];
        for (G = 0; K > G; G++) {
            for (N = M.top + G * I, E = G - (K - 1) / 2, x = 0; J > x; x++) {
                B = M.left + x * F, k = x - (J - 1) / 2, A.clone().appendTo("body").wrap("<div></div>").css({
                    position: "absolute",
                    visibility: "visible",
                    left: -x * F,
                    top: -G * I
                }).parent().addClass("ui-effects-explode").css({
                    position: "absolute",
                    overflow: "hidden",
                    width: F,
                    height: I,
                    left: B + (q ? k * F : 0),
                    top: N + (q ? E * I : 0),
                    opacity: q ? 0 : 1
                }).animate({
                    left: B + (q ? 0 : k * F),
                    top: N + (q ? 0 : E * I),
                    opacity: q ? 1 : 0
                }, D.duration || 500, D.easing, C)
            }
        }
    }, e.effects.effect.fade = function (k, q) {
        var x = e(this), w = e.effects.setMode(x, k.mode || "toggle");
        x.animate({opacity: w}, {
            queue: !1,
            duration: k.duration,
            easing: k.easing,
            complete: q
        })
    }, e.effects.effect.fold = function (L, D) {
        var K, G, q = e(this), I = ["position", "top", "bottom", "left", "right", "height", "width"], J = e.effects.setMode(q, L.mode || "hide"), C = "show" === J, E = "hide" === J, M = L.size || 15, x = /([0-9]+)%/.exec(M), w = !!L.horizFirst, H = C !== w, A = H ? ["width", "height"] : ["height", "width"], F = L.duration / 2, B = {}, k = {};
        e.effects.save(q, I), q.show(), K = e.effects.createWrapper(q).css({overflow: "hidden"}), G = H ? [K.width(), K.height()] : [K.height(), K.width()], x && (M = parseInt(x[1], 10) / 100 * G[E ? 0 : 1]), C && K.css(w ? {
            height: 0,
            width: M
        } : {
            height: M,
            width: 0
        }), B[A[0]] = C ? G[0] : M, k[A[1]] = C ? G[1] : 0, K.animate(B, F, L.easing).animate(k, F, L.easing, function () {
            E && q.hide(), e.effects.restore(q, I), e.effects.removeWrapper(q), D()
        })
    }, e.effects.effect.highlight = function (A, B) {
        var x = e(this), q = ["backgroundImage", "backgroundColor", "opacity"], k = e.effects.setMode(x, A.mode || "show"), w = {backgroundColor: x.css("backgroundColor")};
        "hide" === k && (w.opacity = 0), e.effects.save(x, q), x.show().css({
            backgroundImage: "none",
            backgroundColor: A.color || "#ffff99"
        }).animate(w, {
            queue: !1,
            duration: A.duration,
            easing: A.easing,
            complete: function () {
                "hide" === k && x.hide(), e.effects.restore(x, q), B()
            }
        })
    }, e.effects.effect.size = function (D, O) {
        var C, w, G, x = e(this), B = ["position", "top", "bottom", "left", "right", "width", "height", "overflow", "opacity"], N = ["position", "top", "bottom", "left", "right", "overflow", "opacity"], k = ["width", "height", "overflow"], E = ["fontSize"], K = ["borderTopWidth", "borderBottomWidth", "paddingTop", "paddingBottom"], J = ["borderLeftWidth", "borderRightWidth", "paddingLeft", "paddingRight"], A = e.effects.setMode(x, D.mode || "effect"), L = D.restore || "effect" !== A, q = D.scale || "both", M = D.origin || ["middle", "center"], F = x.css("position"), I = L ? B : N, H = {
            height: 0,
            width: 0,
            outerHeight: 0,
            outerWidth: 0
        };
        "show" === A && x.show(), C = {
            height: x.height(),
            width: x.width(),
            outerHeight: x.outerHeight(),
            outerWidth: x.outerWidth()
        }, "toggle" === D.mode && "show" === A ? (x.from = D.to || H, x.to = D.from || C) : (x.from = D.from || ("show" === A ? H : C), x.to = D.to || ("hide" === A ? H : C)), G = {
            from: {
                y: x.from.height / C.height,
                x: x.from.width / C.width
            }, to: {y: x.to.height / C.height, x: x.to.width / C.width}
        }, ("box" === q || "both" === q) && (G.from.y !== G.to.y && (I = I.concat(K), x.from = e.effects.setTransition(x, K, G.from.y, x.from), x.to = e.effects.setTransition(x, K, G.to.y, x.to)), G.from.x !== G.to.x && (I = I.concat(J), x.from = e.effects.setTransition(x, J, G.from.x, x.from), x.to = e.effects.setTransition(x, J, G.to.x, x.to))), ("content" === q || "both" === q) && G.from.y !== G.to.y && (I = I.concat(E).concat(k), x.from = e.effects.setTransition(x, E, G.from.y, x.from), x.to = e.effects.setTransition(x, E, G.to.y, x.to)), e.effects.save(x, I), x.show(), e.effects.createWrapper(x), x.css("overflow", "hidden").css(x.from), M && (w = e.effects.getBaseline(M, C), x.from.top = (C.outerHeight - x.outerHeight()) * w.y, x.from.left = (C.outerWidth - x.outerWidth()) * w.x, x.to.top = (C.outerHeight - x.to.outerHeight) * w.y, x.to.left = (C.outerWidth - x.to.outerWidth) * w.x), x.css(x.from), ("content" === q || "both" === q) && (K = K.concat(["marginTop", "marginBottom"]).concat(E), J = J.concat(["marginLeft", "marginRight"]), k = B.concat(K).concat(J), x.find("*[width]").each(function () {
            var S = e(this), P = {
                height: S.height(),
                width: S.width(),
                outerHeight: S.outerHeight(),
                outerWidth: S.outerWidth()
            };
            L && e.effects.save(S, k), S.from = {
                height: P.height * G.from.y,
                width: P.width * G.from.x,
                outerHeight: P.outerHeight * G.from.y,
                outerWidth: P.outerWidth * G.from.x
            }, S.to = {
                height: P.height * G.to.y,
                width: P.width * G.to.x,
                outerHeight: P.height * G.to.y,
                outerWidth: P.width * G.to.x
            }, G.from.y !== G.to.y && (S.from = e.effects.setTransition(S, K, G.from.y, S.from), S.to = e.effects.setTransition(S, K, G.to.y, S.to)), G.from.x !== G.to.x && (S.from = e.effects.setTransition(S, J, G.from.x, S.from), S.to = e.effects.setTransition(S, J, G.to.x, S.to)), S.css(S.from), S.animate(S.to, D.duration, D.easing, function () {
                L && e.effects.restore(S, k)
            })
        })), x.animate(x.to, {
            queue: !1,
            duration: D.duration,
            easing: D.easing,
            complete: function () {
                0 === x.to.opacity && x.css("opacity", x.from.opacity), "hide" === A && x.hide(), e.effects.restore(x, I), L || ("static" === F ? x.css({
                    position: "relative",
                    top: x.to.top,
                    left: x.to.left
                }) : e.each(["top", "left"], function (P, S) {
                    x.css(S, function (V, W) {
                        var U = parseInt(W, 10), T = P ? x.to.left : x.to.top;
                        return "auto" === W ? T + "px" : U + T + "px"
                    })
                })), e.effects.removeWrapper(x), O()
            }
        })
    }, e.effects.effect.scale = function (F, x) {
        var D = e(this), B = e.extend(!0, {}, F), q = e.effects.setMode(D, F.mode || "effect"), C = parseInt(F.percent, 10) || (0 === parseInt(F.percent, 10) ? 0 : "hide" === q ? 0 : 100), E = F.direction || "both", w = F.origin, A = {
            height: D.height(),
            width: D.width(),
            outerHeight: D.outerHeight(),
            outerWidth: D.outerWidth()
        }, k = {
            y: "horizontal" !== E ? C / 100 : 1,
            x: "vertical" !== E ? C / 100 : 1
        };
        B.effect = "size", B.queue = !1, B.complete = x, "effect" !== q && (B.origin = w || ["middle", "center"], B.restore = !0), B.from = F.from || ("show" === q ? {
            height: 0,
            width: 0,
            outerHeight: 0,
            outerWidth: 0
        } : A), B.to = {
            height: A.height * k.y,
            width: A.width * k.x,
            outerHeight: A.outerHeight * k.y,
            outerWidth: A.outerWidth * k.x
        }, B.fade && ("show" === q && (B.from.opacity = 0, B.to.opacity = 1), "hide" === q && (B.from.opacity = 1, B.to.opacity = 0)), D.effect(B)
    }, e.effects.effect.puff = function (C, D) {
        var A = e(this), q = e.effects.setMode(A, C.mode || "hide"), k = "hide" === q, w = parseInt(C.percent, 10) || 150, x = w / 100, B = {
            height: A.height(),
            width: A.width(),
            outerHeight: A.outerHeight(),
            outerWidth: A.outerWidth()
        };
        e.extend(C, {
            effect: "scale",
            queue: !1,
            fade: !0,
            mode: q,
            complete: D,
            percent: k ? w : 100,
            from: k ? B : {
                height: B.height * x,
                width: B.width * x,
                outerHeight: B.outerHeight * x,
                outerWidth: B.outerWidth * x
            }
        }), A.effect(C)
    }, e.effects.effect.pulsate = function (w, I) {
        var q, D = e(this), A = e.effects.setMode(D, w.mode || "show"), E = "show" === A, H = "hide" === A, G = E || "hide" === A, k = 2 * (w.times || 5) + (G ? 1 : 0), x = w.duration / k, C = 0, B = D.queue(), F = B.length;
        for ((E || !D.is(":visible")) && (D.css("opacity", 0).show(), C = 1), q = 1; k > q; q++) {
            D.animate({opacity: C}, x, w.easing), C = 1 - C
        }
        D.animate({opacity: C}, x, w.easing), D.queue(function () {
            H && D.hide(), I()
        }), F > 1 && B.splice.apply(B, [1, 0].concat(B.splice(F, k + 1))), D.dequeue()
    }, e.effects.effect.shake = function (E, k) {
        var D, x = e(this), G = ["position", "top", "bottom", "left", "right", "height", "width"], A = e.effects.setMode(x, E.mode || "effect"), C = E.direction || "left", N = E.distance || 20, q = E.times || 3, F = 2 * q + 1, J = Math.round(E.duration / F), I = "up" === C || "down" === C ? "top" : "left", B = "up" === C || "left" === C, L = {}, w = {}, M = {}, H = x.queue(), K = H.length;
        for (e.effects.save(x, G), x.show(), e.effects.createWrapper(x), L[I] = (B ? "-=" : "+=") + N, w[I] = (B ? "+=" : "-=") + 2 * N, M[I] = (B ? "-=" : "+=") + 2 * N, x.animate(L, J, E.easing), D = 1; q > D; D++) {
            x.animate(w, J, E.easing).animate(M, J, E.easing)
        }
        x.animate(w, J, E.easing).animate(L, J / 2, E.easing).queue(function () {
            "hide" === A && x.hide(), e.effects.restore(x, G), e.effects.removeWrapper(x), k()
        }), K > 1 && H.splice.apply(H, [1, 0].concat(H.splice(K, F + 1))), x.dequeue()
    }, e.effects.effect.slide = function (x, A) {
        var w, C = e(this), G = ["position", "top", "bottom", "left", "right", "width", "height"], D = e.effects.setMode(C, x.mode || "show"), F = "show" === D, q = x.direction || "left", B = "up" === q || "down" === q ? "top" : "left", E = "up" === q || "left" === q, k = {};
        e.effects.save(C, G), C.show(), w = x.distance || C["top" === B ? "outerHeight" : "outerWidth"](!0), e.effects.createWrapper(C).css({overflow: "hidden"}), F && C.css(B, E ? isNaN(w) ? "-" + w : -w : w), k[B] = (F ? E ? "+=" : "-=" : E ? "-=" : "+=") + w, C.animate(k, {
            queue: !1,
            duration: x.duration,
            easing: x.easing,
            complete: function () {
                "hide" === D && C.hide(), e.effects.restore(C, G), e.effects.removeWrapper(C), A()
            }
        })
    }, e.effects.effect.transfer = function (x, q) {
        var w = e(this), D = e(x.to), B = "fixed" === D.css("position"), E = e("body"), G = B ? E.scrollTop() : 0, k = B ? E.scrollLeft() : 0, C = D.offset(), A = {
            top: C.top - G,
            left: C.left - k,
            height: D.innerHeight(),
            width: D.innerWidth()
        }, H = w.offset(), F = e("<div class='ui-effects-transfer'></div>").appendTo(document.body).addClass(x.className).css({
            top: H.top - G,
            left: H.left - k,
            height: w.innerHeight(),
            width: w.innerWidth(),
            position: B ? "fixed" : "absolute"
        }).animate(A, x.duration, x.easing, function () {
            F.remove(), q()
        })
    }, e.widget("ui.progressbar", {
        version: "1.11.4",
        options: {max: 100, value: 0, change: null, complete: null},
        min: 0,
        _create: function () {
            this.oldValue = this.options.value = this._constrainedValue(), this.element.addClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").attr({
                role: "progressbar",
                "aria-valuemin": this.min
            }), this.valueDiv = e("<div class='ui-progressbar-value ui-widget-header ui-corner-left'></div>").appendTo(this.element), this._refreshValue()
        },
        _destroy: function () {
            this.element.removeClass("ui-progressbar ui-widget ui-widget-content ui-corner-all").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"), this.valueDiv.remove()
        },
        value: function (k) {
            return void 0 === k ? this.options.value : (this.options.value = this._constrainedValue(k), this._refreshValue(), void 0)
        },
        _constrainedValue: function (k) {
            return void 0 === k && (k = this.options.value), this.indeterminate = k === !1, "number" != typeof k && (k = 0), this.indeterminate ? !1 : Math.min(this.options.max, Math.max(this.min, k))
        },
        _setOptions: function (k) {
            var q = k.value;
            delete k.value, this._super(k), this.options.value = this._constrainedValue(q), this._refreshValue()
        },
        _setOption: function (k, q) {
            "max" === k && (q = Math.max(this.min, q)), "disabled" === k && this.element.toggleClass("ui-state-disabled", !!q).attr("aria-disabled", q), this._super(k, q)
        },
        _percentage: function () {
            return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min)
        },
        _refreshValue: function () {
            var k = this.options.value, q = this._percentage();
            this.valueDiv.toggle(this.indeterminate || k > this.min).toggleClass("ui-corner-right", k === this.options.max).width(q.toFixed(0) + "%"), this.element.toggleClass("ui-progressbar-indeterminate", this.indeterminate), this.indeterminate ? (this.element.removeAttr("aria-valuenow"), this.overlayDiv || (this.overlayDiv = e("<div class='ui-progressbar-overlay'></div>").appendTo(this.valueDiv))) : (this.element.attr({
                "aria-valuemax": this.options.max,
                "aria-valuenow": k
            }), this.overlayDiv && (this.overlayDiv.remove(), this.overlayDiv = null)), this.oldValue !== k && (this.oldValue = k, this._trigger("change")), k === this.options.max && this._trigger("complete")
        }
    }), e.widget("ui.selectable", e.ui.mouse, {
        version: "1.11.4",
        options: {
            appendTo: "body",
            autoRefresh: !0,
            distance: 0,
            filter: "*",
            tolerance: "touch",
            selected: null,
            selecting: null,
            start: null,
            stop: null,
            unselected: null,
            unselecting: null
        },
        _create: function () {
            var k, q = this;
            this.element.addClass("ui-selectable"), this.dragged = !1, this.refresh = function () {
                k = e(q.options.filter, q.element[0]), k.addClass("ui-selectee"), k.each(function () {
                    var w = e(this), x = w.offset();
                    e.data(this, "selectable-item", {
                        element: this,
                        $element: w,
                        left: x.left,
                        top: x.top,
                        right: x.left + w.outerWidth(),
                        bottom: x.top + w.outerHeight(),
                        startselected: !1,
                        selected: w.hasClass("ui-selected"),
                        selecting: w.hasClass("ui-selecting"),
                        unselecting: w.hasClass("ui-unselecting")
                    })
                })
            }, this.refresh(), this.selectees = k.addClass("ui-selectee"), this._mouseInit(), this.helper = e("<div class='ui-selectable-helper'></div>")
        },
        _destroy: function () {
            this.selectees.removeClass("ui-selectee").removeData("selectable-item"), this.element.removeClass("ui-selectable ui-selectable-disabled"), this._mouseDestroy()
        },
        _mouseStart: function (k) {
            var q = this, w = this.options;
            this.opos = [k.pageX, k.pageY], this.options.disabled || (this.selectees = e(w.filter, this.element[0]), this._trigger("start", k), e(w.appendTo).append(this.helper), this.helper.css({
                left: k.pageX,
                top: k.pageY,
                width: 0,
                height: 0
            }), w.autoRefresh && this.refresh(), this.selectees.filter(".ui-selected").each(function () {
                var x = e.data(this, "selectable-item");
                x.startselected = !0, k.metaKey || k.ctrlKey || (x.$element.removeClass("ui-selected"), x.selected = !1, x.$element.addClass("ui-unselecting"), x.unselecting = !0, q._trigger("unselecting", k, {unselecting: x.element}))
            }), e(k.target).parents().addBack().each(function () {
                var A, x = e.data(this, "selectable-item");
                return x ? (A = !k.metaKey && !k.ctrlKey || !x.$element.hasClass("ui-selected"), x.$element.removeClass(A ? "ui-unselecting" : "ui-selected").addClass(A ? "ui-selecting" : "ui-unselecting"), x.unselecting = !A, x.selecting = A, x.selected = A, A ? q._trigger("selecting", k, {selecting: x.element}) : q._trigger("unselecting", k, {unselecting: x.element}), !1) : void 0
            }))
        },
        _mouseDrag: function (C) {
            if (this.dragged = !0, !this.options.disabled) {
                var D, A = this, q = this.options, k = this.opos[0], w = this.opos[1], x = C.pageX, B = C.pageY;
                return k > x && (D = x, x = k, k = D), w > B && (D = B, B = w, w = D), this.helper.css({
                    left: k,
                    top: w,
                    width: x - k,
                    height: B - w
                }), this.selectees.each(function () {
                    var F = e.data(this, "selectable-item"), E = !1;
                    F && F.element !== A.element[0] && ("touch" === q.tolerance ? E = !(F.left > x || k > F.right || F.top > B || w > F.bottom) : "fit" === q.tolerance && (E = F.left > k && x > F.right && F.top > w && B > F.bottom), E ? (F.selected && (F.$element.removeClass("ui-selected"), F.selected = !1), F.unselecting && (F.$element.removeClass("ui-unselecting"), F.unselecting = !1), F.selecting || (F.$element.addClass("ui-selecting"), F.selecting = !0, A._trigger("selecting", C, {selecting: F.element}))) : (F.selecting && ((C.metaKey || C.ctrlKey) && F.startselected ? (F.$element.removeClass("ui-selecting"), F.selecting = !1, F.$element.addClass("ui-selected"), F.selected = !0) : (F.$element.removeClass("ui-selecting"), F.selecting = !1, F.startselected && (F.$element.addClass("ui-unselecting"), F.unselecting = !0), A._trigger("unselecting", C, {unselecting: F.element}))), F.selected && (C.metaKey || C.ctrlKey || F.startselected || (F.$element.removeClass("ui-selected"), F.selected = !1, F.$element.addClass("ui-unselecting"), F.unselecting = !0, A._trigger("unselecting", C, {unselecting: F.element})))))
                }), !1
            }
        },
        _mouseStop: function (k) {
            var q = this;
            return this.dragged = !1, e(".ui-unselecting", this.element[0]).each(function () {
                var w = e.data(this, "selectable-item");
                w.$element.removeClass("ui-unselecting"), w.unselecting = !1, w.startselected = !1, q._trigger("unselected", k, {unselected: w.element})
            }), e(".ui-selecting", this.element[0]).each(function () {
                var w = e.data(this, "selectable-item");
                w.$element.removeClass("ui-selecting").addClass("ui-selected"), w.selecting = !1, w.selected = !0, w.startselected = !0, q._trigger("selected", k, {selected: w.element})
            }), this._trigger("stop", k), this.helper.remove(), !1
        }
    }), e.widget("ui.selectmenu", {
        version: "1.11.4",
        defaultElement: "<select>",
        options: {
            appendTo: null,
            disabled: null,
            icons: {button: "ui-icon-triangle-1-s"},
            position: {my: "left top", at: "left bottom", collision: "none"},
            width: null,
            change: null,
            close: null,
            focus: null,
            open: null,
            select: null
        },
        _create: function () {
            var k = this.element.uniqueId().attr("id");
            this.ids = {
                element: k,
                button: k + "-button",
                menu: k + "-menu"
            }, this._drawButton(), this._drawMenu(), this.options.disabled && this.disable()
        },
        _drawButton: function () {
            var k = this;
            this.label = e("label[for='" + this.ids.element + "']").attr("for", this.ids.button), this._on(this.label, {
                click: function (q) {
                    this.button.focus(), q.preventDefault()
                }
            }), this.element.hide(), this.button = e("<span>", {
                "class": "ui-selectmenu-button ui-widget ui-state-default ui-corner-all",
                tabindex: this.options.disabled ? -1 : 0,
                id: this.ids.button,
                role: "combobox",
                "aria-expanded": "false",
                "aria-autocomplete": "list",
                "aria-owns": this.ids.menu,
                "aria-haspopup": "true"
            }).insertAfter(this.element), e("<span>", {"class": "ui-icon " + this.options.icons.button}).prependTo(this.button), this.buttonText = e("<span>", {"class": "ui-selectmenu-text"}).appendTo(this.button), this._setText(this.buttonText, this.element.find("option:selected").text()), this._resizeButton(), this._on(this.button, this._buttonEvents), this.button.one("focusin", function () {
                k.menuItems || k._refreshMenu()
            }), this._hoverable(this.button), this._focusable(this.button)
        },
        _drawMenu: function () {
            var k = this;
            this.menu = e("<ul>", {
                "aria-hidden": "true",
                "aria-labelledby": this.ids.button,
                id: this.ids.menu
            }), this.menuWrap = e("<div>", {"class": "ui-selectmenu-menu ui-front"}).append(this.menu).appendTo(this._appendTo()), this.menuInstance = this.menu.menu({
                role: "listbox",
                select: function (w, q) {
                    w.preventDefault(), k._setSelection(), k._select(q.item.data("ui-selectmenu-item"), w)
                },
                focus: function (w, q) {
                    var x = q.item.data("ui-selectmenu-item");
                    null != k.focusIndex && x.index !== k.focusIndex && (k._trigger("focus", w, {item: x}), k.isOpen || k._select(x, w)), k.focusIndex = x.index, k.button.attr("aria-activedescendant", k.menuItems.eq(x.index).attr("id"))
                }
            }).menu("instance"), this.menu.addClass("ui-corner-bottom").removeClass("ui-corner-all"), this.menuInstance._off(this.menu, "mouseleave"), this.menuInstance._closeOnDocumentClick = function () {
                return !1
            }, this.menuInstance._isDivider = function () {
                return !1
            }
        },
        refresh: function () {
            this._refreshMenu(), this._setText(this.buttonText, this._getSelectedItem().text()), this.options.width || this._resizeButton()
        },
        _refreshMenu: function () {
            this.menu.empty();
            var k, q = this.element.find("option");
            q.length && (this._parseOptions(q), this._renderMenu(this.menu, this.items), this.menuInstance.refresh(), this.menuItems = this.menu.find("li").not(".ui-selectmenu-optgroup"), k = this._getSelectedItem(), this.menuInstance.focus(null, k), this._setAria(k.data("ui-selectmenu-item")), this._setOption("disabled", this.element.prop("disabled")))
        },
        open: function (k) {
            this.options.disabled || (this.menuItems ? (this.menu.find(".ui-state-focus").removeClass("ui-state-focus"), this.menuInstance.focus(null, this._getSelectedItem())) : this._refreshMenu(), this.isOpen = !0, this._toggleAttr(), this._resizeMenu(), this._position(), this._on(this.document, this._documentClick), this._trigger("open", k))
        },
        _position: function () {
            this.menuWrap.position(e.extend({of: this.button}, this.options.position))
        },
        close: function (k) {
            this.isOpen && (this.isOpen = !1, this._toggleAttr(), this.range = null, this._off(this.document), this._trigger("close", k))
        },
        widget: function () {
            return this.button
        },
        menuWidget: function () {
            return this.menu
        },
        _renderMenu: function (k, q) {
            var x = this, w = "";
            e.each(q, function (A, B) {
                B.optgroup !== w && (e("<li>", {
                    "class": "ui-selectmenu-optgroup ui-menu-divider" + (B.element.parent("optgroup").prop("disabled") ? " ui-state-disabled" : ""),
                    text: B.optgroup
                }).appendTo(k), w = B.optgroup), x._renderItemData(k, B)
            })
        },
        _renderItemData: function (k, q) {
            return this._renderItem(k, q).data("ui-selectmenu-item", q)
        },
        _renderItem: function (k, q) {
            var w = e("<li>");
            return q.disabled && w.addClass("ui-state-disabled"), this._setText(w, q.label), w.appendTo(k)
        },
        _setText: function (k, q) {
            q ? k.text(q) : k.html("&#160;")
        },
        _move: function (x, k) {
            var q, A, w = ".ui-menu-item";
            this.isOpen ? q = this.menuItems.eq(this.focusIndex) : (q = this.menuItems.eq(this.element[0].selectedIndex), w += ":not(.ui-state-disabled)"), A = "first" === x || "last" === x ? q["first" === x ? "prevAll" : "nextAll"](w).eq(-1) : q[x + "All"](w).eq(0), A.length && this.menuInstance.focus(k, A)
        },
        _getSelectedItem: function () {
            return this.menuItems.eq(this.element[0].selectedIndex)
        },
        _toggle: function (k) {
            this[this.isOpen ? "close" : "open"](k)
        },
        _setSelection: function () {
            var k;
            this.range && (window.getSelection ? (k = window.getSelection(), k.removeAllRanges(), k.addRange(this.range)) : this.range.select(), this.button.focus())
        },
        _documentClick: {
            mousedown: function (k) {
                this.isOpen && (e(k.target).closest(".ui-selectmenu-menu, #" + this.ids.button).length || this.close(k))
            }
        },
        _buttonEvents: {
            mousedown: function () {
                var k;
                window.getSelection ? (k = window.getSelection(), k.rangeCount && (this.range = k.getRangeAt(0))) : this.range = document.selection.createRange()
            }, click: function (k) {
                this._setSelection(), this._toggle(k)
            }, keydown: function (k) {
                var q = !0;
                switch (k.keyCode) {
                    case e.ui.keyCode.TAB:
                    case e.ui.keyCode.ESCAPE:
                        this.close(k), q = !1;
                        break;
                    case e.ui.keyCode.ENTER:
                        this.isOpen && this._selectFocusedItem(k);
                        break;
                    case e.ui.keyCode.UP:
                        k.altKey ? this._toggle(k) : this._move("prev", k);
                        break;
                    case e.ui.keyCode.DOWN:
                        k.altKey ? this._toggle(k) : this._move("next", k);
                        break;
                    case e.ui.keyCode.SPACE:
                        this.isOpen ? this._selectFocusedItem(k) : this._toggle(k);
                        break;
                    case e.ui.keyCode.LEFT:
                        this._move("prev", k);
                        break;
                    case e.ui.keyCode.RIGHT:
                        this._move("next", k);
                        break;
                    case e.ui.keyCode.HOME:
                    case e.ui.keyCode.PAGE_UP:
                        this._move("first", k);
                        break;
                    case e.ui.keyCode.END:
                    case e.ui.keyCode.PAGE_DOWN:
                        this._move("last", k);
                        break;
                    default:
                        this.menu.trigger(k), q = !1
                }
                q && k.preventDefault()
            }
        },
        _selectFocusedItem: function (k) {
            var q = this.menuItems.eq(this.focusIndex);
            q.hasClass("ui-state-disabled") || this._select(q.data("ui-selectmenu-item"), k)
        },
        _select: function (w, k) {
            var q = this.element[0].selectedIndex;
            this.element[0].selectedIndex = w.index, this._setText(this.buttonText, w.label), this._setAria(w), this._trigger("select", k, {item: w}), w.index !== q && this._trigger("change", k, {item: w}), this.close(k)
        },
        _setAria: function (k) {
            var q = this.menuItems.eq(k.index).attr("id");
            this.button.attr({
                "aria-labelledby": q,
                "aria-activedescendant": q
            }), this.menu.attr("aria-activedescendant", q)
        },
        _setOption: function (k, q) {
            "icons" === k && this.button.find("span.ui-icon").removeClass(this.options.icons.button).addClass(q.button), this._super(k, q), "appendTo" === k && this.menuWrap.appendTo(this._appendTo()), "disabled" === k && (this.menuInstance.option("disabled", q), this.button.toggleClass("ui-state-disabled", q).attr("aria-disabled", q), this.element.prop("disabled", q), q ? (this.button.attr("tabindex", -1), this.close()) : this.button.attr("tabindex", 0)), "width" === k && this._resizeButton()
        },
        _appendTo: function () {
            var k = this.options.appendTo;
            return k && (k = k.jquery || k.nodeType ? e(k) : this.document.find(k).eq(0)), k && k[0] || (k = this.element.closest(".ui-front")), k.length || (k = this.document[0].body), k
        },
        _toggleAttr: function () {
            this.button.toggleClass("ui-corner-top", this.isOpen).toggleClass("ui-corner-all", !this.isOpen).attr("aria-expanded", this.isOpen), this.menuWrap.toggleClass("ui-selectmenu-open", this.isOpen), this.menu.attr("aria-hidden", !this.isOpen)
        },
        _resizeButton: function () {
            var k = this.options.width;
            k || (k = this.element.show().outerWidth(), this.element.hide()), this.button.outerWidth(k)
        },
        _resizeMenu: function () {
            this.menu.outerWidth(Math.max(this.button.outerWidth(), this.menu.width("").outerWidth() + 1))
        },
        _getCreateOptions: function () {
            return {disabled: this.element.prop("disabled")}
        },
        _parseOptions: function (k) {
            var q = [];
            k.each(function (A, x) {
                var w = e(x), B = w.parent("optgroup");
                q.push({
                    element: w,
                    index: A,
                    value: w.val(),
                    label: w.text(),
                    optgroup: B.attr("label") || "",
                    disabled: B.prop("disabled") || w.prop("disabled")
                })
            }), this.items = q
        },
        _destroy: function () {
            this.menuWrap.remove(), this.button.remove(), this.element.show(), this.element.removeUniqueId(), this.label.attr("for", this.ids.element)
        }
    }), e.widget("ui.slider", e.ui.mouse, {
        version: "1.11.4",
        widgetEventPrefix: "slide",
        options: {
            animate: !1,
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: !1,
            step: 1,
            value: 0,
            values: null,
            change: null,
            slide: null,
            start: null,
            stop: null
        },
        numPages: 5,
        _create: function () {
            this._keySliding = !1, this._mouseSliding = !1, this._animateOff = !0, this._handleIndex = null, this._detectOrientation(), this._mouseInit(), this._calculateNewMax(), this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all"), this._refresh(), this._setOption("disabled", this.options.disabled), this._animateOff = !1
        },
        _refresh: function () {
            this._createRange(), this._createHandles(), this._setupEvents(), this._refreshValue()
        },
        _createHandles: function () {
            var A, B, x = this.options, q = this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"), k = "<span class='ui-slider-handle ui-state-default ui-corner-all' tabindex='0'></span>", w = [];
            for (B = x.values && x.values.length || 1, q.length > B && (q.slice(B).remove(), q = q.slice(0, B)), A = q.length; B > A; A++) {
                w.push(k)
            }
            this.handles = q.add(e(w.join("")).appendTo(this.element)), this.handle = this.handles.eq(0), this.handles.each(function (C) {
                e(this).data("ui-slider-handle-index", C)
            })
        },
        _createRange: function () {
            var k = this.options, q = "";
            k.range ? (k.range === !0 && (k.values ? k.values.length && 2 !== k.values.length ? k.values = [k.values[0], k.values[0]] : e.isArray(k.values) && (k.values = k.values.slice(0)) : k.values = [this._valueMin(), this._valueMin()]), this.range && this.range.length ? this.range.removeClass("ui-slider-range-min ui-slider-range-max").css({
                left: "",
                bottom: ""
            }) : (this.range = e("<div></div>").appendTo(this.element), q = "ui-slider-range ui-widget-header ui-corner-all"), this.range.addClass(q + ("min" === k.range || "max" === k.range ? " ui-slider-range-" + k.range : ""))) : (this.range && this.range.remove(), this.range = null)
        },
        _setupEvents: function () {
            this._off(this.handles), this._on(this.handles, this._handleEvents), this._hoverable(this.handles), this._focusable(this.handles)
        },
        _destroy: function () {
            this.handles.remove(), this.range && this.range.remove(), this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-widget ui-widget-content ui-corner-all"), this._mouseDestroy()
        },
        _mouseCapture: function (x) {
            var A, w, C, G, D, F, q, B, E = this, k = this.options;
            return k.disabled ? !1 : (this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            }, this.elementOffset = this.element.offset(), A = {
                x: x.pageX,
                y: x.pageY
            }, w = this._normValueFromMouse(A), C = this._valueMax() - this._valueMin() + 1, this.handles.each(function (I) {
                var H = Math.abs(w - E.values(I));
                (C > H || C === H && (I === E._lastChangedValue || E.values(I) === k.min)) && (C = H, G = e(this), D = I)
            }), F = this._start(x, D), F === !1 ? !1 : (this._mouseSliding = !0, this._handleIndex = D, G.addClass("ui-state-active").focus(), q = G.offset(), B = !e(x.target).parents().addBack().is(".ui-slider-handle"), this._clickOffset = B ? {
                left: 0,
                top: 0
            } : {
                left: x.pageX - q.left - G.width() / 2,
                top: x.pageY - q.top - G.height() / 2 - (parseInt(G.css("borderTopWidth"), 10) || 0) - (parseInt(G.css("borderBottomWidth"), 10) || 0) + (parseInt(G.css("marginTop"), 10) || 0)
            }, this.handles.hasClass("ui-state-hover") || this._slide(x, D, w), this._animateOff = !0, !0))
        },
        _mouseStart: function () {
            return !0
        },
        _mouseDrag: function (w) {
            var k = {x: w.pageX, y: w.pageY}, q = this._normValueFromMouse(k);
            return this._slide(w, this._handleIndex, q), !1
        },
        _mouseStop: function (k) {
            return this.handles.removeClass("ui-state-active"), this._mouseSliding = !1, this._stop(k, this._handleIndex), this._change(k, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = !1, !1
        },
        _detectOrientation: function () {
            this.orientation = "vertical" === this.options.orientation ? "vertical" : "horizontal"
        },
        _normValueFromMouse: function (w) {
            var A, B, x, q, k;
            return "horizontal" === this.orientation ? (A = this.elementSize.width, B = w.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (A = this.elementSize.height, B = w.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)), x = B / A, x > 1 && (x = 1), 0 > x && (x = 0), "vertical" === this.orientation && (x = 1 - x), q = this._valueMax() - this._valueMin(), k = this._valueMin() + x * q, this._trimAlignValue(k)
        },
        _start: function (w, k) {
            var q = {handle: this.handles[k], value: this.value()};
            return this.options.values && this.options.values.length && (q.value = this.values(k), q.values = this.values()), this._trigger("start", w, q)
        },
        _slide: function (w, A, B) {
            var x, q, k;
            this.options.values && this.options.values.length ? (x = this.values(A ? 0 : 1), 2 === this.options.values.length && this.options.range === !0 && (0 === A && B > x || 1 === A && x > B) && (B = x), B !== this.values(A) && (q = this.values(), q[A] = B, k = this._trigger("slide", w, {
                handle: this.handles[A],
                value: B,
                values: q
            }), x = this.values(A ? 0 : 1), k !== !1 && this.values(A, B))) : B !== this.value() && (k = this._trigger("slide", w, {
                handle: this.handles[A],
                value: B
            }), k !== !1 && this.value(B))
        },
        _stop: function (w, k) {
            var q = {handle: this.handles[k], value: this.value()};
            this.options.values && this.options.values.length && (q.value = this.values(k), q.values = this.values()), this._trigger("stop", w, q)
        },
        _change: function (w, k) {
            if (!this._keySliding && !this._mouseSliding) {
                var q = {handle: this.handles[k], value: this.value()};
                this.options.values && this.options.values.length && (q.value = this.values(k), q.values = this.values()), this._lastChangedValue = k, this._trigger("change", w, q)
            }
        },
        value: function (k) {
            return arguments.length ? (this.options.value = this._trimAlignValue(k), this._refreshValue(), this._change(null, 0), void 0) : this._value()
        },
        values: function (x, A) {
            var w, q, k;
            if (arguments.length > 1) {
                return this.options.values[x] = this._trimAlignValue(A), this._refreshValue(), this._change(null, x), void 0
            }
            if (!arguments.length) {
                return this._values()
            }
            if (!e.isArray(arguments[0])) {
                return this.options.values && this.options.values.length ? this._values(x) : this.value()
            }
            for (w = this.options.values, q = arguments[0], k = 0; w.length > k; k += 1) {
                w[k] = this._trimAlignValue(q[k]), this._change(null, k)
            }
            this._refreshValue()
        },
        _setOption: function (k, q) {
            var x, w = 0;
            switch ("range" === k && this.options.range === !0 && ("min" === q ? (this.options.value = this._values(0), this.options.values = null) : "max" === q && (this.options.value = this._values(this.options.values.length - 1), this.options.values = null)), e.isArray(this.options.values) && (w = this.options.values.length), "disabled" === k && this.element.toggleClass("ui-state-disabled", !!q), this._super(k, q), k) {
                case"orientation":
                    this._detectOrientation(), this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation), this._refreshValue(), this.handles.css("horizontal" === q ? "bottom" : "left", "");
                    break;
                case"value":
                    this._animateOff = !0, this._refreshValue(), this._change(null, 0), this._animateOff = !1;
                    break;
                case"values":
                    for (this._animateOff = !0, this._refreshValue(), x = 0; w > x; x += 1) {
                        this._change(null, x)
                    }
                    this._animateOff = !1;
                    break;
                case"step":
                case"min":
                case"max":
                    this._animateOff = !0, this._calculateNewMax(), this._refreshValue(), this._animateOff = !1;
                    break;
                case"range":
                    this._animateOff = !0, this._refresh(), this._animateOff = !1
            }
        },
        _value: function () {
            var k = this.options.value;
            return k = this._trimAlignValue(k)
        },
        _values: function (w) {
            var k, q, x;
            if (arguments.length) {
                return k = this.options.values[w], k = this._trimAlignValue(k)
            }
            if (this.options.values && this.options.values.length) {
                for (q = this.options.values.slice(), x = 0; q.length > x; x += 1) {
                    q[x] = this._trimAlignValue(q[x])
                }
                return q
            }
            return []
        },
        _trimAlignValue: function (w) {
            if (this._valueMin() >= w) {
                return this._valueMin()
            }
            if (w >= this._valueMax()) {
                return this._valueMax()
            }
            var k = this.options.step > 0 ? this.options.step : 1, q = (w - this._valueMin()) % k, x = w - q;
            return 2 * Math.abs(q) >= k && (x += q > 0 ? k : -k), parseFloat(x.toFixed(5))
        },
        _calculateNewMax: function () {
            var w = this.options.max, k = this._valueMin(), q = this.options.step, x = Math.floor(+(w - k).toFixed(this._precision()) / q) * q;
            w = x + k, this.max = parseFloat(w.toFixed(this._precision()))
        },
        _precision: function () {
            var k = this._precisionOf(this.options.step);
            return null !== this.options.min && (k = Math.max(k, this._precisionOf(this.options.min))), k
        },
        _precisionOf: function (w) {
            var k = "" + w, q = k.indexOf(".");
            return -1 === q ? 0 : k.length - q - 1
        },
        _valueMin: function () {
            return this.options.min
        },
        _valueMax: function () {
            return this.max
        },
        _refreshValue: function () {
            var F, x, D, B, q, C = this.options.range, E = this.options, w = this, A = this._animateOff ? !1 : E.animate, k = {};
            this.options.values && this.options.values.length ? this.handles.each(function (G) {
                x = 100 * ((w.values(G) - w._valueMin()) / (w._valueMax() - w._valueMin())), k["horizontal" === w.orientation ? "left" : "bottom"] = x + "%", e(this).stop(1, 1)[A ? "animate" : "css"](k, E.animate), w.options.range === !0 && ("horizontal" === w.orientation ? (0 === G && w.range.stop(1, 1)[A ? "animate" : "css"]({left: x + "%"}, E.animate), 1 === G && w.range[A ? "animate" : "css"]({width: x - F + "%"}, {
                    queue: !1,
                    duration: E.animate
                })) : (0 === G && w.range.stop(1, 1)[A ? "animate" : "css"]({bottom: x + "%"}, E.animate), 1 === G && w.range[A ? "animate" : "css"]({height: x - F + "%"}, {
                    queue: !1,
                    duration: E.animate
                }))), F = x
            }) : (D = this.value(), B = this._valueMin(), q = this._valueMax(), x = q !== B ? 100 * ((D - B) / (q - B)) : 0, k["horizontal" === this.orientation ? "left" : "bottom"] = x + "%", this.handle.stop(1, 1)[A ? "animate" : "css"](k, E.animate), "min" === C && "horizontal" === this.orientation && this.range.stop(1, 1)[A ? "animate" : "css"]({width: x + "%"}, E.animate), "max" === C && "horizontal" === this.orientation && this.range[A ? "animate" : "css"]({width: 100 - x + "%"}, {
                queue: !1,
                duration: E.animate
            }), "min" === C && "vertical" === this.orientation && this.range.stop(1, 1)[A ? "animate" : "css"]({height: x + "%"}, E.animate), "max" === C && "vertical" === this.orientation && this.range[A ? "animate" : "css"]({height: 100 - x + "%"}, {
                queue: !1,
                duration: E.animate
            }))
        },
        _handleEvents: {
            keydown: function (A) {
                var B, x, q, k, w = e(A.target).data("ui-slider-handle-index");
                switch (A.keyCode) {
                    case e.ui.keyCode.HOME:
                    case e.ui.keyCode.END:
                    case e.ui.keyCode.PAGE_UP:
                    case e.ui.keyCode.PAGE_DOWN:
                    case e.ui.keyCode.UP:
                    case e.ui.keyCode.RIGHT:
                    case e.ui.keyCode.DOWN:
                    case e.ui.keyCode.LEFT:
                        if (A.preventDefault(), !this._keySliding && (this._keySliding = !0, e(A.target).addClass("ui-state-active"), B = this._start(A, w), B === !1)) {
                            return
                        }
                }
                switch (k = this.options.step, x = q = this.options.values && this.options.values.length ? this.values(w) : this.value(), A.keyCode) {
                    case e.ui.keyCode.HOME:
                        q = this._valueMin();
                        break;
                    case e.ui.keyCode.END:
                        q = this._valueMax();
                        break;
                    case e.ui.keyCode.PAGE_UP:
                        q = this._trimAlignValue(x + (this._valueMax() - this._valueMin()) / this.numPages);
                        break;
                    case e.ui.keyCode.PAGE_DOWN:
                        q = this._trimAlignValue(x - (this._valueMax() - this._valueMin()) / this.numPages);
                        break;
                    case e.ui.keyCode.UP:
                    case e.ui.keyCode.RIGHT:
                        if (x === this._valueMax()) {
                            return
                        }
                        q = this._trimAlignValue(x + k);
                        break;
                    case e.ui.keyCode.DOWN:
                    case e.ui.keyCode.LEFT:
                        if (x === this._valueMin()) {
                            return
                        }
                        q = this._trimAlignValue(x - k)
                }
                this._slide(A, w, q)
            }, keyup: function (k) {
                var q = e(k.target).data("ui-slider-handle-index");
                this._keySliding && (this._keySliding = !1, this._stop(k, q), this._change(k, q), e(k.target).removeClass("ui-state-active"))
            }
        }
    }), e.widget("ui.sortable", e.ui.mouse, {
        version: "1.11.4",
        widgetEventPrefix: "sort",
        ready: !1,
        options: {
            appendTo: "parent",
            axis: !1,
            connectWith: !1,
            containment: !1,
            cursor: "auto",
            cursorAt: !1,
            dropOnEmpty: !0,
            forcePlaceholderSize: !1,
            forceHelperSize: !1,
            grid: !1,
            handle: !1,
            helper: "original",
            items: "> *",
            opacity: !1,
            placeholder: !1,
            revert: !1,
            scroll: !0,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            scope: "default",
            tolerance: "intersect",
            zIndex: 1000,
            activate: null,
            beforeStop: null,
            change: null,
            deactivate: null,
            out: null,
            over: null,
            receive: null,
            remove: null,
            sort: null,
            start: null,
            stop: null,
            update: null
        },
        _isOverAxis: function (w, k, q) {
            return w >= k && k + q > w
        },
        _isFloating: function (k) {
            return /left|right/.test(k.css("float")) || /inline|table-cell/.test(k.css("display"))
        },
        _create: function () {
            this.containerCache = {}, this.element.addClass("ui-sortable"), this.refresh(), this.offset = this.element.offset(), this._mouseInit(), this._setHandleClassName(), this.ready = !0
        },
        _setOption: function (k, q) {
            this._super(k, q), "handle" === k && this._setHandleClassName()
        },
        _setHandleClassName: function () {
            this.element.find(".ui-sortable-handle").removeClass("ui-sortable-handle"), e.each(this.items, function () {
                (this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item).addClass("ui-sortable-handle")
            })
        },
        _destroy: function () {
            this.element.removeClass("ui-sortable ui-sortable-disabled").find(".ui-sortable-handle").removeClass("ui-sortable-handle"), this._mouseDestroy();
            for (var k = this.items.length - 1; k >= 0; k--) {
                this.items[k].item.removeData(this.widgetName + "-item")
            }
            return this
        },
        _mouseCapture: function (x, A) {
            var w = null, q = !1, k = this;
            return this.reverting ? !1 : this.options.disabled || "static" === this.options.type ? !1 : (this._refreshItems(x), e(x.target).parents().each(function () {
                return e.data(this, k.widgetName + "-item") === k ? (w = e(this), !1) : void 0
            }), e.data(x.target, k.widgetName + "-item") === k && (w = e(x.target)), w ? !this.options.handle || A || (e(this.options.handle, w).find("*").addBack().each(function () {
                this === x.target && (q = !0)
            }), q) ? (this.currentItem = w, this._removeCurrentsFromItems(), !0) : !1 : !1)
        },
        _mouseStart: function (A, B, x) {
            var q, k, w = this.options;
            if (this.currentContainer = this, this.refreshPositions(), this.helper = this._createHelper(A), this._cacheHelperProportions(), this._cacheMargins(), this.scrollParent = this.helper.scrollParent(), this.offset = this.currentItem.offset(), this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            }, e.extend(this.offset, {
                click: {
                    left: A.pageX - this.offset.left,
                    top: A.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            }), this.helper.css("position", "absolute"), this.cssPosition = this.helper.css("position"), this.originalPosition = this._generatePosition(A), this.originalPageX = A.pageX, this.originalPageY = A.pageY, w.cursorAt && this._adjustOffsetFromHelper(w.cursorAt), this.domPosition = {
                prev: this.currentItem.prev()[0],
                parent: this.currentItem.parent()[0]
            }, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), w.containment && this._setContainment(), w.cursor && "auto" !== w.cursor && (k = this.document.find("body"), this.storedCursor = k.css("cursor"), k.css("cursor", w.cursor), this.storedStylesheet = e("<style>*{ cursor: " + w.cursor + " !important; }</style>").appendTo(k)), w.opacity && (this.helper.css("opacity") && (this._storedOpacity = this.helper.css("opacity")), this.helper.css("opacity", w.opacity)), w.zIndex && (this.helper.css("zIndex") && (this._storedZIndex = this.helper.css("zIndex")), this.helper.css("zIndex", w.zIndex)), this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this._trigger("start", A, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), !x) {
                for (q = this.containers.length - 1; q >= 0; q--) {
                    this.containers[q]._trigger("activate", A, this._uiHash(this))
                }
            }
            return e.ui.ddmanager && (e.ui.ddmanager.current = this), e.ui.ddmanager && !w.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, A), this.dragging = !0, this.helper.addClass("ui-sortable-helper"), this._mouseDrag(A), !0
        },
        _mouseDrag: function (B) {
            var C, A, q, k, w = this.options, x = !1;
            for (this.position = this._generatePosition(B), this.positionAbs = this._convertPositionTo("absolute"), this.lastPositionAbs || (this.lastPositionAbs = this.positionAbs), this.options.scroll && (this.scrollParent[0] !== this.document[0] && "HTML" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - B.pageY < w.scrollSensitivity ? this.scrollParent[0].scrollTop = x = this.scrollParent[0].scrollTop + w.scrollSpeed : B.pageY - this.overflowOffset.top < w.scrollSensitivity && (this.scrollParent[0].scrollTop = x = this.scrollParent[0].scrollTop - w.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - B.pageX < w.scrollSensitivity ? this.scrollParent[0].scrollLeft = x = this.scrollParent[0].scrollLeft + w.scrollSpeed : B.pageX - this.overflowOffset.left < w.scrollSensitivity && (this.scrollParent[0].scrollLeft = x = this.scrollParent[0].scrollLeft - w.scrollSpeed)) : (B.pageY - this.document.scrollTop() < w.scrollSensitivity ? x = this.document.scrollTop(this.document.scrollTop() - w.scrollSpeed) : this.window.height() - (B.pageY - this.document.scrollTop()) < w.scrollSensitivity && (x = this.document.scrollTop(this.document.scrollTop() + w.scrollSpeed)), B.pageX - this.document.scrollLeft() < w.scrollSensitivity ? x = this.document.scrollLeft(this.document.scrollLeft() - w.scrollSpeed) : this.window.width() - (B.pageX - this.document.scrollLeft()) < w.scrollSensitivity && (x = this.document.scrollLeft(this.document.scrollLeft() + w.scrollSpeed))), x !== !1 && e.ui.ddmanager && !w.dropBehaviour && e.ui.ddmanager.prepareOffsets(this, B)), this.positionAbs = this._convertPositionTo("absolute"), this.options.axis && "y" === this.options.axis || (this.helper[0].style.left = this.position.left + "px"), this.options.axis && "x" === this.options.axis || (this.helper[0].style.top = this.position.top + "px"), C = this.items.length - 1; C >= 0; C--) {
                if (A = this.items[C], q = A.item[0], k = this._intersectsWithPointer(A), k && A.instance === this.currentContainer && q !== this.currentItem[0] && this.placeholder[1 === k ? "next" : "prev"]()[0] !== q && !e.contains(this.placeholder[0], q) && ("semi-dynamic" === this.options.type ? !e.contains(this.element[0], q) : !0)) {
                    if (this.direction = 1 === k ? "down" : "up", "pointer" !== this.options.tolerance && !this._intersectsWithSides(A)) {
                        break
                    }
                    this._rearrange(B, A), this._trigger("change", B, this._uiHash());
                    break
                }
            }
            return this._contactContainers(B), e.ui.ddmanager && e.ui.ddmanager.drag(this, B), this._trigger("sort", B, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1
        },
        _mouseStop: function (A, B) {
            if (A) {
                if (e.ui.ddmanager && !this.options.dropBehaviour && e.ui.ddmanager.drop(this, A), this.options.revert) {
                    var x = this, q = this.placeholder.offset(), k = this.options.axis, w = {};
                    k && "x" !== k || (w.left = q.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft)), k && "y" !== k || (w.top = q.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop)), this.reverting = !0, e(this.helper).animate(w, parseInt(this.options.revert, 10) || 500, function () {
                        x._clear(A)
                    })
                } else {
                    this._clear(A, B)
                }
                return !1
            }
        },
        cancel: function () {
            if (this.dragging) {
                this._mouseUp({target: null}), "original" === this.options.helper ? this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper") : this.currentItem.show();
                for (var k = this.containers.length - 1; k >= 0; k--) {
                    this.containers[k]._trigger("deactivate", null, this._uiHash(this)), this.containers[k].containerCache.over && (this.containers[k]._trigger("out", null, this._uiHash(this)), this.containers[k].containerCache.over = 0)
                }
            }
            return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), "original" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), e.extend(this, {
                helper: null,
                dragging: !1,
                reverting: !1,
                _noFinalSort: null
            }), this.domPosition.prev ? e(this.domPosition.prev).after(this.currentItem) : e(this.domPosition.parent).prepend(this.currentItem)), this
        },
        serialize: function (k) {
            var q = this._getItemsAsjQuery(k && k.connected), w = [];
            return k = k || {}, e(q).each(function () {
                var x = (e(k.item || this).attr(k.attribute || "id") || "").match(k.expression || /(.+)[\-=_](.+)/);
                x && w.push((k.key || x[1] + "[]") + "=" + (k.key && k.expression ? x[1] : x[2]))
            }), !w.length && k.key && w.push(k.key + "="), w.join("&")
        },
        toArray: function (k) {
            var q = this._getItemsAsjQuery(k && k.connected), w = [];
            return k = k || {}, q.each(function () {
                w.push(e(k.item || this).attr(k.attribute || "id") || "")
            }), w
        },
        _intersectsWith: function (D) {
            var q = this.positionAbs.left, H = q + this.helperProportions.width, k = this.positionAbs.top, x = k + this.helperProportions.height, A = D.left, F = A + D.width, I = D.top, E = I + D.height, J = this.offset.click.top, w = this.offset.click.left, C = "x" === this.options.axis || k + J > I && E > k + J, B = "y" === this.options.axis || q + w > A && F > q + w, G = C && B;
            return "pointer" === this.options.tolerance || this.options.forcePointerForContainers || "pointer" !== this.options.tolerance && this.helperProportions[this.floating ? "width" : "height"] > D[this.floating ? "width" : "height"] ? G : q + this.helperProportions.width / 2 > A && F > H - this.helperProportions.width / 2 && k + this.helperProportions.height / 2 > I && E > x - this.helperProportions.height / 2
        },
        _intersectsWithPointer: function (w) {
            var A = "x" === this.options.axis || this._isOverAxis(this.positionAbs.top + this.offset.click.top, w.top, w.height), B = "y" === this.options.axis || this._isOverAxis(this.positionAbs.left + this.offset.click.left, w.left, w.width), x = A && B, q = this._getDragVerticalDirection(), k = this._getDragHorizontalDirection();
            return x ? this.floating ? k && "right" === k || "down" === q ? 2 : 1 : q && ("down" === q ? 2 : 1) : !1
        },
        _intersectsWithSides: function (x) {
            var k = this._isOverAxis(this.positionAbs.top + this.offset.click.top, x.top + x.height / 2, x.height), q = this._isOverAxis(this.positionAbs.left + this.offset.click.left, x.left + x.width / 2, x.width), A = this._getDragVerticalDirection(), w = this._getDragHorizontalDirection();
            return this.floating && w ? "right" === w && q || "left" === w && !q : A && ("down" === A && k || "up" === A && !k)
        },
        _getDragVerticalDirection: function () {
            var k = this.positionAbs.top - this.lastPositionAbs.top;
            return 0 !== k && (k > 0 ? "down" : "up")
        },
        _getDragHorizontalDirection: function () {
            var k = this.positionAbs.left - this.lastPositionAbs.left;
            return 0 !== k && (k > 0 ? "right" : "left")
        },
        refresh: function (k) {
            return this._refreshItems(k), this._setHandleClassName(), this.refreshPositions(), this
        },
        _connectWith: function () {
            var k = this.options;
            return k.connectWith.constructor === String ? [k.connectWith] : k.connectWith
        },
        _getItemsAsjQuery: function (k) {
            function x() {
                D.push(this)
            }

            var E, B, q, C, D = [], w = [], A = this._connectWith();
            if (A && k) {
                for (E = A.length - 1; E >= 0; E--) {
                    for (q = e(A[E], this.document[0]), B = q.length - 1; B >= 0; B--) {
                        C = e.data(q[B], this.widgetFullName), C && C !== this && !C.options.disabled && w.push([e.isFunction(C.options.items) ? C.options.items.call(C.element) : e(C.options.items, C.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), C])
                    }
                }
            }
            for (w.push([e.isFunction(this.options.items) ? this.options.items.call(this.element, null, {
                options: this.options,
                item: this.currentItem
            }) : e(this.options.items, this.element).not(".ui-sortable-helper").not(".ui-sortable-placeholder"), this]), E = w.length - 1; E >= 0; E--) {
                w[E][0].each(x)
            }
            return e(D)
        },
        _removeCurrentsFromItems: function () {
            var k = this.currentItem.find(":data(" + this.widgetName + "-item)");
            this.items = e.grep(this.items, function (w) {
                for (var q = 0; k.length > q; q++) {
                    if (k[q] === w.item[0]) {
                        return !1
                    }
                }
                return !0
            })
        },
        _refreshItems: function (x) {
            this.items = [], this.containers = [this];
            var q, w, D, B, E, G, k, C, A = this.items, H = [[e.isFunction(this.options.items) ? this.options.items.call(this.element[0], x, {item: this.currentItem}) : e(this.options.items, this.element), this]], F = this._connectWith();
            if (F && this.ready) {
                for (q = F.length - 1; q >= 0; q--) {
                    for (D = e(F[q], this.document[0]), w = D.length - 1; w >= 0; w--) {
                        B = e.data(D[w], this.widgetFullName), B && B !== this && !B.options.disabled && (H.push([e.isFunction(B.options.items) ? B.options.items.call(B.element[0], x, {item: this.currentItem}) : e(B.options.items, B.element), B]), this.containers.push(B))
                    }
                }
            }
            for (q = H.length - 1; q >= 0; q--) {
                for (E = H[q][1], G = H[q][0], w = 0, C = G.length; C > w; w++) {
                    k = e(G[w]), k.data(this.widgetName + "-item", E), A.push({
                        item: k,
                        instance: E,
                        width: 0,
                        height: 0,
                        left: 0,
                        top: 0
                    })
                }
            }
        },
        refreshPositions: function (x) {
            this.floating = this.items.length ? "x" === this.options.axis || this._isFloating(this.items[0].item) : !1, this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset());
            var A, w, q, k;
            for (A = this.items.length - 1; A >= 0; A--) {
                w = this.items[A], w.instance !== this.currentContainer && this.currentContainer && w.item[0] !== this.currentItem[0] || (q = this.options.toleranceElement ? e(this.options.toleranceElement, w.item) : w.item, x || (w.width = q.outerWidth(), w.height = q.outerHeight()), k = q.offset(), w.left = k.left, w.top = k.top)
            }
            if (this.options.custom && this.options.custom.refreshContainers) {
                this.options.custom.refreshContainers.call(this)
            } else {
                for (A = this.containers.length - 1; A >= 0; A--) {
                    k = this.containers[A].element.offset(), this.containers[A].containerCache.left = k.left, this.containers[A].containerCache.top = k.top, this.containers[A].containerCache.width = this.containers[A].element.outerWidth(), this.containers[A].containerCache.height = this.containers[A].element.outerHeight()
                }
            }
            return this
        },
        _createPlaceholder: function (k) {
            k = k || this;
            var q, w = k.options;
            w.placeholder && w.placeholder.constructor !== String || (q = w.placeholder, w.placeholder = {
                element: function () {
                    var A = k.currentItem[0].nodeName.toLowerCase(), x = e("<" + A + ">", k.document[0]).addClass(q || k.currentItem[0].className + " ui-sortable-placeholder").removeClass("ui-sortable-helper");
                    return "tbody" === A ? k._createTrPlaceholder(k.currentItem.find("tr").eq(0), e("<tr>", k.document[0]).appendTo(x)) : "tr" === A ? k._createTrPlaceholder(k.currentItem, x) : "img" === A && x.attr("src", k.currentItem.attr("src")), q || x.css("visibility", "hidden"), x
                }, update: function (A, x) {
                    (!q || w.forcePlaceholderSize) && (x.height() || x.height(k.currentItem.innerHeight() - parseInt(k.currentItem.css("paddingTop") || 0, 10) - parseInt(k.currentItem.css("paddingBottom") || 0, 10)), x.width() || x.width(k.currentItem.innerWidth() - parseInt(k.currentItem.css("paddingLeft") || 0, 10) - parseInt(k.currentItem.css("paddingRight") || 0, 10)))
                }
            }), k.placeholder = e(w.placeholder.element.call(k.element, k.currentItem)), k.currentItem.after(k.placeholder), w.placeholder.update(k, k.placeholder)
        },
        _createTrPlaceholder: function (k, q) {
            var w = this;
            k.children().each(function () {
                e("<td>&#160;</td>", w.document[0]).attr("colspan", e(this).attr("colspan") || 1).appendTo(q)
            })
        },
        _contactContainers: function (w) {
            var I, q, D, A, E, H, G, k, x, C, B = null, F = null;
            for (I = this.containers.length - 1; I >= 0; I--) {
                if (!e.contains(this.currentItem[0], this.containers[I].element[0])) {
                    if (this._intersectsWith(this.containers[I].containerCache)) {
                        if (B && e.contains(this.containers[I].element[0], B.element[0])) {
                            continue
                        }
                        B = this.containers[I], F = I
                    } else {
                        this.containers[I].containerCache.over && (this.containers[I]._trigger("out", w, this._uiHash(this)), this.containers[I].containerCache.over = 0)
                    }
                }
            }
            if (B) {
                if (1 === this.containers.length) {
                    this.containers[F].containerCache.over || (this.containers[F]._trigger("over", w, this._uiHash(this)), this.containers[F].containerCache.over = 1)
                } else {
                    for (D = 10000, A = null, x = B.floating || this._isFloating(this.currentItem), E = x ? "left" : "top", H = x ? "width" : "height", C = x ? "clientX" : "clientY", q = this.items.length - 1; q >= 0; q--) {
                        e.contains(this.containers[F].element[0], this.items[q].item[0]) && this.items[q].item[0] !== this.currentItem[0] && (G = this.items[q].item.offset()[E], k = !1, w[C] - G > this.items[q][H] / 2 && (k = !0), D > Math.abs(w[C] - G) && (D = Math.abs(w[C] - G), A = this.items[q], this.direction = k ? "up" : "down"))
                    }
                    if (!A && !this.options.dropOnEmpty) {
                        return
                    }
                    if (this.currentContainer === this.containers[F]) {
                        return this.currentContainer.containerCache.over || (this.containers[F]._trigger("over", w, this._uiHash()), this.currentContainer.containerCache.over = 1), void 0
                    }
                    A ? this._rearrange(w, A, null, !0) : this._rearrange(w, null, this.containers[F].element, !0), this._trigger("change", w, this._uiHash()), this.containers[F]._trigger("change", w, this._uiHash(this)), this.currentContainer = this.containers[F], this.options.placeholder.update(this.currentContainer, this.placeholder), this.containers[F]._trigger("over", w, this._uiHash(this)), this.containers[F].containerCache.over = 1
                }
            }
        },
        _createHelper: function (k) {
            var q = this.options, w = e.isFunction(q.helper) ? e(q.helper.apply(this.element[0], [k, this.currentItem])) : "clone" === q.helper ? this.currentItem.clone() : this.currentItem;
            return w.parents("body").length || e("parent" !== q.appendTo ? q.appendTo : this.currentItem[0].parentNode)[0].appendChild(w[0]), w[0] === this.currentItem[0] && (this._storedCSS = {
                width: this.currentItem[0].style.width,
                height: this.currentItem[0].style.height,
                position: this.currentItem.css("position"),
                top: this.currentItem.css("top"),
                left: this.currentItem.css("left")
            }), (!w[0].style.width || q.forceHelperSize) && w.width(this.currentItem.width()), (!w[0].style.height || q.forceHelperSize) && w.height(this.currentItem.height()), w
        },
        _adjustOffsetFromHelper: function (k) {
            "string" == typeof k && (k = k.split(" ")), e.isArray(k) && (k = {
                left: +k[0],
                top: +k[1] || 0
            }), "left" in k && (this.offset.click.left = k.left + this.margins.left), "right" in k && (this.offset.click.left = this.helperProportions.width - k.right + this.margins.left), "top" in k && (this.offset.click.top = k.top + this.margins.top), "bottom" in k && (this.offset.click.top = this.helperProportions.height - k.bottom + this.margins.top)
        },
        _getParentOffset: function () {
            this.offsetParent = this.helper.offsetParent();
            var k = this.offsetParent.offset();
            return "absolute" === this.cssPosition && this.scrollParent[0] !== this.document[0] && e.contains(this.scrollParent[0], this.offsetParent[0]) && (k.left += this.scrollParent.scrollLeft(), k.top += this.scrollParent.scrollTop()), (this.offsetParent[0] === this.document[0].body || this.offsetParent[0].tagName && "html" === this.offsetParent[0].tagName.toLowerCase() && e.ui.ie) && (k = {
                top: 0,
                left: 0
            }), {
                top: k.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: k.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function () {
            if ("relative" === this.cssPosition) {
                var k = this.currentItem.position();
                return {
                    top: k.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: k.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            }
            return {top: 0, left: 0}
        },
        _cacheMargins: function () {
            this.margins = {
                left: parseInt(this.currentItem.css("marginLeft"), 10) || 0,
                top: parseInt(this.currentItem.css("marginTop"), 10) || 0
            }
        },
        _cacheHelperProportions: function () {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function () {
            var k, q, x, w = this.options;
            "parent" === w.containment && (w.containment = this.helper[0].parentNode), ("document" === w.containment || "window" === w.containment) && (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, "document" === w.containment ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left, ("document" === w.containment ? this.document.width() : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), /^(document|window|parent)$/.test(w.containment) || (k = e(w.containment)[0], q = e(w.containment).offset(), x = "hidden" !== e(k).css("overflow"), this.containment = [q.left + (parseInt(e(k).css("borderLeftWidth"), 10) || 0) + (parseInt(e(k).css("paddingLeft"), 10) || 0) - this.margins.left, q.top + (parseInt(e(k).css("borderTopWidth"), 10) || 0) + (parseInt(e(k).css("paddingTop"), 10) || 0) - this.margins.top, q.left + (x ? Math.max(k.scrollWidth, k.offsetWidth) : k.offsetWidth) - (parseInt(e(k).css("borderLeftWidth"), 10) || 0) - (parseInt(e(k).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, q.top + (x ? Math.max(k.scrollHeight, k.offsetHeight) : k.offsetHeight) - (parseInt(e(k).css("borderTopWidth"), 10) || 0) - (parseInt(e(k).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top])
        },
        _convertPositionTo: function (x, A) {
            A || (A = this.position);
            var w = "absolute" === x ? 1 : -1, q = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, k = /(html|body)/i.test(q[0].tagName);
            return {
                top: A.top + this.offset.relative.top * w + this.offset.parent.top * w - ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : k ? 0 : q.scrollTop()) * w,
                left: A.left + this.offset.relative.left * w + this.offset.parent.left * w - ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : k ? 0 : q.scrollLeft()) * w
            }
        },
        _generatePosition: function (C) {
            var D, A, q = this.options, k = C.pageX, w = C.pageY, x = "absolute" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && e.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent, B = /(html|body)/i.test(x[0].tagName);
            return "relative" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), this.originalPosition && (this.containment && (C.pageX - this.offset.click.left < this.containment[0] && (k = this.containment[0] + this.offset.click.left), C.pageY - this.offset.click.top < this.containment[1] && (w = this.containment[1] + this.offset.click.top), C.pageX - this.offset.click.left > this.containment[2] && (k = this.containment[2] + this.offset.click.left), C.pageY - this.offset.click.top > this.containment[3] && (w = this.containment[3] + this.offset.click.top)), q.grid && (D = this.originalPageY + Math.round((w - this.originalPageY) / q.grid[1]) * q.grid[1], w = this.containment ? D - this.offset.click.top >= this.containment[1] && D - this.offset.click.top <= this.containment[3] ? D : D - this.offset.click.top >= this.containment[1] ? D - q.grid[1] : D + q.grid[1] : D, A = this.originalPageX + Math.round((k - this.originalPageX) / q.grid[0]) * q.grid[0], k = this.containment ? A - this.offset.click.left >= this.containment[0] && A - this.offset.click.left <= this.containment[2] ? A : A - this.offset.click.left >= this.containment[0] ? A - q.grid[0] : A + q.grid[0] : A)), {
                top: w - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + ("fixed" === this.cssPosition ? -this.scrollParent.scrollTop() : B ? 0 : x.scrollTop()),
                left: k - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + ("fixed" === this.cssPosition ? -this.scrollParent.scrollLeft() : B ? 0 : x.scrollLeft())
            }
        },
        _rearrange: function (x, k, q, A) {
            q ? q[0].appendChild(this.placeholder[0]) : k.item[0].parentNode.insertBefore(this.placeholder[0], "down" === this.direction ? k.item[0] : k.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1;
            var w = this.counter;
            this._delay(function () {
                w === this.counter && this.refreshPositions(!A)
            })
        },
        _clear: function (x, k) {
            function q(B, C, D) {
                return function (E) {
                    D._trigger(B, E, C._uiHash(C))
                }
            }

            this.reverting = !1;
            var A, w = [];
            if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null, this.helper[0] === this.currentItem[0]) {
                for (A in this._storedCSS) {
                    ("auto" === this._storedCSS[A] || "static" === this._storedCSS[A]) && (this._storedCSS[A] = "")
                }
                this.currentItem.css(this._storedCSS).removeClass("ui-sortable-helper")
            } else {
                this.currentItem.show()
            }
            for (this.fromOutside && !k && w.push(function (B) {
                this._trigger("receive", B, this._uiHash(this.fromOutside))
            }), !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(".ui-sortable-helper")[0] && this.domPosition.parent === this.currentItem.parent()[0] || k || w.push(function (B) {
                this._trigger("update", B, this._uiHash())
            }), this !== this.currentContainer && (k || (w.push(function (B) {
                this._trigger("remove", B, this._uiHash())
            }), w.push(function (B) {
                return function (C) {
                    B._trigger("receive", C, this._uiHash(this))
                }
            }.call(this, this.currentContainer)), w.push(function (B) {
                return function (C) {
                    B._trigger("update", C, this._uiHash(this))
                }
            }.call(this, this.currentContainer)))), A = this.containers.length - 1; A >= 0; A--) {
                k || w.push(q("deactivate", this, this.containers[A])), this.containers[A].containerCache.over && (w.push(q("out", this, this.containers[A])), this.containers[A].containerCache.over = 0)
            }
            if (this.storedCursor && (this.document.find("body").css("cursor", this.storedCursor), this.storedStylesheet.remove()), this._storedOpacity && this.helper.css("opacity", this._storedOpacity), this._storedZIndex && this.helper.css("zIndex", "auto" === this._storedZIndex ? "" : this._storedZIndex), this.dragging = !1, k || this._trigger("beforeStop", x, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.cancelHelperRemoval || (this.helper[0] !== this.currentItem[0] && this.helper.remove(), this.helper = null), !k) {
                for (A = 0; w.length > A; A++) {
                    w[A].call(this, x)
                }
                this._trigger("stop", x, this._uiHash())
            }
            return this.fromOutside = !1, !this.cancelHelperRemoval
        },
        _trigger: function () {
            e.Widget.prototype._trigger.apply(this, arguments) === !1 && this.cancel()
        },
        _uiHash: function (k) {
            var q = k || this;
            return {
                helper: q.helper,
                placeholder: q.placeholder || e([]),
                position: q.position,
                originalPosition: q.originalPosition,
                offset: q.positionAbs,
                item: q.currentItem,
                sender: k ? k.element : null
            }
        }
    }), e.widget("ui.spinner", {
        version: "1.11.4",
        defaultElement: "<input>",
        widgetEventPrefix: "spin",
        options: {
            culture: null,
            icons: {down: "ui-icon-triangle-1-s", up: "ui-icon-triangle-1-n"},
            incremental: !0,
            max: null,
            min: null,
            numberFormat: null,
            page: 10,
            step: 1,
            change: null,
            spin: null,
            start: null,
            stop: null
        },
        _create: function () {
            this._setOption("max", this.options.max), this._setOption("min", this.options.min), this._setOption("step", this.options.step), "" !== this.value() && this._value(this.element.val(), !0), this._draw(), this._on(this._events), this._refresh(), this._on(this.window, {
                beforeunload: function () {
                    this.element.removeAttr("autocomplete")
                }
            })
        },
        _getCreateOptions: function () {
            var k = {}, q = this.element;
            return e.each(["min", "max", "step"], function (x, A) {
                var w = q.attr(A);
                void 0 !== w && w.length && (k[A] = w)
            }), k
        },
        _events: {
            keydown: function (k) {
                this._start(k) && this._keydown(k) && k.preventDefault()
            },
            keyup: "_stop",
            focus: function () {
                this.previous = this.element.val()
            },
            blur: function (k) {
                return this.cancelBlur ? (delete this.cancelBlur, void 0) : (this._stop(), this._refresh(), this.previous !== this.element.val() && this._trigger("change", k), void 0)
            },
            mousewheel: function (k, q) {
                if (q) {
                    if (!this.spinning && !this._start(k)) {
                        return !1
                    }
                    this._spin((q > 0 ? 1 : -1) * this.options.step, k), clearTimeout(this.mousewheelTimer), this.mousewheelTimer = this._delay(function () {
                        this.spinning && this._stop(k)
                    }, 100), k.preventDefault()
                }
            },
            "mousedown .ui-spinner-button": function (k) {
                function q() {
                    var x = this.element[0] === this.document[0].activeElement;
                    x || (this.element.focus(), this.previous = w, this._delay(function () {
                        this.previous = w
                    }))
                }

                var w;
                w = this.element[0] === this.document[0].activeElement ? this.previous : this.element.val(), k.preventDefault(), q.call(this), this.cancelBlur = !0, this._delay(function () {
                    delete this.cancelBlur, q.call(this)
                }), this._start(k) !== !1 && this._repeat(null, e(k.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, k)
            },
            "mouseup .ui-spinner-button": "_stop",
            "mouseenter .ui-spinner-button": function (k) {
                return e(k.currentTarget).hasClass("ui-state-active") ? this._start(k) === !1 ? !1 : (this._repeat(null, e(k.currentTarget).hasClass("ui-spinner-up") ? 1 : -1, k), void 0) : void 0
            },
            "mouseleave .ui-spinner-button": "_stop"
        },
        _draw: function () {
            var k = this.uiSpinner = this.element.addClass("ui-spinner-input").attr("autocomplete", "off").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());
            this.element.attr("role", "spinbutton"), this.buttons = k.find(".ui-spinner-button").attr("tabIndex", -1).button().removeClass("ui-corner-all"), this.buttons.height() > Math.ceil(0.5 * k.height()) && k.height() > 0 && k.height(k.height()), this.options.disabled && this.disable()
        },
        _keydown: function (k) {
            var q = this.options, w = e.ui.keyCode;
            switch (k.keyCode) {
                case w.UP:
                    return this._repeat(null, 1, k), !0;
                case w.DOWN:
                    return this._repeat(null, -1, k), !0;
                case w.PAGE_UP:
                    return this._repeat(null, q.page, k), !0;
                case w.PAGE_DOWN:
                    return this._repeat(null, -q.page, k), !0
            }
            return !1
        },
        _uiSpinnerHtml: function () {
            return "<span class='ui-spinner ui-widget ui-widget-content ui-corner-all'></span>"
        },
        _buttonHtml: function () {
            return "<a class='ui-spinner-button ui-spinner-up ui-corner-tr'><span class='ui-icon " + this.options.icons.up + "'>&#9650;</span></a><a class='ui-spinner-button ui-spinner-down ui-corner-br'><span class='ui-icon " + this.options.icons.down + "'>&#9660;</span></a>"
        },
        _start: function (k) {
            return this.spinning || this._trigger("start", k) !== !1 ? (this.counter || (this.counter = 1), this.spinning = !0, !0) : !1
        },
        _repeat: function (w, k, q) {
            w = w || 500, clearTimeout(this.timer), this.timer = this._delay(function () {
                this._repeat(40, k, q)
            }, w), this._spin(k * this.options.step, q)
        },
        _spin: function (w, k) {
            var q = this.value() || 0;
            this.counter || (this.counter = 1), q = this._adjustValue(q + w * this._increment(this.counter)), this.spinning && this._trigger("spin", k, {value: q}) === !1 || (this._value(q), this.counter++)
        },
        _increment: function (k) {
            var q = this.options.incremental;
            return q ? e.isFunction(q) ? q(k) : Math.floor(k * k * k / 50000 - k * k / 500 + 17 * k / 200 + 1) : 1
        },
        _precision: function () {
            var k = this._precisionOf(this.options.step);
            return null !== this.options.min && (k = Math.max(k, this._precisionOf(this.options.min))), k
        },
        _precisionOf: function (w) {
            var k = "" + w, q = k.indexOf(".");
            return -1 === q ? 0 : k.length - q - 1
        },
        _adjustValue: function (w) {
            var k, q, x = this.options;
            return k = null !== x.min ? x.min : 0, q = w - k, q = Math.round(q / x.step) * x.step, w = k + q, w = parseFloat(w.toFixed(this._precision())), null !== x.max && w > x.max ? x.max : null !== x.min && x.min > w ? x.min : w
        },
        _stop: function (k) {
            this.spinning && (clearTimeout(this.timer), clearTimeout(this.mousewheelTimer), this.counter = 0, this.spinning = !1, this._trigger("stop", k))
        },
        _setOption: function (w, k) {
            if ("culture" === w || "numberFormat" === w) {
                var q = this._parse(this.element.val());
                return this.options[w] = k, this.element.val(this._format(q)), void 0
            }
            ("max" === w || "min" === w || "step" === w) && "string" == typeof k && (k = this._parse(k)), "icons" === w && (this.buttons.first().find(".ui-icon").removeClass(this.options.icons.up).addClass(k.up), this.buttons.last().find(".ui-icon").removeClass(this.options.icons.down).addClass(k.down)), this._super(w, k), "disabled" === w && (this.widget().toggleClass("ui-state-disabled", !!k), this.element.prop("disabled", !!k), this.buttons.button(k ? "disable" : "enable"))
        },
        _setOptions: h(function (k) {
            this._super(k)
        }),
        _parse: function (k) {
            return "string" == typeof k && "" !== k && (k = window.Globalize && this.options.numberFormat ? Globalize.parseFloat(k, 10, this.options.culture) : +k), "" === k || isNaN(k) ? null : k
        },
        _format: function (k) {
            return "" === k ? "" : window.Globalize && this.options.numberFormat ? Globalize.format(k, this.options.numberFormat, this.options.culture) : k
        },
        _refresh: function () {
            this.element.attr({
                "aria-valuemin": this.options.min,
                "aria-valuemax": this.options.max,
                "aria-valuenow": this._parse(this.element.val())
            })
        },
        isValid: function () {
            var k = this.value();
            return null === k ? !1 : k === this._adjustValue(k)
        },
        _value: function (w, k) {
            var q;
            "" !== w && (q = this._parse(w), null !== q && (k || (q = this._adjustValue(q)), w = this._format(q))), this.element.val(w), this._refresh()
        },
        _destroy: function () {
            this.element.removeClass("ui-spinner-input").prop("disabled", !1).removeAttr("autocomplete").removeAttr("role").removeAttr("aria-valuemin").removeAttr("aria-valuemax").removeAttr("aria-valuenow"), this.uiSpinner.replaceWith(this.element)
        },
        stepUp: h(function (k) {
            this._stepUp(k)
        }),
        _stepUp: function (k) {
            this._start() && (this._spin((k || 1) * this.options.step), this._stop())
        },
        stepDown: h(function (k) {
            this._stepDown(k)
        }),
        _stepDown: function (k) {
            this._start() && (this._spin((k || 1) * -this.options.step), this._stop())
        },
        pageUp: h(function (k) {
            this._stepUp((k || 1) * this.options.page)
        }),
        pageDown: h(function (k) {
            this._stepDown((k || 1) * this.options.page)
        }),
        value: function (k) {
            return arguments.length ? (h(this._value).call(this, k), void 0) : this._parse(this.element.val())
        },
        widget: function () {
            return this.uiSpinner
        }
    }), e.widget("ui.tabs", {
        version: "1.11.4",
        delay: 300,
        options: {
            active: null,
            collapsible: !1,
            event: "click",
            heightStyle: "content",
            hide: null,
            show: null,
            activate: null,
            beforeActivate: null,
            beforeLoad: null,
            load: null
        },
        _isLocal: function () {
            var k = /#.*$/;
            return function (A) {
                var q, x;
                A = A.cloneNode(!1), q = A.href.replace(k, ""), x = location.href.replace(k, "");
                try {
                    q = decodeURIComponent(q)
                } catch (w) {
                }
                try {
                    x = decodeURIComponent(x)
                } catch (w) {
                }
                return A.hash.length > 1 && q === x
            }
        }(),
        _create: function () {
            var k = this, q = this.options;
            this.running = !1, this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all").toggleClass("ui-tabs-collapsible", q.collapsible), this._processTabs(), q.active = this._initialActive(), e.isArray(q.disabled) && (q.disabled = e.unique(q.disabled.concat(e.map(this.tabs.filter(".ui-state-disabled"), function (w) {
                return k.tabs.index(w)
            }))).sort()), this.active = this.options.active !== !1 && this.anchors.length ? this._findActive(q.active) : e(), this._refresh(), this.active.length && this.load(q.active)
        },
        _initialActive: function () {
            var k = this.options.active, q = this.options.collapsible, w = location.hash.substring(1);
            return null === k && (w && this.tabs.each(function (A, x) {
                return e(x).attr("aria-controls") === w ? (k = A, !1) : void 0
            }), null === k && (k = this.tabs.index(this.tabs.filter(".ui-tabs-active"))), (null === k || -1 === k) && (k = this.tabs.length ? 0 : !1)), k !== !1 && (k = this.tabs.index(this.tabs.eq(k)), -1 === k && (k = q ? !1 : 0)), !q && k === !1 && this.anchors.length && (k = 0), k
        },
        _getCreateEventData: function () {
            return {
                tab: this.active,
                panel: this.active.length ? this._getPanelForTab(this.active) : e()
            }
        },
        _tabKeydown: function (k) {
            var q = e(this.document[0].activeElement).closest("li"), x = this.tabs.index(q), w = !0;
            if (!this._handlePageNav(k)) {
                switch (k.keyCode) {
                    case e.ui.keyCode.RIGHT:
                    case e.ui.keyCode.DOWN:
                        x++;
                        break;
                    case e.ui.keyCode.UP:
                    case e.ui.keyCode.LEFT:
                        w = !1, x--;
                        break;
                    case e.ui.keyCode.END:
                        x = this.anchors.length - 1;
                        break;
                    case e.ui.keyCode.HOME:
                        x = 0;
                        break;
                    case e.ui.keyCode.SPACE:
                        return k.preventDefault(), clearTimeout(this.activating), this._activate(x), void 0;
                    case e.ui.keyCode.ENTER:
                        return k.preventDefault(), clearTimeout(this.activating), this._activate(x === this.options.active ? !1 : x), void 0;
                    default:
                        return
                }
                k.preventDefault(), clearTimeout(this.activating), x = this._focusNextTab(x, w), k.ctrlKey || k.metaKey || (q.attr("aria-selected", "false"), this.tabs.eq(x).attr("aria-selected", "true"), this.activating = this._delay(function () {
                    this.option("active", x)
                }, this.delay))
            }
        },
        _panelKeydown: function (k) {
            this._handlePageNav(k) || k.ctrlKey && k.keyCode === e.ui.keyCode.UP && (k.preventDefault(), this.active.focus())
        },
        _handlePageNav: function (k) {
            return k.altKey && k.keyCode === e.ui.keyCode.PAGE_UP ? (this._activate(this._focusNextTab(this.options.active - 1, !1)), !0) : k.altKey && k.keyCode === e.ui.keyCode.PAGE_DOWN ? (this._activate(this._focusNextTab(this.options.active + 1, !0)), !0) : void 0
        },
        _findNextTab: function (k, q) {
            function x() {
                return k > w && (k = 0), 0 > k && (k = w), k
            }

            for (var w = this.tabs.length - 1; -1 !== e.inArray(x(), this.options.disabled);) {
                k = q ? k + 1 : k - 1
            }
            return k
        },
        _focusNextTab: function (k, q) {
            return k = this._findNextTab(k, q), this.tabs.eq(k).focus(), k
        },
        _setOption: function (k, q) {
            return "active" === k ? (this._activate(q), void 0) : "disabled" === k ? (this._setupDisabled(q), void 0) : (this._super(k, q), "collapsible" === k && (this.element.toggleClass("ui-tabs-collapsible", q), q || this.options.active !== !1 || this._activate(0)), "event" === k && this._setupEvents(q), "heightStyle" === k && this._setupHeightStyle(q), void 0)
        },
        _sanitizeSelector: function (k) {
            return k ? k.replace(/[!"$%&'()*+,.\/:;<=>?@\[\]\^`{|}~]/g, "\\$&") : ""
        },
        refresh: function () {
            var k = this.options, q = this.tablist.children(":has(a[href])");
            k.disabled = e.map(q.filter(".ui-state-disabled"), function (w) {
                return q.index(w)
            }), this._processTabs(), k.active !== !1 && this.anchors.length ? this.active.length && !e.contains(this.tablist[0], this.active[0]) ? this.tabs.length === k.disabled.length ? (k.active = !1, this.active = e()) : this._activate(this._findNextTab(Math.max(0, k.active - 1), !1)) : k.active = this.tabs.index(this.active) : (k.active = !1, this.active = e()), this._refresh()
        },
        _refresh: function () {
            this._setupDisabled(this.options.disabled), this._setupEvents(this.options.event), this._setupHeightStyle(this.options.heightStyle), this.tabs.not(this.active).attr({
                "aria-selected": "false",
                "aria-expanded": "false",
                tabIndex: -1
            }), this.panels.not(this._getPanelForTab(this.active)).hide().attr({"aria-hidden": "true"}), this.active.length ? (this.active.addClass("ui-tabs-active ui-state-active").attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            }), this._getPanelForTab(this.active).show().attr({"aria-hidden": "false"})) : this.tabs.eq(0).attr("tabIndex", 0)
        },
        _processTabs: function () {
            var k = this, q = this.tabs, x = this.anchors, w = this.panels;
            this.tablist = this._getList().addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").attr("role", "tablist").delegate("> li", "mousedown" + this.eventNamespace, function (A) {
                e(this).is(".ui-state-disabled") && A.preventDefault()
            }).delegate(".ui-tabs-anchor", "focus" + this.eventNamespace, function () {
                e(this).closest("li").is(".ui-state-disabled") && this.blur()
            }), this.tabs = this.tablist.find("> li:has(a[href])").addClass("ui-state-default ui-corner-top").attr({
                role: "tab",
                tabIndex: -1
            }), this.anchors = this.tabs.map(function () {
                return e("a", this)[0]
            }).addClass("ui-tabs-anchor").attr({
                role: "presentation",
                tabIndex: -1
            }), this.panels = e(), this.anchors.each(function (D, G) {
                var H, E, B, C = e(G).uniqueId().attr("id"), A = e(G).closest("li"), F = A.attr("aria-controls");
                k._isLocal(G) ? (H = G.hash, B = H.substring(1), E = k.element.find(k._sanitizeSelector(H))) : (B = A.attr("aria-controls") || e({}).uniqueId()[0].id, H = "#" + B, E = k.element.find(H), E.length || (E = k._createPanel(B), E.insertAfter(k.panels[D - 1] || k.tablist)), E.attr("aria-live", "polite")), E.length && (k.panels = k.panels.add(E)), F && A.data("ui-tabs-aria-controls", F), A.attr({
                    "aria-controls": B,
                    "aria-labelledby": C
                }), E.attr("aria-labelledby", C)
            }), this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").attr("role", "tabpanel"), q && (this._off(q.not(this.tabs)), this._off(x.not(this.anchors)), this._off(w.not(this.panels)))
        },
        _getList: function () {
            return this.tablist || this.element.find("ol,ul").eq(0)
        },
        _createPanel: function (k) {
            return e("<div>").attr("id", k).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").data("ui-tabs-destroy", !0)
        },
        _setupDisabled: function (k) {
            e.isArray(k) && (k.length ? k.length === this.anchors.length && (k = !0) : k = !1);
            for (var q, w = 0; q = this.tabs[w]; w++) {
                k === !0 || -1 !== e.inArray(w, k) ? e(q).addClass("ui-state-disabled").attr("aria-disabled", "true") : e(q).removeClass("ui-state-disabled").removeAttr("aria-disabled")
            }
            this.options.disabled = k
        },
        _setupEvents: function (k) {
            var q = {};
            k && e.each(k.split(" "), function (w, x) {
                q[x] = "_eventHandler"
            }), this._off(this.anchors.add(this.tabs).add(this.panels)), this._on(!0, this.anchors, {
                click: function (w) {
                    w.preventDefault()
                }
            }), this._on(this.anchors, q), this._on(this.tabs, {keydown: "_tabKeydown"}), this._on(this.panels, {keydown: "_panelKeydown"}), this._focusable(this.tabs), this._hoverable(this.tabs)
        },
        _setupHeightStyle: function (k) {
            var q, w = this.element.parent();
            "fill" === k ? (q = w.height(), q -= this.element.outerHeight() - this.element.height(), this.element.siblings(":visible").each(function () {
                var A = e(this), x = A.css("position");
                "absolute" !== x && "fixed" !== x && (q -= A.outerHeight(!0))
            }), this.element.children().not(this.panels).each(function () {
                q -= e(this).outerHeight(!0)
            }), this.panels.each(function () {
                e(this).height(Math.max(0, q - e(this).innerHeight() + e(this).height()))
            }).css("overflow", "auto")) : "auto" === k && (q = 0, this.panels.each(function () {
                q = Math.max(q, e(this).height("").height())
            }).height(q))
        },
        _eventHandler: function (F) {
            var x = this.options, D = this.active, B = e(F.currentTarget), q = B.closest("li"), C = q[0] === D[0], E = C && x.collapsible, w = E ? e() : this._getPanelForTab(q), A = D.length ? this._getPanelForTab(D) : e(), k = {
                oldTab: D,
                oldPanel: A,
                newTab: E ? e() : q,
                newPanel: w
            };
            F.preventDefault(), q.hasClass("ui-state-disabled") || q.hasClass("ui-tabs-loading") || this.running || C && !x.collapsible || this._trigger("beforeActivate", F, k) === !1 || (x.active = E ? !1 : this.tabs.index(q), this.active = C ? e() : q, this.xhr && this.xhr.abort(), A.length || w.length || e.error("jQuery UI Tabs: Mismatching fragment identifier."), w.length && this.load(this.tabs.index(q), F), this._toggle(F, k))
        },
        _toggle: function (B, C) {
            function A() {
                k.running = !1, k._trigger("activate", B, C)
            }

            function q() {
                C.newTab.closest("li").addClass("ui-tabs-active ui-state-active"), w.length && k.options.show ? k._show(w, k.options.show, A) : (w.show(), A())
            }

            var k = this, w = C.newPanel, x = C.oldPanel;
            this.running = !0, x.length && this.options.hide ? this._hide(x, this.options.hide, function () {
                C.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"), q()
            }) : (C.oldTab.closest("li").removeClass("ui-tabs-active ui-state-active"), x.hide(), q()), x.attr("aria-hidden", "true"), C.oldTab.attr({
                "aria-selected": "false",
                "aria-expanded": "false"
            }), w.length && x.length ? C.oldTab.attr("tabIndex", -1) : w.length && this.tabs.filter(function () {
                return 0 === e(this).attr("tabIndex")
            }).attr("tabIndex", -1), w.attr("aria-hidden", "false"), C.newTab.attr({
                "aria-selected": "true",
                "aria-expanded": "true",
                tabIndex: 0
            })
        },
        _activate: function (k) {
            var q, w = this._findActive(k);
            w[0] !== this.active[0] && (w.length || (w = this.active), q = w.find(".ui-tabs-anchor")[0], this._eventHandler({
                target: q,
                currentTarget: q,
                preventDefault: e.noop
            }))
        },
        _findActive: function (k) {
            return k === !1 ? e() : this.tabs.eq(k)
        },
        _getIndex: function (k) {
            return "string" == typeof k && (k = this.anchors.index(this.anchors.filter("[href$='" + k + "']"))), k
        },
        _destroy: function () {
            this.xhr && this.xhr.abort(), this.element.removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible"), this.tablist.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all").removeAttr("role"), this.anchors.removeClass("ui-tabs-anchor").removeAttr("role").removeAttr("tabIndex").removeUniqueId(), this.tablist.unbind(this.eventNamespace), this.tabs.add(this.panels).each(function () {
                e.data(this, "ui-tabs-destroy") ? e(this).remove() : e(this).removeClass("ui-state-default ui-state-active ui-state-disabled ui-corner-top ui-corner-bottom ui-widget-content ui-tabs-active ui-tabs-panel").removeAttr("tabIndex").removeAttr("aria-live").removeAttr("aria-busy").removeAttr("aria-selected").removeAttr("aria-labelledby").removeAttr("aria-hidden").removeAttr("aria-expanded").removeAttr("role")
            }), this.tabs.each(function () {
                var k = e(this), q = k.data("ui-tabs-aria-controls");
                q ? k.attr("aria-controls", q).removeData("ui-tabs-aria-controls") : k.removeAttr("aria-controls")
            }), this.panels.show(), "content" !== this.options.heightStyle && this.panels.css("height", "")
        },
        enable: function (k) {
            var q = this.options.disabled;
            q !== !1 && (void 0 === k ? q = !1 : (k = this._getIndex(k), q = e.isArray(q) ? e.map(q, function (w) {
                return w !== k ? w : null
            }) : e.map(this.tabs, function (w, x) {
                return x !== k ? x : null
            })), this._setupDisabled(q))
        },
        disable: function (k) {
            var q = this.options.disabled;
            if (q !== !0) {
                if (void 0 === k) {
                    q = !0
                } else {
                    if (k = this._getIndex(k), -1 !== e.inArray(k, q)) {
                        return
                    }
                    q = e.isArray(q) ? e.merge([k], q).sort() : [k]
                }
                this._setupDisabled(q)
            }
        },
        load: function (C, D) {
            C = this._getIndex(C);
            var A = this, q = this.tabs.eq(C), k = q.find(".ui-tabs-anchor"), w = this._getPanelForTab(q), x = {
                tab: q,
                panel: w
            }, B = function (F, E) {
                "abort" === E && A.panels.stop(!1, !0), q.removeClass("ui-tabs-loading"), w.removeAttr("aria-busy"), F === A.xhr && delete A.xhr
            };
            this._isLocal(k[0]) || (this.xhr = e.ajax(this._ajaxSettings(k, D, x)), this.xhr && "canceled" !== this.xhr.statusText && (q.addClass("ui-tabs-loading"), w.attr("aria-busy", "true"), this.xhr.done(function (F, E, G) {
                setTimeout(function () {
                    w.html(F), A._trigger("load", D, x), B(G, E)
                }, 1)
            }).fail(function (F, E) {
                setTimeout(function () {
                    B(F, E)
                }, 1)
            })))
        },
        _ajaxSettings: function (k, q, x) {
            var w = this;
            return {
                url: k.attr("href"), beforeSend: function (A, B) {
                    return w._trigger("beforeLoad", q, e.extend({
                        jqXHR: A,
                        ajaxSettings: B
                    }, x))
                }
            }
        },
        _getPanelForTab: function (k) {
            var q = e(k).attr("aria-controls");
            return this.element.find(this._sanitizeSelector("#" + q))
        }
    }), e.widget("ui.tooltip", {
        version: "1.11.4",
        options: {
            content: function () {
                var k = e(this).attr("title") || "";
                return e("<a>").text(k).html()
            },
            hide: !0,
            items: "[title]:not([disabled])",
            position: {
                my: "left top+15",
                at: "left bottom",
                collision: "flipfit flip"
            },
            show: !0,
            tooltipClass: null,
            track: !1,
            close: null,
            open: null
        },
        _addDescribedBy: function (k, q) {
            var w = (k.attr("aria-describedby") || "").split(/\s+/);
            w.push(q), k.data("ui-tooltip-id", q).attr("aria-describedby", e.trim(w.join(" ")))
        },
        _removeDescribedBy: function (k) {
            var q = k.data("ui-tooltip-id"), x = (k.attr("aria-describedby") || "").split(/\s+/), w = e.inArray(q, x);
            -1 !== w && x.splice(w, 1), k.removeData("ui-tooltip-id"), x = e.trim(x.join(" ")), x ? k.attr("aria-describedby", x) : k.removeAttr("aria-describedby")
        },
        _create: function () {
            this._on({
                mouseover: "open",
                focusin: "open"
            }), this.tooltips = {}, this.parents = {}, this.options.disabled && this._disable(), this.liveRegion = e("<div>").attr({
                role: "log",
                "aria-live": "assertive",
                "aria-relevant": "additions"
            }).addClass("ui-helper-hidden-accessible").appendTo(this.document[0].body)
        },
        _setOption: function (k, q) {
            var w = this;
            return "disabled" === k ? (this[q ? "_disable" : "_enable"](), this.options[k] = q, void 0) : (this._super(k, q), "content" === k && e.each(this.tooltips, function (x, A) {
                w._updateContent(A.element)
            }), void 0)
        },
        _disable: function () {
            var k = this;
            e.each(this.tooltips, function (q, x) {
                var w = e.Event("blur");
                w.target = w.currentTarget = x.element[0], k.close(w, !0)
            }), this.element.find(this.options.items).addBack().each(function () {
                var q = e(this);
                q.is("[title]") && q.data("ui-tooltip-title", q.attr("title")).removeAttr("title")
            })
        },
        _enable: function () {
            this.element.find(this.options.items).addBack().each(function () {
                var k = e(this);
                k.data("ui-tooltip-title") && k.attr("title", k.data("ui-tooltip-title"))
            })
        },
        open: function (k) {
            var q = this, w = e(k ? k.target : this.element).closest(this.options.items);
            w.length && !w.data("ui-tooltip-id") && (w.attr("title") && w.data("ui-tooltip-title", w.attr("title")), w.data("ui-tooltip-open", !0), k && "mouseover" === k.type && w.parents().each(function () {
                var A, x = e(this);
                x.data("ui-tooltip-open") && (A = e.Event("blur"), A.target = A.currentTarget = this, q.close(A, !0)), x.attr("title") && (x.uniqueId(), q.parents[this.id] = {
                    element: this,
                    title: x.attr("title")
                }, x.attr("title", ""))
            }), this._registerCloseHandlers(k, w), this._updateContent(w, k))
        },
        _updateContent: function (w, A) {
            var B, x = this.options.content, q = this, k = A ? A.type : null;
            return "string" == typeof x ? this._open(A, w, x) : (B = x.call(w[0], function (C) {
                q._delay(function () {
                    w.data("ui-tooltip-open") && (A && (A.type = k), this._open(A, w, C))
                })
            }), B && this._open(A, w, B), void 0)
        },
        _open: function (k, x, E) {
            function B(F) {
                A.of = F, C.is(":hidden") || C.position(A)
            }

            var q, C, D, w, A = e.extend({}, this.options.position);
            if (E) {
                if (q = this._find(x)) {
                    return q.tooltip.find(".ui-tooltip-content").html(E), void 0
                }
                x.is("[title]") && (k && "mouseover" === k.type ? x.attr("title", "") : x.removeAttr("title")), q = this._tooltip(x), C = q.tooltip, this._addDescribedBy(x, C.attr("id")), C.find(".ui-tooltip-content").html(E), this.liveRegion.children().hide(), E.clone ? (w = E.clone(), w.removeAttr("id").find("[id]").removeAttr("id")) : w = E, e("<div>").html(w).appendTo(this.liveRegion), this.options.track && k && /^mouse/.test(k.type) ? (this._on(this.document, {mousemove: B}), B(k)) : C.position(e.extend({of: x}, this.options.position)), C.hide(), this._show(C, this.options.show), this.options.show && this.options.show.delay && (D = this.delayedShow = setInterval(function () {
                    C.is(":visible") && (B(A.of), clearInterval(D))
                }, e.fx.interval)), this._trigger("open", k, {tooltip: C})
            }
        },
        _registerCloseHandlers: function (k, q) {
            var w = {
                keyup: function (A) {
                    if (A.keyCode === e.ui.keyCode.ESCAPE) {
                        var x = e.Event(A);
                        x.currentTarget = q[0], this.close(x, !0)
                    }
                }
            };
            q[0] !== this.element[0] && (w.remove = function () {
                this._removeTooltip(this._find(q).tooltip)
            }), k && "mouseover" !== k.type || (w.mouseleave = "close"), k && "focusin" !== k.type || (w.focusout = "close"), this._on(!0, q, w)
        },
        close: function (x) {
            var A, w = this, q = e(x ? x.currentTarget : this.element), k = this._find(q);
            return k ? (A = k.tooltip, k.closing || (clearInterval(this.delayedShow), q.data("ui-tooltip-title") && !q.attr("title") && q.attr("title", q.data("ui-tooltip-title")), this._removeDescribedBy(q), k.hiding = !0, A.stop(!0), this._hide(A, this.options.hide, function () {
                w._removeTooltip(e(this))
            }), q.removeData("ui-tooltip-open"), this._off(q, "mouseleave focusout keyup"), q[0] !== this.element[0] && this._off(q, "remove"), this._off(this.document, "mousemove"), x && "mouseleave" === x.type && e.each(this.parents, function (C, B) {
                e(B.element).attr("title", B.title), delete w.parents[C]
            }), k.closing = !0, this._trigger("close", x, {tooltip: A}), k.hiding || (k.closing = !1)), void 0) : (q.removeData("ui-tooltip-open"), void 0)
        },
        _tooltip: function (k) {
            var q = e("<div>").attr("role", "tooltip").addClass("ui-tooltip ui-widget ui-corner-all ui-widget-content " + (this.options.tooltipClass || "")), w = q.uniqueId().attr("id");
            return e("<div>").addClass("ui-tooltip-content").appendTo(q), q.appendTo(this.document[0].body), this.tooltips[w] = {
                element: k,
                tooltip: q
            }
        },
        _find: function (k) {
            var q = k.data("ui-tooltip-id");
            return q ? this.tooltips[q] : null
        },
        _removeTooltip: function (k) {
            k.remove(), delete this.tooltips[k.attr("id")]
        },
        _destroy: function () {
            var k = this;
            e.each(this.tooltips, function (A, x) {
                var w = e.Event("blur"), q = x.element;
                w.target = w.currentTarget = q[0], k.close(w, !0), e("#" + A).remove(), q.data("ui-tooltip-title") && (q.attr("title") || q.attr("title", q.data("ui-tooltip-title")), q.removeData("ui-tooltip-title"))
            }), this.liveRegion.remove()
        }
    })
});
/*
 AnythingSlider v1.8.6
 Original by Chris Coyier: http://css-tricks.com
 Get the latest version: https://github.com/ProLoser/AnythingSlider

 To use the navigationFormatter function, you must have a function that
 accepts two paramaters, and returns a string of HTML text.

 index = integer index (1 based);
 panel = jQuery wrapped LI item this tab references
 @return = Must return a string of HTML/Text

 navigationFormatter: function(index, panel){
 return "Panel #" + index; // This would have each tab with the text 'Panel #X' where X = index
 }
 */
(function (b) {
    b.anythingSlider = function (k, a) {
        var h = this, g, l;
        h.el = k;
        h.$el = b(k).addClass("anythingBase").wrap('<div class="anythingSlider"><div class="anythingWindow" /></div>');
        h.$el.data("AnythingSlider", h);
        h.init = function () {
            h.options = g = b.extend({}, b.anythingSlider.defaults, a);
            h.initialized = false;
            if (b.isFunction(g.onBeforeInitialize)) {
                h.$el.bind("before_initialize", g.onBeforeInitialize)
            }
            h.$el.trigger("before_initialize", h);
            b('<!--[if lte IE 8]><script>jQuery("body").addClass("as-oldie");<\/script><![endif]-->').appendTo("body").remove();
            h.$wrapper = h.$el.parent().closest("div.anythingSlider").addClass("anythingSlider-" + g.theme);
            h.$window = h.$el.closest("div.anythingWindow");
            h.win = window;
            h.$win = b(h.win);
            h.$controls = b('<div class="anythingControls"></div>');
            h.$nav = b('<ul class="thumbNav"><li><a><span></span></a></li></ul>');
            h.$startStop = b('<a href="#" class="start-stop"></a>');
            if (g.buildStartStop || g.buildNavigation) {
                h.$controls.appendTo((g.appendControlsTo && b(g.appendControlsTo).length) ? b(g.appendControlsTo) : h.$wrapper)
            }
            if (g.buildNavigation) {
                h.$nav.appendTo((g.appendNavigationTo && b(g.appendNavigationTo).length) ? b(g.appendNavigationTo) : h.$controls)
            }
            if (g.buildStartStop) {
                h.$startStop.appendTo((g.appendStartStopTo && b(g.appendStartStopTo).length) ? b(g.appendStartStopTo) : h.$controls)
            }
            h.runTimes = b(".anythingBase").length;
            h.regex = new RegExp("panel" + h.runTimes + "-(\\d+)", "i");
            if (h.runTimes === 1) {
                h.makeActive()
            }
            h.flag = false;
            h.playing = g.autoPlay;
            h.slideshow = false;
            h.hovered = false;
            h.panelSize = [];
            h.currentPage = h.targetPage = g.startPanel = parseInt(g.startPanel, 10) || 1;
            g.changeBy = parseInt(g.changeBy, 10) || 1;
            l = (g.mode || "h").toLowerCase().match(/(h|v|f)/);
            l = g.vertical ? "v" : (l || ["h"])[0];
            g.mode = l === "v" ? "vertical" : l === "f" ? "fade" : "horizontal";
            if (l === "f") {
                g.showMultiple = 1;
                g.infiniteSlides = false
            }
            h.adj = (g.infiniteSlides) ? 0 : 1;
            h.adjustMultiple = 0;
            h.width = h.$el.width();
            h.height = h.$el.height();
            h.outerPad = [h.$wrapper.innerWidth() - h.$wrapper.width(), h.$wrapper.innerHeight() - h.$wrapper.height()];
            if (g.playRtl) {
                h.$wrapper.addClass("rtl")
            }
            if (g.expand) {
                h.$outer = h.$wrapper.parent();
                h.$window.css({width: "100%", height: "100%"});
                h.checkResize()
            }
            if (g.buildStartStop) {
                h.buildAutoPlay()
            }
            if (g.buildArrows) {
                h.buildNextBackButtons()
            }
            if (!g.autoPlay) {
                g.autoPlayLocked = false
            }
            h.$lastPage = h.$targetPage = h.$currentPage;
            h.updateSlider();
            if (!b.isFunction(b.easing[g.easing])) {
                g.easing = "swing"
            }
            if (g.pauseOnHover) {
                h.$wrapper.hover(function () {
                    if (h.playing) {
                        h.$el.trigger("slideshow_paused", h);
                        h.clearTimer(true)
                    }
                }, function () {
                    if (h.playing) {
                        h.$el.trigger("slideshow_unpaused", h);
                        h.startStop(h.playing, true)
                    }
                })
            }
            h.slideControls(false);
            h.$wrapper.bind("mouseenter mouseleave", function (d) {
                b(this)[d.type === "mouseenter" ? "addClass" : "removeClass"]("anythingSlider-hovered");
                h.hovered = (d.type === "mouseenter") ? true : false;
                h.slideControls(h.hovered)
            });
            b(document).keyup(function (d) {
                if (g.enableKeyboard && h.$wrapper.hasClass("activeSlider") && !d.target.tagName.match("TEXTAREA|INPUT|SELECT")) {
                    if (g.mode !== "vertical" && (d.which === 38 || d.which === 40)) {
                        return
                    }
                    switch (d.which) {
                        case 39:
                        case 40:
                            h.goForward();
                            break;
                        case 37:
                        case 38:
                            h.goBack();
                            break
                    }
                }
            });
            h.currentPage = h.gotoHash() || g.startPanel || 1;
            h.gotoPage(h.currentPage, false, null, -1);
            var c = "slideshow_paused slideshow_unpaused slide_init slide_begin slideshow_stop slideshow_start initialized swf_completed".split(" ");
            b.each("onShowPause onShowUnpause onSlideInit onSlideBegin onShowStop onShowStart onInitialized onSWFComplete".split(" "), function (e, d) {
                if (b.isFunction(g[d])) {
                    h.$el.bind(c[e], g[d])
                }
            });
            if (b.isFunction(g.onSlideComplete)) {
                h.$el.bind("slide_complete", function () {
                    setTimeout(function () {
                        g.onSlideComplete(h)
                    }, 0);
                    return false
                })
            }
            h.initialized = true;
            h.$el.trigger("initialized", h);
            h.startStop(g.autoPlay)
        };
        h.updateSlider = function () {
            h.$el.children(".cloned").remove();
            h.navTextVisible = h.$nav.find("span:first").css("visibility") !== "hidden";
            h.$nav.empty();
            h.currentPage = h.currentPage || 1;
            h.$items = h.$el.children();
            h.pages = h.$items.length;
            h.dir = (g.mode === "vertical") ? "top" : "left";
            g.showMultiple = (g.mode === "vertical") ? 1 : parseInt(g.showMultiple, 10) || 1;
            g.navigationSize = (g.navigationSize === false) ? 0 : parseInt(g.navigationSize, 10) || 0;
            h.$items.find("a").unbind("focus.AnythingSlider").bind("focus.AnythingSlider", function (d) {
                var f = b(this).closest(".panel"), e = h.$items.index(f) + h.adj;
                h.$items.find(".focusedLink").removeClass("focusedLink");
                b(this).addClass("focusedLink");
                h.$window.scrollLeft(0).scrollTop(0);
                if ((e !== -1 && (e >= h.currentPage + g.showMultiple || e < h.currentPage))) {
                    h.gotoPage(e);
                    d.preventDefault()
                }
            });
            if (g.showMultiple > 1) {
                if (g.showMultiple > h.pages) {
                    g.showMultiple = h.pages
                }
                h.adjustMultiple = (g.infiniteSlides && h.pages > 1) ? 0 : g.showMultiple - 1
            }
            h.$controls.add(h.$nav).add(h.$startStop).add(h.$forward).add(h.$back)[(h.pages <= 1) ? "hide" : "show"]();
            if (h.pages > 1) {
                h.buildNavigation()
            }
            if (g.mode !== "fade" && g.infiniteSlides && h.pages > 1) {
                h.$el.prepend(h.$items.filter(":last").clone().addClass("cloned"));
                if (g.showMultiple > 1) {
                    h.$el.append(h.$items.filter(":lt(" + g.showMultiple + ")").clone().addClass("cloned multiple"))
                } else {
                    h.$el.append(h.$items.filter(":first").clone().addClass("cloned"))
                }
                h.$el.find(".cloned").each(function () {
                    b(this).find("a,input,textarea,select,button,area,form").attr({
                        disabled: "disabled",
                        name: ""
                    });
                    b(this).find("[id]").andSelf().removeAttr("id")
                })
            }
            h.$items = h.$el.addClass(g.mode).children().addClass("panel");
            h.setDimensions();
            if (g.resizeContents) {
                h.$items.css("width", h.width);
                h.$wrapper.css("width", h.getDim(h.currentPage)[0]).add(h.$items).css("height", h.height)
            } else {
                h.$win.load(function () {
                    h.setDimensions();
                    c = h.getDim(h.currentPage);
                    h.$wrapper.css({width: c[0], height: c[1]});
                    h.setCurrentPage(h.currentPage, false)
                })
            }
            if (h.currentPage > h.pages) {
                h.currentPage = h.pages
            }
            h.setCurrentPage(h.currentPage, false);
            h.$nav.find("a").eq(h.currentPage - 1).addClass("cur");
            if (g.mode === "fade") {
                var c = h.$items.eq(h.currentPage - 1);
                if (g.resumeOnVisible) {
                    c.css({opacity: 1}).siblings().css({opacity: 0})
                } else {
                    h.$items.css("opacity", 1);
                    c.fadeIn(0).siblings().fadeOut(0)
                }
            }
        };
        h.buildNavigation = function () {
            if (g.buildNavigation && (h.pages > 1)) {
                var n, c, e, f, d;
                h.$items.filter(":not(.cloned)").each(function (m) {
                    d = b("<li/>");
                    e = m + 1;
                    c = (e === 1 ? " first" : "") + (e === h.pages ? " last" : "");
                    n = '<a class="panel' + e + (h.navTextVisible ? '"' : " " + g.tooltipClass + '" title="@"') + ' href="#"><span>@</span></a>';
                    if (b.isFunction(g.navigationFormatter)) {
                        f = g.navigationFormatter(e, b(this));
                        if (typeof(f) === "string") {
                            d.html(n.replace(/@/g, f))
                        } else {
                            d = b("<li/>", f)
                        }
                    } else {
                        d.html(n.replace(/@/g, e))
                    }
                    d.appendTo(h.$nav).addClass(c).data("index", e)
                });
                h.$nav.children("li").bind(g.clickControls, function (m) {
                    if (!h.flag && g.enableNavigation) {
                        h.flag = true;
                        setTimeout(function () {
                            h.flag = false
                        }, 100);
                        h.gotoPage(b(this).data("index"))
                    }
                    m.preventDefault()
                });
                if (!!g.navigationSize && g.navigationSize < h.pages) {
                    if (!h.$controls.find(".anythingNavWindow").length) {
                        h.$nav.before('<ul><li class="prev"><a href="#"><span>' + g.backText + "</span></a></li></ul>").after('<ul><li class="next"><a href="#"><span>' + g.forwardText + "</span></a></li></ul>").wrap('<div class="anythingNavWindow"></div>')
                    }
                    h.navWidths = h.$nav.find("li").map(function () {
                        return b(this).outerWidth(true) + Math.ceil(parseInt(b(this).find("span").css("left"), 10) / 2 || 0)
                    }).get();
                    h.navLeft = h.currentPage;
                    h.$nav.width(h.navWidth(1, h.pages + 1) + 25);
                    h.$controls.find(".anythingNavWindow").width(h.navWidth(1, g.navigationSize + 1)).end().find(".prev,.next").bind(g.clickControls, function (m) {
                        if (!h.flag) {
                            h.flag = true;
                            setTimeout(function () {
                                h.flag = false
                            }, 200);
                            h.navWindow(h.navLeft + g.navigationSize * (b(this).is(".prev") ? -1 : 1))
                        }
                        m.preventDefault()
                    })
                }
            }
        };
        h.navWidth = function (o, p) {
            var e, d = Math.min(o, p), c = Math.max(o, p), f = 0;
            for (e = d; e < c; e++) {
                f += h.navWidths[e - 1] || 0
            }
            return f
        };
        h.navWindow = function (c) {
            if (!!g.navigationSize && g.navigationSize < h.pages && h.navWidths) {
                var d = h.pages - g.navigationSize + 1;
                c = (c <= 1) ? 1 : (c > 1 && c < d) ? c : d;
                if (c !== h.navLeft) {
                    h.$controls.find(".anythingNavWindow").animate({
                        scrollLeft: h.navWidth(1, c),
                        width: h.navWidth(c, c + g.navigationSize)
                    }, {queue: false, duration: g.animationTime});
                    h.navLeft = c
                }
            }
        };
        h.buildNextBackButtons = function () {
            h.$forward = b('<span class="arrow forward"><a href="#"><span>' + g.forwardText + "</span></a></span>");
            h.$back = b('<span class="arrow back"><a href="#"><span>' + g.backText + "</span></a></span>");
            h.$back.bind(g.clickBackArrow, function (c) {
                if (g.enableArrows && !h.flag) {
                    h.flag = true;
                    setTimeout(function () {
                        h.flag = false
                    }, 100);
                    h.goBack()
                }
                c.preventDefault()
            });
            h.$forward.bind(g.clickForwardArrow, function (c) {
                if (g.enableArrows && !h.flag) {
                    h.flag = true;
                    setTimeout(function () {
                        h.flag = false
                    }, 100);
                    h.goForward()
                }
                c.preventDefault()
            });
            h.$back.add(h.$forward).find("a").bind("focusin focusout", function () {
                b(this).toggleClass("hover")
            });
            h.$back.appendTo((g.appendBackTo && b(g.appendBackTo).length) ? b(g.appendBackTo) : h.$wrapper);
            h.$forward.appendTo((g.appendForwardTo && b(g.appendForwardTo).length) ? b(g.appendForwardTo) : h.$wrapper);
            h.arrowWidth = h.$forward.width();
            h.arrowRight = parseInt(h.$forward.css("right"), 10);
            h.arrowLeft = parseInt(h.$back.css("left"), 10)
        };
        h.buildAutoPlay = function () {
            h.$startStop.html("<span>" + (h.playing ? g.stopText : g.startText) + "</span>").bind(g.clickSlideshow, function (c) {
                if (g.enableStartStop) {
                    h.startStop(!h.playing);
                    h.makeActive();
                    if (h.playing && !g.autoPlayDelayed) {
                        h.goForward(true)
                    }
                }
                c.preventDefault()
            }).bind("focusin focusout", function () {
                b(this).toggleClass("hover")
            })
        };
        h.checkResize = function (c) {
            clearTimeout(h.resizeTimer);
            h.resizeTimer = setTimeout(function () {
                var e = h.$outer.width() - h.outerPad[0], d = (h.$outer[0].tagName === "BODY" ? h.$win.height() : h.$outer.height()) - h.outerPad[1];
                if (h.width * g.showMultiple !== e || h.height !== d) {
                    h.setDimensions();
                    h.gotoPage(h.currentPage, h.playing, null, -1)
                }
                if (typeof(c) === "undefined") {
                    h.checkResize()
                }
            }, 500)
        };
        h.setDimensions = function () {
            var f, u, r, d, s = 0, e = {
                width: "100%",
                height: "100%"
            }, v = (g.showMultiple > 1) ? h.width || h.$window.width() / g.showMultiple : h.$window.width(), c = h.$win.width();
            if (g.expand) {
                f = h.$outer.width() - h.outerPad[0];
                h.height = u = h.$outer.height() - h.outerPad[1];
                h.$wrapper.add(h.$window).add(h.$items).css({
                    width: f,
                    height: u
                });
                h.width = v = (g.showMultiple > 1) ? f / g.showMultiple : f
            }
            h.$items.each(function (m) {
                d = b(this);
                r = d.children();
                if (g.resizeContents) {
                    f = h.width;
                    u = h.height;
                    d.css({width: f, height: u});
                    if (r.length) {
                        if (r[0].tagName === "EMBED") {
                            r.attr(e)
                        }
                        if (r[0].tagName === "OBJECT") {
                            r.find("embed").attr(e)
                        }
                        if (r.length === 1) {
                            r.css(e)
                        }
                    }
                } else {
                    f = d.width() || h.width;
                    if (r.length === 1 && f >= c) {
                        f = (r.width() >= c) ? v : r.width();
                        r.css("max-width", f)
                    }
                    d.css("width", f);
                    u = (r.length === 1 ? r.outerHeight(true) : d.height());
                    if (u <= h.outerPad[1]) {
                        u = h.height
                    }
                    d.css("height", u)
                }
                h.panelSize[m] = [f, u, s];
                s += (g.mode === "vertical") ? u : f
            });
            h.$el.css((g.mode === "vertical" ? "height" : "width"), g.mode === "fade" ? h.width : s)
        };
        h.getDim = function (c) {
            var e, f = h.width, d = h.height;
            if (h.pages < 1 || isNaN(c)) {
                return [f, d]
            }
            c = (g.infiniteSlides && h.pages > 1) ? c : c - 1;
            e = h.panelSize[c];
            if (e) {
                f = e[0] || f;
                d = e[1] || d
            }
            if (g.showMultiple > 1) {
                for (e = 1; e < g.showMultiple; e++) {
                    f += h.panelSize[(c + e)][0];
                    d = Math.max(d, h.panelSize[c + e][1])
                }
            }
            return [f, d]
        };
        h.goForward = function (c) {
            h.gotoPage(h[g.allowRapidChange ? "targetPage" : "currentPage"] + g.changeBy * (g.playRtl ? -1 : 1), c)
        };
        h.goBack = function (c) {
            h.gotoPage(h[g.allowRapidChange ? "targetPage" : "currentPage"] + g.changeBy * (g.playRtl ? 1 : -1), c)
        };
        h.gotoPage = function (e, f, c, d) {
            if (f !== true) {
                f = false;
                h.startStop(false);
                h.makeActive()
            }
            if (/^[#|.]/.test(e) && b(e).length) {
                e = b(e).closest(".panel").index() + h.adj
            }
            if (g.changeBy !== 1) {
                var n = h.pages - h.adjustMultiple;
                if (e < 1) {
                    e = g.stopAtEnd ? 1 : (g.infiniteSlides ? h.pages + e : (g.showMultiple > 1 - e ? 1 : n))
                }
                if (e > h.pages) {
                    e = g.stopAtEnd ? h.pages : (g.showMultiple > 1 - e ? 1 : e -= n)
                } else {
                    if (e >= n) {
                        e = n
                    }
                }
            }
            if (h.pages <= 1) {
                return
            }
            h.$lastPage = h.$currentPage;
            if (typeof(e) !== "number") {
                e = parseInt(e, 10) || g.startPanel;
                h.setCurrentPage(e)
            }
            if (f && g.isVideoPlaying(h)) {
                return
            }
            h.exactPage = e;
            if (e > h.pages + 1 - h.adj) {
                e = (!g.infiniteSlides && !g.stopAtEnd) ? 1 : h.pages
            }
            if (e < h.adj) {
                e = (!g.infiniteSlides && !g.stopAtEnd) ? h.pages : 1
            }
            if (!g.infiniteSlides) {
                h.exactPage = e
            }
            h.currentPage = (e > h.pages) ? h.pages : (e < 1) ? 1 : h.currentPage;
            h.$currentPage = h.$items.eq(h.currentPage - h.adj);
            h.targetPage = (e === 0) ? h.pages : (e > h.pages) ? 1 : e;
            h.$targetPage = h.$items.eq(h.targetPage - h.adj);
            d = typeof d !== "undefined" ? d : g.animationTime;
            if (d >= 0) {
                h.$el.trigger("slide_init", h)
            }
            if (d > 0) {
                h.slideControls(true)
            }
            if (g.buildNavigation) {
                h.setNavigation(h.targetPage)
            }
            if (f !== true) {
                f = false
            }
            if (!f || (g.stopAtEnd && e === h.pages)) {
                h.startStop(false)
            }
            if (d >= 0) {
                h.$el.trigger("slide_begin", h)
            }
            setTimeout(function (m) {
                var p, r = true;
                if (g.allowRapidChange) {
                    h.$wrapper.add(h.$el).add(h.$items).stop(true, true)
                }
                if (!g.resizeContents) {
                    p = h.getDim(e);
                    m = {};
                    if (h.$wrapper.width() !== p[0]) {
                        m.width = p[0] || h.width;
                        r = false
                    }
                    if (h.$wrapper.height() !== p[1]) {
                        m.height = p[1] || h.height;
                        r = false
                    }
                    if (!r) {
                        h.$wrapper.filter(":not(:animated)").animate(m, {
                            queue: false,
                            duration: (d < 0 ? 0 : d),
                            easing: g.easing
                        })
                    }
                }
                if (g.mode === "fade") {
                    if (h.$lastPage[0] !== h.$targetPage[0]) {
                        h.fadeIt(h.$lastPage, 0, d);
                        h.fadeIt(h.$targetPage, 1, d, function () {
                            h.endAnimation(e, c, d)
                        })
                    } else {
                        h.endAnimation(e, c, d)
                    }
                } else {
                    m = {};
                    m[h.dir] = -h.panelSize[(g.infiniteSlides && h.pages > 1) ? e : e - 1][2];
                    h.$el.filter(":not(:animated)").animate(m, {
                        queue: false,
                        duration: d < 0 ? 0 : d,
                        easing: g.easing,
                        complete: function () {
                            h.endAnimation(e, c, d)
                        }
                    })
                }
            }, parseInt(g.delayBeforeAnimate, 10) || 0)
        };
        h.endAnimation = function (e, c, d) {
            if (e === 0) {
                h.$el.css(h.dir, g.mode === "fade" ? 0 : -h.panelSize[h.pages][2]);
                e = h.pages
            } else {
                if (e > h.pages) {
                    h.$el.css(h.dir, g.mode === "fade" ? 0 : -h.panelSize[1][2]);
                    e = 1
                }
            }
            h.exactPage = e;
            h.setCurrentPage(e, false);
            if (g.mode === "fade") {
                h.fadeIt(h.$items.not(":eq(" + (e - h.adj) + ")"), 0, 0)
            }
            if (!h.hovered) {
                h.slideControls(false)
            }
            if (g.hashTags) {
                h.setHash(e)
            }
            if (d >= 0) {
                h.$el.trigger("slide_complete", h)
            }
            if (typeof c === "function") {
                c(h)
            }
            if (g.autoPlayLocked && !h.playing) {
                setTimeout(function () {
                    h.startStop(true)
                }, g.resumeDelay - (g.autoPlayDelayed ? g.delay : 0))
            }
        };
        h.fadeIt = function (e, n, d, c) {
            var f = d < 0 ? 0 : d;
            if (g.resumeOnVisible) {
                e.filter(":not(:animated)").fadeTo(f, n, c)
            } else {
                e.filter(":not(:animated)")[n === 0 ? "fadeOut" : "fadeIn"](f, c)
            }
        };
        h.setCurrentPage = function (d, e) {
            d = parseInt(d, 10);
            if (h.pages < 1 || d === 0 || isNaN(d)) {
                return
            }
            if (d > h.pages + 1 - h.adj) {
                d = h.pages - h.adj
            }
            if (d < h.adj) {
                d = 1
            }
            if (g.buildArrows && !g.infiniteSlides && g.stopAtEnd) {
                h.$forward[d === h.pages - h.adjustMultiple ? "addClass" : "removeClass"]("disabled");
                h.$back[d === 1 ? "addClass" : "removeClass"]("disabled");
                if (d === h.pages && h.playing) {
                    h.startStop()
                }
            }
            if (!e) {
                var c = h.getDim(d);
                h.$wrapper.css({
                    width: c[0],
                    height: c[1]
                }).add(h.$window).scrollLeft(0).scrollTop(0);
                h.$el.css(h.dir, g.mode === "fade" ? 0 : -h.panelSize[(g.infiniteSlides && h.pages > 1) ? d : d - 1][2])
            }
            h.currentPage = d;
            h.$currentPage = h.$items.removeClass("activePage").eq(d - h.adj).addClass("activePage");
            if (g.buildNavigation) {
                h.setNavigation(d)
            }
        };
        h.setNavigation = function (c) {
            h.$nav.find(".cur").removeClass("cur").end().find("a").eq(c - 1).addClass("cur")
        };
        h.makeActive = function () {
            if (!h.$wrapper.hasClass("activeSlider")) {
                b(".activeSlider").removeClass("activeSlider");
                h.$wrapper.addClass("activeSlider")
            }
        };
        h.gotoHash = function () {
            var e = h.win.location.hash, f = e.indexOf("&"), c = e.match(h.regex);
            if (c === null && !/^#&/.test(e) && !/#!?\//.test(e)) {
                e = e.substring(0, (f >= 0 ? f : e.length));
                try {
                    c = (b(e).length && b(e).closest(".anythingBase")[0] === h.el) ? h.$items.index(b(e).closest(".panel")) + h.adj : null
                } catch (d) {
                    c = null
                }
            } else {
                if (c !== null) {
                    c = (g.hashTags) ? parseInt(c[1], 10) : null
                }
            }
            return c
        };
        h.setHash = function (c) {
            var d = "panel" + h.runTimes + "-", e = h.win.location.hash;
            if (typeof e !== "undefined") {
                h.win.location.hash = (e.indexOf(d) > 0) ? e.replace(h.regex, d + c) : e + "&" + d + c
            }
        };
        h.slideControls = function (o) {
            var e = (o) ? "slideDown" : "slideUp", c = (o) ? 0 : g.animationTime, d = (o) ? g.animationTime : 0, p = (o) ? 1 : 0, f = (o) ? 0 : 1;
            if (g.toggleControls) {
                h.$controls.stop(true, true).delay(c)[e](g.animationTime / 2).delay(d)
            }
            if (g.buildArrows && g.toggleArrows) {
                if (!h.hovered && h.playing) {
                    f = 1;
                    p = 0
                }
                h.$forward.stop(true, true).delay(c).animate({
                    right: h.arrowRight + (f * h.arrowWidth),
                    opacity: p
                }, g.animationTime / 2);
                h.$back.stop(true, true).delay(c).animate({
                    left: h.arrowLeft + (f * h.arrowWidth),
                    opacity: p
                }, g.animationTime / 2)
            }
        };
        h.clearTimer = function (c) {
            if (h.timer) {
                h.win.clearInterval(h.timer);
                if (!c && h.slideshow) {
                    h.$el.trigger("slideshow_stop", h);
                    h.slideshow = false
                }
            }
        };
        h.startStop = function (c, d) {
            if (c !== true) {
                c = false
            }
            h.playing = c;
            if (c && !d) {
                h.$el.trigger("slideshow_start", h);
                h.slideshow = true
            }
            if (g.buildStartStop) {
                h.$startStop.toggleClass("playing", c).find("span").html(c ? g.stopText : g.startText);
                if (h.$startStop.find("span").css("visibility") === "hidden") {
                    h.$startStop.addClass(g.tooltipClass).attr("title", c ? g.stopText : g.startText)
                }
            }
            if (c) {
                h.clearTimer(true);
                h.timer = h.win.setInterval(function () {
                    if (!g.isVideoPlaying(h)) {
                        h.goForward(true)
                    } else {
                        if (!g.resumeOnVideoEnd) {
                            h.startStop()
                        }
                    }
                }, g.delay)
            } else {
                h.clearTimer()
            }
        };
        h.init()
    };
    b.anythingSlider.defaults = {
        theme: "default",
        mode: "horiz",
        expand: false,
        resizeContents: true,
        showMultiple: false,
        easing: "swing",
        buildArrows: true,
        buildNavigation: true,
        buildStartStop: true,
        toggleArrows: false,
        toggleControls: false,
        startText: "Start",
        stopText: "Stop",
        forwardText: "&raquo;",
        backText: "&laquo;",
        tooltipClass: "tooltip",
        enableArrows: true,
        enableNavigation: true,
        enableStartStop: true,
        enableKeyboard: true,
        startPanel: 1,
        changeBy: 1,
        hashTags: true,
        infiniteSlides: true,
        navigationFormatter: null,
        navigationSize: false,
        autoPlay: false,
        autoPlayLocked: false,
        autoPlayDelayed: false,
        pauseOnHover: true,
        stopAtEnd: false,
        playRtl: false,
        delay: 3000,
        resumeDelay: 15000,
        animationTime: 600,
        delayBeforeAnimate: 0,
        clickForwardArrow: "click",
        clickBackArrow: "click",
        clickControls: "click focusin",
        clickSlideshow: "click",
        allowRapidChange: false,
        resumeOnVideoEnd: true,
        resumeOnVisible: true,
        addWmodeToObject: "opaque",
        isVideoPlaying: function (a) {
            return false
        }
    };
    b.fn.anythingSlider = function (a, d) {
        return this.each(function () {
            var c, f = b(this).data("AnythingSlider");
            if ((typeof(a)).match("object|undefined")) {
                if (!f) {
                    (new b.anythingSlider(this, a))
                } else {
                    f.updateSlider()
                }
            } else {
                if (/\d/.test(a) && !isNaN(a) && f) {
                    c = (typeof(a) === "number") ? a : parseInt(b.trim(a), 10);
                    if (c >= 1 && c <= f.pages) {
                        f.gotoPage(c, false, d)
                    }
                } else {
                    if (/^[#|.]/.test(a) && b(a).length) {
                        f.gotoPage(a, false, d)
                    }
                }
            }
        })
    }
})(jQuery);
/*
 * jQuery BBQ: Back Button & Query Library - v1.4pre - 1/15/2013
 * http://benalman.com/projects/jquery-bbq-plugin/
 *
 * Copyright (c) 2010-2013 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
(function (M, Y) {
    var an, ah = Array.prototype.slice, U = decodeURIComponent, av = M.param, al, at, ai, ad, au = M.bbq = M.bbq || {}, W, af, ak, aq = M.event.special, ar = "hashchange", X = "querystring", Q = "fragment", ab = "elemUrlAttr", aj = "href", ag = "src", ac = /^.*\?|#.*$/g, S, N, ao, am, V, R = {};

    function O(a) {
        return typeof a === "string"
    }

    function T(a) {
        var b = ah.call(arguments, 1);
        return function () {
            return a.apply(this, b.concat(ah.call(arguments)))
        }
    }

    function ae(a) {
        return a.replace(N, "$2")
    }

    function aa(a) {
        return a.replace(/(?:^[^?#]*\?([^#]*).*$)?.*/, "$1")
    }

    function ap(h, c, l, g, k) {
        var a, d, e, b, f;
        if (g !== an) {
            e = l.match(h ? N : /^([^#?]*)\??([^#]*)(#?.*)/);
            f = e[3] || "";
            if (k === 2 && O(g)) {
                d = g.replace(h ? S : ac, "")
            } else {
                b = ai(e[2]);
                g = O(g) ? ai[h ? Q : X](g) : g;
                d = k === 2 ? g : k === 1 ? M.extend({}, g, b) : M.extend({}, b, g);
                d = al(d);
                if (h) {
                    d = d.replace(ao, U)
                }
            }
            a = e[1] + (h ? V : d || !e[1] ? "?" : "") + d + f
        } else {
            a = c(l !== an ? l : location.href)
        }
        return a
    }

    av[X] = T(ap, 0, aa);
    av[Q] = at = T(ap, 1, ae);
    av.sorted = al = function (c, b) {
        var d = [], a = {};
        M.each(av(c, b).split("&"), function (e, h) {
            var f = h.replace(/(?:%5B|=).*$/, ""), g = a[f];
            if (!g) {
                g = a[f] = [];
                d.push(f)
            }
            g.push(h)
        });
        return M.map(d.sort(), function (e) {
            return a[e]
        }).join("&")
    };
    at.noEscape = function (a) {
        a = a || "";
        var b = M.map(a.split(""), encodeURIComponent);
        ao = new RegExp(b.join("|"), "g")
    };
    at.noEscape(",/");
    at.ajaxCrawlable = function (a) {
        if (a !== an) {
            if (a) {
                S = /^.*(?:#!|#)/;
                N = /^([^#]*)(?:#!|#)?(.*)$/;
                V = "#!"
            } else {
                S = /^.*#/;
                N = /^([^#]*)#?(.*)$/;
                V = "#"
            }
            am = !!a
        }
        return am
    };
    at.ajaxCrawlable(0);
    M.deparam = ai = function (a, d) {
        var b = {}, c = {"true": !0, "false": !1, "null": null};
        M.each(a.replace(/\+/g, " ").split("&"), function (m, f) {
            var n = f.split("="), g = U(n[0]), o, h = b, l = 0, e = g.split("]["), k = e.length - 1;
            if (/\[/.test(e[0]) && /\]$/.test(e[k])) {
                e[k] = e[k].replace(/\]$/, "");
                e = e.shift().split("[").concat(e);
                k = e.length - 1
            } else {
                k = 0
            }
            if (n.length === 2) {
                o = U(n[1]);
                if (d) {
                    o = o && !isNaN(o) ? +o : o === "undefined" ? an : c[o] !== an ? c[o] : o
                }
                if (k) {
                    for (; l <= k; l++) {
                        g = e[l] === "" ? h.length : e[l];
                        h = h[g] = l < k ? h[g] || (e[l + 1] && isNaN(e[l + 1]) ? {} : []) : o
                    }
                } else {
                    if (M.isArray(b[g])) {
                        b[g].push(o)
                    } else {
                        if (b[g] !== an) {
                            b[g] = [b[g], o]
                        } else {
                            b[g] = o
                        }
                    }
                }
            } else {
                if (g) {
                    b[g] = d ? an : ""
                }
            }
        });
        return b
    };
    function Z(a, c, b) {
        if (c === an || typeof c === "boolean") {
            b = c;
            c = av[a ? Q : X]()
        } else {
            c = O(c) ? c.replace(a ? S : ac, "") : c
        }
        return ai(c, b)
    }

    ai[X] = T(Z, 0);
    ai[Q] = ad = T(Z, 1);
    M[ab] || (M[ab] = function (a) {
        return M.extend(R, a)
    })({
        a: aj,
        base: aj,
        iframe: ag,
        img: ag,
        input: ag,
        form: "action",
        link: aj,
        script: ag
    });
    ak = M[ab];
    function P(a, c, b, d) {
        if (!O(b) && typeof b !== "object") {
            d = b;
            b = c;
            c = an
        }
        return this.each(function () {
            var e = M(this), g = c || ak()[(this.nodeName || "").toLowerCase()] || "", f = g && e.attr(g) || "";
            e.attr(g, av[a](f, b, d))
        })
    }

    M.fn[X] = T(P, X);
    M.fn[Q] = T(P, Q);
    au.pushState = W = function (a, d) {
        if (O(a) && /^#/.test(a) && d === an) {
            d = 2
        }
        var b = a !== an, c = at(location.href, b ? a : {}, b ? d : 2);
        location.href = c
    };
    au.getState = af = function (b, a) {
        return b === an || typeof b === "boolean" ? ad(b) : ad(a)[b]
    };
    au.removeState = function (b) {
        var a = {};
        if (b !== an) {
            a = af();
            M.each(M.isArray(b) ? b : arguments, function (c, d) {
                delete a[d]
            })
        }
        W(a, 2)
    };
    aq[ar] = M.extend(aq[ar], {
        add: function (c) {
            var a;

            function b(d) {
                var e = d[Q] = at();
                d.getState = function (g, f) {
                    return g === an || typeof g === "boolean" ? ai(e, g) : ai(e, f)[g]
                };
                a.apply(this, arguments)
            }

            if (M.isFunction(c)) {
                a = c;
                return b
            } else {
                a = c.handler;
                c.handler = b
            }
        }
    })
})(jQuery, this);
/*
 * jQuery hashchange event - v1.3 - 7/21/2010
 * http://benalman.com/projects/jquery-hashchange-plugin/
 *
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
(function (m, q, u) {
    var s = "hashchange", n = document, p, o = m.event.special, l = n.documentMode, r = "on" + s in q && (l === u || l > 7);

    function v(a) {
        a = a || location.href;
        return "#" + a.replace(/^[^#]*#?(.*)$/, "$1")
    }

    m.fn[s] = function (a) {
        return a ? this.bind(s, a) : this.trigger(s)
    };
    m.fn[s].delay = 50;
    o[s] = m.extend(o[s], {
        setup: function () {
            if (r) {
                return false
            }
            m(p.start)
        }, teardown: function () {
            if (r) {
                return false
            }
            m(p.stop)
        }
    });
    p = (function () {
        var b = {}, c, f = v(), a = function (h) {
            return h
        }, g = a, d = a;
        b.start = function () {
            c || e()
        };
        b.stop = function () {
            c && clearTimeout(c);
            c = u
        };
        function e() {
            var h = v(), k = d(f);
            if (h !== f) {
                g(f = h, k);
                m(q).trigger(s)
            } else {
                if (k !== f) {
                    location.href = location.href.replace(/#.*/, "") + k
                }
            }
            c = setTimeout(e, m.fn[s].delay)
        }

        (navigator.userAgent.match(/MSIE/i) !== null) && !r && (function () {
            var k, h;
            b.start = function () {
                if (!k) {
                    h = m.fn[s].src;
                    h = h && h + v();
                    k = m('<iframe tabindex="-1" title="empty"/>').hide().one("load", function () {
                        h || g(v());
                        e()
                    }).attr("src", h || "javascript:0").insertAfter("body")[0].contentWindow;
                    n.onpropertychange = function () {
                        try {
                            if (event.propertyName === "title") {
                                k.document.title = n.title
                            }
                        } catch (w) {
                        }
                    }
                }
            };
            b.stop = a;
            d = function () {
                return v(k.location.href)
            };
            g = function (D, C) {
                var A = k.document, B = m.fn[s].domain;
                if (D !== C) {
                    A.title = n.title;
                    A.open();
                    B && A.write('<script>document.domain="' + B + '"<\/script>');
                    A.close();
                    k.location.hash = D
                }
            }
        })();
        return b
    })()
})(jQuery, this);
(function (h) {
    var k = !!h.Tween;
    if (k) {
        h.Tween.propHooks.backgroundPosition = {
            get: function (a) {
                return f(h(a.elem).css(a.prop))
            }, set: l
        }
    } else {
        h.fx.step.backgroundPosition = l
    }
    function f(a) {
        var b = (a || "").split(/ /);
        var c = {
            center: "50%",
            left: "0%",
            right: "100%",
            top: "0%",
            bottom: "100%"
        };
        var d = function (e) {
            var n = (c[b[e]] || b[e] || "50%").match(/^([+-]=)?([+-]?\d+(\.\d*)?)(.*)$/);
            b[e] = [n[1], parseFloat(n[2]), n[4] || "px"]
        };
        if (b.length == 1 && h.inArray(b[0], ["top", "bottom"]) > -1) {
            b[1] = b[0];
            b[0] = "50%"
        }
        d(0);
        d(1);
        return b
    }

    function l(a) {
        if (!a.set) {
            g(a)
        }
        h(a.elem).css("background-position", ((a.pos * (a.end[0][1] - a.start[0][1]) + a.start[0][1]) + a.end[0][2]) + " " + ((a.pos * (a.end[1][1] - a.start[1][1]) + a.start[1][1]) + a.end[1][2]))
    }

    function g(b) {
        b.start = f(h(b.elem).css("backgroundPosition"));
        b.end = f(b.end);
        for (var a = 0; a < b.end.length; a++) {
            if (b.end[a][0]) {
                b.end[a][1] = b.start[a][1] + (b.end[a][0] == "-=" ? -1 : +1) * b.end[a][1]
            }
        }
        b.set = true
    }
})(jQuery);
(function (v) {
    v.colorpicker = new function () {
        this.regional = [];
        this.regional[""] = {
            ok: "OK",
            cancel: "Cancel",
            none: "None",
            button: "Color",
            title: "Pick a color",
            transparent: "Transparent",
            hsvH: "H",
            hsvS: "S",
            hsvV: "V",
            rgbR: "R",
            rgbG: "G",
            rgbB: "B",
            labL: "L",
            labA: "a",
            labB: "b",
            hslH: "H",
            hslS: "S",
            hslL: "L",
            cmykC: "C",
            cmykM: "M",
            cmykY: "Y",
            cmykK: "K",
            alphaA: "A"
        };
        this.swatches = [];
        this.swatches.html = {
            black: {r: 0, g: 0, b: 0},
            dimgray: {
                r: 0.4117647058823529,
                g: 0.4117647058823529,
                b: 0.4117647058823529
            },
            gray: {
                r: 0.5019607843137255,
                g: 0.5019607843137255,
                b: 0.5019607843137255
            },
            darkgray: {
                r: 0.6627450980392157,
                g: 0.6627450980392157,
                b: 0.6627450980392157
            },
            silver: {
                r: 0.7529411764705882,
                g: 0.7529411764705882,
                b: 0.7529411764705882
            },
            lightgrey: {
                r: 0.8274509803921568,
                g: 0.8274509803921568,
                b: 0.8274509803921568
            },
            gainsboro: {
                r: 0.8627450980392157,
                g: 0.8627450980392157,
                b: 0.8627450980392157
            },
            whitesmoke: {
                r: 0.9607843137254902,
                g: 0.9607843137254902,
                b: 0.9607843137254902
            },
            white: {r: 1, g: 1, b: 1},
            rosybrown: {
                r: 0.7372549019607844,
                g: 0.5607843137254902,
                b: 0.5607843137254902
            },
            indianred: {
                r: 0.803921568627451,
                g: 0.3607843137254902,
                b: 0.3607843137254902
            },
            brown: {
                r: 0.6470588235294118,
                g: 0.16470588235294117,
                b: 0.16470588235294117
            },
            firebrick: {
                r: 0.6980392156862745,
                g: 0.13333333333333333,
                b: 0.13333333333333333
            },
            lightcoral: {
                r: 0.9411764705882353,
                g: 0.5019607843137255,
                b: 0.5019607843137255
            },
            maroon: {r: 0.5019607843137255, g: 0, b: 0},
            darkred: {r: 0.5450980392156862, g: 0, b: 0},
            red: {r: 1, g: 0, b: 0},
            snow: {r: 1, g: 0.9803921568627451, b: 0.9803921568627451},
            salmon: {
                r: 0.9803921568627451,
                g: 0.5019607843137255,
                b: 0.4470588235294118
            },
            mistyrose: {r: 1, g: 0.8941176470588236, b: 0.8823529411764706},
            tomato: {r: 1, g: 0.38823529411764707, b: 0.2784313725490196},
            darksalmon: {
                r: 0.9137254901960784,
                g: 0.5882352941176471,
                b: 0.47843137254901963
            },
            orangered: {r: 1, g: 0.27058823529411763, b: 0},
            coral: {r: 1, g: 0.4980392156862745, b: 0.3137254901960784},
            lightsalmon: {r: 1, g: 0.6274509803921569, b: 0.47843137254901963},
            sienna: {
                r: 0.6274509803921569,
                g: 0.3215686274509804,
                b: 0.17647058823529413
            },
            seashell: {r: 1, g: 0.9607843137254902, b: 0.9333333333333333},
            chocolate: {
                r: 0.8235294117647058,
                g: 0.4117647058823529,
                b: 0.11764705882352941
            },
            saddlebrown: {
                r: 0.5450980392156862,
                g: 0.27058823529411763,
                b: 0.07450980392156863
            },
            sandybrown: {
                r: 0.9568627450980393,
                g: 0.6431372549019608,
                b: 0.3764705882352941
            },
            peachpuff: {r: 1, g: 0.8549019607843137, b: 0.7254901960784313},
            peru: {
                r: 0.803921568627451,
                g: 0.5215686274509804,
                b: 0.24705882352941178
            },
            linen: {
                r: 0.9803921568627451,
                g: 0.9411764705882353,
                b: 0.9019607843137255
            },
            darkorange: {r: 1, g: 0.5490196078431373, b: 0},
            bisque: {r: 1, g: 0.8941176470588236, b: 0.7686274509803922},
            burlywood: {
                r: 0.8705882352941177,
                g: 0.7215686274509804,
                b: 0.5294117647058824
            },
            tan: {
                r: 0.8235294117647058,
                g: 0.7058823529411765,
                b: 0.5490196078431373
            },
            antiquewhite: {
                r: 0.9803921568627451,
                g: 0.9215686274509803,
                b: 0.8431372549019608
            },
            navajowhite: {r: 1, g: 0.8705882352941177, b: 0.6784313725490196},
            blanchedalmond: {r: 1, g: 0.9215686274509803, b: 0.803921568627451},
            papayawhip: {r: 1, g: 0.9372549019607843, b: 0.8352941176470589},
            orange: {r: 1, g: 0.6470588235294118, b: 0},
            moccasin: {r: 1, g: 0.8941176470588236, b: 0.7098039215686275},
            wheat: {
                r: 0.9607843137254902,
                g: 0.8705882352941177,
                b: 0.7019607843137254
            },
            oldlace: {
                r: 0.9921568627450981,
                g: 0.9607843137254902,
                b: 0.9019607843137255
            },
            floralwhite: {r: 1, g: 0.9803921568627451, b: 0.9411764705882353},
            goldenrod: {
                r: 0.8549019607843137,
                g: 0.6470588235294118,
                b: 0.12549019607843137
            },
            darkgoldenrod: {
                r: 0.7215686274509804,
                g: 0.5254901960784314,
                b: 0.043137254901960784
            },
            cornsilk: {r: 1, g: 0.9725490196078431, b: 0.8627450980392157},
            gold: {r: 1, g: 0.8431372549019608, b: 0},
            palegoldenrod: {
                r: 0.9333333333333333,
                g: 0.9098039215686274,
                b: 0.6666666666666666
            },
            khaki: {
                r: 0.9411764705882353,
                g: 0.9019607843137255,
                b: 0.5490196078431373
            },
            lemonchiffon: {r: 1, g: 0.9803921568627451, b: 0.803921568627451},
            darkkhaki: {
                r: 0.7411764705882353,
                g: 0.7176470588235294,
                b: 0.4196078431372549
            },
            beige: {
                r: 0.9607843137254902,
                g: 0.9607843137254902,
                b: 0.8627450980392157
            },
            lightgoldenrodyellow: {
                r: 0.9803921568627451,
                g: 0.9803921568627451,
                b: 0.8235294117647058
            },
            olive: {r: 0.5019607843137255, g: 0.5019607843137255, b: 0},
            yellow: {r: 1, g: 1, b: 0},
            lightyellow: {r: 1, g: 1, b: 0.8784313725490196},
            ivory: {r: 1, g: 1, b: 0.9411764705882353},
            olivedrab: {
                r: 0.4196078431372549,
                g: 0.5568627450980392,
                b: 0.13725490196078433
            },
            yellowgreen: {
                r: 0.6039215686274509,
                g: 0.803921568627451,
                b: 0.19607843137254902
            },
            darkolivegreen: {
                r: 0.3333333333333333,
                g: 0.4196078431372549,
                b: 0.1843137254901961
            },
            greenyellow: {r: 0.6784313725490196, g: 1, b: 0.1843137254901961},
            lawngreen: {r: 0.48627450980392156, g: 0.9882352941176471, b: 0},
            chartreuse: {r: 0.4980392156862745, g: 1, b: 0},
            darkseagreen: {
                r: 0.5607843137254902,
                g: 0.7372549019607844,
                b: 0.5607843137254902
            },
            forestgreen: {
                r: 0.13333333333333333,
                g: 0.5450980392156862,
                b: 0.13333333333333333
            },
            limegreen: {
                r: 0.19607843137254902,
                g: 0.803921568627451,
                b: 0.19607843137254902
            },
            lightgreen: {
                r: 0.5647058823529412,
                g: 0.9333333333333333,
                b: 0.5647058823529412
            },
            palegreen: {
                r: 0.596078431372549,
                g: 0.984313725490196,
                b: 0.596078431372549
            },
            darkgreen: {r: 0, g: 0.39215686274509803, b: 0},
            green: {r: 0, g: 0.5019607843137255, b: 0},
            lime: {r: 0, g: 1, b: 0},
            honeydew: {r: 0.9411764705882353, g: 1, b: 0.9411764705882353},
            mediumseagreen: {
                r: 0.23529411764705882,
                g: 0.7019607843137254,
                b: 0.44313725490196076
            },
            seagreen: {
                r: 0.1803921568627451,
                g: 0.5450980392156862,
                b: 0.3411764705882353
            },
            springgreen: {r: 0, g: 1, b: 0.4980392156862745},
            mintcream: {r: 0.9607843137254902, g: 1, b: 0.9803921568627451},
            mediumspringgreen: {
                r: 0,
                g: 0.9803921568627451,
                b: 0.6039215686274509
            },
            mediumaquamarine: {
                r: 0.4,
                g: 0.803921568627451,
                b: 0.6666666666666666
            },
            aquamarine: {r: 0.4980392156862745, g: 1, b: 0.8313725490196079},
            turquoise: {
                r: 0.25098039215686274,
                g: 0.8784313725490196,
                b: 0.8156862745098039
            },
            lightseagreen: {
                r: 0.12549019607843137,
                g: 0.6980392156862745,
                b: 0.6666666666666666
            },
            mediumturquoise: {
                r: 0.2823529411764706,
                g: 0.8196078431372549,
                b: 0.8
            },
            darkslategray: {
                r: 0.1843137254901961,
                g: 0.30980392156862746,
                b: 0.30980392156862746
            },
            paleturquoise: {
                r: 0.6862745098039216,
                g: 0.9333333333333333,
                b: 0.9333333333333333
            },
            teal: {r: 0, g: 0.5019607843137255, b: 0.5019607843137255},
            darkcyan: {r: 0, g: 0.5450980392156862, b: 0.5450980392156862},
            darkturquoise: {r: 0, g: 0.807843137254902, b: 0.8196078431372549},
            aqua: {r: 0, g: 1, b: 1},
            cyan: {r: 0, g: 1, b: 1},
            lightcyan: {r: 0.8784313725490196, g: 1, b: 1},
            azure: {r: 0.9411764705882353, g: 1, b: 1},
            cadetblue: {
                r: 0.37254901960784315,
                g: 0.6196078431372549,
                b: 0.6274509803921569
            },
            powderblue: {
                r: 0.6901960784313725,
                g: 0.8784313725490196,
                b: 0.9019607843137255
            },
            lightblue: {
                r: 0.6784313725490196,
                g: 0.8470588235294118,
                b: 0.9019607843137255
            },
            deepskyblue: {r: 0, g: 0.7490196078431373, b: 1},
            skyblue: {
                r: 0.5294117647058824,
                g: 0.807843137254902,
                b: 0.9215686274509803
            },
            lightskyblue: {
                r: 0.5294117647058824,
                g: 0.807843137254902,
                b: 0.9803921568627451
            },
            steelblue: {
                r: 0.27450980392156865,
                g: 0.5098039215686274,
                b: 0.7058823529411765
            },
            aliceblue: {r: 0.9411764705882353, g: 0.9725490196078431, b: 1},
            dodgerblue: {r: 0.11764705882352941, g: 0.5647058823529412, b: 1},
            slategray: {
                r: 0.4392156862745098,
                g: 0.5019607843137255,
                b: 0.5647058823529412
            },
            lightslategray: {
                r: 0.4666666666666667,
                g: 0.5333333333333333,
                b: 0.6
            },
            lightsteelblue: {
                r: 0.6901960784313725,
                g: 0.7686274509803922,
                b: 0.8705882352941177
            },
            cornflowerblue: {
                r: 0.39215686274509803,
                g: 0.5843137254901961,
                b: 0.9294117647058824
            },
            royalblue: {
                r: 0.2549019607843137,
                g: 0.4117647058823529,
                b: 0.8823529411764706
            },
            midnightblue: {
                r: 0.09803921568627451,
                g: 0.09803921568627451,
                b: 0.4392156862745098
            },
            lavender: {
                r: 0.9019607843137255,
                g: 0.9019607843137255,
                b: 0.9803921568627451
            },
            navy: {r: 0, g: 0, b: 0.5019607843137255},
            darkblue: {r: 0, g: 0, b: 0.5450980392156862},
            mediumblue: {r: 0, g: 0, b: 0.803921568627451},
            blue: {r: 0, g: 0, b: 1},
            ghostwhite: {r: 0.9725490196078431, g: 0.9725490196078431, b: 1},
            darkslateblue: {
                r: 0.2823529411764706,
                g: 0.23921568627450981,
                b: 0.5450980392156862
            },
            slateblue: {
                r: 0.41568627450980394,
                g: 0.35294117647058826,
                b: 0.803921568627451
            },
            mediumslateblue: {
                r: 0.4823529411764706,
                g: 0.40784313725490196,
                b: 0.9333333333333333
            },
            mediumpurple: {
                r: 0.5764705882352941,
                g: 0.4392156862745098,
                b: 0.8588235294117647
            },
            blueviolet: {
                r: 0.5411764705882353,
                g: 0.16862745098039217,
                b: 0.8862745098039215
            },
            indigo: {r: 0.29411764705882354, g: 0, b: 0.5098039215686274},
            darkorchid: {r: 0.6, g: 0.19607843137254902, b: 0.8},
            darkviolet: {r: 0.5803921568627451, g: 0, b: 0.8274509803921568},
            mediumorchid: {
                r: 0.7294117647058823,
                g: 0.3333333333333333,
                b: 0.8274509803921568
            },
            thistle: {
                r: 0.8470588235294118,
                g: 0.7490196078431373,
                b: 0.8470588235294118
            },
            plum: {
                r: 0.8666666666666667,
                g: 0.6274509803921569,
                b: 0.8666666666666667
            },
            violet: {
                r: 0.9333333333333333,
                g: 0.5098039215686274,
                b: 0.9333333333333333
            },
            purple: {r: 0.5019607843137255, g: 0, b: 0.5019607843137255},
            darkmagenta: {r: 0.5450980392156862, g: 0, b: 0.5450980392156862},
            magenta: {r: 1, g: 0, b: 1},
            fuchsia: {r: 1, g: 0, b: 1},
            orchid: {
                r: 0.8549019607843137,
                g: 0.4392156862745098,
                b: 0.8392156862745098
            },
            mediumvioletred: {
                r: 0.7803921568627451,
                g: 0.08235294117647059,
                b: 0.5215686274509804
            },
            deeppink: {r: 1, g: 0.0784313725490196, b: 0.5764705882352941},
            hotpink: {r: 1, g: 0.4117647058823529, b: 0.7058823529411765},
            palevioletred: {
                r: 0.8588235294117647,
                g: 0.4392156862745098,
                b: 0.5764705882352941
            },
            lavenderblush: {r: 1, g: 0.9411764705882353, b: 0.9607843137254902},
            crimson: {
                r: 0.8627450980392157,
                g: 0.0784313725490196,
                b: 0.23529411764705882
            },
            pink: {r: 1, g: 0.7529411764705882, b: 0.796078431372549},
            lightpink: {r: 1, g: 0.7137254901960784, b: 0.7568627450980392}
        }
    };
    var m = 0, u = '<div class="ui-colorpicker ui-colorpicker-dialog ui-dialog ui-widget ui-widget-content ui-corner-all" style="display: none;"></div>', s = '<div class="ui-colorpicker ui-colorpicker-inline ui-dialog ui-widget ui-widget-content ui-corner-all"></div>', p = {
        full: ["header", "map", "bar", "hex", "hsv", "rgb", "alpha", "lab", "cmyk", "preview", "swatches", "footer"],
        popup: ["map", "bar", "hex", "hsv", "rgb", "alpha", "preview", "footer"],
        draggable: ["header", "map", "bar", "hex", "hsv", "rgb", "alpha", "preview", "footer"],
        inline: ["map", "bar", "hex", "hsv", "rgb", "alpha", "preview"]
    }, o = function (b) {
        var a = Math.round(b).toString(16);
        if (a.length === 1) {
            a = ("0" + a)
        }
        return a.toLowerCase()
    }, r = function (b) {
        var a, c;
        c = /^#?([a-fA-F0-9]{1,6})$/.exec(b);
        if (c) {
            a = parseInt(c[1], 16);
            return new w(((a >> 16) & 255) / 255, ((a >> 8) & 255) / 255, (a & 255) / 255)
        }
        return new w()
    }, n = function (b, K) {
        var h, f, x, l, I, g, H, J, a, d, c, e, k, y;
        b.sort(function (A, B) {
            if (A.pos[1] == B.pos[1]) {
                return A.pos[0] - B.pos[0]
            }
            return A.pos[1] - B.pos[1]
        });
        l = 0;
        I = 0;
        v.each(b, function (A, B) {
            l = Math.max(l, B.pos[0] + B.pos[2]);
            I = Math.max(I, B.pos[1] + B.pos[3])
        });
        h = [];
        for (f = 0; f < l; ++f) {
            h.push([])
        }
        H = [];
        g = [];
        v.each(b, function (A, B) {
            for (f = 0; f < B.pos[2]; f += 1) {
                g[B.pos[0] + f] = true
            }
            for (x = 0; x < B.pos[3]; x += 1) {
                H[B.pos[1] + x] = true
            }
        });
        d = "";
        a = b[J = 0];
        for (x = 0; x < I; ++x) {
            d += "<tr>";
            for (f = 0; f < l; f) {
                if (typeof a !== "undefined" && f == a.pos[0] && x == a.pos[1]) {
                    d += K(a, f, x);
                    for (e = 0; e < a.pos[3]; e += 1) {
                        for (c = 0; c < a.pos[2]; c += 1) {
                            h[f + c][x + e] = true
                        }
                    }
                    f += a.pos[2];
                    a = b[++J]
                } else {
                    k = 0;
                    y = false;
                    while (f < l && h[f][x] === undefined && (a === undefined || x < a.pos[1] || (x == a.pos[1] && f < a.pos[0]))) {
                        if (g[f] === true) {
                            k += 1
                        }
                        y = true;
                        f += 1
                    }
                    if (k > 0) {
                        d += '<td colspan="' + k + '"></td>'
                    } else {
                        if (!y) {
                            f += 1
                        }
                    }
                }
            }
            d += "</tr>"
        }
        return '<table cellspacing="0" cellpadding="0" border="0"><tbody>' + d + "</tbody></table>"
    }, q = {
        header: function (c) {
            var d = this, b = null, a = function () {
                var e = c.options.title || c._getRegional("title"), f = '<span class="ui-dialog-title">' + e + "</span>";
                if (!c.inline && c.options.showCloseButton) {
                    f += '<a href="#" class="ui-dialog-titlebar-close ui-corner-all" role="button"><span class="ui-icon ui-icon-closethick">close</span></a>'
                }
                return '<div class="ui-dialog-titlebar ui-widget-header ui-corner-all ui-helper-clearfix">' + f + "</div>"
            };
            this.init = function () {
                b = v(a()).prependTo(c.dialog);
                var e = v(".ui-dialog-titlebar-close", b);
                c._hoverable(e);
                c._focusable(e);
                e.click(function (f) {
                    f.preventDefault();
                    c.close()
                });
                if (!c.inline && c.options.draggable) {
                    c.dialog.draggable({handle: b})
                }
            }
        }, map: function (c) {
            var e = this, b = null, d = null, h, f, g, a;
            h = function (H) {
                if (!c.opened) {
                    return
                }
                var y = v(".ui-colorpicker-map-layer-pointer", b), G = y.offset(), k = y.width(), l = y.height(), x = H.pageX - G.left, F = H.pageY - G.top;
                if (x >= 0 && x < k && F >= 0 && F < l) {
                    H.stopImmediatePropagation();
                    H.preventDefault();
                    b.unbind("mousedown", h);
                    v(document).bind("mouseup", f);
                    v(document).bind("mousemove", g);
                    g(H)
                }
            };
            f = function (k) {
                k.stopImmediatePropagation();
                k.preventDefault();
                v(document).unbind("mouseup", f);
                v(document).unbind("mousemove", g);
                b.bind("mousedown", h)
            };
            g = function (H) {
                H.stopImmediatePropagation();
                H.preventDefault();
                if (H.pageX === e.x && H.pageY === e.y) {
                    return
                }
                e.x = H.pageX;
                e.y = H.pageY;
                var y = v(".ui-colorpicker-map-layer-pointer", b), G = y.offset(), k = y.width(), l = y.height(), x = H.pageX - G.left, F = H.pageY - G.top;
                x = Math.max(0, Math.min(x / k, 1));
                F = Math.max(0, Math.min(F / l, 1));
                switch (c.mode) {
                    case"h":
                        c.color.setHSV(null, x, 1 - F);
                        break;
                    case"s":
                    case"a":
                        c.color.setHSV(x, null, 1 - F);
                        break;
                    case"v":
                        c.color.setHSV(x, 1 - F, null);
                        break;
                    case"r":
                        c.color.setRGB(null, 1 - F, x);
                        break;
                    case"g":
                        c.color.setRGB(1 - F, null, x);
                        break;
                    case"b":
                        c.color.setRGB(x, 1 - F, null);
                        break
                }
                c._change()
            };
            a = function () {
                var k = '<div class="ui-colorpicker-map ui-colorpicker-border"><span class="ui-colorpicker-map-layer-1">&nbsp;</span><span class="ui-colorpicker-map-layer-2">&nbsp;</span>' + (c.options.alpha ? '<span class="ui-colorpicker-map-layer-alpha">&nbsp;</span>' : "") + '<span class="ui-colorpicker-map-layer-pointer"><span class="ui-colorpicker-map-pointer"></span></span></div>';
                return k
            };
            this.update = function () {
                switch (c.mode) {
                    case"h":
                        v(".ui-colorpicker-map-layer-1", b).css({
                            "background-position": "0 0",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-map-layer-2", b).hide();
                        break;
                    case"s":
                    case"a":
                        v(".ui-colorpicker-map-layer-1", b).css({
                            "background-position": "0 -260px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-map-layer-2", b).css({
                            "background-position": "0 -520px",
                            opacity: ""
                        }).show();
                        break;
                    case"v":
                        v(b).css("background-color", "black");
                        v(".ui-colorpicker-map-layer-1", b).css({
                            "background-position": "0 -780px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-map-layer-2", b).hide();
                        break;
                    case"r":
                        v(".ui-colorpicker-map-layer-1", b).css({
                            "background-position": "0 -1040px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-map-layer-2", b).css({
                            "background-position": "0 -1300px",
                            opacity: ""
                        }).show();
                        break;
                    case"g":
                        v(".ui-colorpicker-map-layer-1", b).css({
                            "background-position": "0 -1560px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-map-layer-2", b).css({
                            "background-position": "0 -1820px",
                            opacity: ""
                        }).show();
                        break;
                    case"b":
                        v(".ui-colorpicker-map-layer-1", b).css({
                            "background-position": "0 -2080px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-map-layer-2", b).css({
                            "background-position": "0 -2340px",
                            opacity: ""
                        }).show();
                        break
                }
                e.repaint()
            };
            this.repaint = function () {
                var k = v(".ui-colorpicker-map-layer-pointer", b), x = 0, l = 0;
                switch (c.mode) {
                    case"h":
                        x = c.color.getHSV().s * k.width();
                        l = (1 - c.color.getHSV().v) * k.width();
                        v(b).css("background-color", c.color.copy().normalize().toCSS());
                        break;
                    case"s":
                    case"a":
                        x = c.color.getHSV().h * k.width();
                        l = (1 - c.color.getHSV().v) * k.width();
                        v(".ui-colorpicker-map-layer-2", b).css("opacity", 1 - c.color.getHSV().s);
                        break;
                    case"v":
                        x = c.color.getHSV().h * k.width();
                        l = (1 - c.color.getHSV().s) * k.width();
                        v(".ui-colorpicker-map-layer-1", b).css("opacity", c.color.getHSV().v);
                        break;
                    case"r":
                        x = c.color.getRGB().b * k.width();
                        l = (1 - c.color.getRGB().g) * k.width();
                        v(".ui-colorpicker-map-layer-2", b).css("opacity", c.color.getRGB().r);
                        break;
                    case"g":
                        x = c.color.getRGB().b * k.width();
                        l = (1 - c.color.getRGB().r) * k.width();
                        v(".ui-colorpicker-map-layer-2", b).css("opacity", c.color.getRGB().g);
                        break;
                    case"b":
                        x = c.color.getRGB().r * k.width();
                        l = (1 - c.color.getRGB().g) * k.width();
                        v(".ui-colorpicker-map-layer-2", b).css("opacity", c.color.getRGB().b);
                        break
                }
                if (c.options.alpha) {
                    v(".ui-colorpicker-map-layer-alpha", b).css("opacity", 1 - c.color.getAlpha())
                }
                v(".ui-colorpicker-map-pointer", b).css({
                    left: x - 7,
                    top: l - 7
                })
            };
            this.init = function () {
                b = v(a()).appendTo(v(".ui-colorpicker-map-container", c.dialog));
                b.bind("mousedown", h)
            }
        }, bar: function (c) {
            var d = this, b = null, g, e, f, a;
            g = function (h) {
                if (!c.opened) {
                    return
                }
                var y = v(".ui-colorpicker-bar-layer-pointer", b), F = y.offset(), k = y.width(), l = y.height(), x = h.pageX - F.left, E = h.pageY - F.top;
                if (x >= 0 && x < k && E >= 0 && E < l) {
                    h.stopImmediatePropagation();
                    h.preventDefault();
                    b.unbind("mousedown", g);
                    v(document).bind("mouseup", e);
                    v(document).bind("mousemove", f);
                    f(h)
                }
            };
            e = function (h) {
                h.stopImmediatePropagation();
                h.preventDefault();
                v(document).unbind("mouseup", e);
                v(document).unbind("mousemove", f);
                b.bind("mousedown", g)
            };
            f = function (y) {
                y.stopImmediatePropagation();
                y.preventDefault();
                if (y.pageY === d.y) {
                    return
                }
                d.y = y.pageY;
                var k = v(".ui-colorpicker-bar-layer-pointer", b), l = k.offset(), B = k.height(), h = y.pageY - l.top;
                h = Math.max(0, Math.min(h / B, 1));
                switch (c.mode) {
                    case"h":
                        c.color.setHSV(1 - h, null, null);
                        break;
                    case"s":
                        c.color.setHSV(null, 1 - h, null);
                        break;
                    case"v":
                        c.color.setHSV(null, null, 1 - h);
                        break;
                    case"r":
                        c.color.setRGB(1 - h, null, null);
                        break;
                    case"g":
                        c.color.setRGB(null, 1 - h, null);
                        break;
                    case"b":
                        c.color.setRGB(null, null, 1 - h);
                        break;
                    case"a":
                        c.color.setAlpha(1 - h);
                        break
                }
                c._change()
            };
            a = function () {
                var h = '<div class="ui-colorpicker-bar ui-colorpicker-border"><span class="ui-colorpicker-bar-layer-1">&nbsp;</span><span class="ui-colorpicker-bar-layer-2">&nbsp;</span><span class="ui-colorpicker-bar-layer-3">&nbsp;</span><span class="ui-colorpicker-bar-layer-4">&nbsp;</span>';
                if (c.options.alpha) {
                    h += '<span class="ui-colorpicker-bar-layer-alpha">&nbsp;</span><span class="ui-colorpicker-bar-layer-alphabar">&nbsp;</span>'
                }
                h += '<span class="ui-colorpicker-bar-layer-pointer"><span class="ui-colorpicker-bar-pointer"></span></span></div>';
                return h
            };
            this.update = function () {
                switch (c.mode) {
                    case"h":
                    case"s":
                    case"v":
                    case"r":
                    case"g":
                    case"b":
                        v(".ui-colorpicker-bar-layer-alpha", b).show();
                        v(".ui-colorpicker-bar-layer-alphabar", b).hide();
                        break;
                    case"a":
                        v(".ui-colorpicker-bar-layer-alpha", b).hide();
                        v(".ui-colorpicker-bar-layer-alphabar", b).show();
                        break
                }
                switch (c.mode) {
                    case"h":
                        v(".ui-colorpicker-bar-layer-1", b).css({
                            "background-position": "0 0",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-bar-layer-2", b).hide();
                        v(".ui-colorpicker-bar-layer-3", b).hide();
                        v(".ui-colorpicker-bar-layer-4", b).hide();
                        break;
                    case"s":
                        v(".ui-colorpicker-bar-layer-1", b).css({
                            "background-position": "0 -260px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-bar-layer-2", b).css({
                            "background-position": "0 -520px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-bar-layer-3", b).hide();
                        v(".ui-colorpicker-bar-layer-4", b).hide();
                        break;
                    case"v":
                        v(".ui-colorpicker-bar-layer-1", b).css({
                            "background-position": "0 -520px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-bar-layer-2", b).hide();
                        v(".ui-colorpicker-bar-layer-3", b).hide();
                        v(".ui-colorpicker-bar-layer-4", b).hide();
                        break;
                    case"r":
                        v(".ui-colorpicker-bar-layer-1", b).css({
                            "background-position": "0 -1560px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-bar-layer-2", b).css({
                            "background-position": "0 -1300px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-bar-layer-3", b).css({
                            "background-position": "0 -780px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-bar-layer-4", b).css({
                            "background-position": "0 -1040px",
                            opacity: ""
                        }).show();
                        break;
                    case"g":
                        v(".ui-colorpicker-bar-layer-1", b).css({
                            "background-position": "0 -2600px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-bar-layer-2", b).css({
                            "background-position": "0 -2340px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-bar-layer-3", b).css({
                            "background-position": "0 -1820px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-bar-layer-4", b).css({
                            "background-position": "0 -2080px",
                            opacity: ""
                        }).show();
                        break;
                    case"b":
                        v(".ui-colorpicker-bar-layer-1", b).css({
                            "background-position": "0 -3640px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-bar-layer-2", b).css({
                            "background-position": "0 -3380px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-bar-layer-3", b).css({
                            "background-position": "0 -2860px",
                            opacity: ""
                        }).show();
                        v(".ui-colorpicker-bar-layer-4", b).css({
                            "background-position": "0 -3120px",
                            opacity: ""
                        }).show();
                        break;
                    case"a":
                        v(".ui-colorpicker-bar-layer-1", b).hide();
                        v(".ui-colorpicker-bar-layer-2", b).hide();
                        v(".ui-colorpicker-bar-layer-3", b).hide();
                        v(".ui-colorpicker-bar-layer-4", b).hide();
                        break
                }
                d.repaint()
            };
            this.repaint = function () {
                var h = v(".ui-colorpicker-bar-layer-pointer", b), k = 0;
                switch (c.mode) {
                    case"h":
                        k = (1 - c.color.getHSV().h) * h.height();
                        break;
                    case"s":
                        k = (1 - c.color.getHSV().s) * h.height();
                        v(".ui-colorpicker-bar-layer-2", b).css("opacity", 1 - c.color.getHSV().v);
                        v(b).css("background-color", c.color.copy().normalize().toCSS());
                        break;
                    case"v":
                        k = (1 - c.color.getHSV().v) * h.height();
                        v(b).css("background-color", c.color.copy().normalize().toCSS());
                        break;
                    case"r":
                        k = (1 - c.color.getRGB().r) * h.height();
                        v(".ui-colorpicker-bar-layer-2", b).css("opacity", Math.max(0, (c.color.getRGB().b - c.color.getRGB().g)));
                        v(".ui-colorpicker-bar-layer-3", b).css("opacity", Math.max(0, (c.color.getRGB().g - c.color.getRGB().b)));
                        v(".ui-colorpicker-bar-layer-4", b).css("opacity", Math.min(c.color.getRGB().b, c.color.getRGB().g));
                        break;
                    case"g":
                        k = (1 - c.color.getRGB().g) * h.height();
                        v(".ui-colorpicker-bar-layer-2", b).css("opacity", Math.max(0, (c.color.getRGB().b - c.color.getRGB().r)));
                        v(".ui-colorpicker-bar-layer-3", b).css("opacity", Math.max(0, (c.color.getRGB().r - c.color.getRGB().b)));
                        v(".ui-colorpicker-bar-layer-4", b).css("opacity", Math.min(c.color.getRGB().r, c.color.getRGB().b));
                        break;
                    case"b":
                        k = (1 - c.color.getRGB().b) * h.height();
                        v(".ui-colorpicker-bar-layer-2", b).css("opacity", Math.max(0, (c.color.getRGB().r - c.color.getRGB().g)));
                        v(".ui-colorpicker-bar-layer-3", b).css("opacity", Math.max(0, (c.color.getRGB().g - c.color.getRGB().r)));
                        v(".ui-colorpicker-bar-layer-4", b).css("opacity", Math.min(c.color.getRGB().r, c.color.getRGB().g));
                        break;
                    case"a":
                        k = (1 - c.color.getAlpha()) * h.height();
                        v(b).css("background-color", c.color.copy().normalize().toCSS());
                        break
                }
                if (c.mode !== "a") {
                    v(".ui-colorpicker-bar-layer-alpha", b).css("opacity", 1 - c.color.getAlpha())
                }
                v(".ui-colorpicker-bar-pointer", b).css("top", k - 3)
            };
            this.init = function () {
                b = v(a()).appendTo(v(".ui-colorpicker-bar-container", c.dialog));
                b.bind("mousedown", g)
            }
        }, preview: function (c) {
            var d = this, b = null, a;
            a = function () {
                return '<div class="ui-colorpicker-preview ui-colorpicker-border"><div class="ui-colorpicker-preview-initial"><div class="ui-colorpicker-preview-initial-alpha"></div></div><div class="ui-colorpicker-preview-current"><div class="ui-colorpicker-preview-current-alpha"></div></div></div>'
            };
            this.init = function () {
                b = v(a()).appendTo(v(".ui-colorpicker-preview-container", c.dialog));
                v(".ui-colorpicker-preview-initial", b).click(function () {
                    c.color = c.currentColor.copy();
                    c._change()
                })
            };
            this.update = function () {
                if (c.options.alpha) {
                    v(".ui-colorpicker-preview-initial-alpha, .ui-colorpicker-preview-current-alpha", b).show()
                } else {
                    v(".ui-colorpicker-preview-initial-alpha, .ui-colorpicker-preview-current-alpha", b).hide()
                }
                this.repaint()
            };
            this.repaint = function () {
                v(".ui-colorpicker-preview-initial", b).css("background-color", c.currentColor.toCSS()).attr("title", c.currentColor.toHex());
                v(".ui-colorpicker-preview-initial-alpha", b).css("opacity", 1 - c.currentColor.getAlpha());
                v(".ui-colorpicker-preview-current", b).css("background-color", c.color.toCSS()).attr("title", c.color.toHex());
                v(".ui-colorpicker-preview-current-alpha", b).css("opacity", 1 - c.color.getAlpha())
            }
        }, hsv: function (c) {
            var d = this, b = null, a;
            a = function () {
                var e = "";
                if (c.options.hsv) {
                    e += '<div class="ui-colorpicker-hsv-h"><input class="ui-colorpicker-mode" type="radio" value="h"/><label>' + c._getRegional("hsvH") + '</label><input class="ui-colorpicker-number" type="number" min="0" max="360" size="10"/><span class="ui-colorpicker-unit">&deg;</span></div><div class="ui-colorpicker-hsv-s"><input class="ui-colorpicker-mode" type="radio" value="s"/><label>' + c._getRegional("hsvS") + '</label><input class="ui-colorpicker-number" type="number" min="0" max="100" size="10"/><span class="ui-colorpicker-unit">%</span></div><div class="ui-colorpicker-hsv-v"><input class="ui-colorpicker-mode" type="radio" value="v"/><label>' + c._getRegional("hsvV") + '</label><input class="ui-colorpicker-number" type="number" min="0" max="100" size="10"/><span class="ui-colorpicker-unit">%</span></div>'
                }
                return '<div class="ui-colorpicker-hsv">' + e + "</div>"
            };
            this.init = function () {
                b = v(a()).appendTo(v(".ui-colorpicker-hsv-container", c.dialog));
                v(".ui-colorpicker-mode", b).click(function () {
                    c.mode = v(this).val();
                    c._updateAllParts()
                });
                v(".ui-colorpicker-number", b).bind("change keyup", function () {
                    c.color.setHSV(v(".ui-colorpicker-hsv-h .ui-colorpicker-number", b).val() / 360, v(".ui-colorpicker-hsv-s .ui-colorpicker-number", b).val() / 100, v(".ui-colorpicker-hsv-v .ui-colorpicker-number", b).val() / 100);
                    c._change()
                })
            };
            this.repaint = function () {
                var e = c.color.getHSV();
                e.h *= 360;
                e.s *= 100;
                e.v *= 100;
                v.each(e, function (g, f) {
                    var h = v(".ui-colorpicker-hsv-" + g + " .ui-colorpicker-number", b);
                    f = Math.round(f);
                    if (h.val() !== f) {
                        h.val(f)
                    }
                })
            };
            this.update = function () {
                v(".ui-colorpicker-mode", b).each(function () {
                    v(this).attr("checked", v(this).val() === c.mode)
                });
                this.repaint()
            }
        }, rgb: function (c) {
            var d = this, b = null, a;
            a = function () {
                var e = "";
                if (c.options.rgb) {
                    e += '<div class="ui-colorpicker-rgb-r"><input class="ui-colorpicker-mode" type="radio" value="r"/><label>' + c._getRegional("rgbR") + '</label><input class="ui-colorpicker-number" type="number" min="0" max="255"/></div><div class="ui-colorpicker-rgb-g"><input class="ui-colorpicker-mode" type="radio" value="g"/><label>' + c._getRegional("rgbG") + '</label><input class="ui-colorpicker-number" type="number" min="0" max="255"/></div><div class="ui-colorpicker-rgb-b"><input class="ui-colorpicker-mode" type="radio" value="b"/><label>' + c._getRegional("rgbB") + '</label><input class="ui-colorpicker-number" type="number" min="0" max="255"/></div>'
                }
                return '<div class="ui-colorpicker-rgb">' + e + "</div>"
            };
            this.init = function () {
                b = v(a()).appendTo(v(".ui-colorpicker-rgb-container", c.dialog));
                v(".ui-colorpicker-mode", b).click(function () {
                    c.mode = v(this).val();
                    c._updateAllParts()
                });
                v(".ui-colorpicker-number", b).bind("change keyup", function () {
                    c.color.setRGB(v(".ui-colorpicker-rgb-r .ui-colorpicker-number", b).val() / 255, v(".ui-colorpicker-rgb-g .ui-colorpicker-number", b).val() / 255, v(".ui-colorpicker-rgb-b .ui-colorpicker-number", b).val() / 255);
                    c._change()
                })
            };
            this.repaint = function () {
                v.each(c.color.getRGB(), function (f, e) {
                    var g = v(".ui-colorpicker-rgb-" + f + " .ui-colorpicker-number", b);
                    e = Math.round(e * 255);
                    if (g.val() !== e) {
                        g.val(e)
                    }
                })
            };
            this.update = function () {
                v(".ui-colorpicker-mode", b).each(function () {
                    v(this).attr("checked", v(this).val() === c.mode)
                });
                this.repaint()
            }
        }, lab: function (b) {
            var c = this, a = null, d = function () {
                var e = "";
                if (b.options.hsv) {
                    e += '<div class="ui-colorpicker-lab-l"><label>' + b._getRegional("labL") + '</label><input class="ui-colorpicker-number" type="number" min="0" max="100"/></div><div class="ui-colorpicker-lab-a"><label>' + b._getRegional("labA") + '</label><input class="ui-colorpicker-number" type="number" min="-128" max="127"/></div><div class="ui-colorpicker-lab-b"><label>' + b._getRegional("labB") + '</label><input class="ui-colorpicker-number" type="number" min="-128" max="127"/></div>'
                }
                return '<div class="ui-colorpicker-lab">' + e + "</div>"
            };
            this.init = function () {
                var e = 0;
                a = v(d()).appendTo(v(".ui-colorpicker-lab-container", b.dialog));
                v(".ui-colorpicker-number", a).on("change keyup", function (f) {
                    b.color.setLAB(parseInt(v(".ui-colorpicker-lab-l .ui-colorpicker-number", a).val(), 10) / 100, (parseInt(v(".ui-colorpicker-lab-a .ui-colorpicker-number", a).val(), 10) + 128) / 255, (parseInt(v(".ui-colorpicker-lab-b .ui-colorpicker-number", a).val(), 10) + 128) / 255);
                    b._change()
                })
            };
            this.repaint = function () {
                var e = b.color.getLAB();
                e.l *= 100;
                e.a = (e.a * 255) - 128;
                e.b = (e.b * 255) - 128;
                v.each(e, function (g, f) {
                    var h = v(".ui-colorpicker-lab-" + g + " .ui-colorpicker-number", a);
                    f = Math.round(f);
                    if (h.val() !== f) {
                        h.val(f)
                    }
                })
            };
            this.update = function () {
                this.repaint()
            }
        }, cmyk: function (b) {
            var c = this, a = null, d = function () {
                var e = "";
                if (b.options.hsv) {
                    e += '<div class="ui-colorpicker-cmyk-c"><label>' + b._getRegional("cmykC") + '</label><input class="ui-colorpicker-number" type="number" min="0" max="100"/><span class="ui-colorpicker-unit">%</span></div><div class="ui-colorpicker-cmyk-m"><label>' + b._getRegional("cmykM") + '</label><input class="ui-colorpicker-number" type="number" min="0" max="100"/><span class="ui-colorpicker-unit">%</span></div><div class="ui-colorpicker-cmyk-y"><label>' + b._getRegional("cmykY") + '</label><input class="ui-colorpicker-number" type="number" min="0" max="100"/><span class="ui-colorpicker-unit">%</span></div><div class="ui-colorpicker-cmyk-k"><label>' + b._getRegional("cmykK") + '</label><input class="ui-colorpicker-number" type="number" min="0" max="100"/><span class="ui-colorpicker-unit">%</span></div>'
                }
                return '<div class="ui-colorpicker-cmyk">' + e + "</div>"
            };
            this.init = function () {
                a = v(d()).appendTo(v(".ui-colorpicker-cmyk-container", b.dialog));
                v(".ui-colorpicker-number", a).on("change keyup", function (e) {
                    b.color.setCMYK(parseInt(v(".ui-colorpicker-cmyk-c .ui-colorpicker-number", a).val(), 10) / 100, parseInt(v(".ui-colorpicker-cmyk-m .ui-colorpicker-number", a).val(), 10) / 100, parseInt(v(".ui-colorpicker-cmyk-y .ui-colorpicker-number", a).val(), 10) / 100, parseInt(v(".ui-colorpicker-cmyk-k .ui-colorpicker-number", a).val(), 10) / 100);
                    b._change()
                })
            };
            this.repaint = function () {
                v.each(b.color.getCMYK(), function (f, e) {
                    var g = v(".ui-colorpicker-cmyk-" + f + " .ui-colorpicker-number", a);
                    e = Math.round(e * 100);
                    if (g.val() !== e) {
                        g.val(e)
                    }
                })
            };
            this.update = function () {
                this.repaint()
            }
        }, alpha: function (c) {
            var d = this, b = null, a;
            a = function () {
                var e = "";
                if (c.options.alpha) {
                    e += '<div class="ui-colorpicker-a"><input class="ui-colorpicker-mode" name="mode" type="radio" value="a"/><label>' + c._getRegional("alphaA") + '</label><input class="ui-colorpicker-number" type="number" min="0" max="100"/><span class="ui-colorpicker-unit">%</span></div>'
                }
                return '<div class="ui-colorpicker-alpha">' + e + "</div>"
            };
            this.init = function () {
                b = v(a()).appendTo(v(".ui-colorpicker-alpha-container", c.dialog));
                v(".ui-colorpicker-mode", b).click(function () {
                    c.mode = v(this).val();
                    c._updateAllParts()
                });
                v(".ui-colorpicker-number", b).bind("change keyup", function () {
                    c.color.setAlpha(v(".ui-colorpicker-a .ui-colorpicker-number", b).val() / 100);
                    c._change()
                })
            };
            this.update = function () {
                v(".ui-colorpicker-mode", b).each(function () {
                    v(this).attr("checked", v(this).val() === c.mode)
                });
                this.repaint()
            };
            this.repaint = function () {
                var f = v(".ui-colorpicker-a .ui-colorpicker-number", b), e = Math.round(c.color.getAlpha() * 100);
                if (!f.is(":focus") && f.val() !== e) {
                    f.val(e)
                }
            }
        }, hex: function (c) {
            var d = this, b = null, a;
            a = function () {
                var e = "";
                if (c.options.alpha) {
                    e += '<input class="ui-colorpicker-hex-alpha" type="text" maxlength="2" size="2"/>'
                }
                e += '<input class="ui-colorpicker-hex-input" type="text" maxlength="6" size="6"/>';
                return '<div class="ui-colorpicker-hex"><label>#</label>' + e + "</div>"
            };
            this.init = function () {
                b = v(a()).appendTo(v(".ui-colorpicker-hex-container", c.dialog));
                v(".ui-colorpicker-hex-input", b).bind("change keydown keyup", function (f, g, e) {
                    if (/[^a-fA-F0-9]/.test(v(this).val())) {
                        v(this).val(v(this).val().replace(/[^a-fA-F0-9]/, ""))
                    }
                });
                v(".ui-colorpicker-hex-input", b).bind("change keyup", function () {
                    c.color = r(v(this).val()).setAlpha(c.color.getAlpha());
                    c._change()
                });
                v(".ui-colorpicker-hex-alpha", b).bind("change keydown keyup", function () {
                    if (/[^a-fA-F0-9]/.test(v(this).val())) {
                        v(this).val(v(this).val().replace(/[^a-fA-F0-9]/, ""))
                    }
                });
                v(".ui-colorpicker-hex-alpha", b).bind("change keyup", function () {
                    c.color.setAlpha(parseInt(v(".ui-colorpicker-hex-alpha", b).val(), 16) / 255);
                    c._change()
                })
            };
            this.update = function () {
                this.repaint()
            };
            this.repaint = function () {
                if (!v(".ui-colorpicker-hex-input", b).is(":focus")) {
                    v(".ui-colorpicker-hex-input", b).val(c.color.toHex(true))
                }
                if (!v(".ui-colorpicker-hex-alpha", b).is(":focus")) {
                    v(".ui-colorpicker-hex-alpha", b).val(o(c.color.getAlpha() * 255))
                }
            }
        }, swatches: function (b) {
            var c = this, a = null, d = function () {
                var e = "";
                v.each(b._getSwatches(), function (h, k) {
                    var f = new w(k.r, k.g, k.b), g = f.toCSS();
                    e += '<div class="ui-colorpicker-swatch" style="background-color:' + g + '" title="' + h + '"></div>'
                });
                return '<div class="ui-colorpicker-swatches ui-colorpicker-border" style="width:' + b.options.swatchesWidth + 'px">' + e + "</div>"
            };
            this.init = function () {
                a = v(d()).appendTo(v(".ui-colorpicker-swatches-container", b.dialog));
                v(".ui-colorpicker-swatch", a).click(function () {
                    b.color = b._parseColor(v(this).css("background-color"));
                    b._change()
                })
            }
        }, footer: function (b) {
            var c = this, e = null, a = "ui-colorpicker-special-transparent-" + m, f = "ui-colorpicker-special-none-" + m, d = function () {
                var g = "";
                if (b.options.alpha || (!b.inline && b.options.showNoneButton)) {
                    g += '<div class="ui-colorpicker-buttonset">';
                    if (b.options.alpha) {
                        g += '<input type="radio" name="ui-colorpicker-special" id="' + a + '" class="ui-colorpicker-special-transparent"/><label for="' + a + '">' + b._getRegional("transparent") + "</label>"
                    }
                    if (!b.inline && b.options.showNoneButton) {
                        g += '<input type="radio" name="ui-colorpicker-special" id="' + f + '" class="ui-colorpicker-special-none"><label for="' + f + '">' + b._getRegional("none") + "</label>"
                    }
                    g += "</div>"
                }
                if (!b.inline) {
                    g += '<div class="ui-dialog-buttonset">';
                    if (b.options.showCancelButton) {
                        g += '<button class="ui-colorpicker-cancel">' + b._getRegional("cancel") + "</button>"
                    }
                    g += '<button class="ui-colorpicker-ok">' + b._getRegional("ok") + "</button>";
                    g += "</div>"
                }
                return '<div class="ui-dialog-buttonpane ui-widget-content">' + g + "</div>"
            };
            this.init = function () {
                e = v(d()).appendTo(b.dialog);
                v(".ui-colorpicker-ok", e).button().click(function () {
                    b.close()
                });
                v(".ui-colorpicker-cancel", e).button().click(function () {
                    b.color = b.currentColor.copy();
                    b._change(b.color.set);
                    b.close()
                });
                v(".ui-colorpicker-buttonset", e).buttonset();
                v(".ui-colorpicker-special-color", e).click(function () {
                    b._change()
                });
                v("#" + f, e).click(function () {
                    b._change(false)
                });
                v("#" + a, e).click(function () {
                    b.color.setAlpha(0);
                    b._change()
                })
            };
            this.repaint = function () {
                if (!b.color.set) {
                    v(".ui-colorpicker-special-none", e).attr("checked", true).button("refresh")
                } else {
                    if (b.color.getAlpha() == 0) {
                        v(".ui-colorpicker-special-transparent", e).attr("checked", true).button("refresh")
                    } else {
                        v("input", e).attr("checked", false).button("refresh")
                    }
                }
                v(".ui-colorpicker-cancel", e).button(b.changed ? "enable" : "disable")
            };
            this.update = function () {
            }
        }
    }, w = function () {
        var F = {
            rgb: {r: 0, g: 0, b: 0},
            hsv: {h: 0, s: 0, v: 0},
            hsl: {h: 0, s: 0, l: 0},
            lab: {l: 0, a: 0, b: 0},
            cmyk: {c: 0, m: 0, y: 0, k: 1}
        }, c = 1, h = arguments, L = function (x) {
            if (isNaN(x) || x === null) {
                return 0
            }
            if (typeof x == "string") {
                x = parseInt(x, 10)
            }
            return Math.max(0, Math.min(x, 1))
        }, J = function (y) {
            var x = "0123456789abcdef", A = y % 16, B = (y - A) / 16, C = x.charAt(B) + x.charAt(A);
            return C
        }, b = function (A) {
            var x = (A.r > 0.04045) ? Math.pow((A.r + 0.055) / 1.055, 2.4) : A.r / 12.92, y = (A.g > 0.04045) ? Math.pow((A.g + 0.055) / 1.055, 2.4) : A.g / 12.92, B = (A.b > 0.04045) ? Math.pow((A.b + 0.055) / 1.055, 2.4) : A.b / 12.92;
            return {
                x: x * 0.4124 + y * 0.3576 + B * 0.1805,
                y: x * 0.2126 + y * 0.7152 + B * 0.0722,
                z: x * 0.0193 + y * 0.1192 + B * 0.9505
            }
        }, d = function (y) {
            var x = {
                r: y.x * 3.2406 + y.y * -1.5372 + y.z * -0.4986,
                g: y.x * -0.9689 + y.y * 1.8758 + y.z * 0.0415,
                b: y.x * 0.0557 + y.y * -0.204 + y.z * 1.057
            };
            x.r = (x.r > 0.0031308) ? 1.055 * Math.pow(x.r, (1 / 2.4)) - 0.055 : 12.92 * x.r;
            x.g = (x.g > 0.0031308) ? 1.055 * Math.pow(x.g, (1 / 2.4)) - 0.055 : 12.92 * x.g;
            x.b = (x.b > 0.0031308) ? 1.055 * Math.pow(x.b, (1 / 2.4)) - 0.055 : 12.92 * x.b;
            return x
        }, k = function (C) {
            var E = Math.min(C.r, C.g, C.b), N = Math.max(C.r, C.g, C.b), x = N - E, A, B, y, D = {
                h: 0,
                s: 0,
                v: N
            };
            if (x === 0) {
                D.h = 0;
                D.s = 0
            } else {
                D.s = x / N;
                A = (((N - C.r) / 6) + (x / 2)) / x;
                B = (((N - C.g) / 6) + (x / 2)) / x;
                y = (((N - C.b) / 6) + (x / 2)) / x;
                if (C.r === N) {
                    D.h = y - B
                } else {
                    if (C.g === N) {
                        D.h = (1 / 3) + A - y
                    } else {
                        if (C.b === N) {
                            D.h = (2 / 3) + B - A
                        }
                    }
                }
                if (D.h < 0) {
                    D.h += 1
                } else {
                    if (D.h > 1) {
                        D.h -= 1
                    }
                }
            }
            return D
        }, f = function (x) {
            var y = {r: 0, g: 0, b: 0}, A, C, B, D, E;
            if (x.s === 0) {
                y.r = y.g = y.b = x.v
            } else {
                A = x.h === 1 ? 0 : x.h * 6;
                C = Math.floor(A);
                B = x.v * (1 - x.s);
                D = x.v * (1 - x.s * (A - C));
                E = x.v * (1 - x.s * (1 - (A - C)));
                if (C === 0) {
                    y.r = x.v;
                    y.g = E;
                    y.b = B
                } else {
                    if (C === 1) {
                        y.r = D;
                        y.g = x.v;
                        y.b = B
                    } else {
                        if (C === 2) {
                            y.r = B;
                            y.g = x.v;
                            y.b = E
                        } else {
                            if (C === 3) {
                                y.r = B;
                                y.g = D;
                                y.b = x.v
                            } else {
                                if (C === 4) {
                                    y.r = E;
                                    y.g = B;
                                    y.b = x.v
                                } else {
                                    y.r = x.v;
                                    y.g = B;
                                    y.b = D
                                }
                            }
                        }
                    }
                }
            }
            return y
        }, I = function (C) {
            var E = Math.min(C.r, C.g, C.b), N = Math.max(C.r, C.g, C.b), x = N - E, A, B, y, D = {
                h: 0,
                s: 0,
                l: (N + E) / 2
            };
            if (x === 0) {
                D.h = 0;
                D.s = 0
            } else {
                D.s = D.l < 0.5 ? x / (N + E) : x / (2 - N - E);
                A = (((N - C.r) / 6) + (x / 2)) / x;
                B = (((N - C.g) / 6) + (x / 2)) / x;
                y = (((N - C.b) / 6) + (x / 2)) / x;
                if (C.r === N) {
                    D.h = y - B
                } else {
                    if (C.g === N) {
                        D.h = (1 / 3) + A - y
                    } else {
                        if (C.b === N) {
                            D.h = (2 / 3) + B - A
                        }
                    }
                }
                if (D.h < 0) {
                    D.h += 1
                } else {
                    if (D.h > 1) {
                        D.h -= 1
                    }
                }
            }
            return D
        }, G = function (y) {
            var A, B, x = function (C, D, E) {
                if (E < 0) {
                    E += 1
                }
                if (E > 1) {
                    E -= 1
                }
                if ((6 * E) < 1) {
                    return C + (D - C) * 6 * E
                }
                if ((2 * E) < 1) {
                    return D
                }
                if ((3 * E) < 2) {
                    return C + (D - C) * ((2 / 3) - E) * 6
                }
                return C
            };
            if (y.s === 0) {
                return {r: y.l, g: y.l, b: y.l}
            }
            B = (y.l < 0.5) ? y.l * (1 + y.s) : (y.l + y.s) - (y.s * y.l);
            A = 2 * y.l - B;
            return {
                r: x(A, B, y.h + (1 / 3)),
                g: x(A, B, y.h),
                b: x(A, B, y.h - (1 / 3))
            }
        }, l = function (A) {
            var B = A.x / 0.95047, x = A.y, y = A.z / 1.08883;
            B = (B > 0.008856) ? Math.pow(B, (1 / 3)) : (7.787 * B) + (16 / 116);
            x = (x > 0.008856) ? Math.pow(x, (1 / 3)) : (7.787 * x) + (16 / 116);
            y = (y > 0.008856) ? Math.pow(y, (1 / 3)) : (7.787 * y) + (16 / 116);
            return {
                l: ((116 * x) - 16) / 100,
                a: ((500 * (B - x)) + 128) / 255,
                b: ((200 * (x - y)) + 128) / 255
            }
        }, K = function (y) {
            var x = {
                l: y.l * 100,
                a: (y.a * 255) - 128,
                b: (y.b * 255) - 128
            }, A = {x: 0, y: (x.l + 16) / 116, z: 0};
            A.x = x.a / 500 + A.y;
            A.z = A.y - x.b / 200;
            A.x = (Math.pow(A.x, 3) > 0.008856) ? Math.pow(A.x, 3) : (A.x - 16 / 116) / 7.787;
            A.y = (Math.pow(A.y, 3) > 0.008856) ? Math.pow(A.y, 3) : (A.y - 16 / 116) / 7.787;
            A.z = (Math.pow(A.z, 3) > 0.008856) ? Math.pow(A.z, 3) : (A.z - 16 / 116) / 7.787;
            A.x *= 0.95047;
            A.y *= 1;
            A.z *= 1.08883;
            return A
        }, a = function (x) {
            return {c: 1 - (x.r), m: 1 - (x.g), y: 1 - (x.b)}
        }, H = function (x) {
            return {r: 1 - (x.c), g: 1 - (x.m), b: 1 - (x.y)}
        }, e = function (x) {
            var y = 1;
            if (x.c < y) {
                y = x.c
            }
            if (x.m < y) {
                y = x.m
            }
            if (x.y < y) {
                y = x.y
            }
            if (y == 1) {
                return {c: 0, m: 0, y: 0, k: 1}
            }
            return {
                c: (x.c - y) / (1 - y),
                m: (x.m - y) / (1 - y),
                y: (x.y - y) / (1 - y),
                k: y
            }
        }, g = function (x) {
            return {
                c: x.c * (1 - x.k) + x.k,
                m: x.m * (1 - x.k) + x.k,
                y: x.y * (1 - x.k) + x.k
            }
        };
        this.set = true;
        this.setAlpha = function (x) {
            if (x !== null) {
                c = L(x)
            }
            return this
        };
        this.getAlpha = function () {
            return c
        };
        this.setRGB = function (x, y, A) {
            F = {rgb: this.getRGB()};
            if (x !== null) {
                F.rgb.r = L(x)
            }
            if (y !== null) {
                F.rgb.g = L(y)
            }
            if (A !== null) {
                F.rgb.b = L(A)
            }
            return this
        };
        this.setHSV = function (x, y, A) {
            F = {hsv: this.getHSV()};
            if (x !== null) {
                F.hsv.h = L(x)
            }
            if (y !== null) {
                F.hsv.s = L(y)
            }
            if (A !== null) {
                F.hsv.v = L(A)
            }
            return this
        };
        this.setHSL = function (x, y, A) {
            F = {hsl: this.getHSL()};
            if (x !== null) {
                F.hsl.h = L(x)
            }
            if (y !== null) {
                F.hsl.s = L(y)
            }
            if (A !== null) {
                F.hsl.l = L(A)
            }
            return this
        };
        this.setLAB = function (x, y, A) {
            F = {lab: this.getLAB()};
            if (x !== null) {
                F.lab.l = L(x)
            }
            if (y !== null) {
                F.lab.a = L(y)
            }
            if (A !== null) {
                F.lab.b = L(A)
            }
            return this
        };
        this.setCMYK = function (x, B, y, A) {
            F = {cmyk: this.getCMYK()};
            if (x !== null) {
                F.cmyk.c = L(x)
            }
            if (B !== null) {
                F.cmyk.m = L(B)
            }
            if (y !== null) {
                F.cmyk.y = L(y)
            }
            if (A !== null) {
                F.cmyk.k = L(A)
            }
            return this
        };
        this.getRGB = function () {
            if (!F.rgb) {
                F.rgb = F.lab ? d(K(F.lab)) : F.hsv ? f(F.hsv) : F.hsl ? G(F.hsl) : F.cmyk ? H(g(F.cmyk)) : {
                    r: 0,
                    g: 0,
                    b: 0
                };
                F.rgb.r = L(F.rgb.r);
                F.rgb.g = L(F.rgb.g);
                F.rgb.b = L(F.rgb.b)
            }
            return v.extend({}, F.rgb)
        };
        this.getHSV = function () {
            if (!F.hsv) {
                F.hsv = F.lab ? k(this.getRGB()) : F.rgb ? k(F.rgb) : F.hsl ? k(this.getRGB()) : F.cmyk ? k(this.getRGB()) : {
                    h: 0,
                    s: 0,
                    v: 0
                };
                F.hsv.h = L(F.hsv.h);
                F.hsv.s = L(F.hsv.s);
                F.hsv.v = L(F.hsv.v)
            }
            return v.extend({}, F.hsv)
        };
        this.getHSL = function () {
            if (!F.hsl) {
                F.hsl = F.rgb ? I(F.rgb) : F.hsv ? I(this.getRGB()) : F.cmyk ? I(this.getRGB()) : F.hsv ? I(this.getRGB()) : {
                    h: 0,
                    s: 0,
                    l: 0
                };
                F.hsl.h = L(F.hsl.h);
                F.hsl.s = L(F.hsl.s);
                F.hsl.l = L(F.hsl.l)
            }
            return v.extend({}, F.hsl)
        };
        this.getCMYK = function () {
            if (!F.cmyk) {
                F.cmyk = F.rgb ? e(a(F.rgb)) : F.hsv ? e(a(this.getRGB())) : F.hsl ? e(a(this.getRGB())) : F.lab ? e(a(this.getRGB())) : {
                    c: 0,
                    m: 0,
                    y: 0,
                    k: 1
                };
                F.cmyk.c = L(F.cmyk.c);
                F.cmyk.m = L(F.cmyk.m);
                F.cmyk.y = L(F.cmyk.y);
                F.cmyk.k = L(F.cmyk.k)
            }
            return v.extend({}, F.cmyk)
        };
        this.getLAB = function () {
            if (!F.lab) {
                F.lab = F.rgb ? l(b(F.rgb)) : F.hsv ? l(b(this.getRGB())) : F.hsl ? l(b(this.getRGB())) : F.cmyk ? l(b(this.getRGB())) : {
                    l: 0,
                    a: 0,
                    b: 0
                };
                F.lab.l = L(F.lab.l);
                F.lab.a = L(F.lab.a);
                F.lab.b = L(F.lab.b)
            }
            return v.extend({}, F.lab)
        };
        this.getChannels = function () {
            return {
                r: this.getRGB().r,
                g: this.getRGB().g,
                b: this.getRGB().b,
                a: this.getAlpha(),
                h: this.getHSV().h,
                s: this.getHSV().s,
                v: this.getHSV().v,
                c: this.getCMYK().c,
                m: this.getCMYK().m,
                y: this.getCMYK().y,
                k: this.getCMYK().k,
                L: this.getLAB().l,
                A: this.getLAB().a,
                B: this.getLAB().b
            }
        };
        this.getSpaces = function () {
            return v.extend(true, {}, F)
        };
        this.setSpaces = function (x) {
            F = x;
            return this
        };
        this.distance = function (B) {
            var y = "lab", D = "get" + y.toUpperCase(), C = this[D](), E = B[D](), x = 0, A;
            for (A in C) {
                x += Math.pow(C[A] - E[A], 2)
            }
            return x
        };
        this.equals = function (x) {
            var y = this.getRGB(), A = x.getRGB();
            return this.getAlpha() == x.getAlpha() && y.r == A.r && y.g == A.g && y.b == A.b
        };
        this.limit = function (y) {
            y -= 1;
            var x = this.getRGB();
            this.setRGB(Math.round(x.r * y) / y, Math.round(x.g * y) / y, Math.round(x.b * y) / y)
        };
        this.toHex = function () {
            var x = this.getRGB();
            return J(x.r * 255) + J(x.g * 255) + J(x.b * 255)
        };
        this.toCSS = function () {
            return "#" + this.toHex()
        };
        this.normalize = function () {
            this.setHSV(null, 1, 1);
            return this
        };
        this.copy = function () {
            var x = this.getSpaces(), y = this.getAlpha();
            return new w(x, y)
        };
        if (h.length == 2) {
            this.setSpaces(h[0]);
            this.setAlpha(h[1] === 0 ? 0 : h[1] || 1)
        }
        if (h.length > 2) {
            this.setRGB(h[0], h[1], h[2]);
            this.setAlpha(h[3] === 0 ? 0 : h[3] || 1)
        }
    };
    v.widget("vanderlee.colorpicker", {
        options: {
            alpha: false,
            altAlpha: true,
            altField: "",
            altOnChange: true,
            altProperties: "background-color",
            autoOpen: false,
            buttonColorize: false,
            buttonImage: "images/ui-colorpicker.png",
            buttonImageOnly: false,
            buttonText: null,
            closeOnEscape: true,
            closeOnOutside: true,
            color: "#00FF00",
            colorFormat: "HEX",
            draggable: true,
            duration: "fast",
            hsv: true,
            inline: true,
            layout: {
                map: [0, 0, 1, 5],
                bar: [1, 0, 1, 5],
                preview: [2, 0, 1, 1],
                hsv: [2, 1, 1, 1],
                rgb: [2, 2, 1, 1],
                alpha: [2, 3, 1, 1],
                hex: [2, 4, 1, 1],
                lab: [3, 1, 1, 1],
                cmyk: [3, 2, 1, 2],
                swatches: [4, 0, 1, 5]
            },
            limit: "",
            modal: false,
            mode: "h",
            parts: "",
            regional: "",
            rgb: true,
            showAnim: "fadeIn",
            showCancelButton: true,
            showNoneButton: false,
            showCloseButton: true,
            showOn: "focus",
            showOptions: {},
            swatches: null,
            swatchesWidth: 84,
            title: null,
            close: null,
            init: null,
            select: null,
            open: null
        }, _create: function () {
            var a = this, b;
            ++m;
            a.widgetEventPrefix = "color";
            a.opened = false;
            a.generated = false;
            a.inline = false;
            a.changed = false;
            a.dialog = null;
            a.button = null;
            a.image = null;
            a.overlay = null;
            a.mode = a.options.mode;
            if (this.element[0].nodeName.toLowerCase() === "input" || !a.options.inline) {
                a._setColor(a.element.val());
                this._callback("init");
                v("body").append(u);
                a.dialog = v(".ui-colorpicker:last");
                v(document).delegate("html", "touchstart click", function (d) {
                    if (!a.opened || d.target === a.element[0] || a.overlay) {
                        return
                    }
                    if (a.dialog.is(d.target) || a.dialog.has(d.target).length > 0) {
                        a.element.blur();
                        return
                    }
                    var c, e = v(d.target).parents();
                    for (c = 0; c <= e.length; ++c) {
                        if (a.button !== null && e[c] === a.button[0]) {
                            return
                        }
                    }
                    if (!a.options.closeOnOutside) {
                        return
                    }
                    a.close()
                });
                v(document).keydown(function (c) {
                    if (c.keyCode == 27 && a.opened && a.options.closeOnEscape) {
                        a.close()
                    }
                });
                if (a.options.showOn === "focus" || a.options.showOn === "both") {
                    a.element.on("focus click", function () {
                        a.open()
                    })
                }
                if (a.options.showOn === "button" || a.options.showOn === "both") {
                    if (a.options.buttonImage !== "") {
                        b = a.options.buttonText || a._getRegional("button");
                        a.image = v("<img/>").attr({
                            src: a.options.buttonImage,
                            alt: b,
                            title: b
                        });
                        a._setImageBackground()
                    }
                    if (a.options.buttonImageOnly && a.image) {
                        a.button = a.image
                    } else {
                        a.button = v('<button type="button"></button>').html(a.image || a.options.buttonText).button();
                        a.image = a.image ? v("img", a.button).first() : null
                    }
                    a.button.insertAfter(a.element).click(function () {
                        a[a.opened ? "close" : "open"]()
                    })
                }
                if (a.options.autoOpen) {
                    a.open()
                }
                a.element.keydown(function (c) {
                    if (c.keyCode === 9) {
                        a.close()
                    }
                }).keyup(function (c) {
                    var d = a._parseColor(a.element.val());
                    if (!a.color.equals(d)) {
                        a.color = d;
                        a._change()
                    }
                })
            } else {
                a.inline = true;
                v(this.element).html(s);
                a.dialog = v(".ui-colorpicker", this.element);
                a._generate();
                a.opened = true
            }
            return this
        }, _setOption: function (a, b) {
            var c = this;
            switch (a) {
                case"disabled":
                    if (b) {
                        c.dialog.addClass("ui-colorpicker-disabled")
                    } else {
                        c.dialog.removeClass("ui-colorpicker-disabled")
                    }
                    break
            }
            v.Widget.prototype._setOption.apply(c, arguments)
        }, _setImageBackground: function () {
            if (this.image && this.options.buttonColorize) {
                this.image.css("background-color", this.color.set ? this._formatColor("RGBA", this.color) : "")
            }
        }, _setAltField: function () {
            if (this.options.altOnChange && this.options.altField && this.options.altProperties) {
                var a, b, c = this.options.altProperties.split(",");
                for (a = 0; a <= c.length; ++a) {
                    b = v.trim(c[a]);
                    switch (b) {
                        case"color":
                        case"background-color":
                        case"outline-color":
                        case"border-color":
                            v(this.options.altField).css(b, this.color.set ? this.color.toCSS() : "");
                            break
                    }
                }
                if (this.options.altAlpha) {
                    v(this.options.altField).css("opacity", this.color.set ? this.color.getAlpha() : "")
                }
            }
        }, _setColor: function (a) {
            this.color = this._parseColor(a);
            this.currentColor = this.color.copy();
            this._setImageBackground();
            this._setAltField()
        }, setColor: function (a) {
            this._setColor(a);
            this._change(this.color.set)
        }, _generate: function () {
            var b = this, d, e, c, a;
            b._setColor(b.inline ? b.options.color : b.element.val());
            if (typeof b.options.parts === "string") {
                if (p[b.options.parts]) {
                    c = p[b.options.parts]
                } else {
                    c = p[b.inline ? "inline" : "popup"]
                }
            } else {
                c = b.options.parts
            }
            b.parts = {};
            v.each(c, function (f, g) {
                if (q[g]) {
                    b.parts[g] = new q[g](b)
                }
            });
            if (!b.generated) {
                a = [];
                v.each(b.options.layout, function (g, f) {
                    if (b.parts[g]) {
                        a.push({part: g, pos: f})
                    }
                });
                v(n(a, function (h, k, f) {
                    var g = ["ui-colorpicker-" + h.part + "-container"];
                    if (k > 0) {
                        g.push("ui-colorpicker-padding-left")
                    }
                    if (f > 0) {
                        g.push("ui-colorpicker-padding-top")
                    }
                    return '<td  class="' + g.join(" ") + '"' + (h.pos[2] > 1 ? ' colspan="' + h.pos[2] + '"' : "") + (h.pos[3] > 1 ? ' rowspan="' + h.pos[3] + '"' : "") + ' valign="top"></td>'
                })).appendTo(b.dialog).addClass("ui-dialog-content ui-widget-content");
                b._initAllParts();
                b._updateAllParts();
                b.generated = true
            }
        }, _effectGeneric: function (e, f, a, c, b) {
            var d = this;
            if (v.effects && v.effects[d.options.showAnim]) {
                e[f](d.options.showAnim, d.options.showOptions, d.options.duration, b)
            } else {
                e[(d.options.showAnim === "slideDown" ? a : (d.options.showAnim === "fadeIn" ? c : f))]((d.options.showAnim ? d.options.duration : null), b);
                if (!d.options.showAnim || !d.options.duration) {
                    b()
                }
            }
        }, _effectShow: function (a, b) {
            this._effectGeneric(a, "show", "slideDown", "fadeIn", b)
        }, _effectHide: function (a, b) {
            this._effectGeneric(a, "hide", "slideUp", "fadeOut", b)
        }, open: function () {
            var c = this, d, f, h, g, e, k, a, b;
            if (!c.opened) {
                c._generate();
                d = c.element.offset();
                f = v(window).height() + v(window).scrollTop();
                h = v(window).width() + v(window).scrollLeft();
                g = c.dialog.outerHeight();
                e = c.dialog.outerWidth();
                k = d.left;
                a = d.top + c.element.outerHeight();
                if (k + e > h) {
                    k = Math.max(0, h - e)
                }
                if (a + g > f) {
                    if (d.top - g >= v(window).scrollTop()) {
                        a = d.top - g
                    } else {
                        a = Math.max(0, f - g)
                    }
                }
                c.dialog.css({left: k, top: a});
                b = 0;
                v(c.element[0]).parents().each(function () {
                    var l = v(this).css("z-index");
                    if ((typeof(l) === "number" || typeof(l) === "string") && l !== "" && !isNaN(l)) {
                        b = parseInt(l);
                        return false
                    }
                });
                c.dialog.css("z-index", b += 2);
                c.overlay = c.options.modal ? new v.ui.dialog.overlay(c) : null;
                c._effectShow(this.dialog);
                c.opened = true;
                c._callback("open", true);
                v(function () {
                    c._repaintAllParts()
                })
            }
        }, close: function () {
            var a = this;
            a.currentColor = a.color.copy();
            a.changed = false;
            a._effectHide(a.dialog, function () {
                a.dialog.empty();
                a.generated = false;
                a.opened = false;
                a._callback("close", true)
            });
            if (a.overlay) {
                a.overlay.destroy()
            }
        }, destroy: function () {
            this.element.unbind();
            if (this.image !== null) {
                this.image.remove()
            }
            if (this.button !== null) {
                this.button.remove()
            }
            if (this.dialog !== null) {
                this.dialog.remove()
            }
            if (this.overlay) {
                this.overlay.destroy()
            }
        }, _callback: function (b, a) {
            var d = this, c, e;
            if (d.color.set) {
                c = {formatted: d._formatColor(d.options.colorFormat, d.color)};
                e = d.color.getLAB();
                e.a = (e.a * 2) - 1;
                e.b = (e.b * 2) - 1;
                if (a === true) {
                    c.a = d.color.getAlpha();
                    c.rgb = d.color.getRGB();
                    c.hsv = d.color.getHSV();
                    c.cmyk = d.color.getCMYK();
                    c.hsl = d.color.getHSL();
                    c.lab = e
                }
                return d._trigger(b, null, c)
            } else {
                return d._trigger(b, null, {formatted: ""})
            }
        }, _initAllParts: function () {
            v.each(this.parts, function (b, a) {
                if (a.init) {
                    a.init()
                }
            })
        }, _updateAllParts: function () {
            v.each(this.parts, function (b, a) {
                if (a.update) {
                    a.update()
                }
            })
        }, _repaintAllParts: function () {
            v.each(this.parts, function (b, a) {
                if (a.repaint) {
                    a.repaint()
                }
            })
        }, _change: function (b) {
            this.color.set = (b !== false);
            this.changed = true;
            switch (this.options.limit) {
                case"websafe":
                    this.color.limit(6);
                    break;
                case"nibble":
                    this.color.limit(16);
                    break;
                case"binary":
                    this.color.limit(2);
                    break;
                case"name":
                    var a = this._getSwatch(this._closestName(this.color));
                    this.color.setRGB(a.r, a.g, a.b);
                    break
            }
            if (!this.inline) {
                if (!this.color.set) {
                    this.element.val("")
                } else {
                    if (!this.color.equals(this._parseColor(this.element.val()))) {
                        this.element.val(this._formatColor(this.options.colorFormat, this.color))
                    }
                }
                this._setImageBackground();
                this._setAltField()
            }
            if (this.opened) {
                this._repaintAllParts()
            }
            this._callback("select")
        }, _hoverable: function (a) {
            a.hover(function () {
                a.addClass("ui-state-hover")
            }, function () {
                a.removeClass("ui-state-hover")
            })
        }, _focusable: function (a) {
            a.focus(function () {
                a.addClass("ui-state-focus")
            }).blur(function () {
                a.removeClass("ui-state-focus")
            })
        }, _getRegional: function (a) {
            return v.colorpicker.regional[this.options.regional][a] !== undefined ? v.colorpicker.regional[this.options.regional][a] : v.colorpicker.regional[""][a]
        }, _getSwatches: function () {
            if (typeof(this.options.swatches) === "string") {
                return v.colorpicker.swatches[this.options.swatches]
            }
            if (v.isPlainObject(this.options.swatches)) {
                return v.colorpicker.swatches
            }
            return v.colorpicker.swatches.html
        }, _getSwatch: function (c) {
            var a = this._getSwatches(), b = false;
            if (a[c] !== undefined) {
                return a[c]
            }
            v.each(a, function (e, d) {
                if (e.toLowerCase() == c.toLowerCase()) {
                    b = d;
                    return false
                }
                return true
            });
            return b
        }, _parseColor: function (b) {
            var a, c;
            if (b == "") {
                return new w()
            }
            a = this._getSwatch(v.trim(b));
            if (a) {
                return new w(a.r, a.g, a.b)
            }
            c = /^rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)$/.exec(b);
            if (c) {
                return new w(c[1] / 255, c[2] / 255, c[3] / 255, parseFloat(c[4]))
            }
            c = /^hsla?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)$/.exec(b);
            if (c) {
                return (new w()).setHSL(c[1] / 255, c[2] / 255, c[3] / 255).setAlpha(parseFloat(c[4]))
            }
            c = /^rgba?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)$/.exec(b);
            if (c) {
                return new w(c[1] / 100, c[2] / 100, c[3] / 100, c[4] / 100)
            }
            c = /^hsla?\(\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*,\s*(\d+(?:\.\d+)?)\%\s*(?:,\s*(\d+(?:\.\d+)?)\s*)?\)$/.exec(b);
            if (c) {
                return (new w()).setHSL(c[1] / 100, c[2] / 100, c[3] / 100).setAlpha(c[4] / 100)
            }
            c = /^#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/.exec(b);
            if (c) {
                return new w(parseInt(c[1], 16) / 255, parseInt(c[2], 16) / 255, parseInt(c[3], 16) / 255)
            }
            c = /^#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/.exec(b);
            if (c) {
                return new w(parseInt(c[1] + c[1], 16) / 255, parseInt(c[2] + c[2], 16) / 255, parseInt(c[3] + c[3], 16) / 255)
            }
            return r(b)
        }, _exactName: function (a) {
            var b = false;
            v.each(this._getSwatches(), function (c, d) {
                if (a.equals(new w(d.r, d.g, d.b))) {
                    b = c;
                    return false
                }
                return true
            });
            return b
        }, _closestName: function (a) {
            var d = a.getRGB(), b = null, e = false, c;
            v.each(this._getSwatches(), function (f, g) {
                c = a.distance(new w(g.r, g.g, g.b));
                if (c < b || b === null) {
                    e = f;
                    if (c == 0) {
                        return false
                    }
                    b = c
                }
                return true
            });
            return e
        }, _formatColor: function (f, e) {
            var c = this, b = null, d = {
                x: function (g) {
                    return o(g * 255)
                }, d: function (g) {
                    return Math.round(g * 255)
                }, f: function (g) {
                    return g
                }, p: function (g) {
                    return g * 100
                }
            }, a = e.getChannels();
            if (!v.isArray(f)) {
                f = [f]
            }
            v.each(f, function (h, g) {
                if (c._formats[g]) {
                    b = c._formats[g](e, c);
                    return (b === false)
                } else {
                    b = g.replace(/\\?[argbhsvcmykLAB][xdfp]/g, function (k) {
                        if (k.match(/^\\/)) {
                            return k.slice(1)
                        }
                        return d[k.charAt(1)](a[k.charAt(0)])
                    });
                    return false
                }
            });
            return b
        }, _formats: {
            "#HEX": function (a, b) {
                return b._formatColor("#rxgxbx", a)
            }, "#HEX3": function (c, b) {
                var a = b._formats.HEX3(c);
                return a === false ? false : "#" + a
            }, HEX: function (a, b) {
                return b._formatColor("rxgxbx", a)
            }, HEX3: function (f, b) {
                var e = f.getRGB(), c = Math.round(e.r * 255), d = Math.round(e.g * 255), a = Math.round(e.b * 255);
                if (((c >>> 4) == (c &= 15)) && ((d >>> 4) == (d &= 15)) && ((a >>> 4) == (a &= 15))) {
                    return c.toString(16) + d.toString(16) + a.toString(16)
                }
                return false
            }, RGB: function (a, b) {
                return a.getAlpha() >= 1 ? b._formatColor("rgb(rd,gd,bd)", a) : false
            }, RGBA: function (a, b) {
                return b._formatColor("rgba(rd,gd,bd,af)", a)
            }, "RGB%": function (a, b) {
                return a.getAlpha() >= 1 ? b._formatColor("rgb(rp%,gp%,bp%)", a) : false
            }, "RGBA%": function (a, b) {
                return b._formatColor("rgba(rp%,gp%,bp%,af)", a)
            }, HSL: function (a, b) {
                return a.getAlpha() >= 1 ? b._formatColor("hsl(hd,sd,vd)", a) : false
            }, HSLA: function (a, b) {
                return b._formatColor("hsla(hd,sd,vd,af)", a)
            }, "HSL%": function (a, b) {
                return a.getAlpha() >= 1 ? b._formatColor("hsl(hp%,sp%,vp%)", a) : false
            }, "HSLA%": function (a, b) {
                return b._formatColor("hsla(hp%,sp%,vp%,af)", a)
            }, NAME: function (a, b) {
                return b._closestName(a)
            }, EXACT: function (a, b) {
                return b._exactName(a)
            }
        }
    })
}(jQuery));
/*
 * jQuery Cookie Plugin v1.3.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function (b) {
    if (typeof define === "function" && define.amd) {
        define(["./jquery"], b)
    } else {
        b(jQuery)
    }
}(function (l) {
    var h = /\+/g;

    function m(a) {
        return a
    }

    function g(a) {
        return decodeURIComponent(a.replace(h, " "))
    }

    function k(b) {
        if (b.indexOf('"') === 0) {
            b = b.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\")
        }
        try {
            return n.json ? JSON.parse(b) : b
        } catch (a) {
        }
    }

    var n = l.cookie = function (b, c, C) {
        if (c !== undefined) {
            C = l.extend({}, n.defaults, C);
            if (typeof C.expires === "number") {
                var a = C.expires, D = C.expires = new Date();
                D.setDate(D.getDate() + a)
            }
            c = n.json ? JSON.stringify(c) : String(c);
            return (document.cookie = [n.raw ? b : encodeURIComponent(b), "=", n.raw ? c : encodeURIComponent(c), C.expires ? "; expires=" + C.expires.toUTCString() : "", C.path ? "; path=" + C.path : "", C.domain ? "; domain=" + C.domain : "", C.secure ? "; secure" : ""].join(""))
        }
        var A = n.raw ? m : g;
        var E = document.cookie.split("; ");
        var B = b ? undefined : {};
        for (var d = 0, f = E.length; d < f; d++) {
            var e = E[d].split("=");
            var y = A(e.shift());
            var x = A(e.join("="));
            if (b && b === y) {
                B = k(x);
                break
            }
            if (!b) {
                B[y] = k(x)
            }
        }
        return B
    };
    n.defaults = {};
    l.removeCookie = function (a, b) {
        if (l.cookie(a) !== undefined) {
            l.cookie(a, "", l.extend({}, b, {expires: -1}));
            return true
        }
        return false
    }
}));
(function (h) {
    h.fn.dump = function () {
        return h.dump(this)
    };
    h.dump = function (b) {
        var c = function (d, r) {
            if (!r) {
                r = 0
            }
            var o = "", p = "";
            for (i = 0; i < r; i++) {
                p += "\t"
            }
            t = a(d);
            switch (t) {
                case"string":
                    return '"' + d + '"';
                    break;
                case"number":
                    return d.toString();
                    break;
                case"boolean":
                    return d ? "true" : "false";
                case"date":
                    return "Date: " + d.toLocaleString();
                case"array":
                    o += "Array ( \n";
                    h.each(d, function (k, l) {
                        o += p + "\t" + k + " => " + c(l, r + 1) + "\n"
                    });
                    o += p + ")";
                    break;
                case"object":
                    o += "Object { \n";
                    h.each(d, function (k, l) {
                        o += p + "\t" + k + ": " + c(l, r + 1) + "\n"
                    });
                    o += p + "}";
                    break;
                case"jquery":
                    o += "jQuery Object { \n";
                    h.each(d, function (k, l) {
                        o += p + "\t" + k + " = " + c(l, r + 1) + "\n"
                    });
                    o += p + "}";
                    break;
                case"regexp":
                    return "RegExp: " + d.toString();
                case"error":
                    return d.toString();
                case"document":
                case"domelement":
                    o += "DOMElement [ \n" + p + "\tnodeName: " + d.nodeName + "\n" + p + "\tnodeValue: " + d.nodeValue + "\n" + p + "\tinnerHTML: [ \n";
                    h.each(d.childNodes, function (l, m) {
                        if (l < 1) {
                            var k = 0
                        }
                        if (a(m) == "string") {
                            if (m.textContent.match(/[^\s]/)) {
                                o += p + "\t\t" + (l - (k || 0)) + " = String: " + f(m.textContent) + "\n"
                            } else {
                                k--
                            }
                        } else {
                            o += p + "\t\t" + (l - (k || 0)) + " = " + c(m, r + 2) + "\n"
                        }
                    });
                    o += p + "\t]\n" + p + "]";
                    break;
                case"function":
                    var q = d.toString().match(/^(.*)\(([^\)]*)\)/im);
                    q[1] = f(q[1].replace(new RegExp("[\\s]+", "g"), " "));
                    q[2] = f(q[2].replace(new RegExp("[\\s]+", "g"), " "));
                    return q[1] + "(" + q[2] + ")";
                case"window":
                default:
                    o += "N/A: " + t;
                    break
            }
            return o
        };
        var a = function (d) {
            var l = typeof(d);
            if (l != "object") {
                return l
            }
            switch (d) {
                case null:
                    return "null";
                case window:
                    return "window";
                case document:
                    return "document";
                case window.event:
                    return "event";
                default:
                    break
            }
            if (d.jquery) {
                return "jquery"
            }
            switch (d.constructor) {
                case Array:
                    return "array";
                case Boolean:
                    return "boolean";
                case Date:
                    return "date";
                case Object:
                    return "object";
                case RegExp:
                    return "regexp";
                case ReferenceError:
                case Error:
                    return "error";
                case null:
                default:
                    break
            }
            switch (d.nodeType) {
                case 1:
                    return "domelement";
                case 3:
                    return "string";
                case null:
                default:
                    break
            }
            return "Unknown"
        };
        return c(b)
    };
    function f(a) {
        return g(e(a))
    }

    function g(a) {
        return a.replace(new RegExp("^[\\s]+", "g"), "")
    }

    function e(a) {
        return a.replace(new RegExp("[\\s]+$", "g"), "")
    }
})(jQuery);
(function () {
    var b = {
        getSelection: function () {
            var a = (this.jquery) ? this[0] : this;
            return (("selectionStart" in a && function () {
                var d = a.selectionEnd - a.selectionStart;
                return {
                    start: a.selectionStart,
                    end: a.selectionEnd,
                    length: d,
                    text: a.value.substr(a.selectionStart, d)
                }
            }) || (document.selection && function () {
                a.focus();
                var g = document.selection.createRange();
                if (g === null) {
                    return {start: 0, end: a.value.length, length: 0}
                }
                var h = a.createTextRange();
                var f = h.duplicate();
                h.moveToBookmark(g.getBookmark());
                f.setEndPoint("EndToStart", h);
                return {
                    start: f.text.length,
                    end: f.text.length + g.text.length,
                    length: g.text.length,
                    text: g.text
                }
            }) || function () {
                return null
            })()
        }, setSelection: function () {
            var d = (this.jquery) ? this[0] : this;
            var a = arguments[0] || {};
            return (("selectionStart" in d && function () {
                var c = typeof a == "object" ? a.start : a;
                if (c != undefined) {
                    d.selectionStart = c
                }
                if (a.end != undefined) {
                    d.selectionEnd = a.end
                }
                d.focus();
                return this
            }) || (document.selection && function () {
                d.focus();
                var f = document.selection.createRange();
                if (f === null) {
                    return this
                }
                var c = typeof a == "object" ? a.start : a;
                if (c != undefined) {
                    f.moveStart("character", -d.value.length);
                    f.moveStart("character", c);
                    f.collapse()
                }
                if (a.end != undefined) {
                    f.moveEnd("character", a.end - c)
                }
                f.select();
                return this
            }) || function () {
                d.focus();
                return jQuery(d)
            })()
        }, replaceSelection: function () {
            var a = (this.jquery) ? this[0] : this;
            var d = arguments[0] || "";
            return (("selectionStart" in a && function () {
                a.value = a.value.substr(0, a.selectionStart) + d + a.value.substr(a.selectionEnd, a.value.length);
                return this
            }) || (document.selection && function () {
                a.focus();
                document.selection.createRange().text = d;
                return this
            }) || function () {
                a.value += d;
                return jQuery(a)
            })()
        }
    };
    jQuery.each(b, function (a) {
        jQuery.fn[a] = this
    })
})();
(function (b) {
    b.fn.hoverIntent = function (q, r) {
        var g = {sensitivity: 7, interval: 100, timeout: 0};
        g = b.extend(g, r ? {over: q, out: r} : q);
        var a, f, u, w;
        var v = function (c) {
            a = c.pageX;
            f = c.pageY
        };
        var x = function (c, d) {
            d.hoverIntent_t = clearTimeout(d.hoverIntent_t);
            if ((Math.abs(u - a) + Math.abs(w - f)) < g.sensitivity) {
                b(d).unbind("mousemove", v);
                d.hoverIntent_s = 1;
                return g.over.apply(d, [c])
            } else {
                u = a;
                w = f;
                d.hoverIntent_t = setTimeout(function () {
                    x(c, d)
                }, g.interval)
            }
        };
        var s = function (c, d) {
            d.hoverIntent_t = clearTimeout(d.hoverIntent_t);
            d.hoverIntent_s = 0;
            return g.out.apply(d, [c])
        };
        var y = function (e) {
            var c = jQuery.extend({}, e);
            var d = this;
            if (d.hoverIntent_t) {
                d.hoverIntent_t = clearTimeout(d.hoverIntent_t)
            }
            if (e.type == "mouseenter") {
                u = c.pageX;
                w = c.pageY;
                b(d).bind("mousemove", v);
                if (d.hoverIntent_s != 1) {
                    d.hoverIntent_t = setTimeout(function () {
                        x(c, d)
                    }, g.interval)
                }
            } else {
                b(d).unbind("mousemove", v);
                if (d.hoverIntent_s == 1) {
                    d.hoverIntent_t = setTimeout(function () {
                        s(c, d)
                    }, g.timeout)
                }
            }
        };
        return this.bind("mouseenter", y).bind("mouseleave", y)
    }
})(jQuery);
(function (ai) {
    function ak() {
    }

    function J(a) {
        al = [a]
    }

    function Y(a, c, b) {
        return a && a.apply(c.context || c, b)
    }

    function aa(a) {
        return /\?/.test(a) ? "&" : "?"
    }

    var W = "async", N = "charset", R = "", M = "error", L = "insertBefore", P = "_jqjsp", S = "on", ah = S + "click", ad = S + M, U = S + "load", V = S + "readystatechange", am = "readyState", O = "removeChild", ae = "<script>", T = "success", Q = "timeout", aj = window, an = ai.Deferred, ag = ai("head")[0] || document.documentElement, X = {}, ab = 0, al, ac = {
        callback: P,
        url: location.href
    }, Z = aj.opera, af = !!ai("<div>").html("<!--[if IE]><i><![endif]-->").find("i").length;

    function K(n) {
        n = ai.extend({}, ac, n);
        var p = n.success, g = n.error, q = n.complete, y = n.dataFilter, w = n.callbackParameter, f = n.callback, x = n.cache, r = n.pageCache, o = n.charset, m = n.url, u = n.data, d = n.timeout, h, B = 0, b = ak, e, k, s, v, l, a;
        an && an(function (C) {
            C.done(p).fail(g);
            p = C.resolve;
            g = C.reject
        }).promise(n);
        n.abort = function () {
            !(B++) && b()
        };
        if (Y(n.beforeSend, n, [n]) === !1 || B) {
            return n
        }
        m = m || R;
        u = u ? ((typeof u) == "string" ? u : ai.param(u, n.traditional)) : R;
        m += u ? (aa(m) + u) : R;
        w && (m += aa(m) + encodeURIComponent(w) + "=?");
        !x && !r && (m += aa(m) + "_" + (new Date()).getTime() + "=");
        m = m.replace(/=\?(&|$)/, "=" + f + "$1");
        function A(C) {
            if (!(B++)) {
                b();
                r && (X[m] = {s: [C]});
                y && (C = y.apply(n, [C]));
                Y(p, n, [C, T, n]);
                Y(q, n, [n, T])
            }
        }

        function c(C) {
            if (!(B++)) {
                b();
                r && C != Q && (X[m] = C);
                Y(g, n, [n, C]);
                Y(q, n, [n, C])
            }
        }

        if (r && (h = X[m])) {
            h.s ? A(h.s[0]) : c(h)
        } else {
            aj[f] = J;
            v = ai(ae)[0];
            v.id = P + ab++;
            if (o) {
                v[N] = o
            }
            Z && Z.version() < 11.6 ? ((l = ai(ae)[0]).text = "document.getElementById('" + v.id + "')." + ad + "()") : (v[W] = W);
            if (af) {
                v.htmlFor = v.id;
                v.event = ah
            }
            v[U] = v[ad] = v[V] = function (D) {
                if (!v[am] || !/i/.test(v[am])) {
                    try {
                        v[ah] && v[ah]()
                    } catch (C) {
                    }
                    D = al;
                    al = 0;
                    D ? A(D[0]) : c(M)
                }
            };
            v.src = m;
            b = function (C) {
                a && clearTimeout(a);
                v[V] = v[U] = v[ad] = null;
                ag[O](v);
                l && ag[O](l)
            };
            ag[L](v, (s = ag.firstChild));
            l && ag[L](l, s);
            a = d > 0 && setTimeout(function () {
                c(Q)
            }, d)
        }
        return n
    }

    K.setup = function (a) {
        ai.extend(ac, a)
    };
    ai.jsonp = K
})(jQuery);
(function () {
    var b = function (e, f, a) {
        e = jsPlumbUtil.isArray(e) ? e : [e.x, e.y];
        f = jsPlumbUtil.isArray(f) ? f : [f.x, f.y];
        return a(e, f)
    };
    jsPlumbUtil = {
        isArray: function (a) {
            return Object.prototype.toString.call(a) === "[object Array]"
        },
        isNumber: function (a) {
            return Object.prototype.toString.call(a) === "[object Number]"
        },
        isString: function (a) {
            return typeof a === "string"
        },
        isBoolean: function (a) {
            return typeof a === "boolean"
        },
        isNull: function (a) {
            return a == null
        },
        isObject: function (a) {
            return a == null ? false : Object.prototype.toString.call(a) === "[object Object]"
        },
        isDate: function (a) {
            return Object.prototype.toString.call(a) === "[object Date]"
        },
        isFunction: function (a) {
            return Object.prototype.toString.call(a) === "[object Function]"
        },
        clone: function (f) {
            if (this.isString(f)) {
                return "" + f
            } else {
                if (this.isBoolean(f)) {
                    return !!f
                } else {
                    if (this.isDate(f)) {
                        return new Date(f.getTime())
                    } else {
                        if (this.isFunction(f)) {
                            return f
                        } else {
                            if (this.isArray(f)) {
                                var g = [];
                                for (var a = 0; a < f.length; a++) {
                                    g.push(this.clone(f[a]))
                                }
                                return g
                            } else {
                                if (this.isObject(f)) {
                                    var g = {};
                                    for (var a in f) {
                                        g[a] = this.clone(f[a])
                                    }
                                    return g
                                } else {
                                    return f
                                }
                            }
                        }
                    }
                }
            }
        },
        merge: function (n, o) {
            var a = this.clone(n);
            for (var c in o) {
                if (a[c] == null || this.isString(o[c]) || this.isBoolean(o[c])) {
                    a[c] = o[c]
                } else {
                    if (this.isArray(o[c])) {
                        var m = [];
                        if (this.isArray(a[c])) {
                            m.push.apply(m, a[c])
                        }
                        m.push.apply(m, o[c]);
                        a[c] = m
                    } else {
                        if (this.isObject(o[c])) {
                            if (!this.isObject(a[c])) {
                                a[c] = {}
                            }
                            for (var l in o[c]) {
                                a[c][l] = o[c][l]
                            }
                        }
                    }
                }
            }
            return a
        },
        copyValues: function (h, f, g) {
            for (var a = 0; a < h.length; a++) {
                g[h[a]] = f[h[a]]
            }
        },
        functionChain: function (k, g, l) {
            for (var a = 0; a < l.length; a++) {
                var h = l[a][0][l[a][1]].apply(l[a][0], l[a][2]);
                if (h === g) {
                    return h
                }
            }
            return k
        },
        populate: function (g, h) {
            var a = function (c) {
                var e = c.match(/(\${.*?})/g);
                if (e != null) {
                    for (var l = 0; l < e.length; l++) {
                        var d = h[e[l].substring(2, e[l].length - 1)];
                        if (d != null) {
                            c = c.replace(e[l], d)
                        }
                    }
                }
                return c
            }, f = function (c) {
                if (c != null) {
                    if (jsPlumbUtil.isString(c)) {
                        return a(c)
                    } else {
                        if (jsPlumbUtil.isArray(c)) {
                            var d = [];
                            for (var e = 0; e < c.length; e++) {
                                d.push(f(c[e]))
                            }
                            return d
                        } else {
                            if (jsPlumbUtil.isObject(c)) {
                                var d = {};
                                for (var e in c) {
                                    d[e] = f(c[e])
                                }
                                return d
                            } else {
                                return c
                            }
                        }
                    }
                }
            };
            return f(g)
        },
        convertStyle: function (p, a) {
            if ("transparent" === p) {
                return p
            }
            var k = p, l = function (c) {
                return c.length == 1 ? "0" + c : c
            }, o = function (c) {
                return l(Number(c).toString(16))
            }, n = /(rgb[a]?\()(.*)(\))/;
            if (p.match(n)) {
                var m = p.match(n)[2].split(",");
                k = "#" + o(m[0]) + o(m[1]) + o(m[2]);
                if (!a && m.length == 4) {
                    k = k + o(m[3])
                }
            }
            return k
        },
        gradient: function (d, a) {
            return b(d, a, function (c, f) {
                if (f[0] == c[0]) {
                    return f[1] > c[1] ? Infinity : -Infinity
                } else {
                    if (f[1] == c[1]) {
                        return f[0] > c[0] ? 0 : -0
                    } else {
                        return (f[1] - c[1]) / (f[0] - c[0])
                    }
                }
            })
        },
        normal: function (d, a) {
            return -1 / this.gradient(d, a)
        },
        lineLength: function (d, a) {
            return b(d, a, function (c, f) {
                return Math.sqrt(Math.pow(f[1] - c[1], 2) + Math.pow(f[0] - c[0], 2))
            })
        },
        segment: function (d, a) {
            return b(d, a, function (c, f) {
                if (f[0] > c[0]) {
                    return (f[1] > c[1]) ? 2 : 1
                } else {
                    if (f[0] == c[0]) {
                        return f[1] > c[1] ? 2 : 1
                    } else {
                        return (f[1] > c[1]) ? 3 : 4
                    }
                }
            })
        },
        theta: function (d, a) {
            return b(d, a, function (l, m) {
                var n = jsPlumbUtil.gradient(l, m), k = Math.atan(n), c = jsPlumbUtil.segment(l, m);
                if ((c == 4 || c == 3)) {
                    k += Math.PI
                }
                if (k < 0) {
                    k += (2 * Math.PI)
                }
                return k
            })
        },
        intersects: function (q, r) {
            var u = q.x, w = q.x + q.w, a = q.y, o = q.y + q.h, s = r.x, v = r.x + r.w, n = r.y, p = r.y + r.h;
            return ((u <= s && s <= w) && (a <= n && n <= o)) || ((u <= v && v <= w) && (a <= n && n <= o)) || ((u <= s && s <= w) && (a <= p && p <= o)) || ((u <= v && s <= w) && (a <= p && p <= o)) || ((s <= u && u <= v) && (n <= a && a <= p)) || ((s <= w && w <= v) && (n <= a && a <= p)) || ((s <= u && u <= v) && (n <= o && o <= p)) || ((s <= w && u <= v) && (n <= o && o <= p))
        },
        segmentMultipliers: [null, [1, -1], [1, 1], [-1, 1], [-1, -1]],
        inverseSegmentMultipliers: [null, [-1, -1], [-1, 1], [1, 1], [1, -1]],
        pointOnLine: function (u, p, s) {
            var q = jsPlumbUtil.gradient(u, p), a = jsPlumbUtil.segment(u, p), m = s > 0 ? jsPlumbUtil.segmentMultipliers[a] : jsPlumbUtil.inverseSegmentMultipliers[a], r = Math.atan(q), o = Math.abs(s * Math.sin(r)) * m[1], n = Math.abs(s * Math.cos(r)) * m[0];
            return {x: u.x + n, y: u.y + o}
        },
        perpendicularLineTo: function (o, n, m) {
            var p = jsPlumbUtil.gradient(o, n), l = Math.atan(-1 / p), k = m / 2 * Math.sin(l), a = m / 2 * Math.cos(l);
            return [{x: n.x + a, y: n.y + k}, {x: n.x - a, y: n.y - k}]
        },
        findWithFunction: function (a, e) {
            if (a) {
                for (var f = 0; f < a.length; f++) {
                    if (e(a[f])) {
                        return f
                    }
                }
            }
            return -1
        },
        clampToGrid: function (a, h, m, k, l) {
            var n = function (g, f) {
                var c = g % f, e = Math.floor(g / f), d = c >= (f / 2) ? 1 : 0;
                return (e + d) * f
            };
            return [k || m == null ? a : n(a, m[0]), l || m == null ? h : n(h, m[1])]
        },
        indexOf: function (a, d) {
            return jsPlumbUtil.findWithFunction(a, function (c) {
                return c == d
            })
        },
        removeWithFunction: function (f, e) {
            var a = jsPlumbUtil.findWithFunction(f, e);
            if (a > -1) {
                f.splice(a, 1)
            }
            return a != -1
        },
        remove: function (f, e) {
            var a = jsPlumbUtil.indexOf(f, e);
            if (a > -1) {
                f.splice(a, 1)
            }
            return a != -1
        },
        addWithFunction: function (e, f, a) {
            if (jsPlumbUtil.findWithFunction(e, a) == -1) {
                e.push(f)
            }
        },
        addToList: function (f, h, g) {
            var a = f[h];
            if (a == null) {
                a = [], f[h] = a
            }
            a.push(g);
            return a
        },
        EventGenerator: function () {
            var g = {}, h = this, f = false;
            var a = ["ready"];
            this.bind = function (d, c) {
                jsPlumbUtil.addToList(g, d, c);
                return h
            };
            this.fire = function (e, d, n) {
                if (!f && g[e]) {
                    for (var m = 0; m < g[e].length; m++) {
                        if (jsPlumbUtil.findWithFunction(a, function (k) {
                            return k === e
                        }) != -1) {
                            g[e][m](d, n)
                        } else {
                            try {
                                g[e][m](d, n)
                            } catch (c) {
                                jsPlumbUtil.log("jsPlumb: fire failed for event " + e + " : " + c)
                            }
                        }
                    }
                }
                return h
            };
            this.unbind = function (c) {
                if (c) {
                    delete g[c]
                } else {
                    g = {}
                }
                return h
            };
            this.getListener = function (c) {
                return g[c]
            };
            this.setSuspendEvents = function (c) {
                f = c
            };
            this.isSuspendEvents = function () {
                return f
            }
        },
        logEnabled: true,
        log: function () {
            if (jsPlumbUtil.logEnabled && typeof console != "undefined") {
                try {
                    var d = arguments[arguments.length - 1];
                    console.log(d)
                } catch (a) {
                }
            }
        },
        group: function (a) {
            if (jsPlumbUtil.logEnabled && typeof console != "undefined") {
                console.group(a)
            }
        },
        groupEnd: function (a) {
            if (jsPlumbUtil.logEnabled && typeof console != "undefined") {
                console.groupEnd(a)
            }
        },
        time: function (a) {
            if (jsPlumbUtil.logEnabled && typeof console != "undefined") {
                console.time(a)
            }
        },
        timeEnd: function (a) {
            if (jsPlumbUtil.logEnabled && typeof console != "undefined") {
                console.timeEnd(a)
            }
        },
        removeElement: function (a) {
            if (a != null && a.parentNode != null) {
                a.parentNode.removeChild(a)
            }
        },
        removeElements: function (d) {
            for (var a = 0; a < d.length; a++) {
                jsPlumbUtil.removeElement(d[a])
            }
        }
    }
})();
(function () {
    var e = !!document.createElement("canvas").getContext, f = !!window.SVGAngle || document.implementation.hasFeature("http://www.w3.org/TR/SVG11/feature#BasicStructure", "1.1"), g = function () {
        if (g.vml == undefined) {
            var a = document.body.appendChild(document.createElement("div"));
            a.innerHTML = '<v:shape id="vml_flag1" adj="1" />';
            var b = a.firstChild;
            b.style.behavior = "url(#default#VML)";
            g.vml = b ? typeof b.adj == "object" : true;
            a.parentNode.removeChild(a)
        }
        return g.vml
    };
    var h = function (a) {
        var b = {}, c = [], m = {}, n = {}, d = {};
        this.register = function (u) {
            var v = jsPlumb.CurrentLibrary;
            u = v.getElementObject(u);
            var l = a.getId(u), w = v.getDOMElement(u), k = v.getOffset(u);
            if (!b[l]) {
                b[l] = u;
                c.push(u);
                m[l] = {}
            }
            var s = function (o, A) {
                if (o) {
                    for (var r = 0; r < o.childNodes.length; r++) {
                        if (o.childNodes[r].nodeType != 3 && o.childNodes[r].nodeType != 8) {
                            var p = v.getElementObject(o.childNodes[r]), B = a.getId(p, null, true);
                            if (B && n[B] && n[B] > 0) {
                                var q = v.getOffset(p);
                                m[l][B] = {
                                    id: B,
                                    offset: {
                                        left: q.left - k.left,
                                        top: q.top - k.top
                                    }
                                };
                                d[B] = l
                            }
                            s(o.childNodes[r])
                        }
                    }
                }
            };
            s(w)
        };
        this.updateOffsets = function (l) {
            var C = jsPlumb.CurrentLibrary, x = C.getElementObject(l), y = a.getId(x), w = m[y], A = C.getOffset(x);
            if (w) {
                for (var D in w) {
                    var B = C.getElementObject(D), k = C.getOffset(B);
                    m[y][D] = {
                        id: D,
                        offset: {left: k.left - A.left, top: k.top - A.top}
                    };
                    d[D] = y
                }
            }
        };
        this.endpointAdded = function (B) {
            var I = jsPlumb.CurrentLibrary, F = document.body, D = a.getId(B), G = I.getDOMElement(B), C = G.parentNode, k = C == F;
            n[D] = n[D] ? n[D] + 1 : 1;
            while (C != null && C != F) {
                var J = a.getId(C, null, true);
                if (J && b[J]) {
                    var p = -1, H = I.getElementObject(C), l = I.getOffset(H);
                    if (m[J][D] == null) {
                        var E = jsPlumb.CurrentLibrary.getOffset(B);
                        m[J][D] = {
                            id: D,
                            offset: {left: E.left - l.left, top: E.top - l.top}
                        };
                        d[D] = J
                    }
                    break
                }
                C = C.parentNode
            }
        };
        this.endpointDeleted = function (l) {
            if (n[l.elementId]) {
                n[l.elementId]--;
                if (n[l.elementId] <= 0) {
                    for (var k in m) {
                        if (m[k]) {
                            delete m[k][l.elementId];
                            delete d[l.elementId]
                        }
                    }
                }
            }
        };
        this.changeId = function (l, k) {
            m[k] = m[l];
            m[l] = {};
            d[k] = d[l];
            d[l] = null
        };
        this.getElementsForDraggable = function (k) {
            return m[k]
        };
        this.elementRemoved = function (k) {
            var l = d[k];
            if (l) {
                delete m[l][k];
                delete d[k]
            }
        };
        this.reset = function () {
            b = {};
            c = [];
            m = {};
            n = {}
        }
    };
    if (!window.console) {
        window.console = {
            time: function () {
            }, timeEnd: function () {
            }, group: function () {
            }, groupEnd: function () {
            }, log: function () {
            }
        }
    }
    window.jsPlumbAdapter = {
        headless: false, appendToRoot: function (a) {
            document.body.appendChild(a)
        }, getRenderModes: function () {
            return ["canvas", "svg", "vml"]
        }, isRenderModeAvailable: function (a) {
            return {canvas: e, svg: f, vml: g()}[a]
        }, getDragManager: function (a) {
            return new h(a)
        }, setRenderMode: function (a) {
            var b;
            if (a) {
                a = a.toLowerCase();
                var d = this.isRenderModeAvailable("canvas"), l = this.isRenderModeAvailable("svg"), c = this.isRenderModeAvailable("vml");
                if (a === "svg") {
                    if (l) {
                        b = "svg"
                    } else {
                        if (d) {
                            b = "canvas"
                        } else {
                            if (c) {
                                b = "vml"
                            }
                        }
                    }
                } else {
                    if (a === "canvas" && d) {
                        b = "canvas"
                    } else {
                        if (c) {
                            b = "vml"
                        }
                    }
                }
            }
            return b
        }
    }
})();
(function () {
    var ad = jsPlumbUtil.findWithFunction, K = jsPlumbUtil.indexOf, U = jsPlumbUtil.removeWithFunction, aa = jsPlumbUtil.remove, S = jsPlumbUtil.addWithFunction, ab = jsPlumbUtil.addToList, Z = jsPlumbUtil.isArray, W = jsPlumbUtil.isString, L = jsPlumbUtil.isObject;
    var Q = function (b, a) {
        return X.CurrentLibrary.getAttribute(af(b), a)
    }, ah = function (b, a, c) {
        X.CurrentLibrary.setAttribute(af(b), a, c)
    }, H = function (a, b) {
        X.CurrentLibrary.addClass(af(a), b)
    }, ac = function (a, b) {
        return X.CurrentLibrary.hasClass(af(a), b)
    }, Y = function (a, b) {
        X.CurrentLibrary.removeClass(af(a), b)
    }, af = function (a) {
        return X.CurrentLibrary.getElementObject(a)
    }, P = function (c, d) {
        var a = X.CurrentLibrary.getOffset(af(c));
        if (d != null) {
            var b = d.getZoom();
            return {left: a.left / b, top: a.top / b}
        } else {
            return a
        }
    }, aj = function (a) {
        return X.CurrentLibrary.getSize(af(a))
    }, V = jsPlumbUtil.log, N = jsPlumbUtil.group, ae = jsPlumbUtil.groupEnd, O = jsPlumbUtil.time, M = jsPlumbUtil.timeEnd, T = function () {
        return "" + (new Date()).getTime()
    }, R = window.jsPlumbUIComponent = function (y) {
        var f = this, x = arguments, h = false, p = y.parameters || {}, r = f.idPrefix, d = r + (new Date()).getTime(), e = null, w = null;
        f._jsPlumb = y._jsPlumb;
        f.getId = function () {
            return d
        };
        f.hoverClass = y.hoverClass || f._jsPlumb.Defaults.HoverClass || X.Defaults.HoverClass;
        jsPlumbUtil.EventGenerator.apply(this);
        if (y.events) {
            for (var c in y.events) {
                f.bind(c, y.events[c])
            }
        }
        this.clone = function () {
            var A = new Object();
            f.constructor.apply(A, x);
            return A
        };
        this.getParameter = function (A) {
            return p[A]
        }, this.getParameters = function () {
            return p
        }, this.setParameter = function (B, A) {
            p[B] = A
        }, this.setParameters = function (A) {
            p = A
        }, this.overlayPlacements = [];
        var q = y.beforeDetach;
        this.isDetachAllowed = function (C) {
            var B = true;
            if (q) {
                try {
                    B = q(C)
                } catch (A) {
                    V("jsPlumb: beforeDetach callback failed", A)
                }
            }
            return B
        };
        var n = y.beforeDrop;
        this.isDropAllowed = function (A, D, C, F, E) {
            var B = f._jsPlumb.checkCondition("beforeDrop", {
                sourceId: A,
                targetId: D,
                scope: C,
                connection: F,
                dropEndpoint: E
            });
            if (n) {
                try {
                    B = n({
                        sourceId: A,
                        targetId: D,
                        scope: C,
                        connection: F,
                        dropEndpoint: E
                    })
                } catch (G) {
                    V("jsPlumb: beforeDrop callback failed", G)
                }
            }
            return B
        };
        var b = function () {
            if (e && w) {
                var A = {};
                X.extend(A, e);
                X.extend(A, w);
                delete f.hoverPaintStyle;
                if (A.gradient && e.fillStyle) {
                    delete A.gradient
                }
                w = A
            }
        };
        this.setPaintStyle = function (B, A) {
            e = B;
            f.paintStyleInUse = e;
            b();
            if (!A) {
                f.repaint()
            }
        };
        this.getPaintStyle = function () {
            return e
        };
        this.setHoverPaintStyle = function (B, A) {
            w = B;
            b();
            if (!A) {
                f.repaint()
            }
        };
        this.getHoverPaintStyle = function () {
            return w
        };
        this.setHover = function (C, A, B) {
            if (!f._jsPlumb.currentlyDragging && !f._jsPlumb.isHoverSuspended()) {
                h = C;
                if (f.canvas != null) {
                    if (f.hoverClass != null) {
                        if (C) {
                            s.addClass(f.canvas, f.hoverClass)
                        } else {
                            s.removeClass(f.canvas, f.hoverClass)
                        }
                    }
                    if (C) {
                        s.addClass(f.canvas, f._jsPlumb.hoverClass)
                    } else {
                        s.removeClass(f.canvas, f._jsPlumb.hoverClass)
                    }
                }
                if (w != null) {
                    f.paintStyleInUse = C ? w : e;
                    if (!f._jsPlumb.isSuspendDrawing()) {
                        B = B || T();
                        f.repaint({timestamp: B, recalc: false})
                    }
                }
                if (f.getAttachedElements && !A) {
                    a(C, T(), f)
                }
            }
        };
        this.isHover = function () {
            return h
        };
        this.bindListeners = function (A, C, B) {
            A.bind("click", function (E, D) {
                C.fire("click", C, D)
            });
            A.bind("dblclick", function (E, D) {
                C.fire("dblclick", C, D)
            });
            A.bind("contextmenu", function (E, D) {
                C.fire("contextmenu", C, D)
            });
            A.bind("mouseenter", function (E, D) {
                if (!C.isHover()) {
                    B(true);
                    C.fire("mouseenter", C, D)
                }
            });
            A.bind("mouseexit", function (E, D) {
                if (C.isHover()) {
                    B(false);
                    C.fire("mouseexit", C, D)
                }
            });
            A.bind("mousedown", function (E, D) {
                C.fire("mousedown", C, D)
            });
            A.bind("mouseup", function (E, D) {
                C.fire("mouseup", C, D)
            })
        };
        var s = X.CurrentLibrary, u = ["click", "dblclick", "mouseenter", "mouseout", "mousemove", "mousedown", "mouseup", "contextmenu"], g = {mouseout: "mouseexit"}, o = function (B, A, C) {
            var D = g[C] || C;
            s.bind(B, C, function (E) {
                A.fire(D, A, E)
            })
        }, k = function (A, B) {
            var C = g[B] || B;
            s.unbind(A, B)
        };
        this.attachListeners = function (B, A) {
            for (var C = 0, D = u.length; C < D; C++) {
                o(B, A, u[C])
            }
        };
        var a = function (A, B, E) {
            var C = f.getAttachedElements();
            if (C) {
                for (var D = 0, F = C.length; D < F; D++) {
                    if (!E || E != C[D]) {
                        C[D].setHover(A, true, B)
                    }
                }
            }
        };
        this.reattachListenersForElement = function (A) {
            if (arguments.length > 1) {
                for (var B = 0, C = u.length; B < C; B++) {
                    k(A, u[B])
                }
                for (var B = 1, C = arguments.length; B < C; B++) {
                    f.attachListeners(A, arguments[B])
                }
            }
        };
        var v = [], m = function (A) {
            return A == null ? null : A.split(" ")
        }, l = function (B, D) {
            if (f.getDefaultType) {
                var A = f.getTypeDescriptor();
                var C = jsPlumbUtil.merge({}, f.getDefaultType());
                for (var E = 0, F = v.length; E < F; E++) {
                    C = jsPlumbUtil.merge(C, f._jsPlumb.getType(v[E], A))
                }
                if (B) {
                    C = jsPlumbUtil.populate(C, B)
                }
                f.applyType(C, D);
                if (!D) {
                    f.repaint()
                }
            }
        };
        f.setType = function (C, A, B) {
            v = m(C) || [];
            l(A, B)
        };
        f.getType = function () {
            return v
        };
        f.reapplyTypes = function (A, B) {
            l(A, B)
        };
        f.hasType = function (A) {
            return jsPlumbUtil.indexOf(v, A) != -1
        };
        f.addType = function (C, G, B) {
            var D = m(C), A = false;
            if (D != null) {
                for (var E = 0, F = D.length; E < F; E++) {
                    if (!f.hasType(D[E])) {
                        v.push(D[E]);
                        A = true
                    }
                }
                if (A) {
                    l(G, B)
                }
            }
        };
        f.removeType = function (B, A) {
            var D = m(B), G = false, C = function (am) {
                var an = jsPlumbUtil.indexOf(v, am);
                if (an != -1) {
                    v.splice(an, 1);
                    return true
                }
                return false
            };
            if (D != null) {
                for (var E = 0, F = D.length; E < F; E++) {
                    G = C(D[E]) || G
                }
                if (G) {
                    l(null, A)
                }
            }
        };
        f.toggleType = function (B, G, A) {
            var C = m(B);
            if (C != null) {
                for (var D = 0, E = C.length; D < E; D++) {
                    var F = jsPlumbUtil.indexOf(v, C[D]);
                    if (F != -1) {
                        v.splice(F, 1)
                    } else {
                        v.push(C[D])
                    }
                }
                l(G, A)
            }
        };
        this.applyType = function (B, A) {
            f.setPaintStyle(B.paintStyle, A);
            f.setHoverPaintStyle(B.hoverPaintStyle, A);
            if (B.parameters) {
                for (var C in B.parameters) {
                    f.setParameter(C, B.parameters[C])
                }
            }
        };
        this.addClass = function (A) {
            if (f.canvas != null) {
                H(f.canvas, A)
            }
        };
        this.removeClass = function (A) {
            if (f.canvas != null) {
                Y(f.canvas, A)
            }
        }
    }, I = window.overlayCapableJsPlumbUIComponent = function (k) {
        R.apply(this, arguments);
        var a = this;
        this.overlays = [];
        var m = function (s) {
            var q = null;
            if (Z(s)) {
                var r = s[0], u = X.extend({
                    component: a,
                    _jsPlumb: a._jsPlumb
                }, s[1]);
                if (s.length == 3) {
                    X.extend(u, s[2])
                }
                q = new X.Overlays[a._jsPlumb.getRenderMode()][r](u)
            } else {
                if (s.constructor == String) {
                    q = new X.Overlays[a._jsPlumb.getRenderMode()][s]({
                        component: a,
                        _jsPlumb: a._jsPlumb
                    })
                } else {
                    q = s
                }
            }
            a.overlays.push(q)
        }, l = function (u) {
            var r = a.defaultOverlayKeys || [], s = u.overlays, q = function (x) {
                return a._jsPlumb.Defaults[x] || X.Defaults[x] || []
            };
            if (!s) {
                s = []
            }
            for (var v = 0, w = r.length; v < w; v++) {
                s.unshift.apply(s, q(r[v]))
            }
            return s
        };
        var o = l(k);
        if (o) {
            for (var f = 0, h = o.length; f < h; f++) {
                m(o[f])
            }
        }
        var p = function (s) {
            var r = -1;
            for (var u = 0, q = a.overlays.length; u < q; u++) {
                if (s === a.overlays[u].id) {
                    r = u;
                    break
                }
            }
            return r
        };
        this.addOverlay = function (r, q) {
            m(r);
            if (!q) {
                a.repaint()
            }
        };
        this.getOverlay = function (q) {
            var r = p(q);
            return r >= 0 ? a.overlays[r] : null
        };
        this.getOverlays = function () {
            return a.overlays
        };
        this.hideOverlay = function (q) {
            var r = a.getOverlay(q);
            if (r) {
                r.hide()
            }
        };
        this.hideOverlays = function () {
            for (var q = 0, r = a.overlays.length; q < r; q++) {
                a.overlays[q].hide()
            }
        };
        this.showOverlay = function (q) {
            var r = a.getOverlay(q);
            if (r) {
                r.show()
            }
        };
        this.showOverlays = function () {
            for (var q = 0, r = a.overlays.length; q < r; q++) {
                a.overlays[q].show()
            }
        };
        this.removeAllOverlays = function () {
            for (var q = 0, r = a.overlays.length; q < r; q++) {
                if (a.overlays[q].cleanup) {
                    a.overlays[q].cleanup()
                }
            }
            a.overlays.splice(0, a.overlays.length);
            a.repaint()
        };
        this.removeOverlay = function (q) {
            var r = p(q);
            if (r != -1) {
                var s = a.overlays[r];
                if (s.cleanup) {
                    s.cleanup()
                }
                a.overlays.splice(r, 1)
            }
        };
        this.removeOverlays = function () {
            for (var q = 0, r = arguments.length; q < r; q++) {
                a.removeOverlay(arguments[q])
            }
        };
        var n = "__label", b = function (s) {
            var r = {
                cssClass: s.cssClass,
                labelStyle: this.labelStyle,
                id: n,
                component: a,
                _jsPlumb: a._jsPlumb
            }, q = X.extend(r, s);
            return new X.Overlays[a._jsPlumb.getRenderMode()].Label(q)
        };
        if (k.label) {
            var e = k.labelLocation || a.defaultLabelLocation || 0.5, d = k.labelStyle || a._jsPlumb.Defaults.LabelStyle || X.Defaults.LabelStyle;
            this.overlays.push(b({label: k.label, location: e, labelStyle: d}))
        }
        this.setLabel = function (r) {
            var q = a.getOverlay(n);
            if (!q) {
                var s = r.constructor == String || r.constructor == Function ? {label: r} : r;
                q = b(s);
                this.overlays.push(q)
            } else {
                if (r.constructor == String || r.constructor == Function) {
                    q.setLabel(r)
                } else {
                    if (r.label) {
                        q.setLabel(r.label)
                    }
                    if (r.location) {
                        q.setLocation(r.location)
                    }
                }
            }
            if (!a._jsPlumb.isSuspendDrawing()) {
                a.repaint()
            }
        };
        this.getLabel = function () {
            var q = a.getOverlay(n);
            return q != null ? q.getLabel() : null
        };
        this.getLabelOverlay = function () {
            return a.getOverlay(n)
        };
        var g = this.applyType;
        this.applyType = function (u, s) {
            g(u, s);
            a.removeAllOverlays();
            if (u.overlays) {
                for (var q = 0, r = u.overlays.length; q < r; q++) {
                    a.addOverlay(u.overlays[q], true)
                }
            }
        };
        var c = this.setHover;
        this.setHover = function (v, s, u) {
            c.apply(a, arguments);
            for (var q = 0, r = a.overlays.length; q < r; q++) {
                a.overlays[q][v ? "addClass" : "removeClass"](a._jsPlumb.hoverClass)
            }
        }
    };
    var ag = 0, ai = function () {
        var a = ag + 1;
        ag++;
        return a
    };
    var J = function (v) {
        this.Defaults = {
            Anchor: "BottomCenter",
            Anchors: [null, null],
            ConnectionsDetachable: true,
            ConnectionOverlays: [],
            Connector: "Bezier",
            Container: null,
            DoNotThrowErrors: false,
            DragOptions: {},
            DropOptions: {},
            Endpoint: "Dot",
            EndpointOverlays: [],
            Endpoints: [null, null],
            EndpointStyle: {fillStyle: "#456"},
            EndpointStyles: [null, null],
            EndpointHoverStyle: null,
            EndpointHoverStyles: [null, null],
            HoverPaintStyle: null,
            LabelStyle: {color: "black"},
            LogEnabled: false,
            Overlays: [],
            MaxConnections: 1,
            PaintStyle: {lineWidth: 8, strokeStyle: "#456"},
            ReattachConnections: false,
            RenderMode: "svg",
            Scope: "jsPlumb_DefaultScope"
        };
        if (v) {
            X.extend(this.Defaults, v)
        }
        this.logEnabled = this.Defaults.LogEnabled;
        var bt = {}, bb = {};
        this.registerConnectionType = function (ak, al) {
            bt[ak] = X.extend({}, al)
        };
        this.registerConnectionTypes = function (ak) {
            for (var al in ak) {
                bt[al] = X.extend({}, ak[al])
            }
        };
        this.registerEndpointType = function (ak, al) {
            bb[ak] = X.extend({}, al)
        };
        this.registerEndpointTypes = function (ak) {
            for (var al in ak) {
                bb[al] = X.extend({}, ak[al])
            }
        };
        this.getType = function (ak, al) {
            return al === "connection" ? bt[ak] : bb[ak]
        };
        jsPlumbUtil.EventGenerator.apply(this);
        var bM = this, w = ai(), bD = bM.bind, G = {}, d = 1;
        this.getInstanceIndex = function () {
            return w
        };
        this.setZoom = function (ak, al) {
            d = ak;
            if (al) {
                bM.repaintEverything()
            }
        };
        this.getZoom = function () {
            return d
        };
        for (var aq in this.Defaults) {
            G[aq] = this.Defaults[aq]
        }
        this.bind = function (ak, al) {
            if ("ready" === ak && s) {
                al()
            } else {
                bD.apply(bM, [ak, al])
            }
        };
        bM.importDefaults = function (ak) {
            for (var al in ak) {
                bM.Defaults[al] = ak[al]
            }
        };
        bM.restoreDefaults = function () {
            bM.Defaults = X.extend({}, G)
        };
        var p = null, bi = null, s = false, bd = null, bv = {}, bA = {}, by = {}, bc = {}, bK = {}, bh = {}, bN = {}, bG = [], bf = [], m = this.Defaults.Scope, g = null, bx = function (ak, al) {
            if (bM.Defaults.Container) {
                X.CurrentLibrary.appendElement(ak, bM.Defaults.Container)
            } else {
                if (!al) {
                    jsPlumbAdapter.appendToRoot(ak)
                } else {
                    X.CurrentLibrary.appendElement(ak, al)
                }
            }
        }, F = 1, a0 = function () {
            return "" + F++
        }, A = function (ak) {
            return ak._nodes ? ak._nodes : ak
        }, bm = function (ao, al, am, an) {
            if (!jsPlumbAdapter.headless && !bq) {
                var ak = Q(ao, "id"), aA = bM.dragManager.getElementsForDraggable(ak);
                if (am == null) {
                    am = T()
                }
                bM.anchorManager.redraw(ak, al, am, null, an);
                if (aA) {
                    for (var ap in aA) {
                        bM.anchorManager.redraw(aA[ap].id, al, am, aA[ap].offset, an)
                    }
                }
            }
        }, C = function (ao, am) {
            var al = null;
            if (Z(ao)) {
                al = [];
                for (var ap = 0, aA = ao.length; ap < aA; ap++) {
                    var an = af(ao[ap]), ak = Q(an, "id");
                    al.push(am(an, ak))
                }
            } else {
                var an = af(ao), ak = Q(an, "id");
                al = am(an, ak)
            }
            return al
        }, aw = function (ak) {
            return by[ak]
        }, bk = function (ap, aD, am) {
            if (!jsPlumbAdapter.headless) {
                var ak = aD == null ? false : aD, ao = X.CurrentLibrary;
                if (ak) {
                    if (ao.isDragSupported(ap) && !ao.isAlreadyDraggable(ap)) {
                        var al = am || bM.Defaults.DragOptions || X.Defaults.DragOptions;
                        al = X.extend({}, al);
                        var an = ao.dragEvents.drag, aC = ao.dragEvents.stop, aA = ao.dragEvents.start;
                        al[aA] = az(al[aA], function () {
                            bM.setHoverSuspended(true);
                            bM.select({source: ap}).addClass(bM.elementDraggingClass + " " + bM.sourceElementDraggingClass, true);
                            bM.select({target: ap}).addClass(bM.elementDraggingClass + " " + bM.targetElementDraggingClass, true)
                        });
                        al[an] = az(al[an], function () {
                            var aE = ao.getUIPosition(arguments, bM.getZoom());
                            bm(ap, aE, null, true);
                            H(ap, "jsPlumb_dragged")
                        });
                        al[aC] = az(al[aC], function () {
                            var aE = ao.getUIPosition(arguments, bM.getZoom());
                            bm(ap, aE);
                            Y(ap, "jsPlumb_dragged");
                            bM.setHoverSuspended(false);
                            bM.select({source: ap}).removeClass(bM.elementDraggingClass + " " + bM.sourceElementDraggingClass, true);
                            bM.select({target: ap}).removeClass(bM.elementDraggingClass + " " + bM.targetElementDraggingClass, true)
                        });
                        var aB = x(ap);
                        bN[aB] = true;
                        var ak = bN[aB];
                        al.disabled = ak == null ? false : !ak;
                        ao.initDraggable(ap, al, false, bM);
                        bM.dragManager.register(ap)
                    }
                }
            }
        }, ar = function (ap, al) {
            var aC = X.extend({sourceIsNew: true, targetIsNew: true}, ap);
            if (al) {
                X.extend(aC, al)
            }
            if (aC.source && aC.source.endpoint) {
                aC.sourceEndpoint = aC.source
            }
            if (aC.target && aC.target.endpoint) {
                aC.targetEndpoint = aC.target
            }
            if (ap.uuids) {
                aC.sourceEndpoint = aw(ap.uuids[0]);
                aC.targetEndpoint = aw(ap.uuids[1])
            }
            if (aC.sourceEndpoint && aC.sourceEndpoint.isFull()) {
                V(bM, "could not add connection; source endpoint is full");
                return
            }
            if (aC.targetEndpoint && aC.targetEndpoint.isFull()) {
                V(bM, "could not add connection; target endpoint is full");
                return
            }
            if (aC.sourceEndpoint && !aC.sourceEndpoint.addedViaMouse) {
                aC.sourceIsNew = false
            }
            if (aC.targetEndpoint && !aC.targetEndpoint.addedViaMouse) {
                aC.targetIsNew = false
            }
            if (!aC.type && aC.sourceEndpoint) {
                aC.type = aC.sourceEndpoint.connectionType
            }
            if (aC.sourceEndpoint && aC.sourceEndpoint.connectorOverlays) {
                aC.overlays = aC.overlays || [];
                for (var am = 0, an = aC.sourceEndpoint.connectorOverlays.length; am < an; am++) {
                    aC.overlays.push(aC.sourceEndpoint.connectorOverlays[am])
                }
            }
            if (!aC["pointer-events"] && aC.sourceEndpoint && aC.sourceEndpoint.connectorPointerEvents) {
                aC["pointer-events"] = aC.sourceEndpoint.connectorPointerEvents
            }
            if (aC.target && !aC.target.endpoint && !aC.targetEndpoint && !aC.newConnection) {
                var ao = x(aC.target), aB = bu[ao], aA = B[ao];
                if (aB) {
                    if (!ba[ao]) {
                        return
                    }
                    var ak = aA != null ? aA : bM.addEndpoint(aC.target, aB);
                    if (bg[ao]) {
                        B[ao] = ak
                    }
                    aC.targetEndpoint = ak;
                    ak._makeTargetCreator = true;
                    aC.targetIsNew = true
                }
            }
            if (aC.source && !aC.source.endpoint && !aC.sourceEndpoint && !aC.newConnection) {
                var ao = x(aC.source), aB = at[ao], aA = br[ao];
                if (aB) {
                    if (!c[ao]) {
                        return
                    }
                    var ak = aA != null ? aA : bM.addEndpoint(aC.source, aB);
                    if (bo[ao]) {
                        br[ao] = ak
                    }
                    aC.sourceEndpoint = ak;
                    aC.sourceIsNew = true
                }
            }
            return aC
        }, b = function (ak) {
            var al = bM.Defaults.ConnectionType || bM.getDefaultConnectionType(), am = bM.Defaults.EndpointType || X.Endpoint, an = X.CurrentLibrary.getParent;
            if (ak.container) {
                ak.parent = ak.container
            } else {
                if (ak.sourceEndpoint) {
                    ak.parent = ak.sourceEndpoint.parent
                } else {
                    if (ak.source.constructor == am) {
                        ak.parent = ak.source.parent
                    } else {
                        ak.parent = an(ak.source)
                    }
                }
            }
            ak._jsPlumb = bM;
            ak.newConnection = b;
            ak.newEndpoint = E;
            ak.endpointsByUUID = by;
            ak.endpointsByElement = bA;
            ak.finaliseConnection = bH;
            var ao = new al(ak);
            ao.id = "con_" + a0();
            bI("click", "click", ao);
            bI("dblclick", "dblclick", ao);
            bI("contextmenu", "contextmenu", ao);
            return ao
        }, bH = function (al, ak, an) {
            ak = ak || {};
            if (!al.suspendedEndpoint) {
                ab(bv, al.scope, al)
            }
            bM.anchorManager.newConnection(al);
            bm(al.source);
            if (!ak.doNotFireConnectionEvent && ak.fireEvent !== false) {
                var am = {
                    connection: al,
                    source: al.source,
                    target: al.target,
                    sourceId: al.sourceId,
                    targetId: al.targetId,
                    sourceEndpoint: al.endpoints[0],
                    targetEndpoint: al.endpoints[1]
                };
                bM.fire("jsPlumbConnection", am, an);
                bM.fire("connection", am, an)
            }
        }, bI = function (am, al, ak) {
            ak.bind(am, function (an, ao) {
                bM.fire(al, ak, ao)
            })
        }, av = function (ak) {
            if (ak.container) {
                return ak.container
            } else {
                var am = X.CurrentLibrary.getTagName(ak.source), al = X.CurrentLibrary.getParent(ak.source);
                if (am && am.toLowerCase() === "td") {
                    return X.CurrentLibrary.getParent(al)
                } else {
                    return al
                }
            }
        }, E = function (ak) {
            var al = bM.Defaults.EndpointType || X.Endpoint;
            var an = X.extend({}, ak);
            an.parent = av(an);
            an._jsPlumb = bM;
            an.newConnection = b;
            an.newEndpoint = E;
            an.endpointsByUUID = by;
            an.endpointsByElement = bA;
            an.finaliseConnection = bH;
            an.fireDetachEvent = bp;
            an.floatingConnections = bh;
            an.getParentFromParams = av;
            an.connectionsByScope = bv;
            var am = new al(an);
            am.id = "ep_" + a0();
            bI("click", "endpointClick", am);
            bI("dblclick", "endpointDblClick", am);
            bI("contextmenu", "contextmenu", am);
            if (!jsPlumbAdapter.headless) {
                bM.dragManager.endpointAdded(ak.source)
            }
            return am
        }, k = function (ap, aA, an) {
            var aB = bA[ap];
            if (aB && aB.length) {
                for (var am = 0, ak = aB.length; am < ak; am++) {
                    for (var ao = 0, al = aB[am].connections.length; ao < al; ao++) {
                        var aC = aA(aB[am].connections[ao]);
                        if (aC) {
                            return
                        }
                    }
                    if (an) {
                        an(aB[am])
                    }
                }
            }
        }, f = function (ak) {
            for (var al in bA) {
                k(al, ak)
            }
        }, bO = function (ak, al) {
            return C(ak, function (an, am) {
                bN[am] = al;
                if (X.CurrentLibrary.isDragSupported(an)) {
                    X.CurrentLibrary.setDraggable(an, al)
                }
            })
        }, bs = function (am, al, ao) {
            al = al === "block";
            var an = null;
            if (ao) {
                if (al) {
                    an = function (ap) {
                        ap.setVisible(true, true, true)
                    }
                } else {
                    an = function (ap) {
                        ap.setVisible(false, true, true)
                    }
                }
            }
            var ak = Q(am, "id");
            k(ak, function (ap) {
                if (al && ao) {
                    var aA = ap.sourceId === ak ? 1 : 0;
                    if (ap.endpoints[aA].isVisible()) {
                        ap.setVisible(true)
                    }
                } else {
                    ap.setVisible(al)
                }
            }, an)
        }, a = function (ak) {
            return C(ak, function (am, an) {
                var al = bN[an] == null ? false : bN[an];
                al = !al;
                bN[an] = al;
                X.CurrentLibrary.setDraggable(am, al);
                return al
            })
        }, bC = function (am, ak) {
            var al = null;
            if (ak) {
                al = function (ao) {
                    var an = ao.isVisible();
                    ao.setVisible(!an)
                }
            }
            k(am, function (an) {
                var ao = an.isVisible();
                an.setVisible(!ao)
            }, al)
        }, h = function (ak) {
            var am = ak.timestamp, ap = ak.recalc, al = ak.offset, ao = ak.elId;
            if (bq && !am) {
                am = bn
            }
            if (!ap) {
                if (am && am === bK[ao]) {
                    return {o: bc[ao], s: bf[ao]}
                }
            }
            if (ap || !al) {
                var an = af(ao);
                if (an != null) {
                    bf[ao] = aj(an);
                    bc[ao] = P(an, bM);
                    bK[ao] = am
                }
            } else {
                bc[ao] = al;
                if (bf[ao] == null) {
                    var an = af(ao);
                    if (an != null) {
                        bf[ao] = aj(an)
                    }
                }
            }
            if (bc[ao] && !bc[ao].right) {
                bc[ao].right = bc[ao].left + bf[ao][0];
                bc[ao].bottom = bc[ao].top + bf[ao][1];
                bc[ao].width = bf[ao][0];
                bc[ao].height = bf[ao][1];
                bc[ao].centerx = bc[ao].left + (bc[ao].width / 2);
                bc[ao].centery = bc[ao].top + (bc[ao].height / 2)
            }
            return {o: bc[ao], s: bf[ao]}
        }, bE = function (al) {
            var ak = bc[al];
            if (!ak) {
                return h({elId: al})
            } else {
                return {o: ak, s: bf[al]}
            }
        }, x = function (ao, an, al) {
            var am = af(ao);
            var ak = Q(am, "id");
            if (!ak || ak == "undefined") {
                if (arguments.length == 2 && arguments[1] != undefined) {
                    ak = an
                } else {
                    if (arguments.length == 1 || (arguments.length == 3 && !arguments[2])) {
                        ak = "jsPlumb_" + w + "_" + a0()
                    }
                }
                if (!al) {
                    ah(am, "id", ak)
                }
            }
            return ak
        }, az = function (ak, am, al) {
            ak = ak || function () {
            };
            am = am || function () {
            };
            return function () {
                var ao = null;
                try {
                    ao = am.apply(this, arguments)
                } catch (an) {
                    V(bM, "jsPlumb function failed : " + an)
                }
                if (al == null || (ao !== al)) {
                    try {
                        ak.apply(this, arguments)
                    } catch (an) {
                        V(bM, "wrapped function failed : " + an)
                    }
                }
                return ao
            }
        };
        this.isConnectionBeingDragged = function () {
            return bd != null
        };
        this.setConnectionBeingDragged = function (ak) {
            bd = ak
        };
        this.connectorClass = "_jsPlumb_connector";
        this.hoverClass = "_jsPlumb_hover";
        this.endpointClass = "_jsPlumb_endpoint";
        this.endpointConnectedClass = "_jsPlumb_endpoint_connected";
        this.endpointFullClass = "_jsPlumb_endpoint_full";
        this.endpointDropAllowedClass = "_jsPlumb_endpoint_drop_allowed";
        this.endpointDropForbiddenClass = "_jsPlumb_endpoint_drop_forbidden";
        this.overlayClass = "_jsPlumb_overlay";
        this.draggingClass = "_jsPlumb_dragging";
        this.elementDraggingClass = "_jsPlumb_element_dragging";
        this.sourceElementDraggingClass = "_jsPlumb_source_element_dragging";
        this.targetElementDraggingClass = "_jsPlumb_target_element_dragging";
        this.endpointAnchorClassPrefix = "_jsPlumb_endpoint_anchor";
        this.Anchors = {};
        this.Connectors = {canvas: {}, svg: {}, vml: {}};
        this.Endpoints = {canvas: {}, svg: {}, vml: {}};
        this.Overlays = {canvas: {}, svg: {}, vml: {}};
        this.ConnectorRenderers = {};
        this.addClass = function (ak, al) {
            return X.CurrentLibrary.addClass(ak, al)
        };
        this.removeClass = function (ak, al) {
            return X.CurrentLibrary.removeClass(ak, al)
        };
        this.hasClass = function (ak, al) {
            return X.CurrentLibrary.hasClass(ak, al)
        };
        this.addEndpoint = function (aF, aE, ak) {
            ak = ak || {};
            var aG = X.extend({}, ak);
            X.extend(aG, aE);
            aG.endpoint = aG.endpoint || bM.Defaults.Endpoint || X.Defaults.Endpoint;
            aG.paintStyle = aG.paintStyle || bM.Defaults.EndpointStyle || X.Defaults.EndpointStyle;
            aF = A(aF);
            var aC = [], ap = (Z(aF) || (aF.length != null && !W(aF))) ? aF : [aF];
            for (var aB = 0, aD = ap.length; aB < aD; aB++) {
                var am = af(ap[aB]), aH = x(am);
                aG.source = am;
                h({elId: aH, timestamp: bn});
                var an = E(aG);
                if (aG.parentAnchor) {
                    an.parentAnchor = aG.parentAnchor
                }
                ab(bA, aH, an);
                var ao = bc[aH], aA = bf[aH];
                var al = an.anchor.compute({
                    xy: [ao.left, ao.top],
                    wh: aA,
                    element: an,
                    timestamp: bn
                });
                var aI = {anchorLoc: al, timestamp: bn};
                if (bq) {
                    aI.recalc = false
                }
                if (!bq) {
                    an.paint(aI)
                }
                aC.push(an)
            }
            return aC.length == 1 ? aC[0] : aC
        };
        this.addEndpoints = function (al, ap, aA) {
            var am = [];
            for (var an = 0, ao = ap.length; an < ao; an++) {
                var ak = bM.addEndpoint(al, ap[an], aA);
                if (Z(ak)) {
                    Array.prototype.push.apply(am, ak)
                } else {
                    am.push(ak)
                }
            }
            return am
        };
        this.animate = function (ao, ap, aA) {
            var an = af(ao), ak = Q(ao, "id");
            aA = aA || {};
            var al = X.CurrentLibrary.dragEvents.step;
            var am = X.CurrentLibrary.dragEvents.complete;
            aA[al] = az(aA[al], function () {
                bM.repaint(ak)
            });
            aA[am] = az(aA[am], function () {
                bM.repaint(ak)
            });
            X.CurrentLibrary.animate(an, ap, aA)
        };
        this.checkCondition = function (an, al) {
            var aA = bM.getListener(an), am = true;
            if (aA && aA.length > 0) {
                try {
                    for (var ao = 0, ap = aA.length; ao < ap; ao++) {
                        am = am && aA[ao](al)
                    }
                } catch (ak) {
                    V(bM, "cannot check condition [" + an + "]" + ak)
                }
            }
            return am
        };
        this.checkASyncCondition = function (an, al, am, ao) {
            var ap = bM.getListener(an);
            if (ap && ap.length > 0) {
                try {
                    ap[0](al, am, ao)
                } catch (ak) {
                    V(bM, "cannot asynchronously check condition [" + an + "]" + ak)
                }
            }
        };
        this.connect = function (ak, am) {
            var an = ar(ak, am), al;
            if (an) {
                if (an.deleteEndpointsOnDetach == null) {
                    an.deleteEndpointsOnDetach = true
                }
                al = b(an);
                bH(al, an)
            }
            return al
        };
        this.deleteEndpoint = function (ak, al) {
            bM.doWhileSuspended(function () {
                var am = (typeof ak == "string") ? by[ak] : ak;
                if (am) {
                    var ap = am.getUuid();
                    if (ap) {
                        by[ap] = null
                    }
                    am.detachAll().cleanup();
                    if (am.endpoint.cleanup) {
                        am.endpoint.cleanup()
                    }
                    jsPlumbUtil.removeElements(am.endpoint.getDisplayElements());
                    bM.anchorManager.deleteEndpoint(am);
                    for (var an in bA) {
                        var aC = bA[an];
                        if (aC) {
                            var ao = [];
                            for (var aA = 0, aB = aC.length; aA < aB; aA++) {
                                if (aC[aA] != am) {
                                    ao.push(aC[aA])
                                }
                            }
                            bA[an] = ao
                        }
                        if (bA[an].length < 1) {
                            delete bA[an]
                        }
                    }
                    if (!jsPlumbAdapter.headless) {
                        bM.dragManager.endpointDeleted(am)
                    }
                }
                return bM
            }, al)
        };
        this.deleteEveryEndpoint = function () {
            bM.doWhileSuspended(function () {
                for (var ak in bA) {
                    var an = bA[ak];
                    if (an && an.length) {
                        for (var al = 0, am = an.length; al < am; al++) {
                            bM.deleteEndpoint(an[al], true)
                        }
                    }
                }
                bA = {};
                by = {};
                bM.anchorManager.reset();
                bM.dragManager.reset()
            });
            return bM
        };
        var bp = function (am, ak, ap) {
            var an = bM.Defaults.ConnectionType || bM.getDefaultConnectionType(), ao = am.constructor == an, al = ao ? {
                connection: am,
                source: am.source,
                target: am.target,
                sourceId: am.sourceId,
                targetId: am.targetId,
                sourceEndpoint: am.endpoints[0],
                targetEndpoint: am.endpoints[1]
            } : am;
            if (ak) {
                bM.fire("jsPlumbConnectionDetached", al, ap);
                bM.fire("connectionDetached", al, ap)
            }
            bM.anchorManager.connectionDetached(al)
        };
        this.detach = function () {
            if (arguments.length == 0) {
                return
            }
            var ao = bM.Defaults.ConnectionType || bM.getDefaultConnectionType(), an = arguments[0].constructor == ao, ap = arguments.length == 2 ? an ? (arguments[1] || {}) : arguments[0] : arguments[0], ak = (ap.fireEvent !== false), aB = ap.forceDetach, aA = an ? arguments[0] : ap.connection;
            if (aA) {
                if (aB || jsPlumbUtil.functionChain(true, false, [[aA.endpoints[0], "isDetachAllowed", [aA]], [aA.endpoints[1], "isDetachAllowed", [aA]], [aA, "isDetachAllowed", [aA]], [bM, "checkCondition", ["beforeDetach", aA]]])) {
                    aA.endpoints[0].detach(aA, false, true, ak)
                }
            } else {
                var aC = X.extend({}, ap);
                if (aC.uuids) {
                    aw(aC.uuids[0]).detachFrom(aw(aC.uuids[1]), ak)
                } else {
                    if (aC.sourceEndpoint && aC.targetEndpoint) {
                        aC.sourceEndpoint.detachFrom(aC.targetEndpoint)
                    } else {
                        var al = x(aC.source), am = x(aC.target);
                        k(al, function (aD) {
                            if ((aD.sourceId == al && aD.targetId == am) || (aD.targetId == al && aD.sourceId == am)) {
                                if (bM.checkCondition("beforeDetach", aD)) {
                                    aD.endpoints[0].detach(aD, false, true, ak)
                                }
                            }
                        })
                    }
                }
            }
        };
        this.detachAllConnections = function (am, al) {
            al = al || {};
            am = af(am);
            var ak = Q(am, "id"), ap = bA[ak];
            if (ap && ap.length) {
                for (var an = 0, ao = ap.length; an < ao; an++) {
                    ap[an].detachAll(al.fireEvent)
                }
            }
            return bM
        };
        this.detachEveryConnection = function (al) {
            al = al || {};
            for (var ak in bA) {
                var ao = bA[ak];
                if (ao && ao.length) {
                    for (var am = 0, an = ao.length; am < an; am++) {
                        ao[am].detachAll(al.fireEvent)
                    }
                }
            }
            bv = {};
            return bM
        };
        this.draggable = function (al, an) {
            if (typeof al == "object" && al.length) {
                for (var am = 0, ao = al.length; am < ao; am++) {
                    var ak = af(al[am]);
                    if (ak) {
                        bk(ak, true, an)
                    }
                }
            } else {
                if (al._nodes) {
                    for (var am = 0, ao = al._nodes.length; am < ao; am++) {
                        var ak = af(al._nodes[am]);
                        if (ak) {
                            bk(ak, true, an)
                        }
                    }
                } else {
                    var ak = af(al);
                    if (ak) {
                        bk(ak, true, an)
                    }
                }
            }
            return bM
        };
        this.extend = function (ak, al) {
            return X.CurrentLibrary.extend(ak, al)
        };
        this.getDefaultEndpointType = function () {
            return X.Endpoint
        };
        this.getDefaultConnectionType = function () {
            return X.Connection
        };
        var bL = function (ak, al, an, ap) {
            for (var am = 0, ao = ak.length; am < ao; am++) {
                ak[am][al].apply(ak[am], an)
            }
            return ap(ak)
        }, l = function (ak, al, an) {
            var ao = [];
            for (var am = 0, ap = ak.length; am < ap; am++) {
                ao.push([ak[am][al].apply(ak[am], an), ak[am]])
            }
            return ao
        }, ay = function (ak, al, am) {
            return function () {
                return bL(ak, al, arguments, am)
            }
        }, au = function (ak, al) {
            return function () {
                return l(ak, al, arguments)
            }
        }, bJ = function (ao, ak) {
            var al = [];
            if (ao) {
                if (typeof ao == "string") {
                    if (ao === "*") {
                        return ao
                    }
                    al.push(ao)
                } else {
                    if (ak) {
                        al = ao
                    } else {
                        for (var am = 0, an = ao.length; am < an; am++) {
                            al.push(x(af(ao[am])))
                        }
                    }
                }
            }
            return al
        }, D = function (ak, al, am) {
            if (ak === "*") {
                return true
            }
            return ak.length > 0 ? K(ak, al) != -1 : !am
        };
        this.getConnections = function (al, aE) {
            if (!al) {
                al = {}
            } else {
                if (al.constructor == String) {
                    al = {scope: al}
                }
            }
            var am = al.scope || bM.getDefaultScope(), an = bJ(am, true), aF = bJ(al.source), ap = bJ(al.target), aB = (!aE && an.length > 1) ? {} : [], ak = function (aH, aG) {
                if (!aE && an.length > 1) {
                    var aI = aB[aH];
                    if (aI == null) {
                        aI = [];
                        aB[aH] = aI
                    }
                    aI.push(aG)
                } else {
                    aB.push(aG)
                }
            };
            for (var aC in bv) {
                if (D(an, aC)) {
                    for (var aD = 0, aA = bv[aC].length; aD < aA; aD++) {
                        var ao = bv[aC][aD];
                        if (D(aF, ao.sourceId) && D(ap, ao.targetId)) {
                            ak(aC, ao)
                        }
                    }
                }
            }
            return aB
        };
        var r = function (al, ak) {
            return function (am) {
                for (var ao = 0, an = al.length; ao < an; ao++) {
                    am(al[ao])
                }
                return ak(al)
            }
        }, o = function (ak) {
            return function (al) {
                return ak[al]
            }
        };
        var n = function (al, ak) {
            var aA = {
                length: al.length,
                each: r(al, ak),
                get: o(al)
            }, am = ["setHover", "removeAllOverlays", "setLabel", "addClass", "addOverlay", "removeOverlay", "removeOverlays", "showOverlay", "hideOverlay", "showOverlays", "hideOverlays", "setPaintStyle", "setHoverPaintStyle", "setSuspendEvents", "setParameter", "setParameters", "setVisible", "repaint", "addType", "toggleType", "removeType", "removeClass", "setType", "bind", "unbind"], an = ["getLabel", "getOverlay", "isHover", "getParameter", "getParameters", "getPaintStyle", "getHoverPaintStyle", "isVisible", "hasType", "getType", "isSuspendEvents"];
            for (var ap = 0, ao = am.length; ap < ao; ap++) {
                aA[am[ap]] = ay(al, am[ap], ak)
            }
            for (var ap = 0, ao = an.length; ap < ao; ap++) {
                aA[an[ap]] = au(al, an[ap])
            }
            return aA
        };
        var y = function (ak) {
            var al = n(ak, y);
            return X.CurrentLibrary.extend(al, {
                setDetachable: ay(ak, "setDetachable", y),
                setReattach: ay(ak, "setReattach", y),
                setConnector: ay(ak, "setConnector", y),
                detach: function () {
                    for (var an = 0, am = ak.length; an < am; an++) {
                        bM.detach(ak[an])
                    }
                },
                isDetachable: au(ak, "isDetachable"),
                isReattach: au(ak, "isReattach")
            })
        };
        var bl = function (ak) {
            var al = n(ak, bl);
            return X.CurrentLibrary.extend(al, {
                setEnabled: ay(ak, "setEnabled", bl),
                setAnchor: ay(ak, "setAnchor", bl),
                isEnabled: au(ak, "isEnabled"),
                detachAll: function () {
                    for (var an = 0, am = ak.length; an < am; an++) {
                        ak[an].detachAll()
                    }
                },
                remove: function () {
                    for (var an = 0, am = ak.length; an < am; an++) {
                        bM.deleteEndpoint(ak[an])
                    }
                }
            })
        };
        this.select = function (al) {
            al = al || {};
            al.scope = al.scope || "*";
            var ak = al.connections || bM.getConnections(al, true);
            return y(ak)
        };
        this.selectEndpoints = function (am) {
            am = am || {};
            am.scope = am.scope || "*";
            var aE = !am.element && !am.source && !am.target, aB = aE ? "*" : bJ(am.element), aH = aE ? "*" : bJ(am.source), aK = aE ? "*" : bJ(am.target), ap = bJ(am.scope, true);
            var aI = [];
            for (var aG in bA) {
                var al = D(aB, aG, true), ao = D(aH, aG, true), aL = aH != "*", aJ = D(aK, aG, true), aC = aK != "*";
                if (al || ao || aJ) {
                    inner:for (var an = 0, aD = bA[aG].length; an < aD; an++) {
                        var aA = bA[aG][an];
                        if (D(ap, aA.scope, true)) {
                            var ak = (aL && aH.length > 0 && !aA.isSource), aF = (aC && aK.length > 0 && !aA.isTarget);
                            if (ak || aF) {
                                continue inner
                            }
                            aI.push(aA)
                        }
                    }
                }
            }
            return bl(aI)
        };
        this.getAllConnections = function () {
            return bv
        };
        this.getDefaultScope = function () {
            return m
        };
        this.getEndpoint = aw;
        this.getEndpoints = function (ak) {
            return bA[x(ak)]
        };
        this.getId = x;
        this.getOffset = function (ak) {
            var al = bc[ak];
            return h({elId: ak})
        };
        this.getSelector = function () {
            return X.CurrentLibrary.getSelector.apply(null, arguments)
        };
        this.getSize = function (ak) {
            var al = bf[ak];
            if (!al) {
                h({elId: ak})
            }
            return bf[ak]
        };
        this.appendElement = bx;
        var bB = false;
        this.isHoverSuspended = function () {
            return bB
        };
        this.setHoverSuspended = function (ak) {
            bB = ak
        };
        var bw = function (ak) {
            return function () {
                return jsPlumbAdapter.isRenderModeAvailable(ak)
            }
        };
        this.isCanvasAvailable = bw("canvas");
        this.isSVGAvailable = bw("svg");
        this.isVMLAvailable = bw("vml");
        this.hide = function (al, ak) {
            bs(al, "none", ak);
            return bM
        };
        this.idstamp = a0;
        this.init = function () {
            if (!s) {
                bM.anchorManager = new X.AnchorManager({jsPlumbInstance: bM});
                bM.setRenderMode(bM.Defaults.RenderMode);
                s = true;
                bM.fire("ready", bM)
            }
        };
        this.log = p;
        this.jsPlumbUIComponent = R;
        this.makeAnchor = function () {
            var am = function (aC, aB) {
                if (X.Anchors[aC]) {
                    return new X.Anchors[aC](aB)
                }
                if (!bM.Defaults.DoNotThrowErrors) {
                    throw {msg: "jsPlumb: unknown anchor type '" + aC + "'"}
                }
            };
            if (arguments.length == 0) {
                return null
            }
            var ak = arguments[0], ao = arguments[1], ap = arguments[2], an = null;
            if (ak.compute && ak.getOrientation) {
                return ak
            } else {
                if (typeof ak == "string") {
                    an = am(arguments[0], {elementId: ao, jsPlumbInstance: bM})
                } else {
                    if (Z(ak)) {
                        if (Z(ak[0]) || W(ak[0])) {
                            if (ak.length == 2 && W(ak[0]) && L(ak[1])) {
                                var aA = X.extend({
                                    elementId: ao,
                                    jsPlumbInstance: bM
                                }, ak[1]);
                                an = am(ak[0], aA)
                            } else {
                                an = new X.DynamicAnchor({
                                    anchors: ak,
                                    selector: null,
                                    elementId: ao,
                                    jsPlumbInstance: ap
                                })
                            }
                        } else {
                            var al = {
                                x: ak[0],
                                y: ak[1],
                                orientation: (ak.length >= 4) ? [ak[2], ak[3]] : [0, 0],
                                offsets: (ak.length >= 6) ? [ak[4], ak[5]] : [0, 0],
                                elementId: ao,
                                jsPlumbInstance: ap,
                                cssClass: ak.length == 7 ? ak[6] : null
                            };
                            an = new X.Anchor(al);
                            an.clone = function () {
                                return new X.Anchor(al)
                            }
                        }
                    }
                }
            }
            if (!an.id) {
                an.id = "anchor_" + a0()
            }
            return an
        };
        this.makeAnchors = function (am, ao, ap) {
            var ak = [];
            for (var an = 0, al = am.length; an < al; an++) {
                if (typeof am[an] == "string") {
                    ak.push(X.Anchors[am[an]]({
                        elementId: ao,
                        jsPlumbInstance: ap
                    }))
                } else {
                    if (Z(am[an])) {
                        ak.push(bM.makeAnchor(am[an], ao, ap))
                    }
                }
            }
            return ak
        };
        this.makeDynamicAnchor = function (al, ak) {
            return new X.DynamicAnchor({
                anchors: al,
                selector: ak,
                elementId: null,
                jsPlumbInstance: bM
            })
        };
        var bu = {}, B = {}, bg = {}, ax = {}, e = function (al, ak) {
            al.paintStyle = al.paintStyle || bM.Defaults.EndpointStyles[ak] || bM.Defaults.EndpointStyle || X.Defaults.EndpointStyles[ak] || X.Defaults.EndpointStyle;
            al.hoverPaintStyle = al.hoverPaintStyle || bM.Defaults.EndpointHoverStyles[ak] || bM.Defaults.EndpointHoverStyle || X.Defaults.EndpointHoverStyles[ak] || X.Defaults.EndpointHoverStyle;
            al.anchor = al.anchor || bM.Defaults.Anchors[ak] || bM.Defaults.Anchor || X.Defaults.Anchors[ak] || X.Defaults.Anchor;
            al.endpoint = al.endpoint || bM.Defaults.Endpoints[ak] || bM.Defaults.Endpoint || X.Defaults.Endpoints[ak] || X.Defaults.Endpoint
        };
        this.makeTarget = function (aC, aB, ak) {
            var aE = X.extend({_jsPlumb: bM}, ak);
            X.extend(aE, aB);
            e(aE, 1);
            var an = X.CurrentLibrary, am = aE.scope || bM.Defaults.Scope, aA = !(aE.deleteEndpointsOnDetach === false), aD = aE.maxConnections || -1, aF = aE.onMaxConnections;
            _doOne = function (aG) {
                var aI = x(aG);
                bu[aI] = aE;
                bg[aI] = aE.uniqueEndpoint, ax[aI] = aD, ba[aI] = true, proxyComponent = new R(aE);
                var aJ = X.extend({}, aE.dropOptions || {}), aK = function () {
                    var aU = X.CurrentLibrary.getDropEvent(arguments), aR = bM.select({target: aI}).length;
                    bM.currentlyDragging = false;
                    var aT = af(an.getDragObject(arguments)), aS = Q(aT, "dragId"), aX = Q(aT, "originalScope"), aM = bh[aS], aW = aM.endpoints[0], aY = aE.endpoint ? X.extend({}, aE.endpoint) : {};
                    if (!ba[aI] || ax[aI] > 0 && aR >= ax[aI]) {
                        if (aF) {
                            aF({element: aG, connection: aM}, aU)
                        }
                        return false
                    }
                    aW.anchor.locked = false;
                    if (aX) {
                        an.setDragScope(aT, aX)
                    }
                    var aO = proxyComponent.isDropAllowed(aM.sourceId, x(aG), aM.scope, aM, null);
                    if (aM.endpointsToDeleteOnDetach) {
                        if (aW === aM.endpointsToDeleteOnDetach[0]) {
                            aM.endpointsToDeleteOnDetach[0] = null
                        } else {
                            if (aW === aM.endpointsToDeleteOnDetach[1]) {
                                aM.endpointsToDeleteOnDetach[1] = null
                            }
                        }
                    }
                    if (aM.suspendedEndpoint) {
                        aM.targetId = aM.suspendedEndpoint.elementId;
                        aM.target = an.getElementObject(aM.suspendedEndpoint.elementId);
                        aM.endpoints[1] = aM.suspendedEndpoint
                    }
                    if (aO) {
                        aW.detach(aM, false, true, false);
                        var aV = B[aI] || bM.addEndpoint(aG, aE);
                        if (aE.uniqueEndpoint) {
                            B[aI] = aV
                        }
                        aV._makeTargetCreator = true;
                        if (aV.anchor.positionFinder != null) {
                            var aL = an.getUIPosition(arguments, bM.getZoom()), aP = P(aG, bM), aZ = aj(aG), aQ = aV.anchor.positionFinder(aL, aP, aZ, aV.anchor.constructorParams);
                            aV.anchor.x = aQ[0];
                            aV.anchor.y = aQ[1]
                        }
                        var aN = bM.connect({
                            source: aW,
                            target: aV,
                            scope: aX,
                            previousConnection: aM,
                            container: aM.parent,
                            deleteEndpointsOnDetach: aA,
                            endpointsToDeleteOnDetach: aA ? [aW, aV] : null,
                            doNotFireConnectionEvent: aW.endpointWillMoveAfterConnection
                        });
                        if (aM.endpoints[1]._makeTargetCreator && aM.endpoints[1].connections.length < 2) {
                            bM.deleteEndpoint(aM.endpoints[1])
                        }
                        aN.repaint()
                    } else {
                        if (aM.suspendedEndpoint) {
                            if (aM.isReattach()) {
                                aM.setHover(false);
                                aM.floatingAnchorIndex = null;
                                aM.suspendedEndpoint.addConnection(aM);
                                bM.repaint(aW.elementId)
                            } else {
                                aW.detach(aM, false, true, true, aU)
                            }
                        }
                    }
                };
                var aH = an.dragEvents.drop;
                aJ.scope = aJ.scope || am;
                aJ[aH] = az(aJ[aH], aK);
                an.initDroppable(aG, aJ, true)
            };
            aC = A(aC);
            var ao = aC.length && aC.constructor != String ? aC : [aC];
            for (var ap = 0, al = ao.length; ap < al; ap++) {
                _doOne(af(ao[ap]))
            }
            return bM
        };
        this.unmakeTarget = function (al, ak) {
            al = X.CurrentLibrary.getElementObject(al);
            var am = x(al);
            if (!ak) {
                delete bu[am];
                delete bg[am];
                delete ax[am];
                delete ba[am]
            }
            return bM
        };
        this.makeTargets = function (am, ak, ao) {
            for (var an = 0, al = am.length; an < al; an++) {
                bM.makeTarget(am[an], ak, ao)
            }
        };
        var at = {}, br = {}, bo = {}, c = {}, u = {}, q = {}, ba = {}, bz = function (ap, ak, aA) {
            var am = ap.target || ap.srcElement, an = false, al = bM.getSelector(ak, aA);
            for (var ao = 0; ao < al.length; ao++) {
                if (al[ao] == am) {
                    an = true;
                    break
                }
            }
            return an
        };
        this.makeSource = function (aA, ap, ak) {
            var aC = X.extend({}, ak);
            X.extend(aC, ap);
            e(aC, 0);
            var am = X.CurrentLibrary, aB = aC.maxConnections || -1, aD = aC.onMaxConnections, aE = function (aO) {
                var aI = x(aO), aM = function () {
                    return aC.parent == null ? aC.parent : aC.parent === "parent" ? am.getElementObject(am.getDOMElement(aO).parentNode) : am.getElementObject(aC.parent)
                }, aJ = aC.parent != null ? bM.getId(aM()) : aI;
                at[aJ] = aC;
                bo[aJ] = aC.uniqueEndpoint;
                c[aJ] = true;
                var aH = am.dragEvents.stop, aP = am.dragEvents.drag, aN = X.extend({}, aC.dragOptions || {}), aF = aN.drag, aL = aN.stop, aK = null, aQ = false;
                q[aJ] = aB;
                aN.scope = aN.scope || aC.scope;
                aN[aP] = az(aN[aP], function () {
                    if (aF) {
                        aF.apply(this, arguments)
                    }
                    aQ = false
                });
                aN[aH] = az(aN[aH], function () {
                    if (aL) {
                        aL.apply(this, arguments)
                    }
                    bM.currentlyDragging = false;
                    if (aK.connections.length == 0) {
                        bM.deleteEndpoint(aK)
                    } else {
                        am.unbind(aK.canvas, "mousedown");
                        var aU = aC.anchor || bM.Defaults.Anchor, aS = aK.anchor, aT = aK.connections[0];
                        aK.setAnchor(bM.makeAnchor(aU, aI, bM));
                        if (aC.parent) {
                            var aW = aM();
                            if (aW) {
                                var aV = aK.elementId, aR = aC.container || bM.Defaults.Container || X.Defaults.Container;
                                aK.setElement(aW, aR);
                                aK.endpointWillMoveAfterConnection = false;
                                bM.anchorManager.rehomeEndpoint(aV, aW);
                                aT.previousConnection = null;
                                U(bv[aT.scope], function (aX) {
                                    return aX.id === aT.id
                                });
                                bM.anchorManager.connectionDetached({
                                    sourceId: aT.sourceId,
                                    targetId: aT.targetId,
                                    connection: aT
                                });
                                bH(aT)
                            }
                        }
                        aK.repaint();
                        bM.repaint(aK.elementId);
                        bM.repaint(aT.targetId)
                    }
                });
                var aG = function (aR) {
                    if (!c[aJ]) {
                        return
                    }
                    if (aC.filter) {
                        var aZ = am.getOriginalEvent(aR), aY = jsPlumbUtil.isString(aC.filter) ? bz(aZ, aO, aC.filter) : aC.filter(aZ, aO);
                        if (aY === false) {
                            return
                        }
                    }
                    var aU = bM.select({source: aJ}).length;
                    if (q[aJ] >= 0 && aU >= q[aJ]) {
                        if (aD) {
                            aD({element: aO, maxConnections: aB}, aR)
                        }
                        return false
                    }
                    var a2 = h({elId: aI}).o, a5 = bM.getZoom(), a3 = (((aR.pageX || aR.page.x) / a5) - a2.left) / a2.width, a4 = (((aR.pageY || aR.page.y) / a5) - a2.top) / a2.height, aT = a3, aW = a4;
                    if (aC.parent) {
                        var a6 = aM(), aS = x(a6);
                        a2 = h({elId: aS}).o;
                        aT = ((aR.pageX || aR.page.x) - a2.left) / a2.width, aW = ((aR.pageY || aR.page.y) - a2.top) / a2.height
                    }
                    var aX = {};
                    X.extend(aX, aC);
                    aX.isSource = true;
                    aX.anchor = [a3, a4, 0, 0];
                    aX.parentAnchor = [aT, aW, 0, 0];
                    aX.dragOptions = aN;
                    if (aC.parent) {
                        var aV = aX.container || bM.Defaults.Container || X.Defaults.Container;
                        if (aV) {
                            aX.container = aV
                        } else {
                            aX.container = X.CurrentLibrary.getParent(aM())
                        }
                    }
                    aK = bM.addEndpoint(aI, aX);
                    aQ = true;
                    aK.endpointWillMoveAfterConnection = aC.parent != null;
                    aK.endpointWillMoveTo = aC.parent ? aM() : null;
                    aK.addedViaMouse = true;
                    var a1 = function () {
                        if (aQ) {
                            bM.deleteEndpoint(aK)
                        }
                    };
                    bM.registerListener(aK.canvas, "mouseup", a1);
                    bM.registerListener(aO, "mouseup", a1);
                    am.trigger(aK.canvas, "mousedown", aR)
                };
                bM.registerListener(aO, "mousedown", aG);
                u[aI] = aG;
                if (aC.filter && jsPlumbUtil.isString(aC.filter)) {
                    am.setDragFilter(aO, aC.filter)
                }
            };
            aA = A(aA);
            var an = aA.length && aA.constructor != String ? aA : [aA];
            for (var ao = 0, al = an.length; ao < al; ao++) {
                aE(af(an[ao]))
            }
            return bM
        };
        this.unmakeSource = function (am, al) {
            am = X.CurrentLibrary.getElementObject(am);
            var ak = x(am), an = u[ak];
            if (an) {
                bM.unregisterListener(am, "mousedown", an)
            }
            if (!al) {
                delete at[ak];
                delete bo[ak];
                delete c[ak];
                delete u[ak];
                delete q[ak]
            }
            return bM
        };
        this.unmakeEverySource = function () {
            for (var ak in c) {
                bM.unmakeSource(ak, true)
            }
            at = {};
            bo = {};
            c = {};
            u = {}
        };
        this.unmakeEveryTarget = function () {
            for (var ak in ba) {
                bM.unmakeTarget(ak, true)
            }
            bu = {};
            bg = {};
            ax = {};
            ba = {};
            return bM
        };
        this.makeSources = function (am, ak, ao) {
            for (var an = 0, al = am.length; an < al; an++) {
                bM.makeSource(am[an], ak, ao)
            }
            return bM
        };
        var bF = function (am, an, al, aB) {
            var aA = am == "source" ? c : ba;
            if (W(an)) {
                aA[an] = aB ? !aA[an] : al
            } else {
                if (an.length) {
                    an = A(an);
                    for (var ap = 0, ao = an.length; ap < ao; ap++) {
                        var ak = _el = X.CurrentLibrary.getElementObject(an[ap]), ak = x(_el);
                        aA[ak] = aB ? !aA[ak] : al
                    }
                }
            }
            return bM
        };
        this.setSourceEnabled = function (al, ak) {
            return bF("source", al, ak)
        };
        this.toggleSourceEnabled = function (ak) {
            bF("source", ak, null, true);
            return bM.isSourceEnabled(ak)
        };
        this.isSource = function (ak) {
            ak = X.CurrentLibrary.getElementObject(ak);
            return c[x(ak)] != null
        };
        this.isSourceEnabled = function (ak) {
            ak = X.CurrentLibrary.getElementObject(ak);
            return c[x(ak)] === true
        };
        this.setTargetEnabled = function (al, ak) {
            return bF("target", al, ak)
        };
        this.toggleTargetEnabled = function (ak) {
            bF("target", ak, null, true);
            return bM.isTargetEnabled(ak)
        };
        this.isTarget = function (ak) {
            ak = X.CurrentLibrary.getElementObject(ak);
            return ba[x(ak)] != null
        };
        this.isTargetEnabled = function (ak) {
            ak = X.CurrentLibrary.getElementObject(ak);
            return ba[x(ak)] === true
        };
        this.ready = function (ak) {
            bM.bind("ready", ak)
        };
        this.repaint = function (am, ak, al) {
            if (typeof am == "object" && am.length) {
                for (var ao = 0, an = am.length; ao < an; ao++) {
                    bm(af(am[ao]), ak, al)
                }
            } else {
                bm(af(am), ak, al)
            }
            return bM
        };
        this.repaintEverything = function () {
            var ak = null;
            for (var al in bA) {
                bm(af(al), null, ak)
            }
            return bM
        };
        this.removeAllEndpoints = function (al, ak) {
            var am = function (an) {
                var aB = jsPlumbUtil.isString(an) ? an : x(af(an)), ao = bA[aB];
                if (ao) {
                    for (var aA = 0, ap = ao.length; aA < ap; aA++) {
                        bM.deleteEndpoint(ao[aA])
                    }
                }
                delete bA[aB];
                if (ak) {
                    var aC = X.CurrentLibrary.getDOMElement(af(an));
                    if (aC && aC.nodeType != 3 && aC.nodeType != 8) {
                        for (var aA = 0, ap = aC.childNodes.length; aA < ap; aA++) {
                            am(aC.childNodes[aA])
                        }
                    }
                }
            };
            am(al);
            return bM
        };
        this.remove = function (am) {
            var ak = af(am);
            var al = jsPlumbUtil.isString(am) ? am : x(ak);
            bM.doWhileSuspended(function () {
                bM.removeAllEndpoints(al, true);
                bM.dragManager.elementRemoved(al)
            });
            X.CurrentLibrary.removeElement(ak)
        };
        var be = {}, bj = function () {
            for (var am in be) {
                for (var an = 0, al = be[am].length; an < al; an++) {
                    var ak = be[am][an];
                    X.CurrentLibrary.unbind(ak.el, ak.event, ak.listener)
                }
            }
            be = {}
        };
        this.registerListener = function (al, am, ak) {
            X.CurrentLibrary.bind(al, am, ak);
            ab(be, am, {el: al, event: am, listener: ak})
        };
        this.unregisterListener = function (al, am, ak) {
            X.CurrentLibrary.unbind(al, am, ak);
            U(be, function (an) {
                return an.type == am && an.listener == ak
            })
        };
        this.reset = function () {
            bM.deleteEveryEndpoint();
            bM.unbind();
            bu = {};
            B = {};
            bg = {};
            ax = {};
            at = {};
            br = {};
            bo = {};
            q = {};
            bj();
            bM.anchorManager.reset();
            if (!jsPlumbAdapter.headless) {
                bM.dragManager.reset()
            }
        };
        this.setDefaultScope = function (ak) {
            m = ak;
            return bM
        };
        this.setDraggable = bO;
        this.setId = function (aA, ap, al) {
            var aC = aA.constructor == String ? aA : bM.getId(aA), aB = bM.getConnections({
                source: aC,
                scope: "*"
            }, true), an = bM.getConnections({target: aC, scope: "*"}, true);
            ap = "" + ap;
            if (!al) {
                aA = X.CurrentLibrary.getElementObject(aC);
                X.CurrentLibrary.setAttribute(aA, "id", ap)
            }
            aA = X.CurrentLibrary.getElementObject(ap);
            bA[ap] = bA[aC] || [];
            for (var am = 0, ak = bA[ap].length; am < ak; am++) {
                bA[ap][am].setElementId(ap);
                bA[ap][am].setReferenceElement(aA)
            }
            delete bA[aC];
            bM.anchorManager.changeId(aC, ap);
            if (!jsPlumbAdapter.headless) {
                bM.dragManager.changeId(aC, ap)
            }
            var ao = function (aF, aE, aG) {
                for (var aD = 0, aH = aF.length; aD < aH; aD++) {
                    aF[aD].endpoints[aE].setElementId(ap);
                    aF[aD].endpoints[aE].setReferenceElement(aA);
                    aF[aD][aG + "Id"] = ap;
                    aF[aD][aG] = aA
                }
            };
            ao(aB, 0, "source");
            ao(an, 1, "target");
            bM.repaint(ap)
        };
        this.setIdChanged = function (ak, al) {
            bM.setId(ak, al, true)
        };
        this.setDebugLog = function (ak) {
            p = ak
        };
        var bq = false, bn = null;
        this.setSuspendDrawing = function (ak, al) {
            bq = ak;
            if (ak) {
                bn = new Date().getTime()
            } else {
                bn = null
            }
            if (al) {
                bM.repaintEverything()
            }
        };
        this.isSuspendDrawing = function () {
            return bq
        };
        this.getSuspendedAt = function () {
            return bn
        };
        this.doWhileSuspended = function (al, am) {
            bM.setSuspendDrawing(true);
            try {
                al()
            } catch (ak) {
                V("Function run while suspended failed", ak)
            }
            bM.setSuspendDrawing(false, !am)
        };
        this.updateOffset = h;
        this.getOffset = function (ak) {
            return bc[ak]
        };
        this.getSize = function (ak) {
            return bf[ak]
        };
        this.getCachedData = bE;
        this.timestamp = T;
        this.SVG = "svg";
        this.CANVAS = "canvas";
        this.VML = "vml";
        this.setRenderMode = function (ak) {
            g = jsPlumbAdapter.setRenderMode(ak);
            return g
        };
        this.getRenderMode = function () {
            return g
        };
        this.show = function (al, ak) {
            bs(al, "block", ak);
            return bM
        };
        this.sizeCanvas = function (am, ao, ak, an, al) {
            if (am) {
                am.style.height = al + "px";
                am.height = al;
                am.style.width = an + "px";
                am.width = an;
                am.style.left = ao + "px";
                am.style.top = ak + "px"
            }
            return bM
        };
        this.getTestHarness = function () {
            return {
                endpointsByElement: bA,
                endpointCount: function (al) {
                    var ak = bA[al];
                    return ak ? ak.length : 0
                },
                connectionCount: function (al) {
                    al = al || m;
                    var ak = bv[al];
                    return ak ? ak.length : 0
                },
                getId: x,
                makeAnchor: self.makeAnchor,
                makeDynamicAnchor: self.makeDynamicAnchor
            }
        };
        this.toggleVisible = bC;
        this.toggleDraggable = a;
        this.wrap = az;
        this.addListener = this.bind;
        this.adjustForParentOffsetAndScroll = function (ak, an) {
            var am = null, ap = ak;
            if (an.tagName.toLowerCase() === "svg" && an.parentNode) {
                am = an.parentNode
            } else {
                if (an.offsetParent) {
                    am = an.offsetParent
                }
            }
            if (am != null) {
                var ao = am.tagName.toLowerCase() === "body" ? {
                    left: 0,
                    top: 0
                } : P(am, bM), al = am.tagName.toLowerCase() === "body" ? {
                    left: 0,
                    top: 0
                } : {left: am.scrollLeft, top: am.scrollTop};
                ap[0] = ak[0] - ao.left + al.left;
                ap[1] = ak[1] - ao.top + al.top
            }
            return ap
        };
        if (!jsPlumbAdapter.headless) {
            bM.dragManager = jsPlumbAdapter.getDragManager(bM);
            bM.recalculateOffsets = bM.dragManager.updateOffsets
        }
    };
    var X = new J();
    if (typeof window != "undefined") {
        window.jsPlumb = X
    }
    X.getInstance = function (a) {
        var b = new J(a);
        b.init();
        return b
    };
    if (typeof define === "function") {
        define("jsplumb", [], function () {
            return X
        });
        define("jsplumbinstance", [], function () {
            return X.getInstance()
        })
    }
    if (typeof exports !== "undefined") {
        exports.jsPlumb = X
    }
})();
(function () {
    jsPlumb.AnchorManager = function (a) {
        var V = {}, G = {}, D = {}, O = {}, J = {}, b = {
            HORIZONTAL: "horizontal",
            VERTICAL: "vertical",
            DIAGONAL: "diagonal",
            IDENTITY: "identity"
        }, T = {}, M = this, S = {}, K = a.jsPlumbInstance, U = jsPlumb.CurrentLibrary, N = {}, Q = function (g, f, m, q, l, e) {
            if (g === f) {
                return {orientation: b.IDENTITY, a: ["top", "top"]}
            }
            var r = Math.atan2((q.centery - m.centery), (q.centerx - m.centerx)), n = Math.atan2((m.centery - q.centery), (m.centerx - q.centerx)), o = ((m.left <= q.left && m.right >= q.left) || (m.left <= q.right && m.right >= q.right) || (m.left <= q.left && m.right >= q.right) || (q.left <= m.left && q.right >= m.right)), h = ((m.top <= q.top && m.bottom >= q.top) || (m.top <= q.bottom && m.bottom >= q.bottom) || (m.top <= q.top && m.bottom >= q.bottom) || (q.top <= m.top && q.bottom >= m.bottom)), k = function (s) {
                return [l.isContinuous ? l.verifyEdge(s[0]) : s[0], e.isContinuous ? e.verifyEdge(s[1]) : s[1]]
            }, p = {orientation: b.DIAGONAL, theta: r, theta2: n};
            if (!(o || h)) {
                if (q.left > m.left && q.top > m.top) {
                    p.a = ["right", "top"]
                } else {
                    if (q.left > m.left && m.top > q.top) {
                        p.a = ["top", "left"]
                    } else {
                        if (q.left < m.left && q.top < m.top) {
                            p.a = ["top", "right"]
                        } else {
                            if (q.left < m.left && q.top > m.top) {
                                p.a = ["left", "top"]
                            }
                        }
                    }
                }
            } else {
                if (o) {
                    p.orientation = b.HORIZONTAL;
                    p.a = m.top < q.top ? ["bottom", "top"] : ["top", "bottom"]
                } else {
                    p.orientation = b.VERTICAL;
                    p.a = m.left < q.left ? ["right", "left"] : ["left", "right"]
                }
            }
            p.a = k(p.a);
            return p
        }, I = function (h, n, p, o, g, m, w) {
            var f = [], x = n[g ? 0 : 1] / (o.length + 1);
            for (var l = 0; l < o.length; l++) {
                var e = (l + 1) * x, y = m * n[g ? 1 : 0];
                if (w) {
                    e = n[g ? 0 : 1] - e
                }
                var q = (g ? e : y), u = p[0] + q, r = q / n[0], s = (g ? y : e), v = p[1] + s, k = s / n[1];
                f.push([u, v, r, k, o[l][1], o[l][2]])
            }
            return f
        }, L = function (e) {
            return function (g, h) {
                var f = true;
                if (e) {
                    f = g[0][0] < h[0][0]
                } else {
                    f = g[0][0] > h[0][0]
                }
                return f === false ? -1 : 1
            }
        }, X = function (g, h) {
            var e = g[0][0] < 0 ? -Math.PI - g[0][0] : Math.PI - g[0][0], f = h[0][0] < 0 ? -Math.PI - h[0][0] : Math.PI - h[0][0];
            if (e > f) {
                return 1
            } else {
                return g[0][1] > h[0][1] ? 1 : -1
            }
        }, F = {
            top: function (e, f) {
                return e[0] > f[0] ? 1 : -1
            }, right: L(true), bottom: L(true), left: X
        }, H = function (f, e) {
            return f.sort(e)
        }, R = function (k, l) {
            var e = K.getCachedData(k), g = e.s, f = e.o, h = function (v, n, A, w, p, q, B) {
                if (w.length > 0) {
                    var r = H(w, F[v]), u = v === "right" || v === "top", C = I(v, n, A, r, p, q, u);
                    var m = function (ac, ab) {
                        var ad = K.adjustForParentOffsetAndScroll([ab[0], ab[1]], ac.canvas);
                        D[ac.id] = [ad[0], ad[1], ab[2], ab[3]];
                        J[ac.id] = B
                    };
                    for (var y = 0; y < C.length; y++) {
                        var s = C[y][4], o = s.endpoints[0].elementId === k, x = s.endpoints[1].elementId === k;
                        if (o) {
                            m(s.endpoints[0], C[y])
                        } else {
                            if (x) {
                                m(s.endpoints[1], C[y])
                            }
                        }
                    }
                }
            };
            h("bottom", g, [f.left, f.top], l.bottom, true, 1, [0, 1]);
            h("top", g, [f.left, f.top], l.top, true, 0, [0, -1]);
            h("left", g, [f.left, f.top], l.left, false, 0, [-1, 0]);
            h("right", g, [f.left, f.top], l.right, false, 1, [1, 0])
        };
        this.reset = function () {
            V = {};
            T = {};
            S = {}
        };
        this.addFloatingConnection = function (f, e) {
            N[f] = e
        };
        this.removeFloatingConnection = function (e) {
            delete N[e]
        };
        this.newConnection = function (g) {
            var e = g.sourceId, h = g.targetId, l = g.endpoints, f = true, k = function (o, n, q, m, p) {
                if ((e == h) && q.isContinuous) {
                    U.removeElement(l[1].canvas);
                    f = false
                }
                jsPlumbUtil.addToList(T, m, [p, n, q.constructor == jsPlumb.DynamicAnchor])
            };
            k(0, l[0], l[0].anchor, h, g);
            if (f) {
                k(1, l[1], l[1].anchor, e, g)
            }
        };
        var W = function (e) {
            (function (f, h) {
                if (f) {
                    var g = function (k) {
                        return k[4] == h
                    };
                    jsPlumbUtil.removeWithFunction(f.top, g);
                    jsPlumbUtil.removeWithFunction(f.left, g);
                    jsPlumbUtil.removeWithFunction(f.bottom, g);
                    jsPlumbUtil.removeWithFunction(f.right, g)
                }
            })(S[e.elementId], e.id)
        };
        this.connectionDetached = function (e) {
            var k = e.connection || e, f = e.sourceId, h = e.targetId, l = k.endpoints, g = function (o, n, q, m, p) {
                if (q.constructor == jsPlumb.FloatingAnchor) {
                } else {
                    jsPlumbUtil.removeWithFunction(T[m], function (r) {
                        return r[0].id == p.id
                    })
                }
            };
            g(1, l[1], l[1].anchor, f, k);
            g(0, l[0], l[0].anchor, h, k);
            W(k.endpoints[0]);
            W(k.endpoints[1]);
            M.redraw(k.sourceId);
            M.redraw(k.targetId)
        };
        this.add = function (e, f) {
            jsPlumbUtil.addToList(V, f, e)
        };
        this.changeId = function (e, f) {
            T[f] = T[e];
            V[f] = V[e];
            delete T[e];
            delete V[e]
        };
        this.getConnectionsFor = function (e) {
            return T[e] || []
        };
        this.getEndpointsFor = function (e) {
            return V[e] || []
        };
        this.deleteEndpoint = function (e) {
            jsPlumbUtil.removeWithFunction(V[e.elementId], function (f) {
                return f.id == e.id
            });
            W(e)
        };
        this.clearFor = function (e) {
            delete V[e];
            V[e] = []
        };
        var P = function (g, w, n, A, s, r, p, u, e, q, B, h) {
            var l = -1, C = -1, y = A.endpoints[p], o = y.id, v = [1, 0][p], ab = [[w, n], A, s, r, o], aa = g[e], f = y._continuousAnchorEdge ? g[y._continuousAnchorEdge] : null;
            if (f) {
                var k = jsPlumbUtil.findWithFunction(f, function (Y) {
                    return Y[4] == o
                });
                if (k != -1) {
                    f.splice(k, 1);
                    for (var m = 0; m < f.length; m++) {
                        jsPlumbUtil.addWithFunction(B, f[m][1], function (Y) {
                            return Y.id == f[m][1].id
                        });
                        jsPlumbUtil.addWithFunction(h, f[m][1].endpoints[p], function (Y) {
                            return Y.id == f[m][1].endpoints[p].id
                        });
                        jsPlumbUtil.addWithFunction(h, f[m][1].endpoints[v], function (Y) {
                            return Y.id == f[m][1].endpoints[v].id
                        })
                    }
                }
            }
            for (var m = 0; m < aa.length; m++) {
                if (a.idx == 1 && aa[m][3] === r && C == -1) {
                    C = m
                }
                jsPlumbUtil.addWithFunction(B, aa[m][1], function (Y) {
                    return Y.id == aa[m][1].id
                });
                jsPlumbUtil.addWithFunction(h, aa[m][1].endpoints[p], function (Y) {
                    return Y.id == aa[m][1].endpoints[p].id
                });
                jsPlumbUtil.addWithFunction(h, aa[m][1].endpoints[v], function (Y) {
                    return Y.id == aa[m][1].endpoints[v].id
                })
            }
            if (l != -1) {
                aa[l] = ab
            } else {
                var x = u ? C != -1 ? C : 0 : aa.length;
                aa.splice(x, 0, ab)
            }
            y._continuousAnchorEdge = e
        };
        this.redraw = function (o, l, C, y, e) {
            if (!K.isSuspendDrawing()) {
                var ah = V[o] || [], ai = T[o] || [], af = [], aj = [], B = [];
                C = C || K.timestamp();
                y = y || {left: 0, top: 0};
                if (l) {
                    l = {left: l.left + y.left, top: l.top + y.top}
                }
                var u = K.updateOffset({
                    elId: o,
                    offset: l,
                    recalc: false,
                    timestamp: C
                }), r = {};
                for (var al = 0; al < ai.length; al++) {
                    var x = ai[al][0], v = x.sourceId, A = x.targetId, w = x.endpoints[0].anchor.isContinuous, p = x.endpoints[1].anchor.isContinuous;
                    if (w || p) {
                        var ak = v + "_" + A, g = A + "_" + v, h = r[ak], q = x.sourceId == o ? 1 : 0;
                        if (w && !S[v]) {
                            S[v] = {top: [], right: [], bottom: [], left: []}
                        }
                        if (p && !S[A]) {
                            S[A] = {top: [], right: [], bottom: [], left: []}
                        }
                        if (o != A) {
                            K.updateOffset({elId: A, timestamp: C})
                        }
                        if (o != v) {
                            K.updateOffset({elId: v, timestamp: C})
                        }
                        var s = K.getCachedData(A), ag = K.getCachedData(v);
                        if (A == v && (w || p)) {
                            P(S[v], -Math.PI / 2, 0, x, false, A, 0, false, "top", v, af, aj)
                        } else {
                            if (!h) {
                                h = Q(v, A, ag.o, s.o, x.endpoints[0].anchor, x.endpoints[1].anchor);
                                r[ak] = h
                            }
                            if (w) {
                                P(S[v], h.theta, 0, x, false, A, 0, false, h.a[0], v, af, aj)
                            }
                            if (p) {
                                P(S[A], h.theta2, -1, x, true, v, 1, true, h.a[1], A, af, aj)
                            }
                        }
                        if (w) {
                            jsPlumbUtil.addWithFunction(B, v, function (Y) {
                                return Y === v
                            })
                        }
                        if (p) {
                            jsPlumbUtil.addWithFunction(B, A, function (Y) {
                                return Y === A
                            })
                        }
                        jsPlumbUtil.addWithFunction(af, x, function (Y) {
                            return Y.id == x.id
                        });
                        if ((w && q == 0) || (p && q == 1)) {
                            jsPlumbUtil.addWithFunction(aj, x.endpoints[q], function (Y) {
                                return Y.id == x.endpoints[q].id
                            })
                        }
                    }
                }
                for (var al = 0; al < ah.length; al++) {
                    if (ah[al].connections.length == 0 && ah[al].anchor.isContinuous) {
                        if (!S[o]) {
                            S[o] = {top: [], right: [], bottom: [], left: []}
                        }
                        P(S[o], -Math.PI / 2, 0, {
                            endpoints: [ah[al], ah[al]],
                            paint: function () {
                            }
                        }, false, o, 0, false, "top", o, af, aj);
                        jsPlumbUtil.addWithFunction(B, o, function (Y) {
                            return Y === o
                        })
                    }
                }
                for (var al = 0; al < B.length; al++) {
                    R(B[al], S[B[al]])
                }
                for (var al = 0; al < ah.length; al++) {
                    ah[al].paint({timestamp: C, offset: u, dimensions: u.s})
                }
                for (var al = 0; al < aj.length; al++) {
                    var m = K.getCachedData(aj[al].elementId);
                    aj[al].paint({timestamp: C, offset: m, dimensions: m.s})
                }
                for (var al = 0; al < ai.length; al++) {
                    var n = ai[al][1];
                    if (n.anchor.constructor == jsPlumb.DynamicAnchor) {
                        n.paint({elementWithPrecedence: o});
                        jsPlumbUtil.addWithFunction(af, ai[al][0], function (Y) {
                            return Y.id == ai[al][0].id
                        });
                        for (var f = 0; f < n.connections.length; f++) {
                            if (n.connections[f] !== ai[al][0]) {
                                jsPlumbUtil.addWithFunction(af, n.connections[f], function (Y) {
                                    return Y.id == n.connections[f].id
                                })
                            }
                        }
                    } else {
                        if (n.anchor.constructor == jsPlumb.Anchor) {
                            jsPlumbUtil.addWithFunction(af, ai[al][0], function (Y) {
                                return Y.id == ai[al][0].id
                            })
                        }
                    }
                }
                var k = N[o];
                if (k) {
                    k.paint({timestamp: C, recalc: false, elId: o})
                }
                for (var al = 0; al < af.length; al++) {
                    af[al].paint({
                        elId: o,
                        timestamp: C,
                        recalc: false,
                        clearEdits: e
                    })
                }
            }
        };
        this.rehomeEndpoint = function (k, e) {
            var h = V[k] || [], g = K.getId(e);
            if (g !== k) {
                for (var f = 0; f < h.length; f++) {
                    M.add(h[f], g)
                }
                h.splice(0, h.length)
            }
        };
        var E = function (p) {
            jsPlumbUtil.EventGenerator.apply(this);
            this.type = "Continuous";
            this.isDynamic = true;
            this.isContinuous = true;
            var m = p.faces || ["top", "right", "bottom", "left"], q = !(p.clockwise === false), f = {}, h = {
                top: "bottom",
                right: "left",
                left: "right",
                bottom: "top"
            }, n = {
                top: "right",
                right: "bottom",
                left: "top",
                bottom: "left"
            }, l = {
                top: "left",
                right: "top",
                left: "bottom",
                bottom: "right"
            }, o = q ? n : l, e = q ? l : n, g = p.cssClass || "";
            for (var k = 0; k < m.length; k++) {
                f[m[k]] = true
            }
            this.verifyEdge = function (r) {
                if (f[r]) {
                    return r
                } else {
                    if (f[h[r]]) {
                        return h[r]
                    } else {
                        if (f[o[r]]) {
                            return o[r]
                        } else {
                            if (f[e[r]]) {
                                return e[r]
                            }
                        }
                    }
                }
                return r
            };
            this.compute = function (r) {
                return O[r.element.id] || D[r.element.id] || [0, 0]
            };
            this.getCurrentLocation = function (r) {
                return O[r.id] || D[r.id] || [0, 0]
            };
            this.getOrientation = function (r) {
                return J[r.id] || [0, 0]
            };
            this.clearUserDefinedLocation = function () {
                delete O[p.elementId]
            };
            this.setUserDefinedLocation = function (r) {
                O[p.elementId] = r
            };
            this.getCssClass = function () {
                return g
            };
            this.setCssClass = function (r) {
                g = r
            }
        };
        K.continuousAnchorFactory = {
            get: function (e) {
                var f = G[e.elementId];
                if (!f) {
                    f = new E(e);
                    G[e.elementId] = f
                }
                return f
            }
        }
    };
    jsPlumb.Anchor = function (a) {
        var m = this;
        this.x = a.x || 0;
        this.y = a.y || 0;
        this.elementId = a.elementId;
        jsPlumbUtil.EventGenerator.apply(this);
        var n = a.orientation || [0, 0], o = a.jsPlumbInstance, b = null, p = null, q = null, r = a.cssClass || "";
        this.getCssClass = function () {
            return r
        };
        this.offsets = a.offsets || [0, 0];
        m.timestamp = null;
        this.compute = function (f) {
            var g = f.xy, e = f.wh, k = f.element, h = f.timestamp;
            if (f.clearUserDefinedLocation) {
                q = null
            }
            if (h && h === m.timestamp) {
                return p
            }
            if (q != null) {
                p = q
            } else {
                p = [g[0] + (m.x * e[0]) + m.offsets[0], g[1] + (m.y * e[1]) + m.offsets[1]];
                p = o.adjustForParentOffsetAndScroll(p, k.canvas)
            }
            m.timestamp = h;
            return p
        };
        this.getOrientation = function (e) {
            return n
        };
        this.equals = function (e) {
            if (!e) {
                return false
            }
            var g = e.getOrientation();
            var f = this.getOrientation();
            return this.x == e.x && this.y == e.y && this.offsets[0] == e.offsets[0] && this.offsets[1] == e.offsets[1] && f[0] == g[0] && f[1] == g[1]
        };
        this.getCurrentLocation = function () {
            return p
        };
        this.getUserDefinedLocation = function () {
            return q
        };
        this.setUserDefinedLocation = function (e) {
            q = e
        };
        this.clearUserDefinedLocation = function () {
            q = null
        }
    };
    jsPlumb.FloatingAnchor = function (u) {
        jsPlumb.Anchor.apply(this, arguments);
        var v = u.reference, s = jsPlumb.CurrentLibrary, q = u.jsPlumbInstance, p = u.referenceCanvas, b = s.getSize(s.getElementObject(p)), a = 0, r = 0, w = null, o = null;
        this.x = 0;
        this.y = 0;
        this.isFloating = true;
        this.compute = function (e) {
            var f = e.xy, g = e.element, h = [f[0] + (b[0] / 2), f[1] + (b[1] / 2)];
            h = q.adjustForParentOffsetAndScroll(h, g.canvas);
            o = h;
            return h
        };
        this.getOrientation = function (e) {
            if (w) {
                return w
            } else {
                var f = v.getOrientation(e);
                return [Math.abs(f[0]) * a * -1, Math.abs(f[1]) * r * -1]
            }
        };
        this.over = function (e) {
            w = e.getOrientation()
        };
        this.out = function () {
            w = null
        };
        this.getCurrentLocation = function () {
            return o
        }
    };
    jsPlumb.DynamicAnchor = function (r) {
        jsPlumb.Anchor.apply(this, arguments);
        this.isSelective = true;
        this.isDynamic = true;
        var a = [], b = this, o = function (e) {
            return e.constructor == jsPlumb.Anchor ? e : r.jsPlumbInstance.makeAnchor(e, r.elementId, r.jsPlumbInstance)
        };
        for (var p = 0; p < r.anchors.length; p++) {
            a[p] = o(r.anchors[p])
        }
        this.addAnchor = function (e) {
            a.push(o(e))
        };
        this.getAnchors = function () {
            return a
        };
        this.locked = false;
        var v = a.length > 0 ? a[0] : null, s = a.length > 0 ? 0 : -1, q = v, b = this, u = function (m, e, f, l, g) {
            var h = l[0] + (m.x * g[0]), k = l[1] + (m.y * g[1]), n = l[0] + (g[0] / 2), y = l[1] + (g[1] / 2);
            return (Math.sqrt(Math.pow(e - h, 2) + Math.pow(f - k, 2)) + Math.sqrt(Math.pow(n - h, 2) + Math.pow(y - k, 2)))
        }, w = r.selector || function (k, g, f, e, h) {
            var C = f[0] + (e[0] / 2), D = f[1] + (e[1] / 2);
            var n = -1, l = Infinity;
            for (var B = 0; B < h.length; B++) {
                var m = u(h[B], C, D, k, g);
                if (m < l) {
                    n = B + 0;
                    l = m
                }
            }
            return h[n]
        };
        this.compute = function (f) {
            var g = f.xy, m = f.wh, k = f.timestamp, l = f.txy, e = f.twh;
            if (f.clearUserDefinedLocation) {
                userDefinedLocation = null
            }
            var h = b.getUserDefinedLocation();
            if (h != null) {
                return h
            }
            if (b.locked || l == null || e == null) {
                return v.compute(f)
            } else {
                f.timestamp = null
            }
            v = w(g, m, l, e, a);
            b.x = v.x;
            b.y = v.y;
            if (v != q) {
                b.fire("anchorChanged", v)
            }
            q = v;
            return v.compute(f)
        };
        this.getCurrentLocation = function () {
            return b.getUserDefinedLocation() || (v != null ? v.getCurrentLocation() : null)
        };
        this.getOrientation = function (e) {
            return v != null ? v.getOrientation(e) : [0, 0]
        };
        this.over = function (e) {
            if (v != null) {
                v.over(e)
            }
        };
        this.out = function () {
            if (v != null) {
                v.out()
            }
        };
        this.getCssClass = function () {
            return (v && v.getCssClass()) || ""
        }
    };
    var c = function (n, a, l, m, b, k) {
        jsPlumb.Anchors[b] = function (e) {
            var f = e.jsPlumbInstance.makeAnchor([n, a, l, m, 0, 0], e.elementId, e.jsPlumbInstance);
            f.type = b;
            if (k) {
                k(f, e)
            }
            return f
        }
    };
    c(0.5, 0, 0, -1, "TopCenter");
    c(0.5, 1, 0, 1, "BottomCenter");
    c(0, 0.5, -1, 0, "LeftMiddle");
    c(1, 0.5, 1, 0, "RightMiddle");
    c(0.5, 0, 0, -1, "Top");
    c(0.5, 1, 0, 1, "Bottom");
    c(0, 0.5, -1, 0, "Left");
    c(1, 0.5, 1, 0, "Right");
    c(0.5, 0.5, 0, 0, "Center");
    c(1, 0, 0, -1, "TopRight");
    c(1, 1, 0, 1, "BottomRight");
    c(0, 0, 0, -1, "TopLeft");
    c(0, 1, 0, 1, "BottomLeft");
    jsPlumb.Defaults.DynamicAnchors = function (a) {
        return a.jsPlumbInstance.makeAnchors(["TopCenter", "RightMiddle", "BottomCenter", "LeftMiddle"], a.elementId, a.jsPlumbInstance)
    };
    jsPlumb.Anchors.AutoDefault = function (a) {
        var b = a.jsPlumbInstance.makeDynamicAnchor(jsPlumb.Defaults.DynamicAnchors(a));
        b.type = "AutoDefault";
        return b
    };
    var d = function (a, b) {
        jsPlumb.Anchors[a] = function (g) {
            var h = g.jsPlumbInstance.makeAnchor(["Continuous", {faces: b}], g.elementId, g.jsPlumbInstance);
            h.type = a;
            return h
        }
    };
    jsPlumb.Anchors.Continuous = function (a) {
        return a.jsPlumbInstance.continuousAnchorFactory.get(a)
    };
    d("ContinuousLeft", ["left"]);
    d("ContinuousTop", ["top"]);
    d("ContinuousBottom", ["bottom"]);
    d("ContinuousRight", ["right"]);
    jsPlumb.Anchors.Assign = c(0, 0, 0, 0, "Assign", function (b, a) {
        var f = a.position || "Fixed";
        b.positionFinder = f.constructor == String ? a.jsPlumbInstance.AnchorPositionFinders[f] : f;
        b.constructorParams = a
    });
    jsPlumb.AnchorPositionFinders = {
        Fixed: function (a, h, b, g) {
            return [(a.left - h.left) / b[0], (a.top - h.top) / b[1]]
        }, Grid: function (w, a, r, v) {
            var b = w.left - a.left, o = w.top - a.top, p = r[0] / (v.grid[0]), q = r[1] / (v.grid[1]), s = Math.floor(b / p), u = Math.floor(o / q);
            return [((s * p) + (p / 2)) / r[0], ((u * q) + (q / 2)) / r[1]]
        }
    };
    jsPlumb.Anchors.Perimeter = function (y) {
        y = y || {};
        var x = y.anchorCount || 60, u = y.shape;
        if (!u) {
            throw new Error("no shape supplied to Perimeter Anchor type")
        }
        var w = function () {
            var g = 0.5, h = Math.PI * 2 / x, f = 0, l = [];
            for (var k = 0; k < x; k++) {
                var m = g + (g * Math.sin(f)), e = g + (g * Math.cos(f));
                l.push([m, e, 0, 0]);
                f += h
            }
            return l
        }, s = function (g) {
            var e = x / g.length, k = [], h = function (H, F, m, G, E) {
                e = x * E;
                var n = (m - H) / e, o = (G - F) / e;
                for (var l = 0; l < e; l++) {
                    k.push([H + (n * l), F + (o * l), 0, 0])
                }
            };
            for (var f = 0; f < g.length; f++) {
                h.apply(null, g[f])
            }
            return k
        }, p = function (g) {
            var e = [];
            for (var f = 0; f < g.length; f++) {
                e.push([g[f][0], g[f][1], g[f][2], g[f][3], 1 / g.length])
            }
            return s(e)
        }, r = function () {
            return p([[0, 0, 1, 0], [1, 0, 1, 1], [1, 1, 0, 1], [0, 1, 0, 0]])
        };
        var v = {
            Circle: w, Ellipse: w, Diamond: function () {
                return p([[0.5, 0, 1, 0.5], [1, 0.5, 0.5, 1], [0.5, 1, 0, 0.5], [0, 0.5, 0.5, 0]])
            }, Rectangle: r, Square: r, Triangle: function () {
                return p([[0.5, 0, 1, 1], [1, 1, 0, 1], [0, 1, 0.5, 0]])
            }, Path: function (e) {
                var g = e.points, f = [], k = 0;
                for (var h = 0; h < g.length - 1; h++) {
                    var l = Math.sqrt(Math.pow(g[h][2] - g[h][0]) + Math.pow(g[h][3] - g[h][1]));
                    k += l;
                    f.push([g[h][0], g[h][1], g[h + 1][0], g[h + 1][1], l])
                }
                for (var h = 0; h < f.length; h++) {
                    f[h][4] = f[h][4] / k
                }
                return s(f)
            }
        }, b = function (f, g) {
            var e = [], h = g / 180 * Math.PI;
            for (var k = 0; k < f.length; k++) {
                var l = f[k][0] - 0.5, m = f[k][1] - 0.5;
                e.push([0.5 + ((l * Math.cos(h)) - (m * Math.sin(h))), 0.5 + ((l * Math.sin(h)) + (m * Math.cos(h))), f[k][2], f[k][3]])
            }
            return e
        };
        if (!v[u]) {
            throw new Error("Shape [" + u + "] is unknown by Perimeter Anchor type")
        }
        var a = v[u](y);
        if (y.rotation) {
            a = b(a, y.rotation)
        }
        var q = y.jsPlumbInstance.makeDynamicAnchor(a);
        q.type = "Perimeter";
        return q
    }
})();
(function () {
    var h = function (a, c) {
        var b = false;
        return {
            drag: function () {
                if (b) {
                    b = false;
                    return true
                }
                var d = jsPlumb.CurrentLibrary.getUIPosition(arguments, c.getZoom());
                if (a.element) {
                    jsPlumb.CurrentLibrary.setOffset(a.element, d);
                    c.repaint(a.element, d)
                }
            }, stopDrag: function () {
                b = true
            }
        }
    };
    var f = function (c, m, n) {
        var a = document.createElement("div");
        a.style.position = "absolute";
        var d = jsPlumb.CurrentLibrary.getElementObject(a);
        jsPlumb.CurrentLibrary.appendElement(a, m);
        var b = n.getId(d);
        n.updateOffset({elId: b});
        c.id = b;
        c.element = d
    };
    var g = function (a, b, r, c, o, p, q) {
        var d = new jsPlumb.FloatingAnchor({
            reference: b,
            referenceCanvas: c,
            jsPlumbInstance: p
        });
        return q({
            paintStyle: a,
            endpoint: r,
            anchor: d,
            source: o,
            scope: "__floating"
        })
    };
    var e = ["connectorStyle", "connectorHoverStyle", "connectorOverlays", "connector", "connectionType", "connectorClass", "connectorHoverClass"];
    jsPlumb.Endpoint = function (aR) {
        var aJ = this, aH = aR._jsPlumb, aQ = jsPlumb.CurrentLibrary, ap = aQ.getAttribute, aB = aQ.getElementObject, aK = jsPlumbUtil, aS = aQ.getOffset, aC = aR.newConnection, ah = aR.newEndpoint, b = aR.finaliseConnection, a = aR.fireDetachEvent, aw = aR.floatingConnections;
        aJ.idPrefix = "_jsplumb_e_";
        aJ.defaultLabelLocation = [0.5, 0.5];
        aJ.defaultOverlayKeys = ["Overlays", "EndpointOverlays"];
        this.parent = aR.parent;
        overlayCapableJsPlumbUIComponent.apply(this, arguments);
        aR = aR || {};
        this.getTypeDescriptor = function () {
            return "endpoint"
        };
        this.getDefaultType = function () {
            return {
                parameters: {},
                scope: null,
                maxConnections: aJ._jsPlumb.Defaults.MaxConnections,
                paintStyle: aJ._jsPlumb.Defaults.EndpointStyle || jsPlumb.Defaults.EndpointStyle,
                endpoint: aJ._jsPlumb.Defaults.Endpoint || jsPlumb.Defaults.Endpoint,
                hoverPaintStyle: aJ._jsPlumb.Defaults.EndpointHoverStyle || jsPlumb.Defaults.EndpointHoverStyle,
                overlays: aJ._jsPlumb.Defaults.EndpointOverlays || jsPlumb.Defaults.EndpointOverlays,
                connectorStyle: aR.connectorStyle,
                connectorHoverStyle: aR.connectorHoverStyle,
                connectorClass: aR.connectorClass,
                connectorHoverClass: aR.connectorHoverClass,
                connectorOverlays: aR.connectorOverlays,
                connector: aR.connector,
                connectorTooltip: aR.connectorTooltip
            }
        };
        var ag = this.applyType;
        this.applyType = function (l, k) {
            ag(l, k);
            if (l.maxConnections != null) {
                al = l.maxConnections
            }
            if (l.scope) {
                aJ.scope = l.scope
            }
            aK.copyValues(e, l, aJ)
        };
        var az = true, aP = !(aR.enabled === false);
        this.isVisible = function () {
            return az
        };
        this.setVisible = function (n, k, o) {
            az = n;
            if (aJ.canvas) {
                aJ.canvas.style.display = n ? "block" : "none"
            }
            aJ[n ? "showOverlays" : "hideOverlays"]();
            if (!k) {
                for (var l = 0; l < aJ.connections.length; l++) {
                    aJ.connections[l].setVisible(n);
                    if (!o) {
                        var m = aJ === aJ.connections[l].endpoints[0] ? 1 : 0;
                        if (aJ.connections[l].endpoints[m].connections.length == 1) {
                            aJ.connections[l].endpoints[m].setVisible(n, true, true)
                        }
                    }
                }
            }
        };
        this.isEnabled = function () {
            return aP
        };
        this.setEnabled = function (k) {
            aP = k
        };
        var ao = aR.source, aM = aR.uuid, aT = null, an = null;
        if (aM) {
            aR.endpointsByUUID[aM] = aJ
        }
        var c = ap(ao, "id");
        this.elementId = c;
        this.element = ao;
        aJ.setElementId = function (k) {
            c = k;
            aJ.elementId = k;
            aJ.anchor.elementId = k
        };
        aJ.setReferenceElement = function (k) {
            ao = k;
            aJ.element = k
        };
        var aU = aR.connectionCost;
        this.getConnectionCost = function () {
            return aU
        };
        this.setConnectionCost = function (k) {
            aU = k
        };
        var am = aR.connectionsDirected;
        this.areConnectionsDirected = function () {
            return am
        };
        this.setConnectionsDirected = function (k) {
            am = k
        };
        var at = "", ak = function () {
            aQ.removeClass(ao, aH.endpointAnchorClassPrefix + "_" + at);
            aJ.removeClass(aH.endpointAnchorClassPrefix + "_" + at);
            at = aJ.anchor.getCssClass();
            aJ.addClass(aH.endpointAnchorClassPrefix + "_" + at);
            aQ.addClass(ao, aH.endpointAnchorClassPrefix + "_" + at)
        };
        this.setAnchor = function (l, k) {
            aJ.anchor = aH.makeAnchor(l, c, aH);
            ak();
            aJ.anchor.bind("anchorChanged", function (m) {
                aJ.fire("anchorChanged", {endpoint: aJ, anchor: m});
                ak()
            });
            if (!k) {
                aH.repaint(c)
            }
        };
        this.cleanup = function () {
            aQ.removeClass(ao, aH.endpointAnchorClassPrefix + "_" + at)
        };
        var ai = aR.anchor ? aR.anchor : aR.anchors ? aR.anchors : (aH.Defaults.Anchor || "Top");
        aJ.setAnchor(ai, true);
        if (!aR._transient) {
            aH.anchorManager.add(aJ, c)
        }
        var d = null, af = null;
        this.setEndpoint = function (m) {
            var n = function (p, q) {
                var o = aH.getRenderMode();
                if (jsPlumb.Endpoints[o][p]) {
                    return new jsPlumb.Endpoints[o][p](q)
                }
                if (!aH.Defaults.DoNotThrowErrors) {
                    throw {msg: "jsPlumb: unknown endpoint type '" + p + "'"}
                }
            };
            var l = {
                _jsPlumb: aJ._jsPlumb,
                cssClass: aR.cssClass,
                parent: aR.parent,
                container: aR.container,
                tooltip: aR.tooltip,
                connectorTooltip: aR.connectorTooltip,
                endpoint: aJ
            };
            if (aK.isString(m)) {
                d = n(m, l)
            } else {
                if (aK.isArray(m)) {
                    l = aK.merge(m[1], l);
                    d = n(m[0], l)
                } else {
                    d = m.clone()
                }
            }
            var k = jsPlumb.extend({}, l);
            d.clone = function () {
                var o = new Object();
                d.constructor.apply(o, [k]);
                return o
            };
            aJ.endpoint = d;
            aJ.type = aJ.endpoint.type
        };
        this.setEndpoint(aR.endpoint || aH.Defaults.Endpoint || jsPlumb.Defaults.Endpoint || "Dot");
        af = d;
        var aF = aJ.setHover;
        aJ.setHover = function () {
            aJ.endpoint.setHover.apply(aJ.endpoint, arguments);
            aF.apply(aJ, arguments)
        };
        var aq = function (k) {
            if (aJ.connections.length > 0) {
                aJ.connections[0].setHover(k, false)
            } else {
                aJ.setHover(k)
            }
        };
        aJ.bindListeners(aJ.endpoint, aJ, aq);
        this.setPaintStyle(aR.paintStyle || aR.style || aH.Defaults.EndpointStyle || jsPlumb.Defaults.EndpointStyle, true);
        this.setHoverPaintStyle(aR.hoverPaintStyle || aH.Defaults.EndpointHoverStyle || jsPlumb.Defaults.EndpointHoverStyle, true);
        this.paintStyleInUse = this.getPaintStyle();
        var aE = this.getPaintStyle();
        aK.copyValues(e, aR, this);
        this.isSource = aR.isSource || false;
        this.isTarget = aR.isTarget || false;
        var al = aR.maxConnections || aH.Defaults.MaxConnections;
        this.getAttachedElements = function () {
            return aJ.connections
        };
        this.canvas = this.endpoint.canvas;
        aJ.addClass(aH.endpointAnchorClassPrefix + "_" + at);
        aQ.addClass(ao, aH.endpointAnchorClassPrefix + "_" + at);
        this.connections = aR.connections || [];
        this.connectorPointerEvents = aR["connector-pointer-events"];
        this.scope = aR.scope || aH.getDefaultScope();
        this.timestamp = null;
        aJ.reattachConnections = aR.reattach || aH.Defaults.ReattachConnections;
        aJ.connectionsDetachable = aH.Defaults.ConnectionsDetachable;
        if (aR.connectionsDetachable === false || aR.detachable === false) {
            aJ.connectionsDetachable = false
        }
        var au = aR.dragAllowedWhenFull || true;
        if (aR.onMaxConnections) {
            aJ.bind("maxConnections", aR.onMaxConnections)
        }
        this.computeAnchor = function (k) {
            return aJ.anchor.compute(k)
        };
        this.addConnection = function (k) {
            aJ.connections.push(k);
            aJ[(aJ.connections.length > 0 ? "add" : "remove") + "Class"](aH.endpointConnectedClass);
            aJ[(aJ.isFull() ? "add" : "remove") + "Class"](aH.endpointFullClass)
        };
        this.detach = function (s, o, r, l, u) {
            var m = aK.findWithFunction(aJ.connections, function (v) {
                return v.id == s.id
            }), n = false;
            l = (l !== false);
            if (m >= 0) {
                if (r || s._forceDetach || s.isDetachable() || s.isDetachAllowed(s)) {
                    var k = s.endpoints[0] == aJ ? s.endpoints[1] : s.endpoints[0];
                    if (r || s._forceDetach || (aJ.isDetachAllowed(s))) {
                        aJ.connections.splice(m, 1);
                        if (!o) {
                            k.detach(s, true, r);
                            if (s.endpointsToDeleteOnDetach) {
                                for (var p = 0; p < s.endpointsToDeleteOnDetach.length; p++) {
                                    var q = s.endpointsToDeleteOnDetach[p];
                                    if (q && q.connections.length == 0) {
                                        aH.deleteEndpoint(q)
                                    }
                                }
                            }
                        }
                        if (s.getConnector() != null) {
                            aK.removeElements(s.getConnector().getDisplayElements(), s.parent)
                        }
                        aK.removeWithFunction(aR.connectionsByScope[s.scope], function (v) {
                            return v.id == s.id
                        });
                        aJ[(aJ.connections.length > 0 ? "add" : "remove") + "Class"](aH.endpointConnectedClass);
                        aJ[(aJ.isFull() ? "add" : "remove") + "Class"](aH.endpointFullClass);
                        n = true;
                        a(s, (!o && l), u)
                    }
                }
            }
            return n
        };
        this.detachAll = function (k, l) {
            while (aJ.connections.length > 0) {
                aJ.detach(aJ.connections[0], false, true, k, l)
            }
            return aJ
        };
        this.detachFrom = function (l, m, o) {
            var k = [];
            for (var n = 0; n < aJ.connections.length; n++) {
                if (aJ.connections[n].endpoints[1] == l || aJ.connections[n].endpoints[0] == l) {
                    k.push(aJ.connections[n])
                }
            }
            for (var n = 0; n < k.length; n++) {
                if (aJ.detach(k[n], false, true, m, o)) {
                    k[n].setHover(false, false)
                }
            }
            return aJ
        };
        this.detachFromConnection = function (k) {
            var l = aK.findWithFunction(aJ.connections, function (m) {
                return m.id == k.id
            });
            if (l >= 0) {
                aJ.connections.splice(l, 1);
                aJ[(aJ.connections.length > 0 ? "add" : "remove") + "Class"](aH.endpointConnectedClass);
                aJ[(aJ.isFull() ? "add" : "remove") + "Class"](aH.endpointFullClass)
            }
        };
        this.getElement = function () {
            return ao
        };
        this.setElement = function (m, p) {
            var k = aH.getId(m);
            aK.removeWithFunction(aR.endpointsByElement[aJ.elementId], function (q) {
                return q.id == aJ.id
            });
            ao = aB(m);
            c = aH.getId(ao);
            aJ.elementId = c;
            var l = aR.getParentFromParams({
                source: k,
                container: p
            }), n = aQ.getParent(aJ.canvas);
            aQ.removeElement(aJ.canvas, n);
            aQ.appendElement(aJ.canvas, l);
            for (var o = 0; o < aJ.connections.length; o++) {
                aJ.connections[o].moveParent(l);
                aJ.connections[o].sourceId = c;
                aJ.connections[o].source = ao
            }
            aK.addToList(aR.endpointsByElement, k, aJ)
        };
        this.getUuid = function () {
            return aM
        };
        aJ.makeInPlaceCopy = function () {
            var k = aJ.anchor.getCurrentLocation(aJ), l = aJ.anchor.getOrientation(aJ), m = aJ.anchor.getCssClass(), n = {
                bind: function () {
                }, compute: function () {
                    return [k[0], k[1]]
                }, getCurrentLocation: function () {
                    return [k[0], k[1]]
                }, getOrientation: function () {
                    return l
                }, getCssClass: function () {
                    return m
                }
            };
            return ah({
                anchor: n,
                source: ao,
                paintStyle: this.getPaintStyle(),
                endpoint: aR.hideOnDrag ? "Blank" : d,
                _transient: true,
                scope: aJ.scope
            })
        };
        this.isConnectedTo = function (k) {
            var l = false;
            if (k) {
                for (var m = 0; m < aJ.connections.length; m++) {
                    if (aJ.connections[m].endpoints[1] == k) {
                        l = true;
                        break
                    }
                }
            }
            return l
        };
        this.isFloating = function () {
            return aT != null
        };
        this.connectorSelector = function () {
            var k = aJ.connections[0];
            if (aJ.isTarget && k) {
                return k
            } else {
                return (aJ.connections.length < al) || al == -1 ? null : k
            }
        };
        this.isFull = function () {
            return !(aJ.isFloating() || al < 1 || aJ.connections.length < al)
        };
        this.setDragAllowedWhenFull = function (k) {
            au = k
        };
        this.setStyle = aJ.setPaintStyle;
        this.equals = function (k) {
            return this.anchor.equals(k.anchor)
        };
        var av = function (l) {
            var m = 0;
            if (l != null) {
                for (var k = 0; k < aJ.connections.length; k++) {
                    if (aJ.connections[k].sourceId == l || aJ.connections[k].targetId == l) {
                        m = k;
                        break
                    }
                }
            }
            return aJ.connections[m]
        };
        this.paint = function (x) {
            x = x || {};
            var q = x.timestamp, r = !(x.recalc === false);
            if (!q || aJ.timestamp !== q) {
                var y = aH.updateOffset({elId: c, timestamp: q, recalc: r});
                var k = x.offset ? x.offset.o : y.o;
                if (k) {
                    var u = x.anchorPoint, w = x.connectorPaintStyle;
                    if (u == null) {
                        var C = x.dimensions || y.s;
                        if (k == null || C == null) {
                            y = aH.updateOffset({elId: c, timestamp: q});
                            k = y.o;
                            C = y.s
                        }
                        var A = {
                            xy: [k.left, k.top],
                            wh: C,
                            element: aJ,
                            timestamp: q
                        };
                        if (r && aJ.anchor.isDynamic && aJ.connections.length > 0) {
                            var o = av(x.elementWithPrecedence), l = o.endpoints[0] == aJ ? 1 : 0, v = l == 0 ? o.sourceId : o.targetId, m = aH.getCachedData(v), p = m.o, n = m.s;
                            A.txy = [p.left, p.top];
                            A.twh = n;
                            A.tElement = o.endpoints[l]
                        }
                        u = aJ.anchor.compute(A)
                    }
                    d.compute(u, aJ.anchor.getOrientation(aJ), aJ.paintStyleInUse, w || aJ.paintStyleInUse);
                    d.paint(aJ.paintStyleInUse, aJ.anchor);
                    aJ.timestamp = q;
                    for (var s = 0; s < aJ.overlays.length; s++) {
                        var B = aJ.overlays[s];
                        if (B.isVisible()) {
                            aJ.overlayPlacements[s] = B.draw(aJ.endpoint, aJ.paintStyleInUse);
                            B.paint(aJ.overlayPlacements[s])
                        }
                    }
                }
            }
        };
        this.repaint = this.paint;
        if (aQ.isDragSupported(ao)) {
            var ay = {
                id: null,
                element: null
            }, aO = null, aI = false, aD = null, aA = h(ay, aH);
            var ax = function () {
                aO = aJ.connectorSelector();
                var p = true;
                if (!aJ.isEnabled()) {
                    p = false
                }
                if (aO == null && !aR.isSource) {
                    p = false
                }
                if (aR.isSource && aJ.isFull() && !au) {
                    p = false
                }
                if (aO != null && !aO.isDetachable()) {
                    p = false
                }
                if (p === false) {
                    if (aQ.stopDrag) {
                        aQ.stopDrag()
                    }
                    aA.stopDrag();
                    return false
                }
                aJ.addClass("endpointDrag");
                if (aO && !aJ.isFull() && aR.isSource) {
                    aO = null
                }
                aH.updateOffset({elId: c});
                an = aJ.makeInPlaceCopy();
                an.referenceEndpoint = aJ;
                an.paint();
                f(ay, aJ.parent, aH);
                var q = aB(an.canvas), k = aS(q, aH), n = aH.adjustForParentOffsetAndScroll([k.left, k.top], an.canvas), o = aB(aJ.canvas);
                aQ.setOffset(ay.element, {left: n[0], top: n[1]});
                if (aJ.parentAnchor) {
                    aJ.anchor = aH.makeAnchor(aJ.parentAnchor, aJ.elementId, aH)
                }
                aQ.setAttribute(o, "dragId", ay.id);
                aQ.setAttribute(o, "elId", c);
                aT = g(aJ.getPaintStyle(), aJ.anchor, d, aJ.canvas, ay.element, aH, ah);
                aJ.canvas.style.visibility = "hidden";
                if (aO == null) {
                    aJ.anchor.locked = true;
                    aJ.setHover(false, false);
                    aO = aC({
                        sourceEndpoint: aJ,
                        targetEndpoint: aT,
                        source: aJ.endpointWillMoveTo || ao,
                        target: ay.element,
                        anchors: [aJ.anchor, aT.anchor],
                        paintStyle: aR.connectorStyle,
                        hoverPaintStyle: aR.connectorHoverStyle,
                        connector: aR.connector,
                        overlays: aR.connectorOverlays,
                        type: aJ.connectionType,
                        cssClass: aJ.connectorClass,
                        hoverClass: aJ.connectorHoverClass
                    });
                    aO.addClass(aH.draggingClass);
                    aT.addClass(aH.draggingClass);
                    aH.fire("connectionDrag", aO)
                } else {
                    aI = true;
                    aO.setHover(false);
                    aL(q, false, true);
                    var l = aO.endpoints[0].id == aJ.id ? 0 : 1;
                    aO.floatingAnchorIndex = l;
                    aJ.detachFromConnection(aO);
                    var r = jsPlumb.CurrentLibrary.getDragScope(o);
                    aQ.setAttribute(o, "originalScope", r);
                    var m = aQ.getDropScope(o);
                    aQ.setDragScope(o, m);
                    if (l == 0) {
                        aD = [aO.source, aO.sourceId, ae, r];
                        aO.source = ay.element;
                        aO.sourceId = ay.id
                    } else {
                        aD = [aO.target, aO.targetId, ae, r];
                        aO.target = ay.element;
                        aO.targetId = ay.id
                    }
                    aO.endpoints[l == 0 ? 1 : 0].anchor.locked = true;
                    aO.suspendedEndpoint = aO.endpoints[l];
                    aO.suspendedElement = aO.endpoints[l].getElement();
                    aO.suspendedElementId = aO.endpoints[l].elementId;
                    aO.suspendedElementType = l == 0 ? "source" : "target";
                    aO.suspendedEndpoint.setHover(false);
                    aT.referenceEndpoint = aO.suspendedEndpoint;
                    aO.endpoints[l] = aT;
                    aO.addClass(aH.draggingClass);
                    aT.addClass(aH.draggingClass);
                    aH.fire("connectionDrag", aO)
                }
                aw[ay.id] = aO;
                aH.anchorManager.addFloatingConnection(ay.id, aO);
                aT.addConnection(aO);
                aK.addToList(aR.endpointsByElement, ay.id, aT);
                aH.currentlyDragging = true
            };
            var aN = aR.dragOptions || {}, aG = jsPlumb.extend({}, aQ.defaultDragOptions), aj = aQ.dragEvents.start, ad = aQ.dragEvents.stop, ar = aQ.dragEvents.drag;
            aN = jsPlumb.extend(aG, aN);
            aN.scope = aN.scope || aJ.scope;
            aN[aj] = aH.wrap(aN[aj], ax);
            aN[ar] = aH.wrap(aN[ar], aA.drag);
            aN[ad] = aH.wrap(aN[ad], function () {
                var k = aQ.getDropEvent(arguments);
                aK.removeWithFunction(aR.endpointsByElement[ay.id], function (m) {
                    return m.id == aT.id
                });
                aK.removeElement(an.canvas, ao);
                aH.anchorManager.clearFor(ay.id);
                var l = aO.floatingAnchorIndex == null ? 1 : aO.floatingAnchorIndex;
                aO.endpoints[l == 0 ? 1 : 0].anchor.locked = false;
                if (aO.endpoints[l] == aT) {
                    if (aI && aO.suspendedEndpoint) {
                        if (l == 0) {
                            aO.source = aD[0];
                            aO.sourceId = aD[1]
                        } else {
                            aO.target = aD[0];
                            aO.targetId = aD[1]
                        }
                        aQ.setDragScope(aD[2], aD[3]);
                        aO.endpoints[l] = aO.suspendedEndpoint;
                        if (aO.isReattach() || aO._forceReattach || aO._forceDetach || !aO.endpoints[l == 0 ? 1 : 0].detach(aO, false, false, true, k)) {
                            aO.setHover(false);
                            aO.floatingAnchorIndex = null;
                            aO.suspendedEndpoint.addConnection(aO);
                            aH.repaint(aD[1])
                        }
                        aO._forceDetach = null;
                        aO._forceReattach = null
                    } else {
                        aK.removeElements(aO.getConnector().getDisplayElements(), aJ.parent);
                        aJ.detachFromConnection(aO)
                    }
                }
                aK.removeElements([ay.element[0], aT.canvas], ao);
                aH.dragManager.elementRemoved(aT.elementId);
                aJ.canvas.style.visibility = "visible";
                aJ.anchor.locked = false;
                aJ.paint({recalc: false});
                aO.removeClass(aH.draggingClass);
                aT.removeClass(aH.draggingClass);
                aH.fire("connectionDragStop", aO);
                aO = null;
                an = null;
                delete aR.endpointsByElement[aT.elementId];
                aT.anchor = null;
                aT = null;
                aH.currentlyDragging = false
            });
            var ae = aB(aJ.canvas);
            aQ.initDraggable(ae, aN, true, aH)
        }
        var aL = function (q, l, n, k) {
            if ((aR.isTarget || l) && aQ.isDropSupported(ao)) {
                var p = aR.dropOptions || aH.Defaults.DropOptions || jsPlumb.Defaults.DropOptions;
                p = jsPlumb.extend({}, p);
                p.scope = p.scope || aJ.scope;
                var r = aQ.dragEvents.drop, m = aQ.dragEvents.over, s = aQ.dragEvents.out, o = function () {
                    aJ.removeClass(aH.endpointDropAllowedClass);
                    aJ.removeClass(aH.endpointDropForbiddenClass);
                    var G = aQ.getDropEvent(arguments), D = aB(aQ.getDragObject(arguments)), E = ap(D, "dragId"), B = ap(D, "elId"), H = ap(D, "originalScope"), x = aw[E];
                    var A = x.suspendedEndpoint && (x.suspendedEndpoint.id == aJ.id || aJ.referenceEndpoint && x.suspendedEndpoint.id == aJ.referenceEndpoint.id);
                    if (A) {
                        x._forceReattach = true;
                        return
                    }
                    if (x != null) {
                        var v = x.floatingAnchorIndex == null ? 1 : x.floatingAnchorIndex, u = v == 0 ? 1 : 0;
                        if (H) {
                            jsPlumb.CurrentLibrary.setDragScope(D, H)
                        }
                        var I = k != null ? k.isEnabled() : true;
                        if (aJ.isFull()) {
                            aJ.fire("maxConnections", {
                                endpoint: aJ,
                                connection: x,
                                maxConnections: al
                            }, G)
                        }
                        if (!aJ.isFull() && !(v == 0 && !aJ.isSource) && !(v == 1 && !aJ.isTarget) && I) {
                            var y = true;
                            if (x.suspendedEndpoint && x.suspendedEndpoint.id != aJ.id) {
                                if (v == 0) {
                                    x.source = x.suspendedEndpoint.element;
                                    x.sourceId = x.suspendedEndpoint.elementId
                                } else {
                                    x.target = x.suspendedEndpoint.element;
                                    x.targetId = x.suspendedEndpoint.elementId
                                }
                                if (!x.isDetachAllowed(x) || !x.endpoints[v].isDetachAllowed(x) || !x.suspendedEndpoint.isDetachAllowed(x) || !aH.checkCondition("beforeDetach", x)) {
                                    y = false
                                }
                            }
                            if (v == 0) {
                                x.source = aJ.element;
                                x.sourceId = aJ.elementId
                            } else {
                                x.target = aJ.element;
                                x.targetId = aJ.elementId
                            }
                            var w = function () {
                                x.floatingAnchorIndex = null
                            };
                            var F = function () {
                                x.endpoints[v].detachFromConnection(x);
                                if (x.suspendedEndpoint) {
                                    x.suspendedEndpoint.detachFromConnection(x)
                                }
                                x.endpoints[v] = aJ;
                                aJ.addConnection(x);
                                var J = aJ.getParameters();
                                for (var L in J) {
                                    x.setParameter(L, J[L])
                                }
                                if (!x.suspendedEndpoint) {
                                    if (J.draggable) {
                                        jsPlumb.CurrentLibrary.initDraggable(aJ.element, aN, true, aH)
                                    }
                                } else {
                                    var K = x.suspendedEndpoint.getElement(), M = x.suspendedEndpoint.elementId;
                                    a({
                                        source: v == 0 ? K : x.source,
                                        target: v == 1 ? K : x.target,
                                        sourceId: v == 0 ? M : x.sourceId,
                                        targetId: v == 1 ? M : x.targetId,
                                        sourceEndpoint: v == 0 ? x.suspendedEndpoint : x.endpoints[0],
                                        targetEndpoint: v == 1 ? x.suspendedEndpoint : x.endpoints[1],
                                        connection: x
                                    }, true, G)
                                }
                                if (x.endpoints[0].addedViaMouse) {
                                    x.endpointsToDeleteOnDetach[0] = x.endpoints[0]
                                }
                                if (x.endpoints[1].addedViaMouse) {
                                    x.endpointsToDeleteOnDetach[1] = x.endpoints[1]
                                }
                                b(x, null, G);
                                w()
                            };
                            var C = function () {
                                if (x.suspendedEndpoint) {
                                    x.endpoints[v] = x.suspendedEndpoint;
                                    x.setHover(false);
                                    x._forceDetach = true;
                                    if (v == 0) {
                                        x.source = x.suspendedEndpoint.element;
                                        x.sourceId = x.suspendedEndpoint.elementId
                                    } else {
                                        x.target = x.suspendedEndpoint.element;
                                        x.targetId = x.suspendedEndpoint.elementId
                                    }
                                    x.suspendedEndpoint.addConnection(x);
                                    x.endpoints[0].repaint();
                                    x.repaint();
                                    aH.repaint(x.sourceId);
                                    x._forceDetach = false
                                }
                                w()
                            };
                            y = y && aJ.isDropAllowed(x.sourceId, x.targetId, x.scope, x, aJ);
                            if (y) {
                                F()
                            } else {
                                C()
                            }
                        }
                        aH.currentlyDragging = false;
                        delete aw[E];
                        aH.anchorManager.removeFloatingConnection(E)
                    }
                };
                p[r] = aH.wrap(p[r], o);
                p[m] = aH.wrap(p[m], function () {
                    var y = aQ.getDragObject(arguments), u = ap(aB(y), "dragId"), v = aw[u];
                    if (v != null) {
                        var A = v.floatingAnchorIndex == null ? 1 : v.floatingAnchorIndex;
                        var w = (aJ.isTarget && v.floatingAnchorIndex != 0) || (v.suspendedEndpoint && aJ.referenceEndpoint && aJ.referenceEndpoint.id == v.suspendedEndpoint.id);
                        if (w) {
                            var x = aH.checkCondition("checkDropAllowed", {
                                sourceEndpoint: v.endpoints[A],
                                targetEndpoint: aJ,
                                connection: v
                            });
                            aJ[(x ? "add" : "remove") + "Class"](aH.endpointDropAllowedClass);
                            aJ[(x ? "remove" : "add") + "Class"](aH.endpointDropForbiddenClass);
                            v.endpoints[A].anchor.over(aJ.anchor)
                        }
                    }
                });
                p[s] = aH.wrap(p[s], function () {
                    var x = aQ.getDragObject(arguments), u = ap(aB(x), "dragId"), v = aw[u];
                    if (v != null) {
                        var y = v.floatingAnchorIndex == null ? 1 : v.floatingAnchorIndex;
                        var w = (aJ.isTarget && v.floatingAnchorIndex != 0) || (v.suspendedEndpoint && aJ.referenceEndpoint && aJ.referenceEndpoint.id == v.suspendedEndpoint.id);
                        if (w) {
                            aJ.removeClass(aH.endpointDropAllowedClass);
                            aJ.removeClass(aH.endpointDropForbiddenClass);
                            v.endpoints[y].anchor.out()
                        }
                    }
                });
                aQ.initDroppable(q, p, true, n)
            }
        };
        aL(aB(aJ.canvas), true, !(aR._transient || aJ.anchor.isFloating), aJ);
        if (aR.type) {
            aJ.addType(aR.type, aR.data, aH.isSuspendDrawing())
        }
        return aJ
    }
})();
(function () {
    jsPlumb.Connection = function (aD) {
        var au = this, an = true, T, Y, aq = aD._jsPlumb, az = jsPlumb.CurrentLibrary, ai = az.getAttribute, U = az.getElementObject, aw = jsPlumbUtil, aE = az.getOffset, V = aD.newConnection, aa = aD.newEndpoint, aB = null;
        au.idPrefix = "_jsplumb_c_";
        au.defaultLabelLocation = 0.5;
        au.defaultOverlayKeys = ["Overlays", "ConnectionOverlays"];
        this.parent = aD.parent;
        overlayCapableJsPlumbUIComponent.apply(this, arguments);
        this.isVisible = function () {
            return an
        };
        this.setVisible = function (a) {
            an = a;
            au[a ? "showOverlays" : "hideOverlays"]();
            if (aB && aB.canvas) {
                aB.canvas.style.display = a ? "block" : "none"
            }
            au.repaint()
        };
        var ag = aD.editable === true;
        this.setEditable = function (a) {
            if (aB && aB.isEditable()) {
                ag = a
            }
            return ag
        };
        this.isEditable = function () {
            return ag
        };
        this.editStarted = function () {
            au.fire("editStarted", {path: aB.getPath()});
            aq.setHoverSuspended(true)
        };
        this.editCompleted = function () {
            au.fire("editCompleted", {path: aB.getPath()});
            au.setHover(false);
            aq.setHoverSuspended(false)
        };
        this.editCanceled = function () {
            au.fire("editCanceled", {path: aB.getPath()});
            au.setHover(false);
            aq.setHoverSuspended(false)
        };
        var at = this.addClass, af = this.removeClass;
        this.addClass = function (a, b) {
            at(a);
            if (b) {
                au.endpoints[0].addClass(a);
                au.endpoints[1].addClass(a)
            }
        };
        this.removeClass = function (a, b) {
            af(a);
            if (b) {
                au.endpoints[0].removeClass(a);
                au.endpoints[1].removeClass(a)
            }
        };
        this.getTypeDescriptor = function () {
            return "connection"
        };
        this.getDefaultType = function () {
            return {
                parameters: {},
                scope: null,
                detachable: au._jsPlumb.Defaults.ConnectionsDetachable,
                rettach: au._jsPlumb.Defaults.ReattachConnections,
                paintStyle: au._jsPlumb.Defaults.PaintStyle || jsPlumb.Defaults.PaintStyle,
                connector: au._jsPlumb.Defaults.Connector || jsPlumb.Defaults.Connector,
                hoverPaintStyle: au._jsPlumb.Defaults.HoverPaintStyle || jsPlumb.Defaults.HoverPaintStyle,
                overlays: au._jsPlumb.Defaults.ConnectorOverlays || jsPlumb.Defaults.ConnectorOverlays
            }
        };
        var Z = this.applyType;
        this.applyType = function (b, a) {
            Z(b, a);
            if (b.detachable != null) {
                au.setDetachable(b.detachable)
            }
            if (b.reattach != null) {
                au.setReattach(b.reattach)
            }
            if (b.scope) {
                au.scope = b.scope
            }
            ag = b.editable;
            au.setConnector(b.connector, a)
        };
        Y = au.setHover;
        au.setHover = function (a) {
            aB.setHover.apply(aB, arguments);
            Y.apply(au, arguments)
        };
        T = function (a) {
            if (!aq.isConnectionBeingDragged()) {
                au.setHover(a, false)
            }
        };
        var ad = function (d, a, b) {
            var c = new Object();
            if (!aq.Defaults.DoNotThrowErrors && jsPlumb.Connectors[a] == null) {
                throw {msg: "jsPlumb: unknown connector type '" + a + "'"}
            }
            jsPlumb.Connectors[a].apply(c, [b]);
            jsPlumb.ConnectorRenderers[d].apply(c, [b]);
            return c
        };
        this.setConnector = function (b, d) {
            if (aB != null) {
                aw.removeElements(aB.getDisplayElements())
            }
            var a = {
                _jsPlumb: au._jsPlumb,
                parent: aD.parent,
                cssClass: aD.cssClass,
                container: aD.container,
                tooltip: au.tooltip,
                "pointer-events": aD["pointer-events"]
            }, c = aq.getRenderMode();
            if (aw.isString(b)) {
                aB = ad(c, b, a)
            } else {
                if (aw.isArray(b)) {
                    if (b.length == 1) {
                        aB = ad(c, b[0], a)
                    } else {
                        aB = ad(c, b[0], aw.merge(b[1], a))
                    }
                }
            }
            au.bindListeners(aB, au, T);
            au.canvas = aB.canvas;
            if (ag && jsPlumb.ConnectorEditors != null && jsPlumb.ConnectorEditors[aB.type] && aB.isEditable()) {
                new jsPlumb.ConnectorEditors[aB.type]({
                    connector: aB,
                    connection: au,
                    params: aD.editorParams || {}
                })
            } else {
                ag = false
            }
            if (!d) {
                au.repaint()
            }
        };
        this.getConnector = function () {
            return aB
        };
        this.source = U(aD.source);
        this.target = U(aD.target);
        if (aD.sourceEndpoint) {
            this.source = aD.sourceEndpoint.endpointWillMoveTo || aD.sourceEndpoint.getElement()
        }
        if (aD.targetEndpoint) {
            this.target = aD.targetEndpoint.getElement()
        }
        au.previousConnection = aD.previousConnection;
        this.sourceId = ai(this.source, "id");
        this.targetId = ai(this.target, "id");
        this.scope = aD.scope;
        this.endpoints = [];
        this.endpointStyles = [];
        var ah = function (a, b) {
            return (a) ? aq.makeAnchor(a, b, aq) : null
        }, ae = function (l, d, k, g, f, h, e) {
            var c;
            if (l) {
                au.endpoints[d] = l;
                l.addConnection(au)
            } else {
                if (!k.endpoints) {
                    k.endpoints = [null, null]
                }
                var m = k.endpoints[d] || k.endpoint || aq.Defaults.Endpoints[d] || jsPlumb.Defaults.Endpoints[d] || aq.Defaults.Endpoint || jsPlumb.Defaults.Endpoint;
                if (!k.endpointStyles) {
                    k.endpointStyles = [null, null]
                }
                if (!k.endpointHoverStyles) {
                    k.endpointHoverStyles = [null, null]
                }
                var o = k.endpointStyles[d] || k.endpointStyle || aq.Defaults.EndpointStyles[d] || jsPlumb.Defaults.EndpointStyles[d] || aq.Defaults.EndpointStyle || jsPlumb.Defaults.EndpointStyle;
                if (o.fillStyle == null && h != null) {
                    o.fillStyle = h.strokeStyle
                }
                if (o.outlineColor == null && h != null) {
                    o.outlineColor = h.outlineColor
                }
                if (o.outlineWidth == null && h != null) {
                    o.outlineWidth = h.outlineWidth
                }
                var a = k.endpointHoverStyles[d] || k.endpointHoverStyle || aq.Defaults.EndpointHoverStyles[d] || jsPlumb.Defaults.EndpointHoverStyles[d] || aq.Defaults.EndpointHoverStyle || jsPlumb.Defaults.EndpointHoverStyle;
                if (e != null) {
                    if (a == null) {
                        a = {}
                    }
                    if (a.fillStyle == null) {
                        a.fillStyle = e.strokeStyle
                    }
                }
                var b = k.anchors ? k.anchors[d] : k.anchor ? k.anchor : ah(aq.Defaults.Anchors[d], f) || ah(jsPlumb.Defaults.Anchors[d], f) || ah(aq.Defaults.Anchor, f) || ah(jsPlumb.Defaults.Anchor, f), n = k.uuids ? k.uuids[d] : null;
                c = aa({
                    paintStyle: o,
                    hoverPaintStyle: a,
                    endpoint: m,
                    connections: [au],
                    uuid: n,
                    anchor: b,
                    source: g,
                    scope: k.scope,
                    container: k.container,
                    reattach: k.reattach || aq.Defaults.ReattachConnections,
                    detachable: k.detachable || aq.Defaults.ConnectionsDetachable
                });
                au.endpoints[d] = c;
                if (k.drawEndpoints === false) {
                    c.setVisible(false, true, true)
                }
            }
            return c
        };
        var ax = ae(aD.sourceEndpoint, 0, aD, au.source, au.sourceId, aD.paintStyle, aD.hoverPaintStyle);
        if (ax) {
            aw.addToList(aD.endpointsByElement, this.sourceId, ax)
        }
        var ay = ae(aD.targetEndpoint, 1, aD, au.target, au.targetId, aD.paintStyle, aD.hoverPaintStyle);
        if (ay) {
            aw.addToList(aD.endpointsByElement, this.targetId, ay)
        }
        if (!this.scope) {
            this.scope = this.endpoints[0].scope
        }
        au.endpointsToDeleteOnDetach = [null, null];
        if (aD.deleteEndpointsOnDetach) {
            if (aD.sourceIsNew) {
                au.endpointsToDeleteOnDetach[0] = au.endpoints[0]
            }
            if (aD.targetIsNew) {
                au.endpointsToDeleteOnDetach[1] = au.endpoints[1]
            }
        }
        if (aD.endpointsToDeleteOnDetach) {
            au.endpointsToDeleteOnDetach = aD.endpointsToDeleteOnDetach
        }
        au.setConnector(this.endpoints[0].connector || this.endpoints[1].connector || aD.connector || aq.Defaults.Connector || jsPlumb.Defaults.Connector, true);
        if (aD.path) {
            aB.setPath(aD.path)
        }
        this.setPaintStyle(this.endpoints[0].connectorStyle || this.endpoints[1].connectorStyle || aD.paintStyle || aq.Defaults.PaintStyle || jsPlumb.Defaults.PaintStyle, true);
        this.setHoverPaintStyle(this.endpoints[0].connectorHoverStyle || this.endpoints[1].connectorHoverStyle || aD.hoverPaintStyle || aq.Defaults.HoverPaintStyle || jsPlumb.Defaults.HoverPaintStyle, true);
        this.paintStyleInUse = this.getPaintStyle();
        var al = aq.getSuspendedAt();
        aq.updateOffset({elId: this.sourceId, timestamp: al});
        aq.updateOffset({elId: this.targetId, timestamp: al});
        if (!aq.isSuspendDrawing()) {
            var X = aq.getCachedData(this.sourceId), aA = X.o, ak = X.s, ap = aq.getCachedData(this.targetId), ar = ap.o, ac = ap.s, S = al || aq.timestamp(), av = this.endpoints[0].anchor.compute({
                xy: [aA.left, aA.top],
                wh: ak,
                element: this.endpoints[0],
                elementId: this.endpoints[0].elementId,
                txy: [ar.left, ar.top],
                twh: ac,
                tElement: this.endpoints[1],
                timestamp: S
            });
            this.endpoints[0].paint({anchorLoc: av, timestamp: S});
            av = this.endpoints[1].anchor.compute({
                xy: [ar.left, ar.top],
                wh: ac,
                element: this.endpoints[1],
                elementId: this.endpoints[1].elementId,
                txy: [aA.left, aA.top],
                twh: ak,
                tElement: this.endpoints[0],
                timestamp: S
            });
            this.endpoints[1].paint({anchorLoc: av, timestamp: S})
        }
        var ao = aq.Defaults.ConnectionsDetachable;
        if (aD.detachable === false) {
            ao = false
        }
        if (au.endpoints[0].connectionsDetachable === false) {
            ao = false
        }
        if (au.endpoints[1].connectionsDetachable === false) {
            ao = false
        }
        this.isDetachable = function () {
            return ao === true
        };
        this.setDetachable = function (a) {
            ao = a === true
        };
        var W = aD.reattach || au.endpoints[0].reattachConnections || au.endpoints[1].reattachConnections || aq.Defaults.ReattachConnections;
        this.isReattach = function () {
            return W === true
        };
        this.setReattach = function (a) {
            W = a === true
        };
        var aC = aD.cost || au.endpoints[0].getConnectionCost();
        au.getCost = function () {
            return aC
        };
        au.setCost = function (a) {
            aC = a
        };
        var am = aD.directed;
        if (aD.directed == null) {
            am = au.endpoints[0].areConnectionsDirected()
        }
        au.isDirected = function () {
            return am === true
        };
        var ab = jsPlumb.extend({}, this.endpoints[0].getParameters());
        jsPlumb.extend(ab, this.endpoints[1].getParameters());
        jsPlumb.extend(ab, au.getParameters());
        au.setParameters(ab);
        this.getAttachedElements = function () {
            return au.endpoints
        };
        this.moveParent = function (a) {
            var b = jsPlumb.CurrentLibrary, c = b.getParent(aB.canvas);
            if (aB.bgCanvas) {
                b.removeElement(aB.bgCanvas);
                b.appendElement(aB.bgCanvas, a)
            }
            b.removeElement(aB.canvas);
            b.appendElement(aB.canvas, a);
            for (var d = 0; d < au.overlays.length; d++) {
                if (au.overlays[d].isAppendedAtTopLevel) {
                    b.removeElement(au.overlays[d].canvas);
                    b.appendElement(au.overlays[d].canvas, a);
                    if (au.overlays[d].reattachListeners) {
                        au.overlays[d].reattachListeners(aB)
                    }
                }
            }
            if (aB.reattachListeners) {
                aB.reattachListeners()
            }
        };
        var aj = null;
        this.paint = function (o) {
            if (an) {
                o = o || {};
                var y = o.elId, x = o.ui, c = o.recalc, g = o.timestamp, w = false, p = w ? this.sourceId : this.targetId, d = w ? this.targetId : this.sourceId, f = w ? 0 : 1, m = w ? 1 : 0;
                if (g == null || g != aj) {
                    var l = aq.updateOffset({
                        elId: y,
                        offset: x,
                        recalc: c,
                        timestamp: g
                    }).o, b = aq.updateOffset({
                        elId: p,
                        timestamp: g
                    }).o, u = this.endpoints[m], h = this.endpoints[f];
                    if (o.clearEdits) {
                        u.anchor.clearUserDefinedLocation();
                        h.anchor.clearUserDefinedLocation();
                        aB.setEdited(false)
                    }
                    var e = u.anchor.getCurrentLocation(u), q = h.anchor.getCurrentLocation(h);
                    aB.resetBounds();
                    aB.compute({
                        sourcePos: e,
                        targetPos: q,
                        sourceEndpoint: this.endpoints[m],
                        targetEndpoint: this.endpoints[f],
                        lineWidth: au.paintStyleInUse.lineWidth,
                        sourceInfo: l,
                        targetInfo: b,
                        clearEdits: o.clearEdits === true
                    });
                    var a = {
                        minX: Infinity,
                        minY: Infinity,
                        maxX: -Infinity,
                        maxY: -Infinity
                    };
                    for (var r = 0; r < au.overlays.length; r++) {
                        var v = au.overlays[r];
                        if (v.isVisible()) {
                            au.overlayPlacements[r] = v.draw(aB, au.paintStyleInUse);
                            a.minX = Math.min(a.minX, au.overlayPlacements[r].minX);
                            a.maxX = Math.max(a.maxX, au.overlayPlacements[r].maxX);
                            a.minY = Math.min(a.minY, au.overlayPlacements[r].minY);
                            a.maxY = Math.max(a.maxY, au.overlayPlacements[r].maxY)
                        }
                    }
                    var k = parseFloat(au.paintStyleInUse.lineWidth || 1) / 2, n = parseFloat(au.paintStyleInUse.lineWidth || 0), s = {
                        xmin: Math.min(aB.bounds.minX - (k + n), a.minX),
                        ymin: Math.min(aB.bounds.minY - (k + n), a.minY),
                        xmax: Math.max(aB.bounds.maxX + (k + n), a.maxX),
                        ymax: Math.max(aB.bounds.maxY + (k + n), a.maxY)
                    };
                    aB.paint(au.paintStyleInUse, null, s);
                    for (var r = 0; r < au.overlays.length; r++) {
                        var v = au.overlays[r];
                        if (v.isVisible()) {
                            v.paint(au.overlayPlacements[r], s)
                        }
                    }
                }
                aj = g
            }
        };
        this.repaint = function (a) {
            a = a || {};
            var b = !(a.recalc === false);
            this.paint({
                elId: this.sourceId,
                recalc: b,
                timestamp: a.timestamp,
                clearEdits: a.clearEdits
            })
        };
        var R = aD.type || au.endpoints[0].connectionType || au.endpoints[1].connectionType;
        if (R) {
            au.addType(R, aD.data, aq.isSuspendDrawing())
        }
    }
})();
(function () {
    jsPlumb.DOMElementComponent = function (a) {
        jsPlumb.jsPlumbUIComponent.apply(this, arguments);
        this.mousemove = this.dblclick = this.click = this.mousedown = this.mouseup = function (b) {
        }
    };
    jsPlumb.Segments = {
        AbstractSegment: function (a) {
            this.params = a;
            this.findClosestPointOnPath = function (c, b) {
                return {d: Infinity, x: null, y: null, l: null}
            };
            this.getBounds = function () {
                return {
                    minX: Math.min(a.x1, a.x2),
                    minY: Math.min(a.y1, a.y2),
                    maxX: Math.max(a.x1, a.x2),
                    maxY: Math.max(a.y1, a.y2)
                }
            }
        }, Straight: function (s) {
            var a = this, c = jsPlumb.Segments.AbstractSegment.apply(this, arguments), v, u, b, w, x, d, m, y = function () {
                v = Math.sqrt(Math.pow(x - w, 2) + Math.pow(m - d, 2));
                u = jsPlumbUtil.gradient({x: w, y: d}, {x: x, y: m});
                b = -1 / u
            };
            this.type = "Straight";
            a.getLength = function () {
                return v
            };
            a.getGradient = function () {
                return u
            };
            this.getCoordinates = function () {
                return {x1: w, y1: d, x2: x, y2: m}
            };
            this.setCoordinates = function (k) {
                w = k.x1;
                d = k.y1;
                x = k.x2;
                m = k.y2;
                y()
            };
            this.setCoordinates({x1: s.x1, y1: s.y1, x2: s.x2, y2: s.y2});
            this.getBounds = function () {
                return {
                    minX: Math.min(w, x),
                    minY: Math.min(d, m),
                    maxX: Math.max(w, x),
                    maxY: Math.max(d, m)
                }
            };
            this.pointOnPath = function (n, l) {
                if (n == 0 && !l) {
                    return {x: w, y: d}
                } else {
                    if (n == 1 && !l) {
                        return {x: x, y: m}
                    } else {
                        var k = l ? n > 0 ? n : v + n : n * v;
                        return jsPlumbUtil.pointOnLine({x: w, y: d}, {
                            x: x,
                            y: m
                        }, k)
                    }
                }
            };
            this.gradientAtPoint = function (k) {
                return u
            };
            this.pointAlongPathFrom = function (k, l, n) {
                var o = a.pointOnPath(k, n), p = k == 1 ? {
                    x: w + ((x - w) * 10),
                    y: d + ((d - m) * 10)
                } : l <= 0 ? {x: w, y: d} : {x: x, y: m};
                if (l <= 0 && Math.abs(l) > 1) {
                    l *= -1
                }
                return jsPlumbUtil.pointOnLine(o, p, l)
            };
            this.findClosestPointOnPath = function (q, r) {
                if (u == 0) {
                    return {x: q, y: d, d: Math.abs(r - d)}
                } else {
                    if (u == Infinity || u == -Infinity) {
                        return {x: w, y: r, d: Math.abs(q - 1)}
                    } else {
                        var l = d - (u * w), p = r - (b * q), o = (p - l) / (u - b), D = (u * o) + l, k = jsPlumbUtil.lineLength([q, r], [o, D]), n = jsPlumbUtil.lineLength([o, D], [w, d]);
                        return {d: k, x: o, y: D, l: n / v}
                    }
                }
            }
        }, Arc: function (w) {
            var a = this, b = jsPlumb.Segments.AbstractSegment.apply(this, arguments), u = function (k, l) {
                return jsPlumbUtil.theta([w.cx, w.cy], [k, l])
            }, B = function (m) {
                if (a.anticlockwise) {
                    var n = a.startAngle < a.endAngle ? a.startAngle + x : a.startAngle, k = Math.abs(n - a.endAngle);
                    return n - (k * m)
                } else {
                    var l = a.endAngle < a.startAngle ? a.endAngle + x : a.endAngle, k = Math.abs(l - a.startAngle);
                    return a.startAngle + (k * m)
                }
            }, x = 2 * Math.PI;
            this.radius = w.r;
            this.anticlockwise = w.ac;
            this.type = "Arc";
            if (w.startAngle && w.endAngle) {
                this.startAngle = w.startAngle;
                this.endAngle = w.endAngle;
                this.x1 = w.cx + (a.radius * Math.cos(w.startAngle));
                this.y1 = w.cy + (a.radius * Math.sin(w.startAngle));
                this.x2 = w.cx + (a.radius * Math.cos(w.endAngle));
                this.y2 = w.cy + (a.radius * Math.sin(w.endAngle))
            } else {
                this.startAngle = u(w.x1, w.y1);
                this.endAngle = u(w.x2, w.y2);
                this.x1 = w.x1;
                this.y1 = w.y1;
                this.x2 = w.x2;
                this.y2 = w.y2
            }
            if (this.endAngle < 0) {
                this.endAngle += x
            }
            if (this.startAngle < 0) {
                this.startAngle += x
            }
            this.segment = jsPlumbUtil.segment([this.x1, this.y1], [this.x2, this.y2]);
            var s = a.endAngle < a.startAngle ? a.endAngle + x : a.endAngle;
            a.sweep = Math.abs(s - a.startAngle);
            if (a.anticlockwise) {
                a.sweep = x - a.sweep
            }
            var c = 2 * Math.PI * a.radius, A = a.sweep / x, y = c * A;
            this.getLength = function () {
                return y
            };
            this.getBounds = function () {
                return {
                    minX: w.cx - w.r,
                    maxX: w.cx + w.r,
                    minY: w.cy - w.r,
                    maxY: w.cy + w.r
                }
            };
            var v = 1e-10, d = function (k) {
                var l = Math.floor(k), m = Math.ceil(k);
                if (k - l < v) {
                    return l
                } else {
                    if (m - k < v) {
                        return m
                    }
                }
                return k
            };
            this.pointOnPath = function (o, k) {
                if (o == 0) {
                    return {x: a.x1, y: a.y1, theta: a.startAngle}
                } else {
                    if (o == 1) {
                        return {x: a.x2, y: a.y2, theta: a.endAngle}
                    }
                }
                if (k) {
                    o = o / y
                }
                var l = B(o), m = w.cx + (w.r * Math.cos(l)), n = w.cy + (w.r * Math.sin(l));
                return {x: d(m), y: d(n), theta: l}
            };
            this.gradientAtPoint = function (m, k) {
                var l = a.pointOnPath(m, k);
                var n = jsPlumbUtil.normal([w.cx, w.cy], [l.x, l.y]);
                if (!a.anticlockwise && (n == Infinity || n == -Infinity)) {
                    n *= -1
                }
                return n
            };
            this.pointAlongPathFrom = function (k, D, l) {
                var q = a.pointOnPath(k, l), r = D / c * 2 * Math.PI, p = a.anticlockwise ? -1 : 1, m = q.theta + (p * r), n = w.cx + (a.radius * Math.cos(m)), o = w.cy + (a.radius * Math.sin(m));
                return {x: n, y: o}
            }
        }, Bezier: function (a) {
            var n = this, d = jsPlumb.Segments.AbstractSegment.apply(this, arguments), b = [{
                x: a.x1,
                y: a.y1
            }, {x: a.cp1x, y: a.cp1y}, {x: a.cp2x, y: a.cp2y}, {
                x: a.x2,
                y: a.y2
            }], m = {
                minX: Math.min(a.x1, a.x2, a.cp1x, a.cp2x),
                minY: Math.min(a.y1, a.y2, a.cp1y, a.cp2y),
                maxX: Math.max(a.x1, a.x2, a.cp1x, a.cp2x),
                maxY: Math.max(a.y1, a.y2, a.cp1y, a.cp2y)
            };
            this.type = "Bezier";
            var c = function (p, k, l) {
                if (l) {
                    k = jsBezier.locationAlongCurveFrom(p, k > 0 ? 0 : 1, k)
                }
                return k
            };
            this.pointOnPath = function (k, l) {
                k = c(b, k, l);
                return jsBezier.pointOnCurve(b, k)
            };
            this.gradientAtPoint = function (k, l) {
                k = c(b, k, l);
                return jsBezier.gradientAtPoint(b, k)
            };
            this.pointAlongPathFrom = function (k, l, p) {
                k = c(b, k, p);
                return jsBezier.pointAlongCurveFrom(b, k, l)
            };
            this.getLength = function () {
                return jsBezier.getLength(b)
            };
            this.getBounds = function () {
                return m
            }
        }
    };
    var g = function () {
        var a = this;
        a.resetBounds = function () {
            a.bounds = {
                minX: Infinity,
                minY: Infinity,
                maxX: -Infinity,
                maxY: -Infinity
            }
        };
        a.resetBounds()
    };
    jsPlumb.Connectors.AbstractConnector = function (I) {
        g.apply(this, arguments);
        var c = this, L = [], U = false, K = 0, S = [], E = [], V = I.stub || 0, P = jsPlumbUtil.isArray(V) ? V[0] : V, G = jsPlumbUtil.isArray(V) ? V[1] : V, b = I.gap || 0, O = jsPlumbUtil.isArray(b) ? b[0] : b, M = jsPlumbUtil.isArray(b) ? b[1] : b, N = null, R = false, Q = null;
        this.isEditable = function () {
            return false
        };
        this.setEdited = function (k) {
            R = k
        };
        this.getPath = function () {
        };
        this.setPath = function (k) {
        };
        this.findSegmentForPoint = function (o, k) {
            var n = {d: Infinity, s: null, x: null, y: null, l: null};
            for (var m = 0; m < L.length; m++) {
                var l = L[m].findClosestPointOnPath(o, k);
                if (l.d < n.d) {
                    n.d = l.d;
                    n.l = l.l;
                    n.x = l.x;
                    n.y = l.y;
                    n.s = L[m]
                }
            }
            return n
        };
        var J = function () {
            var k = 0;
            for (var l = 0; l < L.length; l++) {
                var m = L[l].getLength();
                E[l] = m / K;
                S[l] = [k, (k += (m / K))]
            }
        }, T = function (m, k) {
            if (k) {
                m = m > 0 ? m / K : (K + m) / K
            }
            var o = S.length - 1, n = 1;
            for (var l = 0; l < S.length; l++) {
                if (S[l][1] >= m) {
                    o = l;
                    n = m == 1 ? 1 : m == 0 ? 0 : (m - S[l][0]) / E[l];
                    break
                }
            }
            return {segment: L[o], proportion: n, index: o}
        }, a = function (l, k) {
            var m = new jsPlumb.Segments[l](k);
            L.push(m);
            K += m.getLength();
            c.updateBounds(m)
        }, F = function () {
            K = 0;
            L.splice(0, L.length);
            S.splice(0, S.length);
            E.splice(0, E.length)
        };
        this.setSegments = function (k) {
            N = [];
            K = 0;
            for (var l = 0; l < k.length; l++) {
                N.push(k[l]);
                K += k[l].getLength()
            }
        };
        var H = function (m) {
            c.lineWidth = m.lineWidth;
            var X = jsPlumbUtil.segment(m.sourcePos, m.targetPos), q = m.targetPos[0] < m.sourcePos[0], s = m.targetPos[1] < m.sourcePos[1], B = m.lineWidth || 1, n = m.sourceEndpoint.anchor.orientation || m.sourceEndpoint.anchor.getOrientation(m.sourceEndpoint), D = m.targetEndpoint.anchor.orientation || m.targetEndpoint.anchor.getOrientation(m.targetEndpoint), x = q ? m.targetPos[0] : m.sourcePos[0], y = s ? m.targetPos[1] : m.sourcePos[1], v = Math.abs(m.targetPos[0] - m.sourcePos[0]), o = Math.abs(m.targetPos[1] - m.sourcePos[1]);
            if (n[0] == 0 && n[1] == 0 || D[0] == 0 && D[1] == 0) {
                var A = v > o ? 0 : 1, C = [1, 0][A];
                n = [];
                D = [];
                n[A] = m.sourcePos[A] > m.targetPos[A] ? -1 : 1;
                D[A] = m.sourcePos[A] > m.targetPos[A] ? 1 : -1;
                n[C] = 0;
                D[C] = 0
            }
            var r = q ? v + (O * n[0]) : O * n[0], u = s ? o + (O * n[1]) : O * n[1], k = q ? M * D[0] : v + (M * D[0]), l = s ? M * D[1] : o + (M * D[1]), p = ((n[0] * D[0]) + (n[1] * D[1]));
            var w = {
                sx: r,
                sy: u,
                tx: k,
                ty: l,
                lw: B,
                xSpan: Math.abs(k - r),
                ySpan: Math.abs(l - u),
                mx: (r + k) / 2,
                my: (u + l) / 2,
                so: n,
                to: D,
                x: x,
                y: y,
                w: v,
                h: o,
                segment: X,
                startStubX: r + (n[0] * P),
                startStubY: u + (n[1] * P),
                endStubX: k + (D[0] * G),
                endStubY: l + (D[1] * G),
                isXGreaterThanStubTimes2: Math.abs(r - k) > (P + G),
                isYGreaterThanStubTimes2: Math.abs(u - l) > (P + G),
                opposite: p == -1,
                perpendicular: p == 0,
                orthogonal: p == 1,
                sourceAxis: n[0] == 0 ? "y" : "x",
                points: [x, y, v, o, r, u, k, l]
            };
            w.anchorOrientation = w.opposite ? "opposite" : w.orthogonal ? "orthogonal" : "perpendicular";
            return w
        };
        this.getSegments = function () {
            return L
        };
        c.updateBounds = function (k) {
            var l = k.getBounds();
            c.bounds.minX = Math.min(c.bounds.minX, l.minX);
            c.bounds.maxX = Math.max(c.bounds.maxX, l.maxX);
            c.bounds.minY = Math.min(c.bounds.minY, l.minY);
            c.bounds.maxY = Math.max(c.bounds.maxY, l.maxY)
        };
        var d = function () {
            console.log("SEGMENTS:");
            for (var k = 0; k < L.length; k++) {
                console.log(L[k].type, L[k].getLength(), S[k])
            }
        };
        this.pointOnPath = function (l, k) {
            var m = T(l, k);
            return m.segment.pointOnPath(m.proportion, k)
        };
        this.gradientAtPoint = function (k) {
            var l = T(k, absolute);
            return l.segment.gradientAtPoint(l.proportion, absolute)
        };
        this.pointAlongPathFrom = function (m, k, l) {
            var n = T(m, l);
            return n.segment.pointAlongPathFrom(n.proportion, k, false)
        };
        this.compute = function (k) {
            if (!R) {
                Q = H(k)
            }
            F();
            this._compute(Q, k);
            c.x = Q.points[0];
            c.y = Q.points[1];
            c.w = Q.points[2];
            c.h = Q.points[3];
            c.segment = Q.segment;
            J()
        };
        return {
            addSegment: a,
            prepareCompute: H,
            sourceStub: P,
            targetStub: G,
            maxStub: Math.max(P, G),
            sourceGap: O,
            targetGap: M,
            maxGap: Math.max(O, M)
        }
    };
    jsPlumb.Connectors.Straight = function () {
        this.type = "Straight";
        var a = jsPlumb.Connectors.AbstractConnector.apply(this, arguments);
        this._compute = function (b, c) {
            a.addSegment("Straight", {
                x1: b.sx,
                y1: b.sy,
                x2: b.startStubX,
                y2: b.startStubY
            });
            a.addSegment("Straight", {
                x1: b.startStubX,
                y1: b.startStubY,
                x2: b.endStubX,
                y2: b.endStubY
            });
            a.addSegment("Straight", {
                x1: b.endStubX,
                y1: b.endStubY,
                x2: b.tx,
                y2: b.ty
            })
        }
    };
    jsPlumb.Connectors.Bezier = function (a) {
        a = a || {};
        var m = this, c = jsPlumb.Connectors.AbstractConnector.apply(this, arguments), b = a.stub || 50, n = a.curviness || 150, d = 10;
        this.type = "Bezier";
        this.getCurviness = function () {
            return n
        };
        this._findControlPoint = function (A, y, D, x, l) {
            var C = x.anchor.getOrientation(x), B = l.anchor.getOrientation(l), k = C[0] != B[0] || C[1] == B[1], p = [];
            if (!k) {
                if (C[0] == 0) {
                    p.push(y[0] < D[0] ? A[0] + d : A[0] - d)
                } else {
                    p.push(A[0] - (n * C[0]))
                }
                if (C[1] == 0) {
                    p.push(y[1] < D[1] ? A[1] + d : A[1] - d)
                } else {
                    p.push(A[1] + (n * B[1]))
                }
            } else {
                if (B[0] == 0) {
                    p.push(D[0] < y[0] ? A[0] + d : A[0] - d)
                } else {
                    p.push(A[0] + (n * B[0]))
                }
                if (B[1] == 0) {
                    p.push(D[1] < y[1] ? A[1] + d : A[1] - d)
                } else {
                    p.push(A[1] + (n * C[1]))
                }
            }
            return p
        };
        this._compute = function (k, B) {
            var l = B.sourcePos, F = B.targetPos, E = Math.abs(l[0] - F[0]), I = Math.abs(l[1] - F[1]), H = l[0] < F[0] ? E : 0, J = l[1] < F[1] ? I : 0, C = l[0] < F[0] ? 0 : E, D = l[1] < F[1] ? 0 : I, p = m._findControlPoint([H, J], l, F, B.sourceEndpoint, B.targetEndpoint), G = m._findControlPoint([C, D], F, l, B.targetEndpoint, B.sourceEndpoint);
            c.addSegment("Bezier", {
                x1: H,
                y1: J,
                x2: C,
                y2: D,
                cp1x: p[0],
                cp1y: p[1],
                cp2x: G[0],
                cp2y: G[1]
            })
        }
    };
    jsPlumb.Endpoints.AbstractEndpoint = function (a) {
        g.apply(this, arguments);
        var b = this;
        this.compute = function (d, p, c, n) {
            var o = b._compute.apply(b, arguments);
            b.x = o[0];
            b.y = o[1];
            b.w = o[2];
            b.h = o[3];
            b.bounds.minX = b.x;
            b.bounds.minY = b.y;
            b.bounds.maxX = b.x + b.w;
            b.bounds.maxY = b.y + b.h;
            return o
        };
        return {compute: b.compute, cssClass: a.cssClass}
    };
    jsPlumb.Endpoints.Dot = function (a) {
        this.type = "Dot";
        var c = this, b = jsPlumb.Endpoints.AbstractEndpoint.apply(this, arguments);
        a = a || {};
        this.radius = a.radius || 10;
        this.defaultOffset = 0.5 * this.radius;
        this.defaultInnerRadius = this.radius / 3;
        this._compute = function (d, B, A, x) {
            c.radius = A.radius || c.radius;
            var u = d[0] - c.radius, v = d[1] - c.radius, C = c.radius * 2, w = c.radius * 2;
            if (A.strokeStyle) {
                var y = A.lineWidth || 1;
                u -= y;
                v -= y;
                C += (y * 2);
                w += (y * 2)
            }
            return [u, v, C, w, c.radius]
        }
    };
    jsPlumb.Endpoints.Rectangle = function (a) {
        this.type = "Rectangle";
        var c = this, b = jsPlumb.Endpoints.AbstractEndpoint.apply(this, arguments);
        a = a || {};
        this.width = a.width || 20;
        this.height = a.height || 20;
        this._compute = function (x, r, v, y) {
            var d = v.width || c.width, s = v.height || c.height, u = x[0] - (d / 2), w = x[1] - (s / 2);
            return [u, w, d, s]
        }
    };
    var e = function (a) {
        jsPlumb.DOMElementComponent.apply(this, arguments);
        var c = this;
        var b = [];
        this.getDisplayElements = function () {
            return b
        };
        this.appendDisplayElement = function (d) {
            b.push(d)
        }
    };
    jsPlumb.Endpoints.Image = function (s) {
        this.type = "Image";
        e.apply(this, arguments);
        var a = this, b = jsPlumb.Endpoints.AbstractEndpoint.apply(this, arguments), u = false, v = false, w = s.width, x = s.height, d = null, y = s.endpoint;
        this.img = new Image();
        a.ready = false;
        this.img.onload = function () {
            a.ready = true;
            w = w || a.img.width;
            x = x || a.img.height;
            if (d) {
                d(a)
            }
        };
        y.setImage = function (m, k) {
            var l = m.constructor == String ? m : m.src;
            d = k;
            a.img.src = m;
            if (a.canvas != null) {
                a.canvas.setAttribute("src", m)
            }
        };
        y.setImage(s.src || s.url, s.onload);
        this._compute = function (l, n, k, m) {
            a.anchorPoint = l;
            if (a.ready) {
                return [l[0] - w / 2, l[1] - x / 2, w, x]
            } else {
                return [0, 0, 0, 0]
            }
        };
        a.canvas = document.createElement("img"), u = false;
        a.canvas.style.margin = 0;
        a.canvas.style.padding = 0;
        a.canvas.style.outline = 0;
        a.canvas.style.position = "absolute";
        var r = s.cssClass ? " " + s.cssClass : "";
        a.canvas.className = jsPlumb.endpointClass + r;
        if (w) {
            a.canvas.setAttribute("width", w)
        }
        if (x) {
            a.canvas.setAttribute("height", x)
        }
        jsPlumb.appendElement(a.canvas, s.parent);
        a.attachListeners(a.canvas, a);
        a.cleanup = function () {
            v = true
        };
        var c = function (l, m, n) {
            if (!v) {
                if (!u) {
                    a.canvas.setAttribute("src", a.img.src);
                    a.appendDisplayElement(a.canvas);
                    u = true
                }
                var o = a.anchorPoint[0] - (w / 2), k = a.anchorPoint[1] - (x / 2);
                jsPlumb.sizeCanvas(a.canvas, o, k, w, x)
            }
        };
        this.paint = function (k, l) {
            if (a.ready) {
                c(k, l)
            } else {
                window.setTimeout(function () {
                    a.paint(k, l)
                }, 200)
            }
        }
    };
    jsPlumb.Endpoints.Blank = function (a) {
        var c = this, b = jsPlumb.Endpoints.AbstractEndpoint.apply(this, arguments);
        this.type = "Blank";
        e.apply(this, arguments);
        this._compute = function (n, p, d, o) {
            return [n[0], n[1], 10, 0]
        };
        c.canvas = document.createElement("div");
        c.canvas.style.display = "block";
        c.canvas.style.width = "1px";
        c.canvas.style.height = "1px";
        c.canvas.style.background = "transparent";
        c.canvas.style.position = "absolute";
        c.canvas.className = c._jsPlumb.endpointClass;
        jsPlumb.appendElement(c.canvas, a.parent);
        this.paint = function (d, l) {
            jsPlumb.sizeCanvas(c.canvas, c.x, c.y, c.w, c.h)
        }
    };
    jsPlumb.Endpoints.Triangle = function (a) {
        this.type = "Triangle";
        var c = this, b = jsPlumb.Endpoints.AbstractEndpoint.apply(this, arguments);
        a = a || {};
        a.width = a.width || 55;
        a.height = a.height || 55;
        this.width = a.width;
        this.height = a.height;
        this._compute = function (x, r, v, y) {
            var d = v.width || c.width, s = v.height || c.height, u = x[0] - (d / 2), w = x[1] - (s / 2);
            return [u, w, d, s]
        }
    };
    var h = jsPlumb.Overlays.AbstractOverlay = function (a) {
        var b = true, c = this;
        this.isAppendedAtTopLevel = true;
        this.component = a.component;
        this.loc = a.location == null ? 0.5 : a.location;
        this.endpointLoc = a.endpointLocation == null ? [0.5, 0.5] : a.endpointLocation;
        this.setVisible = function (d) {
            b = d;
            c.component.repaint()
        };
        this.isVisible = function () {
            return b
        };
        this.hide = function () {
            c.setVisible(false)
        };
        this.show = function () {
            c.setVisible(true)
        };
        this.incrementLocation = function (d) {
            c.loc += d;
            c.component.repaint()
        };
        this.setLocation = function (d) {
            c.loc = d;
            c.component.repaint()
        };
        this.getLocation = function () {
            return c.loc
        }
    };
    jsPlumb.Overlays.Arrow = function (a) {
        this.type = "Arrow";
        h.apply(this, arguments);
        this.isAppendedAtTopLevel = false;
        a = a || {};
        var d = this, n = jsPlumbUtil;
        this.length = a.length || 20;
        this.width = a.width || 20;
        this.id = a.id;
        var b = (a.direction || 1) < 0 ? -1 : 1, c = a.paintStyle || {lineWidth: 1}, m = a.foldback || 0.623;
        this.computeMaxSize = function () {
            return d.width * 1.5
        };
        this.cleanup = function () {
        };
        this.draw = function (K, D) {
            var k, J, G, N, l;
            if (K.pointAlongPathFrom) {
                if (n.isString(d.loc) || d.loc > 1 || d.loc < 0) {
                    var F = parseInt(d.loc);
                    k = K.pointAlongPathFrom(F, b * d.length / 2, true), J = K.pointOnPath(F, true), G = n.pointOnLine(k, J, d.length)
                } else {
                    if (d.loc == 1) {
                        k = K.pointOnPath(d.loc);
                        J = K.pointAlongPathFrom(d.loc, -(d.length));
                        G = n.pointOnLine(k, J, d.length);
                        if (b == -1) {
                            var E = G;
                            G = k;
                            k = E
                        }
                    } else {
                        if (d.loc == 0) {
                            G = K.pointOnPath(d.loc);
                            J = K.pointAlongPathFrom(d.loc, d.length);
                            k = n.pointOnLine(G, J, d.length);
                            if (b == -1) {
                                var E = G;
                                G = k;
                                k = E
                            }
                        } else {
                            k = K.pointAlongPathFrom(d.loc, b * d.length / 2), J = K.pointOnPath(d.loc), G = n.pointOnLine(k, J, d.length)
                        }
                    }
                }
                N = n.perpendicularLineTo(k, G, d.width);
                l = n.pointOnLine(k, G, m * d.length);
                var M = {
                    hxy: k,
                    tail: N,
                    cxy: l
                }, L = c.strokeStyle || D.strokeStyle, I = c.fillStyle || D.strokeStyle, C = c.lineWidth || D.lineWidth, H = {
                    component: K,
                    d: M,
                    lineWidth: C,
                    strokeStyle: L,
                    fillStyle: I,
                    minX: Math.min(k.x, N[0].x, N[1].x),
                    maxX: Math.max(k.x, N[0].x, N[1].x),
                    minY: Math.min(k.y, N[0].y, N[1].y),
                    maxY: Math.max(k.y, N[0].y, N[1].y)
                };
                return H
            } else {
                return {component: K, minX: 0, maxX: 0, minY: 0, maxY: 0}
            }
        }
    };
    jsPlumb.Overlays.PlainArrow = function (a) {
        a = a || {};
        var b = jsPlumb.extend(a, {foldback: 1});
        jsPlumb.Overlays.Arrow.call(this, b);
        this.type = "PlainArrow"
    };
    jsPlumb.Overlays.Diamond = function (a) {
        a = a || {};
        var c = a.length || 40, b = jsPlumb.extend(a, {
            length: c / 2,
            foldback: 2
        });
        jsPlumb.Overlays.Arrow.call(this, b);
        this.type = "Diamond"
    };
    var f = function (s) {
        jsPlumb.DOMElementComponent.apply(this, arguments);
        h.apply(this, arguments);
        var b = this, p = false, q = jsPlumb.CurrentLibrary;
        s = s || {};
        this.id = s.id;
        var u;
        var r = function () {
            u = s.create(s.component);
            u = q.getDOMElement(u);
            u.style.position = "absolute";
            var k = s._jsPlumb.overlayClass + " " + (b.cssClass ? b.cssClass : s.cssClass ? s.cssClass : "");
            u.className = k;
            s._jsPlumb.appendElement(u, s.component.parent);
            s._jsPlumb.getId(u);
            b.attachListeners(u, b);
            b.canvas = u
        };
        this.getElement = function () {
            if (u == null) {
                r()
            }
            return u
        };
        this.getDimensions = function () {
            return q.getSize(q.getElementObject(b.getElement()))
        };
        var d = null, c = function (k) {
            if (d == null) {
                d = b.getDimensions()
            }
            return d
        };
        this.clearCachedDimensions = function () {
            d = null
        };
        this.computeMaxSize = function () {
            var k = c();
            return Math.max(k[0], k[1])
        };
        var a = b.setVisible;
        b.setVisible = function (k) {
            a(k);
            u.style.display = k ? "block" : "none"
        };
        this.cleanup = function () {
            if (u != null) {
                q.removeElement(u)
            }
        };
        this.paint = function (k, l) {
            if (!p) {
                b.getElement();
                k.component.appendDisplayElement(u);
                b.attachListeners(u, k.component);
                p = true
            }
            u.style.left = (k.component.x + k.d.minx) + "px";
            u.style.top = (k.component.y + k.d.miny) + "px"
        };
        this.draw = function (D, n) {
            var m = c();
            if (m != null && m.length == 2) {
                var l = {x: 0, y: 0};
                if (D.pointOnPath) {
                    var k = b.loc, C = false;
                    if (jsPlumbUtil.isString(b.loc) || b.loc < 0 || b.loc > 1) {
                        k = parseInt(b.loc);
                        C = true
                    }
                    l = D.pointOnPath(k, C)
                } else {
                    var A = b.loc.constructor == Array ? b.loc : b.endpointLoc;
                    l = {x: A[0] * D.w, y: A[1] * D.h}
                }
                var o = l.x - (m[0] / 2), B = l.y - (m[1] / 2);
                return {
                    component: D,
                    d: {minx: o, miny: B, td: m, cxy: l},
                    minX: o,
                    maxX: o + m[0],
                    minY: B,
                    maxY: B + m[1]
                }
            } else {
                return {minX: 0, maxX: 0, minY: 0, maxY: 0}
            }
        };
        this.reattachListeners = function (k) {
            if (u) {
                b.reattachListenersForElement(u, b, k)
            }
        }
    };
    jsPlumb.Overlays.Custom = function (a) {
        this.type = "Custom";
        f.apply(this, arguments)
    };
    jsPlumb.Overlays.GuideLines = function () {
        var a = this;
        a.length = 50;
        a.lineWidth = 5;
        this.type = "GuideLines";
        h.apply(this, arguments);
        jsPlumb.jsPlumbUIComponent.apply(this, arguments);
        this.draw = function (p, r) {
            var b = p.pointAlongPathFrom(a.loc, a.length / 2), c = p.pointOnPath(a.loc), d = jsPlumbUtil.pointOnLine(b, c, a.length), o = jsPlumbUtil.perpendicularLineTo(b, d, 40), q = jsPlumbUtil.perpendicularLineTo(d, b, 20);
            return {
                connector: p,
                head: b,
                tail: d,
                headLine: q,
                tailLine: o,
                minX: Math.min(b.x, d.x, q[0].x, q[1].x),
                minY: Math.min(b.y, d.y, q[0].y, q[1].y),
                maxX: Math.max(b.x, d.x, q[0].x, q[1].x),
                maxY: Math.max(b.y, d.y, q[0].y, q[1].y)
            }
        };
        this.cleanup = function () {
        }
    };
    jsPlumb.Overlays.Label = function (b) {
        var n = this;
        this.labelStyle = b.labelStyle || jsPlumb.Defaults.LabelStyle;
        this.cssClass = this.labelStyle != null ? this.labelStyle.cssClass : null;
        b.create = function () {
            return document.createElement("div")
        };
        jsPlumb.Overlays.Custom.apply(this, arguments);
        this.type = "Label";
        var d = b.label || "", n = this, c = null;
        this.setLabel = function (k) {
            d = k;
            c = null;
            n.clearCachedDimensions();
            m();
            n.component.repaint()
        };
        var m = function () {
            if (typeof d == "function") {
                var k = d(n);
                n.getElement().innerHTML = k.replace(/\r\n/g, "<br/>")
            } else {
                if (c == null) {
                    c = d;
                    n.getElement().innerHTML = c.replace(/\r\n/g, "<br/>")
                }
            }
        };
        this.getLabel = function () {
            return d
        };
        var a = this.getDimensions;
        this.getDimensions = function () {
            m();
            return a()
        }
    }
})();
(function () {
    var f = function (c, a, h, b) {
        this.m = (b - a) / (h - c);
        this.b = -1 * ((this.m * c) - a);
        this.rectIntersect = function (g, w, F, x) {
            var y = [];
            var C = (w - this.b) / this.m;
            if (C >= g && C <= (g + F)) {
                y.push([C, (this.m * C) + this.b])
            }
            var E = (this.m * (g + F)) + this.b;
            if (E >= w && E <= (w + x)) {
                y.push([(E - this.b) / this.m, E])
            }
            var C = ((w + x) - this.b) / this.m;
            if (C >= g && C <= (g + F)) {
                y.push([C, (this.m * C) + this.b])
            }
            var E = (this.m * g) + this.b;
            if (E >= w && E <= (w + x)) {
                y.push([(E - this.b) / this.m, E])
            }
            if (y.length == 2) {
                var A = (y[0][0] + y[1][0]) / 2, B = (y[0][1] + y[1][1]) / 2;
                y.push([A, B]);
                var D = A <= g + (F / 2) ? -1 : 1, G = B <= w + (x / 2) ? -1 : 1;
                y.push([D, G]);
                return y
            }
            return null
        }
    }, e = function (c, a, h, b) {
        if (c <= h && b <= a) {
            return 1
        } else {
            if (c <= h && a <= b) {
                return 2
            } else {
                if (h <= c && b >= a) {
                    return 3
                }
            }
        }
        return 4
    }, d = function (q, r, o, s, p, a, b, u, c) {
        if (u <= c) {
            return [q, r]
        }
        if (o === 1) {
            if (s[3] <= 0 && p[3] >= 1) {
                return [q + (s[2] < 0.5 ? -1 * a : a), r]
            } else {
                if (s[2] >= 1 && p[2] <= 0) {
                    return [q, r + (s[3] < 0.5 ? -1 * b : b)]
                } else {
                    return [q + (-1 * a), r + (-1 * b)]
                }
            }
        } else {
            if (o === 2) {
                if (s[3] >= 1 && p[3] <= 0) {
                    return [q + (s[2] < 0.5 ? -1 * a : a), r]
                } else {
                    if (s[2] >= 1 && p[2] <= 0) {
                        return [q, r + (s[3] < 0.5 ? -1 * b : b)]
                    } else {
                        return [q + (1 * a), r + (-1 * b)]
                    }
                }
            } else {
                if (o === 3) {
                    if (s[3] >= 1 && p[3] <= 0) {
                        return [q + (s[2] < 0.5 ? -1 * a : a), r]
                    } else {
                        if (s[2] <= 0 && p[2] >= 1) {
                            return [q, r + (s[3] < 0.5 ? -1 * b : b)]
                        } else {
                            return [q + (-1 * a), r + (-1 * b)]
                        }
                    }
                } else {
                    if (o === 4) {
                        if (s[3] <= 0 && p[3] >= 1) {
                            return [q + (s[2] < 0.5 ? -1 * a : a), r]
                        } else {
                            if (s[2] <= 0 && p[2] >= 1) {
                                return [q, r + (s[3] < 0.5 ? -1 * b : b)]
                            } else {
                                return [q + (1 * a), r + (-1 * b)]
                            }
                        }
                    }
                }
            }
        }
    };
    jsPlumb.Connectors.StateMachine = function (q) {
        q = q || {};
        this.type = "StateMachine";
        var a = this, c = jsPlumb.Connectors.AbstractConnector.apply(this, arguments), u = q.curviness || 10, p = q.margin || 5, o = q.proximityLimit || 80, s = q.orientation && q.orientation === "clockwise", r = q.loopbackRadius || 25, b = q.showLoopback !== false;
        this._compute = function (ae, g) {
            var y = Math.abs(g.sourcePos[0] - g.targetPos[0]), k = Math.abs(g.sourcePos[1] - g.targetPos[1]), T = Math.min(g.sourcePos[0], g.targetPos[0]), X = Math.min(g.sourcePos[1], g.targetPos[1]);
            if (!b || (g.sourceEndpoint.elementId !== g.targetEndpoint.elementId)) {
                var af = g.sourcePos[0] < g.targetPos[0] ? 0 : y, Z = g.sourcePos[1] < g.targetPos[1] ? 0 : k, n = g.sourcePos[0] < g.targetPos[0] ? y : 0, x = g.sourcePos[1] < g.targetPos[1] ? k : 0;
                if (g.sourcePos[2] === 0) {
                    af -= p
                }
                if (g.sourcePos[2] === 1) {
                    af += p
                }
                if (g.sourcePos[3] === 0) {
                    Z -= p
                }
                if (g.sourcePos[3] === 1) {
                    Z += p
                }
                if (g.targetPos[2] === 0) {
                    n -= p
                }
                if (g.targetPos[2] === 1) {
                    n += p
                }
                if (g.targetPos[3] === 0) {
                    x -= p
                }
                if (g.targetPos[3] === 1) {
                    x += p
                }
                var V = (af + n) / 2, aa = (Z + x) / 2, ah = (-1 * V) / aa, m = Math.atan(ah), S = (ah == Infinity || ah == -Infinity) ? 0 : Math.abs(u / 2 * Math.sin(m)), w = (ah == Infinity || ah == -Infinity) ? 0 : Math.abs(u / 2 * Math.cos(m)), ag = e(af, Z, n, x), ac = Math.sqrt(Math.pow(n - af, 2) + Math.pow(x - Z, 2)), Y = d(V, aa, ag, g.sourcePos, g.targetPos, u, u, ac, o);
                c.addSegment("Bezier", {
                    x1: n,
                    y1: x,
                    x2: af,
                    y2: Z,
                    cp1x: Y[0],
                    cp1y: Y[1],
                    cp2x: Y[0],
                    cp2y: Y[1]
                })
            } else {
                var h = g.sourcePos[0], l = g.sourcePos[0], U = g.sourcePos[1] - p, ab = g.sourcePos[1] - p, W = h, ad = U - r;
                y = 2 * r, k = 2 * r, T = W - r, X = ad - r;
                ae.points[0] = T;
                ae.points[1] = X;
                ae.points[2] = y;
                ae.points[3] = k;
                c.addSegment("Arc", {
                    x1: (h - T) + 4,
                    y1: U - X,
                    startAngle: 0,
                    endAngle: 2 * Math.PI,
                    r: r,
                    ac: !s,
                    x2: (h - T) - 4,
                    y2: U - X,
                    cx: W - T,
                    cy: ad - X
                })
            }
        }
    }
})();
(function () {
    jsPlumb.Connectors.Flowchart = function (params) {
        this.type = "Flowchart";
        params = params || {};
        params.stub = params.stub || 30;
        var self = this, _super = jsPlumb.Connectors.AbstractConnector.apply(this, arguments), midpoint = params.midpoint || 0.5, points = [], segments = [], grid = params.grid, alwaysRespectStubs = params.alwaysRespectStubs, userSuppliedSegments = null, lastx = null, lasty = null, lastOrientation, cornerRadius = params.cornerRadius != null ? params.cornerRadius : 0, sgn = function (n) {
            return n < 0 ? -1 : n == 0 ? 0 : 1
        }, addSegment = function (segments, x, y, paintInfo) {
            if (lastx == x && lasty == y) {
                return
            }
            var lx = lastx == null ? paintInfo.sx : lastx, ly = lasty == null ? paintInfo.sy : lasty, o = lx == x ? "v" : "h", sgnx = sgn(x - lx), sgny = sgn(y - ly);
            lastx = x;
            lasty = y;
            segments.push([lx, ly, x, y, o, sgnx, sgny])
        }, segLength = function (s) {
            return Math.sqrt(Math.pow(s[0] - s[2], 2) + Math.pow(s[1] - s[3], 2))
        }, _cloneArray = function (a) {
            var _a = [];
            _a.push.apply(_a, a);
            return _a
        }, updateMinMax = function (a1) {
            self.bounds.minX = Math.min(self.bounds.minX, a1[2]);
            self.bounds.maxX = Math.max(self.bounds.maxX, a1[2]);
            self.bounds.minY = Math.min(self.bounds.minY, a1[3]);
            self.bounds.maxY = Math.max(self.bounds.maxY, a1[3])
        }, writeSegments = function (segments, paintInfo) {
            var current, next;
            for (var i = 0; i < segments.length - 1; i++) {
                current = current || _cloneArray(segments[i]);
                next = _cloneArray(segments[i + 1]);
                if (cornerRadius > 0 && current[4] != next[4]) {
                    var radiusToUse = Math.min(cornerRadius, segLength(current), segLength(next));
                    current[2] -= current[5] * radiusToUse;
                    current[3] -= current[6] * radiusToUse;
                    next[0] += next[5] * radiusToUse;
                    next[1] += next[6] * radiusToUse;
                    var ac = (current[6] == next[5] && next[5] == 1) || ((current[6] == next[5] && next[5] == 0) && current[5] != next[6]) || (current[6] == next[5] && next[5] == -1), sgny = next[1] > current[3] ? 1 : -1, sgnx = next[0] > current[2] ? 1 : -1, sgnEqual = sgny == sgnx, cx = (sgnEqual && ac || (!sgnEqual && !ac)) ? next[0] : current[2], cy = (sgnEqual && ac || (!sgnEqual && !ac)) ? current[3] : next[1];
                    _super.addSegment("Straight", {
                        x1: current[0],
                        y1: current[1],
                        x2: current[2],
                        y2: current[3]
                    });
                    _super.addSegment("Arc", {
                        r: radiusToUse,
                        x1: current[2],
                        y1: current[3],
                        x2: next[0],
                        y2: next[1],
                        cx: cx,
                        cy: cy,
                        ac: ac
                    })
                } else {
                    var dx = (current[2] == current[0]) ? 0 : (current[2] > current[0]) ? (paintInfo.lw / 2) : -(paintInfo.lw / 2), dy = (current[3] == current[1]) ? 0 : (current[3] > current[1]) ? (paintInfo.lw / 2) : -(paintInfo.lw / 2);
                    _super.addSegment("Straight", {
                        x1: current[0] - dx,
                        y1: current[1] - dy,
                        x2: current[2] + dx,
                        y2: current[3] + dy
                    })
                }
                current = next
            }
            _super.addSegment("Straight", {
                x1: next[0],
                y1: next[1],
                x2: next[2],
                y2: next[3]
            })
        };
        this.setSegments = function (s) {
            userSuppliedSegments = s
        };
        this.isEditable = function () {
            return true
        };
        this.getOriginalSegments = function () {
            return userSuppliedSegments || segments
        };
        this._compute = function (paintInfo, params) {
            if (params.clearEdits) {
                userSuppliedSegments = null
            }
            if (userSuppliedSegments != null) {
                writeSegments(userSuppliedSegments, paintInfo);
                return
            }
            segments = [];
            lastx = null;
            lasty = null;
            lastOrientation = null;
            var midx = paintInfo.startStubX + ((paintInfo.endStubX - paintInfo.startStubX) * midpoint), midy = paintInfo.startStubY + ((paintInfo.endStubY - paintInfo.startStubY) * midpoint);
            var findClearedLine = function (start, mult, anchorPos, dimension) {
                return start + (mult * ((1 - anchorPos) * dimension) + _super.maxStub)
            }, orientations = {
                x: [0, 1],
                y: [1, 0]
            }, commonStubCalculator = function (axis) {
                return [paintInfo.startStubX, paintInfo.startStubY, paintInfo.endStubX, paintInfo.endStubY]
            }, stubCalculators = {
                perpendicular: commonStubCalculator,
                orthogonal: commonStubCalculator,
                opposite: function (axis) {
                    var pi = paintInfo, idx = axis == "x" ? 0 : 1, areInProximity = {
                        x: function () {
                            return ((pi.so[idx] == 1 && (((pi.startStubX > pi.endStubX) && (pi.tx > pi.startStubX)) || ((pi.sx > pi.endStubX) && (pi.tx > pi.sx))))) || ((pi.so[idx] == -1 && (((pi.startStubX < pi.endStubX) && (pi.tx < pi.startStubX)) || ((pi.sx < pi.endStubX) && (pi.tx < pi.sx)))))
                        }, y: function () {
                            return ((pi.so[idx] == 1 && (((pi.startStubY > pi.endStubY) && (pi.ty > pi.startStubY)) || ((pi.sy > pi.endStubY) && (pi.ty > pi.sy))))) || ((pi.so[idx] == -1 && (((pi.startStubY < pi.endStubY) && (pi.ty < pi.startStubY)) || ((pi.sy < pi.endStubY) && (pi.ty < pi.sy)))))
                        }
                    };
                    if (!alwaysRespectStubs && areInProximity[axis]()) {
                        return {
                            x: [(paintInfo.sx + paintInfo.tx) / 2, paintInfo.startStubY, (paintInfo.sx + paintInfo.tx) / 2, paintInfo.endStubY],
                            y: [paintInfo.startStubX, (paintInfo.sy + paintInfo.ty) / 2, paintInfo.endStubX, (paintInfo.sy + paintInfo.ty) / 2]
                        }[axis]
                    } else {
                        return [paintInfo.startStubX, paintInfo.startStubY, paintInfo.endStubX, paintInfo.endStubY]
                    }
                }
            }, lineCalculators = {
                perpendicular: function (axis, ss, oss, es, oes) {
                    var sis = {
                            x: [[[1, 2, 3, 4], null, [2, 1, 4, 3]], null, [[4, 3, 2, 1], null, [3, 4, 1, 2]]],
                            y: [[[3, 2, 1, 4], null, [2, 3, 4, 1]], null, [[4, 1, 2, 3], null, [1, 4, 3, 2]]]
                        },
                        stubs = {
                            x: [[paintInfo.startStubX, paintInfo.endStubX], null, [paintInfo.endStubX, paintInfo.startStubX]],
                            y: [[paintInfo.startStubY, paintInfo.endStubY], null, [paintInfo.endStubY, paintInfo.startStubY]]
                        },
                        midLines = {
                            x: [[paintInfo.midx, paintInfo.startStubY], [paintInfo.midx, paintInfo.endStubY]],
                            y: [[paintInfo.startStubX, paintInfo.midy], [paintInfo.endStubX, paintInfo.midy]]
                        },
                        linesToEnd = {
                            x: [[paintInfo.endStubX, paintInfo.startStubY]],
                            y: [[paintInfo.startStubX, paintInfo.endStubY]]
                        },
                        startToEnd = {
                            x: [[paintInfo.startStubX, paintInfo.endStubY], [paintInfo.endStubX, paintInfo.endStubY]],
                            y: [[paintInfo.endStubX, paintInfo.startStubY], [paintInfo.endStubX, paintInfo.endStubY]]
                        },
                        startToMidToEnd = {
                            x: [[paintInfo.startStubX, paintInfo.midy], [paintInfo.endStubX, paintInfo.midy], [paintInfo.endStubX, paintInfo.endStubY]],
                            y: [[paintInfo.midx, paintInfo.startStubY], [paintInfo.midx, paintInfo.endStubY], [paintInfo.endStubX, paintInfo.endStubY]]
                        },
                        otherStubs = {
                            x: [paintInfo.startStubY, paintInfo.endStubY],
                            y: [paintInfo.startStubX, paintInfo.endStubX]
                        },
                        orientations = paintInfo.orientations,
                        so = paintInfo.so,
                        to = paintInfo.to,
                        soIdx = orientations[axis][0],
                        toIdx = orientations[axis][1],
                        _so = so[soIdx] + 1,
                        _to = to[toIdx] + 1,
                        otherFlipped = (to[toIdx] == -1 && (otherStubs[axis][1] < otherStubs[axis][0])) || (to[toIdx] == 1 && (otherStubs[axis][1] > otherStubs[axis][0])),
                        stub1 = stubs[axis][_so][0],
                        stub2 = stubs[axis][_so][1],
                        segmentIndexes = sis[axis][_so][_to];
                },
                orthogonal: function (axis, startStub, otherStartStub, endStub, otherEndStub) {
                    var pi = paintInfo, extent = {
                        x: pi.so[0] == -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub),
                        y: pi.so[1] == -1 ? Math.min(startStub, endStub) : Math.max(startStub, endStub)
                    }[axis];
                    return {
                        x: [[extent, otherStartStub], [extent, otherEndStub], [endStub, otherEndStub]],
                        y: [[otherStartStub, extent], [otherEndStub, extent], [otherEndStub, endStub]]
                    }[axis]
                },
                opposite: function (axis, ss, oss, es, oes) {
                    var pi = paintInfo, otherAxis = {
                        x: "y",
                        y: "x"
                    }[axis], dim = {
                        x: "height",
                        y: "width"
                    }[axis], comparator = pi["is" + axis.toUpperCase() + "GreaterThanStubTimes2"];
                    if (params.sourceEndpoint.elementId == params.targetEndpoint.elementId) {
                        var _val = oss + ((1 - params.sourceEndpoint.anchor[otherAxis]) * params.sourceInfo[dim]) + _super.maxStub;
                        return {
                            x: [[ss, _val], [es, _val]],
                            y: [[_val, ss], [_val, es]]
                        }[axis]
                    } else {
                        if (!comparator || (pi.so[idx] == 1 && ss > es) || (pi.so[idx] == -1 && ss < es)) {
                            return {
                                x: [[ss, midy], [es, midy]],
                                y: [[midx, ss], [midx, es]]
                            }[axis]
                        } else {
                            if ((pi.so[idx] == 1 && ss < es) || (pi.so[idx] == -1 && ss > es)) {
                                return {
                                    x: [[midx, pi.sy], [midx, pi.ty]],
                                    y: [[pi.sx, midy], [pi.tx, midy]]
                                }[axis]
                            }
                        }
                    }
                }
            };
            var stubs = stubCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis), idx = paintInfo.sourceAxis == "x" ? 0 : 1, oidx = paintInfo.sourceAxis == "x" ? 1 : 0, ss = stubs[idx], oss = stubs[oidx], es = stubs[idx + 2], oes = stubs[oidx + 2];
            addSegment(segments, stubs[0], stubs[1], paintInfo);
            var p = lineCalculators[paintInfo.anchorOrientation](paintInfo.sourceAxis, ss, oss, es, oes);
            if (p) {
                for (var i = 0; i < p.length; i++) {
                    addSegment(segments, p[i][0], p[i][1], paintInfo)
                }
            }
            addSegment(segments, stubs[2], stubs[3], paintInfo);
            addSegment(segments, paintInfo.tx, paintInfo.ty, paintInfo);
            writeSegments(segments, paintInfo)
        };
        this.getPath = function () {
            var _last = null, _lastAxis = null, s = [], segs = userSuppliedSegments || segments;
            for (var i = 0; i < segs.length; i++) {
                var seg = segs[i], axis = seg[4], axisIndex = (axis == "v" ? 3 : 2);
                if (_last != null && _lastAxis === axis) {
                    _last[axisIndex] = seg[axisIndex]
                } else {
                    if (seg[0] != seg[2] || seg[1] != seg[3]) {
                        s.push({
                            start: [seg[0], seg[1]],
                            end: [seg[2], seg[3]]
                        });
                        _last = seg;
                        _lastAxis = seg[4]
                    }
                }
            }
            return s
        };
        this.setPath = function (path) {
            userSuppliedSegments = [];
            for (var i = 0; i < path.length; i++) {
                var lx = path[i].start[0], ly = path[i].start[1], x = path[i].end[0], y = path[i].end[1], o = lx == x ? "v" : "h", sgnx = sgn(x - lx), sgny = sgn(y - ly);
                userSuppliedSegments.push([lx, ly, x, y, o, sgnx, sgny])
            }
        }
    }
})();
(function () {
    var G = {
        "stroke-linejoin": "joinstyle",
        joinstyle: "joinstyle",
        endcap: "endcap",
        miterlimit: "miterlimit"
    }, L = null;
    if (document.createStyleSheet && document.namespaces) {
        var D = [".jsplumb_vml", "jsplumb\\:textbox", "jsplumb\\:oval", "jsplumb\\:rect", "jsplumb\\:stroke", "jsplumb\\:shape", "jsplumb\\:group"], H = "behavior:url(#default#VML);position:absolute;";
        L = document.createStyleSheet();
        for (var x = 0; x < D.length; x++) {
            L.addRule(D[x], H)
        }
        document.namespaces.add("jsplumb", "urn:schemas-microsoft-com:vml")
    }
    jsPlumb.vml = {};
    var v = 1000, w = {}, N = function (b, c) {
        var d = jsPlumb.getId(b), a = w[d];
        if (!a) {
            a = I("group", [0, 0, v, v], {"class": c});
            a.style.backgroundColor = "red";
            w[d] = a;
            jsPlumb.appendElement(a, b)
        }
        return a
    }, J = function (b, a) {
        for (var c in a) {
            b[c] = a[c]
        }
    }, I = function (c, g, e, f, d, b) {
        e = e || {};
        var a = document.createElement("jsplumb:" + c);
        if (b) {
            d.appendElement(a, f)
        } else {
            jsPlumb.CurrentLibrary.appendElement(a, f)
        }
        a.className = (e["class"] ? e["class"] + " " : "") + "jsplumb_vml";
        F(a, g);
        J(a, e);
        return a
    }, F = function (b, c, a) {
        b.style.left = c[0] + "px";
        b.style.top = c[1] + "px";
        b.style.width = c[2] + "px";
        b.style.height = c[3] + "px";
        b.style.position = "absolute";
        if (a) {
            b.style.zIndex = a
        }
    }, A = jsPlumb.vml.convertValue = function (a) {
        return Math.floor(a * v)
    }, M = function (d, b, a, c) {
        if ("transparent" === b) {
            c.setOpacity(a, "0.0")
        } else {
            c.setOpacity(a, "1.0")
        }
    }, y = function (d, h, a, m) {
        var e = {};
        if (h.strokeStyle) {
            e.stroked = "true";
            var l = jsPlumbUtil.convertStyle(h.strokeStyle, true);
            e.strokecolor = l;
            M(e, l, "stroke", a);
            e.strokeweight = h.lineWidth + "px"
        } else {
            e.stroked = "false"
        }
        if (h.fillStyle) {
            e.filled = "true";
            var g = jsPlumbUtil.convertStyle(h.fillStyle, true);
            e.fillcolor = g;
            M(e, g, "fill", a)
        } else {
            e.filled = "false"
        }
        if (h.dashstyle) {
            if (a.strokeNode == null) {
                a.strokeNode = I("stroke", [0, 0, 0, 0], {dashstyle: h.dashstyle}, d, m)
            } else {
                a.strokeNode.dashstyle = h.dashstyle
            }
        } else {
            if (h["stroke-dasharray"] && h.lineWidth) {
                var k = h["stroke-dasharray"].indexOf(",") == -1 ? " " : ",", c = h["stroke-dasharray"].split(k), f = "";
                for (var b = 0; b < c.length; b++) {
                    f += (Math.floor(c[b] / h.lineWidth) + k)
                }
                if (a.strokeNode == null) {
                    a.strokeNode = I("stroke", [0, 0, 0, 0], {dashstyle: f}, d, m)
                } else {
                    a.strokeNode.dashstyle = f
                }
            }
        }
        J(d, e)
    }, C = function () {
        var c = this, a = {};
        jsPlumb.jsPlumbUIComponent.apply(this, arguments);
        this.opacityNodes = {stroke: null, fill: null};
        this.initOpacityNodes = function (d) {
            c.opacityNodes.stroke = I("stroke", [0, 0, 1, 1], {opacity: "0.0"}, d, c._jsPlumb);
            c.opacityNodes.fill = I("fill", [0, 0, 1, 1], {opacity: "0.0"}, d, c._jsPlumb)
        };
        this.setOpacity = function (f, e) {
            var d = c.opacityNodes[f];
            if (d) {
                d.opacity = "" + e
            }
        };
        var b = [];
        this.getDisplayElements = function () {
            return b
        };
        this.appendDisplayElement = function (d, e) {
            if (!e) {
                c.canvas.parentNode.appendChild(d)
            }
            b.push(d)
        }
    }, K = jsPlumb.ConnectorRenderers.vml = function (d) {
        var c = this;
        c.strokeNode = null;
        c.canvas = null;
        var a = C.apply(this, arguments);
        var b = c._jsPlumb.connectorClass + (d.cssClass ? (" " + d.cssClass) : "");
        this.paint = function (g) {
            if (g !== null) {
                var o = c.getSegments(), f = {path: ""}, n = [c.x, c.y, c.w, c.h];
                for (var e = 0; e < o.length; e++) {
                    f.path += jsPlumb.Segments.vml.SegmentRenderer.getPath(o[e]);
                    f.path += " "
                }
                if (g.outlineColor) {
                    var l = g.outlineWidth || 1, k = g.lineWidth + (2 * l), m = {
                        strokeStyle: jsPlumbUtil.convertStyle(g.outlineColor),
                        lineWidth: k
                    };
                    for (var h in G) {
                        m[h] = g[h]
                    }
                    if (c.bgCanvas == null) {
                        f["class"] = b;
                        f.coordsize = (n[2] * v) + "," + (n[3] * v);
                        c.bgCanvas = I("shape", n, f, d.parent, c._jsPlumb, true);
                        F(c.bgCanvas, n);
                        c.appendDisplayElement(c.bgCanvas, true);
                        c.attachListeners(c.bgCanvas, c);
                        c.initOpacityNodes(c.bgCanvas, ["stroke"])
                    } else {
                        f.coordsize = (n[2] * v) + "," + (n[3] * v);
                        F(c.bgCanvas, n);
                        J(c.bgCanvas, f)
                    }
                    y(c.bgCanvas, m, c)
                }
                if (c.canvas == null) {
                    f["class"] = b;
                    f.coordsize = (n[2] * v) + "," + (n[3] * v);
                    c.canvas = I("shape", n, f, d.parent, c._jsPlumb, true);
                    c.appendDisplayElement(c.canvas, true);
                    c.attachListeners(c.canvas, c);
                    c.initOpacityNodes(c.canvas, ["stroke"])
                } else {
                    f.coordsize = (n[2] * v) + "," + (n[3] * v);
                    F(c.canvas, n);
                    J(c.canvas, f)
                }
                y(c.canvas, g, c, c._jsPlumb)
            }
        };
        this.reattachListeners = function () {
            if (c.canvas) {
                c.reattachListenersForElement(c.canvas, c)
            }
        }
    }, E = window.VmlEndpoint = function (f) {
        C.apply(this, arguments);
        var d = null, b = this, c = null, a = null;
        b.canvas = document.createElement("div");
        b.canvas.style.position = "absolute";
        var e = b._jsPlumb.endpointClass + (f.cssClass ? (" " + f.cssClass) : "");
        f._jsPlumb.appendElement(b.canvas, f.parent);
        this.paint = function (h, k) {
            var g = {};
            jsPlumb.sizeCanvas(b.canvas, b.x, b.y, b.w, b.h);
            if (d == null) {
                g["class"] = e;
                d = b.getVml([0, 0, b.w, b.h], g, k, b.canvas, b._jsPlumb);
                b.attachListeners(d, b);
                b.appendDisplayElement(d, true);
                b.appendDisplayElement(b.canvas, true);
                b.initOpacityNodes(d, ["fill"])
            } else {
                F(d, [0, 0, b.w, b.h]);
                J(d, g)
            }
            y(d, h, b)
        };
        this.reattachListeners = function () {
            if (d) {
                b.reattachListenersForElement(d, b)
            }
        }
    };
    jsPlumb.Segments.vml = {
        SegmentRenderer: {
            getPath: function (a) {
                return ({
                    Straight: function (c) {
                        var b = c.params;
                        return "m" + A(b.x1) + "," + A(b.y1) + " l" + A(b.x2) + "," + A(b.y2) + " e"
                    }, Bezier: function (c) {
                        var b = c.params;
                        return "m" + A(b.x1) + "," + A(b.y1) + " c" + A(b.cp1x) + "," + A(b.cp1y) + "," + A(b.cp2x) + "," + A(b.cp2y) + "," + A(b.x2) + "," + A(b.y2) + " e"
                    }, Arc: function (c) {
                        var l = c.params, h = Math.min(l.x1, l.x2), d = Math.max(l.x1, l.x2), k = Math.min(l.y1, l.y2), f = Math.max(l.y1, l.y2), b = c.anticlockwise ? 1 : 0, g = (c.anticlockwise ? "at " : "wa "), e = function () {
                            var m = [null, [function () {
                                return [h, k]
                            }, function () {
                                return [h - l.r, k - l.r]
                            }], [function () {
                                return [h - l.r, k]
                            }, function () {
                                return [h, k - l.r]
                            }], [function () {
                                return [h - l.r, k - l.r]
                            }, function () {
                                return [h, k]
                            }], [function () {
                                return [h, k - l.r]
                            }, function () {
                                return [h - l.r, k]
                            }]][c.segment][b]();
                            return A(m[0]) + "," + A(m[1]) + "," + A(m[0] + (2 * l.r)) + "," + A(m[1] + (2 * l.r))
                        };
                        return g + e() + "," + A(l.x1) + "," + A(l.y1) + "," + A(l.x2) + "," + A(l.y2) + " e"
                    }
                })[a.type](a)
            }
        }
    };
    jsPlumb.Endpoints.vml.Dot = function () {
        jsPlumb.Endpoints.Dot.apply(this, arguments);
        E.apply(this, arguments);
        this.getVml = function (e, b, c, a, d) {
            return I("oval", e, b, a, d)
        }
    };
    jsPlumb.Endpoints.vml.Rectangle = function () {
        jsPlumb.Endpoints.Rectangle.apply(this, arguments);
        E.apply(this, arguments);
        this.getVml = function (e, b, c, a, d) {
            return I("rect", e, b, a, d)
        }
    };
    jsPlumb.Endpoints.vml.Image = jsPlumb.Endpoints.Image;
    jsPlumb.Endpoints.vml.Blank = jsPlumb.Endpoints.Blank;
    jsPlumb.Overlays.vml.Label = jsPlumb.Overlays.Label;
    jsPlumb.Overlays.vml.Custom = jsPlumb.Overlays.Custom;
    var B = function (b, a) {
        b.apply(this, a);
        C.apply(this, a);
        var c = this, e = null;
        c.canvas = null;
        c.isAppendedAtTopLevel = true;
        var d = function (f) {
            return "m " + A(f.hxy.x) + "," + A(f.hxy.y) + " l " + A(f.tail[0].x) + "," + A(f.tail[0].y) + " " + A(f.cxy.x) + "," + A(f.cxy.y) + " " + A(f.tail[1].x) + "," + A(f.tail[1].y) + " x e"
        };
        this.paint = function (u, s) {
            var g = {}, n = u.d, P = u.component;
            if (u.strokeStyle) {
                g.stroked = "true";
                g.strokecolor = jsPlumbUtil.convertStyle(u.strokeStyle, true)
            }
            if (u.lineWidth) {
                g.strokeweight = u.lineWidth + "px"
            }
            if (u.fillStyle) {
                g.filled = "true";
                g.fillcolor = u.fillStyle
            }
            var h = Math.min(n.hxy.x, n.tail[0].x, n.tail[1].x, n.cxy.x), k = Math.min(n.hxy.y, n.tail[0].y, n.tail[1].y, n.cxy.y), r = Math.max(n.hxy.x, n.tail[0].x, n.tail[1].x, n.cxy.x), f = Math.max(n.hxy.y, n.tail[0].y, n.tail[1].y, n.cxy.y), l = Math.abs(r - h), p = Math.abs(f - k), q = [h, k, l, p];
            g.path = d(n);
            g.coordsize = (P.w * v) + "," + (P.h * v);
            q[0] = P.x;
            q[1] = P.y;
            q[2] = P.w;
            q[3] = P.h;
            if (c.canvas == null) {
                var m = P._jsPlumb.overlayClass || "";
                var o = a && (a.length == 1) ? (a[0].cssClass || "") : "";
                g["class"] = o + " " + m;
                c.canvas = I("shape", q, g, P.canvas.parentNode, P._jsPlumb, true);
                P.appendDisplayElement(c.canvas, true);
                c.attachListeners(c.canvas, P);
                c.attachListeners(c.canvas, c)
            } else {
                F(c.canvas, q);
                J(c.canvas, g)
            }
        };
        this.reattachListeners = function () {
            if (c.canvas) {
                c.reattachListenersForElement(c.canvas, c)
            }
        };
        this.cleanup = function () {
            if (c.canvas != null) {
                jsPlumb.CurrentLibrary.removeElement(c.canvas)
            }
        }
    };
    jsPlumb.Overlays.vml.Arrow = function () {
        B.apply(this, [jsPlumb.Overlays.Arrow, arguments])
    };
    jsPlumb.Overlays.vml.PlainArrow = function () {
        B.apply(this, [jsPlumb.Overlays.PlainArrow, arguments])
    };
    jsPlumb.Overlays.vml.Diamond = function () {
        B.apply(this, [jsPlumb.Overlays.Diamond, arguments])
    }
})();
(function () {
    var Z = {
        joinstyle: "stroke-linejoin",
        "stroke-linejoin": "stroke-linejoin",
        "stroke-dashoffset": "stroke-dashoffset",
        "stroke-linecap": "stroke-linecap"
    }, H = "stroke-dasharray", O = "dashstyle", af = "linearGradient", ai = "radialGradient", ah = "fill", aj = "stop", Q = "stroke", S = "stroke-width", ac = "style", Y = "none", L = "jsplumb_gradient_", W = "lineWidth", K = {
        svg: "http://www.w3.org/2000/svg",
        xhtml: "http://www.w3.org/1999/xhtml"
    }, ad = function (a, c) {
        for (var b in c) {
            a.setAttribute(b, "" + c[b])
        }
    }, ae = function (b, c) {
        var a = document.createElementNS(K.svg, b);
        c = c || {};
        c.version = "1.1";
        c.xmlns = K.xhtml;
        ad(a, c);
        return a
    }, X = function (a) {
        return "position:absolute;left:" + a[0] + "px;top:" + a[1] + "px"
    }, ab = function (a) {
        for (var b = 0; b < a.childNodes.length; b++) {
            if (a.childNodes[b].tagName == af || a.childNodes[b].tagName == ai) {
                a.removeChild(a.childNodes[b])
            }
        }
    }, I = function (b, g, l, n, f) {
        var k = L + f._jsPlumb.idstamp();
        ab(b);
        var d;
        if (!l.gradient.offset) {
            d = ae(af, {id: k, gradientUnits: "userSpaceOnUse"})
        } else {
            d = ae(ai, {id: k})
        }
        b.appendChild(d);
        for (var e = 0; e < l.gradient.stops.length; e++) {
            var h = f.segment == 1 || f.segment == 2 ? e : l.gradient.stops.length - 1 - e, c = jsPlumbUtil.convertStyle(l.gradient.stops[h][1], true), a = ae(aj, {
                offset: Math.floor(l.gradient.stops[e][0] * 100) + "%",
                "stop-color": c
            });
            d.appendChild(a)
        }
        var m = l.strokeStyle ? Q : ah;
        g.setAttribute(ac, m + ":url(#" + k + ")")
    }, V = function (b, f, h, k, e) {
        if (h.gradient) {
            I(b, f, h, k, e)
        } else {
            ab(b);
            f.setAttribute(ac, "")
        }
        f.setAttribute(ah, h.fillStyle ? jsPlumbUtil.convertStyle(h.fillStyle, true) : Y);
        f.setAttribute(Q, h.strokeStyle ? jsPlumbUtil.convertStyle(h.strokeStyle, true) : Y);
        if (h.lineWidth) {
            f.setAttribute(S, h.lineWidth)
        }
        if (h[O] && h[W] && !h[H]) {
            var a = h[O].indexOf(",") == -1 ? " " : ",", d = h[O].split(a), g = "";
            d.forEach(function (l) {
                g += (Math.floor(l * h.lineWidth) + a)
            });
            f.setAttribute(H, g)
        } else {
            if (h[H]) {
                f.setAttribute(H, h[H])
            }
        }
        for (var c in Z) {
            if (h[c]) {
                f.setAttribute(Z[c], h[c])
            }
        }
    }, N = function (a) {
        var c = /([0-9].)(p[xt])\s(.*)/, b = a.match(c);
        return {size: b[1] + b[2], font: b[3]}
    }, P = function (h, g, d) {
        var f = d.split(" "), a = h.className, b = a.baseVal.split(" ");
        for (var c = 0; c < f.length; c++) {
            if (g) {
                if (b.indexOf(f[c]) == -1) {
                    b.push(f[c])
                }
            } else {
                var e = b.indexOf(f[c]);
                if (e != -1) {
                    b.splice(e, 1)
                }
            }
        }
        h.className.baseVal = b.join(" ")
    }, J = function (a, b) {
        P(a, true, b)
    }, aa = function (a, b) {
        P(a, false, b)
    }, R = function (b, a, c) {
        if (b.childNodes.length > c) {
            b.insertBefore(a, b.childNodes[c])
        } else {
            b.appendChild(a)
        }
    };
    jsPlumbUtil.svg = {
        addClass: J,
        removeClass: aa,
        node: ae,
        attr: ad,
        pos: X
    };
    var M = function (g) {
        var e = this, b = g.pointerEventsSpec || "all", a = {};
        jsPlumb.jsPlumbUIComponent.apply(this, g.originalArgs);
        e.canvas = null, e.path = null, e.svg = null;
        var c = g.cssClass + " " + (g.originalArgs[0].cssClass || ""), f = {
            style: "",
            width: 0,
            height: 0,
            "pointer-events": b,
            position: "absolute"
        };
        e.svg = ae("svg", f);
        if (g.useDivWrapper) {
            e.canvas = document.createElement("div");
            e.canvas.style.position = "absolute";
            jsPlumb.sizeCanvas(e.canvas, 0, 0, 1, 1);
            e.canvas.className = c
        } else {
            ad(e.svg, {"class": c});
            e.canvas = e.svg
        }
        g._jsPlumb.appendElement(e.canvas, g.originalArgs[0]["parent"]);
        if (g.useDivWrapper) {
            e.canvas.appendChild(e.svg)
        }
        var d = [e.canvas];
        this.getDisplayElements = function () {
            return d
        };
        this.appendDisplayElement = function (h) {
            d.push(h)
        };
        this.paint = function (m, n, l) {
            if (m != null) {
                var h = [e.x, e.y], o = [e.w, e.h], k;
                if (l != null) {
                    if (l.xmin < 0) {
                        h[0] += l.xmin
                    }
                    if (l.ymin < 0) {
                        h[1] += l.ymin
                    }
                    o[0] = l.xmax + ((l.xmin < 0) ? -l.xmin : 0);
                    o[1] = l.ymax + ((l.ymin < 0) ? -l.ymin : 0)
                }
                if (g.useDivWrapper) {
                    jsPlumb.sizeCanvas(e.canvas, h[0], h[1], o[0], o[1]);
                    h[0] = 0, h[1] = 0;
                    k = X([0, 0])
                } else {
                    k = X([h[0], h[1]])
                }
                a.paint.apply(this, arguments);
                ad(e.svg, {style: k, width: o[0], height: o[1]})
            }
        };
        return {renderer: a}
    };
    var ag = jsPlumb.ConnectorRenderers.svg = function (a) {
        var c = this, b = M.apply(this, [{
            cssClass: a._jsPlumb.connectorClass,
            originalArgs: arguments,
            pointerEventsSpec: "none",
            _jsPlumb: a._jsPlumb
        }]);
        b.renderer.paint = function (q, m, f) {
            var l = c.getSegments(), p = "", o = [0, 0];
            if (f.xmin < 0) {
                o[0] = -f.xmin
            }
            if (f.ymin < 0) {
                o[1] = -f.ymin
            }
            for (var n = 0; n < l.length; n++) {
                p += jsPlumb.Segments.svg.SegmentRenderer.getPath(l[n]);
                p += " "
            }
            var e = {
                d: p,
                transform: "translate(" + o[0] + "," + o[1] + ")",
                "pointer-events": a["pointer-events"] || "visibleStroke"
            }, h = null, k = [c.x, c.y, c.w, c.h];
            if (q.outlineColor) {
                var g = q.outlineWidth || 1, d = q.lineWidth + (2 * g), h = jsPlumb.CurrentLibrary.extend({}, q);
                h.strokeStyle = jsPlumbUtil.convertStyle(q.outlineColor);
                h.lineWidth = d;
                if (c.bgPath == null) {
                    c.bgPath = ae("path", e);
                    R(c.svg, c.bgPath, 0);
                    c.attachListeners(c.bgPath, c)
                } else {
                    ad(c.bgPath, e)
                }
                V(c.svg, c.bgPath, h, k, c)
            }
            if (c.path == null) {
                c.path = ae("path", e);
                R(c.svg, c.path, q.outlineColor ? 1 : 0);
                c.attachListeners(c.path, c)
            } else {
                ad(c.path, e)
            }
            V(c.svg, c.path, q, k, c)
        };
        this.reattachListeners = function () {
            if (c.bgPath) {
                c.reattachListenersForElement(c.bgPath, c)
            }
            if (c.path) {
                c.reattachListenersForElement(c.path, c)
            }
        }
    };
    jsPlumb.Segments.svg = {
        SegmentRenderer: {
            getPath: function (a) {
                return ({
                    Straight: function () {
                        var b = a.getCoordinates();
                        return "M " + b.x1 + " " + b.y1 + " L " + b.x2 + " " + b.y2
                    }, Bezier: function () {
                        var b = a.params;
                        return "M " + b.x1 + " " + b.y1 + " C " + b.cp1x + " " + b.cp1y + " " + b.cp2x + " " + b.cp2y + " " + b.x2 + " " + b.y2
                    }, Arc: function () {
                        var b = a.params, d = a.sweep > Math.PI ? 1 : 0, c = a.anticlockwise ? 0 : 1;
                        return "M" + a.x1 + " " + a.y1 + " A " + a.radius + " " + b.r + " 0 " + d + "," + c + " " + a.x2 + " " + a.y2
                    }
                })[a.type]()
            }
        }
    };
    var U = window.SvgEndpoint = function (a) {
        var c = this, b = M.apply(this, [{
            cssClass: a._jsPlumb.endpointClass,
            originalArgs: arguments,
            pointerEventsSpec: "all",
            useDivWrapper: true,
            _jsPlumb: a._jsPlumb
        }]);
        b.renderer.paint = function (d) {
            var e = jsPlumb.extend({}, d);
            if (e.outlineColor) {
                e.strokeWidth = e.outlineWidth;
                e.strokeStyle = jsPlumbUtil.convertStyle(e.outlineColor, true)
            }
            if (c.node == null) {
                c.node = c.makeNode(e);
                c.svg.appendChild(c.node);
                c.attachListeners(c.node, c)
            } else {
                if (c.updateNode != null) {
                    c.updateNode(c.node)
                }
            }
            V(c.svg, c.node, e, [c.x, c.y, c.w, c.h], c);
            X(c.node, [c.x, c.y])
        };
        this.reattachListeners = function () {
            if (c.node) {
                c.reattachListenersForElement(c.node, c)
            }
        }
    };
    jsPlumb.Endpoints.svg.Dot = function () {
        jsPlumb.Endpoints.Dot.apply(this, arguments);
        U.apply(this, arguments);
        this.makeNode = function (a) {
            return ae("circle", {
                cx: this.w / 2,
                cy: this.h / 2,
                r: this.radius
            })
        };
        this.updateNode = function (a) {
            ad(a, {cx: this.w / 2, cy: this.h / 2, r: this.radius})
        }
    };
    jsPlumb.Endpoints.svg.Rectangle = function () {
        jsPlumb.Endpoints.Rectangle.apply(this, arguments);
        U.apply(this, arguments);
        this.makeNode = function (a) {
            return ae("rect", {width: this.w, height: this.h})
        };
        this.updateNode = function (a) {
            ad(a, {width: this.w, height: this.h})
        }
    };
    jsPlumb.Endpoints.svg.Image = jsPlumb.Endpoints.Image;
    jsPlumb.Endpoints.svg.Blank = jsPlumb.Endpoints.Blank;
    jsPlumb.Overlays.svg.Label = jsPlumb.Overlays.Label;
    jsPlumb.Overlays.svg.Custom = jsPlumb.Overlays.Custom;
    var T = function (a, c) {
        a.apply(this, c);
        jsPlumb.jsPlumbUIComponent.apply(this, c);
        this.isAppendedAtTopLevel = false;
        var e = this, b = null;
        this.paint = function (f, k) {
            if (f.component.svg && k) {
                if (b == null) {
                    b = ae("path", {"pointer-events": "all"});
                    f.component.svg.appendChild(b);
                    e.attachListeners(b, f.component);
                    e.attachListeners(b, e)
                }
                var h = c && (c.length == 1) ? (c[0].cssClass || "") : "", g = [0, 0];
                if (k.xmin < 0) {
                    g[0] = -k.xmin
                }
                if (k.ymin < 0) {
                    g[1] = -k.ymin
                }
                ad(b, {
                    d: d(f.d),
                    "class": h,
                    stroke: f.strokeStyle ? f.strokeStyle : null,
                    fill: f.fillStyle ? f.fillStyle : null,
                    transform: "translate(" + g[0] + "," + g[1] + ")"
                })
            }
        };
        var d = function (f) {
            return "M" + f.hxy.x + "," + f.hxy.y + " L" + f.tail[0].x + "," + f.tail[0].y + " L" + f.cxy.x + "," + f.cxy.y + " L" + f.tail[1].x + "," + f.tail[1].y + " L" + f.hxy.x + "," + f.hxy.y
        };
        this.reattachListeners = function () {
            if (b) {
                e.reattachListenersForElement(b, e)
            }
        };
        this.cleanup = function () {
            if (b != null) {
                jsPlumb.CurrentLibrary.removeElement(b)
            }
        }
    };
    jsPlumb.Overlays.svg.Arrow = function () {
        T.apply(this, [jsPlumb.Overlays.Arrow, arguments])
    };
    jsPlumb.Overlays.svg.PlainArrow = function () {
        T.apply(this, [jsPlumb.Overlays.PlainArrow, arguments])
    };
    jsPlumb.Overlays.svg.Diamond = function () {
        T.apply(this, [jsPlumb.Overlays.Diamond, arguments])
    };
    jsPlumb.Overlays.svg.GuideLines = function () {
        var a = null, e = this, b, c;
        jsPlumb.Overlays.GuideLines.apply(this, arguments);
        this.paint = function (f, h) {
            if (a == null) {
                a = ae("path");
                f.connector.svg.appendChild(a);
                e.attachListeners(a, f.connector);
                e.attachListeners(a, e);
                b = ae("path");
                f.connector.svg.appendChild(b);
                e.attachListeners(b, f.connector);
                e.attachListeners(b, e);
                c = ae("path");
                f.connector.svg.appendChild(c);
                e.attachListeners(c, f.connector);
                e.attachListeners(c, e)
            }
            var g = [0, 0];
            if (h.xmin < 0) {
                g[0] = -h.xmin
            }
            if (h.ymin < 0) {
                g[1] = -h.ymin
            }
            ad(a, {
                d: d(f.head, f.tail),
                stroke: "red",
                fill: null,
                transform: "translate(" + g[0] + "," + g[1] + ")"
            });
            ad(b, {
                d: d(f.tailLine[0], f.tailLine[1]),
                stroke: "blue",
                fill: null,
                transform: "translate(" + g[0] + "," + g[1] + ")"
            });
            ad(c, {
                d: d(f.headLine[0], f.headLine[1]),
                stroke: "green",
                fill: null,
                transform: "translate(" + g[0] + "," + g[1] + ")"
            })
        };
        var d = function (f, g) {
            return "M " + f.x + "," + f.y + " L" + g.x + "," + g.y
        }
    }
})();
(function (c) {
    var d = function (a) {
        return typeof(a) == "string" ? c("#" + a) : c(a)
    };
    jsPlumb.CurrentLibrary = {
        addClass: function (b, e) {
            b = d(b);
            try {
                if (b[0].className.constructor == SVGAnimatedString) {
                    jsPlumbUtil.svg.addClass(b[0], e)
                }
            } catch (a) {
            }
            try {
                b.addClass(e)
            } catch (a) {
            }
        },
        animate: function (a, b, f) {
            a.animate(b, f)
        },
        appendElement: function (a, b) {
            d(b).append(a)
        },
        ajax: function (a) {
            a = a || {};
            a.type = a.type || "get";
            c.ajax(a)
        },
        bind: function (f, b, a) {
            f = d(f);
            f.bind(b, a)
        },
        dragEvents: {
            start: "start",
            stop: "stop",
            drag: "drag",
            step: "step",
            over: "over",
            out: "out",
            drop: "drop",
            complete: "complete"
        },
        extend: function (a, b) {
            return c.extend(a, b)
        },
        getAttribute: function (b, a) {
            return b.attr(a)
        },
        getClientXY: function (a) {
            return [a.clientX, a.clientY]
        },
        getDragObject: function (a) {
            return a[1].draggable || a[1].helper
        },
        getDragScope: function (a) {
            return a.draggable("option", "scope")
        },
        getDropEvent: function (a) {
            return a[0]
        },
        getDropScope: function (a) {
            return a.droppable("option", "scope")
        },
        getDOMElement: function (a) {
            if (typeof(a) == "string") {
                return document.getElementById(a)
            } else {
                if (a.context || a.length != null) {
                    return a[0]
                } else {
                    return a
                }
            }
        },
        getElementObject: d,
        getOffset: function (a) {
            return a.offset()
        },
        getOriginalEvent: function (a) {
            return a.originalEvent
        },
        getPageXY: function (a) {
            return [a.pageX, a.pageY]
        },
        getParent: function (a) {
            return d(a).parent()
        },
        getScrollLeft: function (a) {
            return a.scrollLeft()
        },
        getScrollTop: function (a) {
            return a.scrollTop()
        },
        getSelector: function (a, b) {
            if (arguments.length == 2) {
                return d(a).find(b)
            } else {
                return c(a)
            }
        },
        getSize: function (a) {
            return [a.outerWidth(), a.outerHeight()]
        },
        getTagName: function (b) {
            var a = d(b);
            return a.length > 0 ? a[0].tagName : null
        },
        getUIPosition: function (g, b) {
            b = b || 1;
            if (g.length == 1) {
                ret = {left: g[0].pageX, top: g[0].pageY}
            } else {
                var a = g[1], h = a.offset;
                ret = h || a.absolutePosition;
                a.position.left /= b;
                a.position.top /= b
            }
            return {left: ret.left / b, top: ret.top / b}
        },
        hasClass: function (a, b) {
            return a.hasClass(b)
        },
        initDraggable: function (b, g, a, h) {
            g = g || {};
            if (!g.doNotRemoveHelper) {
                g.helper = null
            }
            if (a) {
                g.scope = g.scope || jsPlumb.Defaults.Scope
            }
            b.draggable(g)
        },
        initDroppable: function (a, b) {
            b.scope = b.scope || jsPlumb.Defaults.Scope;
            a.droppable(b)
        },
        isAlreadyDraggable: function (a) {
            return d(a).hasClass("ui-draggable")
        },
        isDragSupported: function (a, b) {
            return a.draggable
        },
        isDropSupported: function (a, b) {
            return a.droppable
        },
        removeClass: function (b, e) {
            b = d(b);
            try {
                if (b[0].className.constructor == SVGAnimatedString) {
                    jsPlumbUtil.svg.removeClass(b[0], e);
                    return
                }
            } catch (a) {
            }
            b.removeClass(e)
        },
        removeElement: function (a) {
            d(a).remove()
        },
        setAttribute: function (b, a, f) {
            b.attr(a, f)
        },
        setDragFilter: function (a, b) {
            if (jsPlumb.CurrentLibrary.isAlreadyDraggable(a)) {
                a.draggable("option", "cancel", b)
            }
        },
        setDraggable: function (a, b) {
            a.draggable("option", "disabled", !b)
        },
        setDragScope: function (a, b) {
            a.draggable("option", "scope", b)
        },
        setOffset: function (b, a) {
            d(b).offset(a)
        },
        trigger: function (b, a, h) {
            var g = jQuery._data(d(b)[0], "handle");
            g(h)
        },
        unbind: function (f, b, a) {
            f = d(f);
            f.unbind(b, a)
        }
    };
    c(document).ready(jsPlumb.init)
})(jQuery);
(function () {
    "undefined" == typeof Math.sgn && (Math.sgn = function (a) {
        return 0 == a ? 0 : 0 < a ? 1 : -1
    });
    var y = {
        subtract: function (a, b) {
            return {x: a.x - b.x, y: a.y - b.y}
        }, dotProduct: function (a, b) {
            return a.x * b.x + a.y * b.y
        }, square: function (a) {
            return Math.sqrt(a.x * a.x + a.y * a.y)
        }, scale: function (a, b) {
            return {x: a.x * b, y: a.y * b}
        }
    }, x = Math.pow(2, -65), s = function (c, f) {
        for (var l = [], h = f.length - 1, m = 2 * h - 1, C = [], k = [], d = [], a = [], b = [[1, 0.6, 0.3, 0.1], [0.4, 0.6, 0.6, 0.4], [0.1, 0.3, 0.6, 1]], g = 0; g <= h; g++) {
            C[g] = y.subtract(f[g], c)
        }
        for (g = 0; g <= h - 1; g++) {
            k[g] = y.subtract(f[g + 1], f[g]), k[g] = y.scale(k[g], 3)
        }
        for (g = 0; g <= h - 1; g++) {
            for (var e = 0; e <= h; e++) {
                d[g] || (d[g] = []), d[g][e] = y.dotProduct(k[g], C[e])
            }
        }
        for (g = 0; g <= m; g++) {
            a[g] || (a[g] = []), a[g].y = 0, a[g].x = parseFloat(g) / m
        }
        m = h - 1;
        for (C = 0; C <= h + m; C++) {
            g = Math.max(0, C - m);
            for (k = Math.min(C, h); g <= k; g++) {
                j = C - g, a[g + j].y += d[j][g] * b[j][g]
            }
        }
        h = f.length - 1;
        a = p(a, 2 * h - 1, l, 0);
        m = y.subtract(c, f[0]);
        d = y.square(m);
        for (g = b = 0; g < a; g++) {
            m = y.subtract(c, q(f, h, l[g], null, null)), m = y.square(m), m < d && (d = m, b = l[g])
        }
        m = y.subtract(c, f[h]);
        m = y.square(m);
        m < d && (d = m, b = 1);
        return {location: b, distance: d}
    }, p = function (G, I, f, c) {
        var g = [], h = [], d = [], m = [], k = 0, l, a;
        a = Math.sgn(G[0].y);
        for (var H = 1; H <= I; H++) {
            l = Math.sgn(G[H].y), l != a && k++, a = l
        }
        switch (k) {
            case 0:
                return 0;
            case 1:
                if (64 <= c) {
                    return f[0] = (G[0].x + G[I].x) / 2, 1
                }
                var e, b, k = G[0].y - G[I].y;
                a = G[I].x - G[0].x;
                H = G[0].x * G[I].y - G[I].x * G[0].y;
                l = max_distance_below = 0;
                for (e = 1; e < I; e++) {
                    b = k * G[e].x + a * G[e].y + H, b > l ? l = b : b < max_distance_below && (max_distance_below = b)
                }
                b = a;
                e = 0 * b - 1 * k;
                l = (1 * (H - l) - 0 * b) * (1 / e);
                b = a;
                a = H - max_distance_below;
                e = 0 * b - 1 * k;
                k = (1 * a - 0 * b) * (1 / e);
                a = Math.min(l, k);
                if (Math.max(l, k) - a < x) {
                    return d = G[I].x - G[0].x, m = G[I].y - G[0].y, f[0] = 0 + 1 * (d * (G[0].y - 0) - m * (G[0].x - 0)) * (1 / (0 * d - 1 * m)), 1
                }
        }
        q(G, I, 0.5, g, h);
        G = p(g, I, d, c + 1);
        I = p(h, I, m, c + 1);
        for (c = 0; c < G; c++) {
            f[c] = d[c]
        }
        for (c = 0; c < I; c++) {
            f[c + G] = m[c]
        }
        return G + I
    }, q = function (f, g, c, a, d) {
        for (var e = [[]], b = 0; b <= g; b++) {
            e[0][b] = f[b]
        }
        for (f = 1; f <= g; f++) {
            for (b = 0; b <= g - f; b++) {
                e[f] || (e[f] = []), e[f][b] || (e[f][b] = {}), e[f][b].x = (1 - c) * e[f - 1][b].x + c * e[f - 1][b + 1].x, e[f][b].y = (1 - c) * e[f - 1][b].y + c * e[f - 1][b + 1].y
            }
        }
        if (null != a) {
            for (b = 0; b <= g; b++) {
                a[b] = e[b][0]
            }
        }
        if (null != d) {
            for (b = 0; b <= g; b++) {
                d[b] = e[g - b][b]
            }
        }
        return e[g][0]
    }, u = {}, n = function (f, g) {
        var m, k = f.length - 1;
        m = u[k];
        if (!m) {
            m = [];
            var a = function (B) {
                return function () {
                    return B
                }
            }, b = function () {
                return function (B) {
                    return B
                }
            }, l = function () {
                return function (B) {
                    return 1 - B
                }
            }, e = function (B) {
                return function (F) {
                    for (var A = 1, E = 0; E < B.length; E++) {
                        A *= B[E](F)
                    }
                    return A
                }
            };
            m.push(new function () {
                return function (B) {
                    return Math.pow(B, k)
                }
            });
            for (var c = 1; c < k; c++) {
                for (var d = [new a(k)], h = 0; h < k - c; h++) {
                    d.push(new b)
                }
                for (h = 0; h < c; h++) {
                    d.push(new l)
                }
                m.push(new e(d))
            }
            m.push(new function () {
                return function (B) {
                    return Math.pow(1 - B, k)
                }
            });
            u[k] = m
        }
        for (l = b = a = 0; l < f.length; l++) {
            a += f[l].x * m[l](g), b += f[l].y * m[l](g)
        }
        return {x: a, y: b}
    }, v = function (a, b) {
        return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2))
    }, w = function (a) {
        return a[0].x == a[1].x && a[0].y == a[1].y
    }, o = function (f, g, c) {
        if (w(f)) {
            return {point: f[0], location: g}
        }
        for (var a = n(f, g), d = 0, e = 0 < c ? 1 : -1, b = null; d < Math.abs(c);) {
            g += 0.005 * e, b = n(f, g), d += v(b, a), a = b
        }
        return {point: b, location: g}
    }, r = function (d, e) {
        var b = n(d, e), a = n(d.slice(0, d.length - 1), e), c = a.y - b.y, b = a.x - b.x;
        return 0 == c ? Infinity : Math.atan(c / b)
    };
    window.jsBezier = {
        distanceFromCurve: s,
        gradientAtPoint: r,
        gradientAtPointAlongCurveFrom: function (b, c, a) {
            c = o(b, c, a);
            1 < c.location && (c.location = 1);
            0 > c.location && (c.location = 0);
            return r(b, c.location)
        },
        nearestPointOnCurve: function (b, c) {
            var a = s(b, c);
            return {
                point: q(c, c.length - 1, a.location, null, null),
                location: a.location
            }
        },
        pointOnCurve: n,
        pointAlongCurveFrom: function (b, c, a) {
            return o(b, c, a).point
        },
        perpendicularToCurveAt: function (c, d, b, a) {
            d = o(c, d, null == a ? 0 : a);
            c = r(c, d.location);
            a = Math.atan(-1 / c);
            c = b / 2 * Math.sin(a);
            b = b / 2 * Math.cos(a);
            return [{x: d.point.x + b, y: d.point.y + c}, {
                x: d.point.x - b,
                y: d.point.y - c
            }]
        },
        locationAlongCurveFrom: function (b, c, a) {
            return o(b, c, a).location
        },
        getLength: function (d) {
            if (w(d)) {
                return 0
            }
            for (var e = n(d, 0), b = 0, a = 0, c = null; 1 > a;) {
                a += 0.005, c = n(d, a), b += v(c, e), e = c
            }
            return b
        }
    }
})();
(function ($) {
    $.fn.markItUp = function (settings, extraSettings) {
        var method, params, options, ctrlKey, shiftKey, altKey;
        ctrlKey = shiftKey = altKey = false;
        if (typeof settings == "string") {
            method = settings;
            params = extraSettings
        }
        options = {
            id: "",
            nameSpace: "",
            root: "",
            previewHandler: false,
            previewInWindow: "",
            previewInElement: "",
            previewAutoRefresh: true,
            previewPosition: "after",
            previewTemplatePath: "~/templates/preview.html",
            previewParser: false,
            previewParserPath: "",
            previewParserVar: "data",
            resizeHandle: true,
            beforeInsert: "",
            afterInsert: "",
            onEnter: {},
            onShiftEnter: {},
            onCtrlEnter: {},
            onTab: {},
            markupSet: [{}]
        };
        $.extend(options, settings, extraSettings);
        if (!options.root) {
            $("script").each(function (a, tag) {
                miuScript = $(tag).get(0).src.match(/(.*)jquery\.markitup(\.pack)?\.js$/);
                if (miuScript !== null) {
                    options.root = miuScript[1]
                }
            })
        }
        var uaMatch = function (ua) {
            ua = ua.toLowerCase();
            var match = /(chrome)[ \/]([\w.]+)/.exec(ua) || /(webkit)[ \/]([\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) || /(msie) ([\w.]+)/.exec(ua) || ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) || [];
            return {browser: match[1] || "", version: match[2] || "0"}
        };
        var matched = uaMatch(navigator.userAgent);
        var browser = {};
        if (matched.browser) {
            browser[matched.browser] = true;
            browser.version = matched.version
        }
        if (browser.chrome) {
            browser.webkit = true
        } else {
            if (browser.webkit) {
                browser.safari = true
            }
        }
        return this.each(function () {
            var $$, textarea, levels, scrollPosition, caretPosition, caretOffset, clicked, hash, header, footer, previewWindow, template, iFrame, abort;
            $$ = $(this);
            textarea = this;
            levels = [];
            abort = false;
            scrollPosition = caretPosition = 0;
            caretOffset = -1;
            options.previewParserPath = localize(options.previewParserPath);
            options.previewTemplatePath = localize(options.previewTemplatePath);
            if (method) {
                switch (method) {
                    case"remove":
                        remove();
                        break;
                    case"insert":
                        markup(params);
                        break;
                    default:
                        $.error("Method " + method + " does not exist on jQuery.markItUp")
                }
                return
            }
            function localize(data, inText) {
                if (inText) {
                    return data.replace(/("|')~\//g, "$1" + options.root)
                }
                return data.replace(/^~\//, options.root)
            }

            function init() {
                id = "";
                nameSpace = "";
                if (options.id) {
                    id = 'id="' + options.id + '"'
                } else {
                    if ($$.attr("id")) {
                        id = 'id="markItUp' + ($$.attr("id").substr(0, 1).toUpperCase()) + ($$.attr("id").substr(1)) + '"'
                    }
                }
                if (options.nameSpace) {
                    nameSpace = 'class="' + options.nameSpace + '"'
                }
                $$.wrap("<div " + nameSpace + "></div>");
                $$.wrap("<div " + id + ' class="markItUp"></div>');
                $$.wrap('<div class="markItUpContainer"></div>');
                $$.addClass("markItUpEditor");
                header = $('<div class="markItUpHeader"></div>').insertBefore($$);
                var $basicSet = $(dropMenus(options.markupSet[0], "miu_basic"));
                $basicSet.append('<li class="txt_link fright li_miu_advanced"><span class="toggle_miu_advanced show_miu_advanced awesome-button" role="button">' + locaKeys.moreopts + "</span></li>");
                $basicSet.appendTo(header);
                var $advancedSet = $(dropMenus(options.markupSet[1], "miu_advanced"));
                $advancedSet.appendTo(header).hide();
                footer = $('<div class="markItUpFooter"></div>').insertAfter($$);
                if (options.resizeHandle === true && browser.safari !== true) {
                    resizeHandle = $('<div class="markItUpResizeHandle"></div>').insertAfter($$).bind("mousedown.markItUp", function (e) {
                        var h = $$.height(), y = e.clientY, mouseMove, mouseUp;
                        mouseMove = function (e) {
                            $$.css("height", Math.max(20, e.clientY + h - y) + "px");
                            return false
                        };
                        mouseUp = function (e) {
                            $("html").unbind("mousemove.markItUp", mouseMove).unbind("mouseup.markItUp", mouseUp);
                            return false
                        };
                        $("html").bind("mousemove.markItUp", mouseMove).bind("mouseup.markItUp", mouseUp)
                    });
                    footer.append(resizeHandle)
                }
                $$.bind("keydown.markItUp", keyPressed).bind("keyup", keyPressed);
                $$.bind("insertion.markItUp", function (e, settings) {
                    if (settings.target !== false) {
                        get()
                    }
                    if (textarea === $.markItUp.focused) {
                        markup(settings)
                    }
                });
                $$.bind("focus.markItUp", function () {
                    $.markItUp.focused = this
                });
                if (options.previewInElement) {
                    refreshPreview()
                }
            }

            function dropMenus(markupSet, mSetClass) {
                if (!mSetClass) {
                    mSetClass = ""
                }
                var ul = $('<ul class="' + mSetClass + '"></ul>'), i = 0;
                $.each(markupSet, function () {
                    var button = this, t = "", title, li, j;
                    title = (button.key) ? (button.name || "") + " [Ctrl+" + button.key + "]" : (button.name || "");
                    key = (button.key) ? 'accesskey="' + button.key + '"' : "";
                    if (button.separator) {
                        li = $('<li class="markItUpSeparator">' + (button.separator || "") + "</li>").appendTo(ul)
                    } else {
                        i++;
                        for (j = levels.length - 1; j >= 0; j--) {
                            t += levels[j] + "-"
                        }
                        li = $('<li class="markItUpButton markItUpButton' + t + (i) + " " + (button.className || "") + '"><a href="" ' + key + ' title="' + title + '">' + (button.name || "") + "</a></li>").bind("contextmenu.markItUp", function () {
                            return false
                        }).appendTo(ul);
                        if (!isMobile) {
                            li.unbind("click.markItUp").bind("click.markItUp", function () {
                                if (button.call) {
                                    eval(button.call)()
                                } else {
                                    var $innerUL = $(">ul", li);
                                    if ($innerUL.length > 0) {
                                        $innerUL.parents(".ui-dialog").find(".ui-dialog-titlebar-close").on("click", function () {
                                            $innerUL.hide()
                                        });
                                        $innerUL.addClass("markItUpOutpost");
                                        $("body").append($innerUL);
                                        var randomId = Math.ceil(Math.random() * 10000);
                                        li.attr("id", "markitUpDropdown" + randomId);
                                        $innerUL.attr("rel", "markitUpDropdown" + randomId);
                                        $innerUL.find(">li").bind("click.markItUp", function () {
                                            $innerUL.hide();
                                            li.attr("data-opened", 0)
                                        });
                                        $(window).on("resize", function (e) {
                                            repositionDropdowns($innerUL, li)
                                        })
                                    } else {
                                        $innerUL = $('body>ul[rel="' + li.attr("id") + '"]')
                                    }
                                    $("html").one("click.markItUp2", function () {
                                        $innerUL.hide();
                                        li.attr("data-opened", 0)
                                    });
                                    repositionDropdowns($innerUL, li);
                                    if ($innerUL.filter(":visible").length) {
                                        $innerUL.hide();
                                        li.attr("data-opened", 0)
                                    } else {
                                        $innerUL.show();
                                        li.attr("data-opened", 1)
                                    }
                                }
                                setTimeout(function () {
                                    markup(button)
                                }, 1);
                                return false
                            }).bind("focusin.markItUp", function () {
                                $$.focus()
                            })
                        } else {
                            li.bind("click.markItUp", function () {
                                $(header).find("ul ul").hide();
                                if ($(this).find("> ul").length) {
                                    $(this).find("> ul").show()
                                } else {
                                    if (button.call) {
                                        eval(button.call)()
                                    }
                                    setTimeout(function () {
                                        markup(button)
                                    }, 1)
                                }
                                return false
                            })
                        }
                        if (button.dropMenu) {
                            levels.push(i);
                            $(li).addClass("markItUpDropMenu").append(dropMenus(button.dropMenu));
                            var dropDownArr = $('<span class="dropdown_arr"></span>');
                            $(li).append(dropDownArr)
                        }
                    }
                });
                levels.pop();
                return ul
            }

            function repositionDropdowns($innerUL, li) {
                var ulHeight = $innerUL.outerHeight();
                var top;
                var dropDownTop = Math.ceil(li.offset().top);
                if (dropDownTop + li.height() + ulHeight + $("#siteFooter").outerHeight() >= $(window).innerHeight() + $(window).scrollTop()) {
                    top = dropDownTop - ulHeight - 2
                } else {
                    top = dropDownTop + 29
                }
                $innerUL.css({top: top, left: Math.floor(li.offset()["left"])})
            }

            function magicMarkups(string) {
                if (string) {
                    string = string.toString();
                    string = string.replace(/\(\!\(([\s\S]*?)\)\!\)/g, function (x, a) {
                        var b = a.split("|!|");
                        if (altKey === true) {
                            return (b[1] !== undefined) ? b[1] : b[0]
                        } else {
                            return (b[1] === undefined) ? "" : b[0]
                        }
                    });
                    string = string.replace(/\[\!\[([\s\S]*?)\]\!\]/g, function (x, a) {
                        var b = a.split(":!:");
                        if (abort === true) {
                            return false
                        }
                        value = prompt(b[0], (b[1]) ? b[1] : "");
                        if (value === null) {
                            abort = true
                        }
                        return value
                    });
                    return string
                }
                return ""
            }

            function prepare(action) {
                if ($.isFunction(action)) {
                    action = action(hash)
                }
                return magicMarkups(action)
            }

            function build(string) {
                var openWith = prepare(clicked.openWith);
                var placeHolder = prepare(clicked.placeHolder);
                var replaceWith = prepare(clicked.replaceWith);
                var closeWith = prepare(clicked.closeWith);
                var openBlockWith = prepare(clicked.openBlockWith);
                var closeBlockWith = prepare(clicked.closeBlockWith);
                var multiline = clicked.multiline;
                if (replaceWith !== "") {
                    block = openWith + replaceWith + closeWith
                } else {
                    if (selection === "" && placeHolder !== "") {
                        block = openWith + placeHolder + closeWith
                    } else {
                        string = string || selection;
                        var lines = [string], blocks = [];
                        if (multiline === true) {
                            lines = string.split(/\r?\n/)
                        }
                        for (var l = 0; l < lines.length; l++) {
                            line = lines[l];
                            var trailingSpaces;
                            if (trailingSpaces = line.match(/ *$/)) {
                                blocks.push(openWith + line.replace(/ *$/g, "") + closeWith + trailingSpaces)
                            } else {
                                blocks.push(openWith + line + closeWith)
                            }
                        }
                        block = blocks.join("\n")
                    }
                }
                block = openBlockWith + block + closeBlockWith;
                return {
                    block: block,
                    openBlockWith: openBlockWith,
                    openWith: openWith,
                    replaceWith: replaceWith,
                    placeHolder: placeHolder,
                    closeWith: closeWith,
                    closeBlockWith: closeBlockWith
                }
            }

            function markup(button) {
                var len, j, n, i;
                hash = clicked = button;
                get();
                $.extend(hash, {
                    line: "",
                    root: options.root,
                    textarea: textarea,
                    selection: (selection || ""),
                    caretPosition: caretPosition,
                    ctrlKey: ctrlKey,
                    shiftKey: shiftKey,
                    altKey: altKey
                });
                prepare(options.beforeInsert);
                prepare(clicked.beforeInsert);
                if ((ctrlKey === true && shiftKey === true) || button.multiline === true) {
                    prepare(clicked.beforeMultiInsert)
                }
                $.extend(hash, {line: 1});
                if ((ctrlKey === true && shiftKey === true)) {
                    lines = selection.split(/\r?\n/);
                    for (j = 0, n = lines.length, i = 0; i < n; i++) {
                        if ($.trim(lines[i]) !== "") {
                            $.extend(hash, {line: ++j, selection: lines[i]});
                            lines[i] = build(lines[i]).block
                        } else {
                            lines[i] = ""
                        }
                    }
                    string = {block: lines.join("\n")};
                    start = caretPosition;
                    len = string.block.length + ((browser.opera) ? n - 1 : 0)
                } else {
                    if (ctrlKey === true) {
                        string = build(selection);
                        start = caretPosition + string.openWith.length;
                        len = string.block.length - string.openWith.length - string.closeWith.length;
                        len = len - (string.block.match(/ $/) ? 1 : 0);
                        len -= fixIeBug(string.block)
                    } else {
                        if (shiftKey === true) {
                            string = build(selection);
                            start = caretPosition;
                            len = string.block.length;
                            len -= fixIeBug(string.block)
                        } else {
                            string = build(selection);
                            start = caretPosition + string.block.length;
                            len = 0;
                            start -= fixIeBug(string.block)
                        }
                    }
                }
                if ((selection === "" && string.replaceWith === "")) {
                    caretOffset += fixOperaBug(string.block);
                    start = caretPosition + string.openBlockWith.length + string.openWith.length;
                    len = string.block.length - string.openBlockWith.length - string.openWith.length - string.closeWith.length - string.closeBlockWith.length;
                    caretOffset = $$.val().substring(caretPosition, $$.val().length).length;
                    caretOffset -= fixOperaBug($$.val().substring(0, caretPosition))
                }
                $.extend(hash, {
                    caretPosition: caretPosition,
                    scrollPosition: scrollPosition
                });
                if (string.block !== selection && abort === false) {
                    insert(string.block);
                    set(start, len)
                } else {
                    caretOffset = -1
                }
                get();
                $.extend(hash, {line: "", selection: selection});
                if ((ctrlKey === true && shiftKey === true) || button.multiline === true) {
                    prepare(clicked.afterMultiInsert)
                }
                prepare(clicked.afterInsert);
                prepare(options.afterInsert);
                if (previewWindow && options.previewAutoRefresh) {
                    refreshPreview()
                }
                shiftKey = altKey = ctrlKey = abort = false
            }

            function fixOperaBug(string) {
                if (browser.opera) {
                    return string.length - string.replace(/\n*/g, "").length
                }
                return 0
            }

            function fixIeBug(string) {
                if (browser.msie) {
                    return string.length - string.replace(/\r*/g, "").length
                }
                return 0
            }

            function insert(block) {
                if (document.selection) {
                    var newSelection = document.selection.createRange();
                    newSelection.text = block
                } else {
                    textarea.value = textarea.value.substring(0, caretPosition) + block + textarea.value.substring(caretPosition + selection.length, textarea.value.length)
                }
            }

            function set(start, len) {
                if (textarea.createTextRange) {
                    if (browser.opera && browser.version >= 9.5 && len == 0) {
                        return false
                    }
                    range = textarea.createTextRange();
                    range.collapse(true);
                    range.moveStart("character", start);
                    range.moveEnd("character", len);
                    range.select()
                } else {
                    if (textarea.setSelectionRange) {
                        textarea.setSelectionRange(start, start + len)
                    }
                }
                textarea.scrollTop = scrollPosition;
                textarea.focus()
            }

            function get() {
                textarea.focus();
                scrollPosition = textarea.scrollTop;
                if (document.selection) {
                    selection = document.selection.createRange().text;
                    if (browser.msie) {
                        var range = document.selection.createRange(), rangeCopy = range.duplicate();
                        rangeCopy.moveToElementText(textarea);
                        caretPosition = -1;
                        while (rangeCopy.inRange(range)) {
                            rangeCopy.moveStart("character");
                            caretPosition++
                        }
                    } else {
                        caretPosition = textarea.selectionStart
                    }
                } else {
                    caretPosition = textarea.selectionStart;
                    selection = textarea.value.substring(caretPosition, textarea.selectionEnd)
                }
                return selection
            }

            function preview() {
                if (typeof options.previewHandler === "function") {
                    previewWindow = true
                } else {
                    if (options.previewInElement) {
                        previewWindow = $(options.previewInElement)
                    } else {
                        if (!previewWindow || previewWindow.closed) {
                            if (options.previewInWindow) {
                                previewWindow = window.open("", "preview", options.previewInWindow);
                                $(window).unload(function () {
                                    previewWindow.close()
                                })
                            } else {
                                iFrame = $('<iframe class="markItUpPreviewFrame"></iframe>');
                                if (options.previewPosition == "after") {
                                    iFrame.insertAfter(footer)
                                } else {
                                    iFrame.insertBefore(header)
                                }
                                previewWindow = iFrame[iFrame.length - 1].contentWindow || frame[iFrame.length - 1]
                            }
                        } else {
                            if (altKey === true) {
                                if (iFrame) {
                                    iFrame.remove()
                                } else {
                                    previewWindow.close()
                                }
                                previewWindow = iFrame = false
                            }
                        }
                    }
                }
                if (!options.previewAutoRefresh) {
                    refreshPreview()
                }
                if (options.previewInWindow) {
                    previewWindow.focus()
                }
            }

            function refreshPreview() {
                renderPreview()
            }

            function renderPreview() {
                var phtml;
                if (options.previewHandler && typeof options.previewHandler === "function") {
                    options.previewHandler($$.val())
                } else {
                    if (options.previewParser && typeof options.previewParser === "function") {
                        var data = options.previewParser($$.val());
                        writeInPreview(localize(data, 1))
                    } else {
                        if (options.previewParserPath !== "") {
                            $.ajax({
                                type: "POST",
                                dataType: "text",
                                global: false,
                                url: options.previewParserPath,
                                data: options.previewParserVar + "=" + encodeURIComponent($$.val()),
                                success: function (data) {
                                    writeInPreview(localize(data, 1))
                                }
                            })
                        } else {
                            if (!template) {
                                $.ajax({
                                    url: options.previewTemplatePath,
                                    dataType: "text",
                                    global: false,
                                    success: function (data) {
                                        writeInPreview(localize(data, 1).replace(/<!-- content -->/g, $$.val()))
                                    }
                                })
                            }
                        }
                    }
                }
                return false
            }

            function writeInPreview(data) {
                if (options.previewInElement) {
                    $(options.previewInElement).html(data)
                } else {
                    if (previewWindow && previewWindow.document) {
                        try {
                            sp = previewWindow.document.documentElement.scrollTop
                        } catch (e) {
                            sp = 0
                        }
                        previewWindow.document.open();
                        previewWindow.document.write(data);
                        previewWindow.document.close();
                        previewWindow.document.documentElement.scrollTop = sp
                    }
                }
            }

            function keyPressed(e) {
                shiftKey = e.shiftKey;
                altKey = e.altKey;
                ctrlKey = (!(e.altKey && e.ctrlKey)) ? (e.ctrlKey || e.metaKey) : false;
                if (e.type === "keydown") {
                    if (ctrlKey === true) {
                        li = $('a[accesskey="' + ((e.keyCode == 13) ? "\\n" : String.fromCharCode(e.keyCode)) + '"]', header).parent("li");
                        if (li.length !== 0) {
                            ctrlKey = false;
                            setTimeout(function () {
                                li.triggerHandler("mouseup")
                            }, 1);
                            return false
                        }
                    }
                    if (e.keyCode === 13 || e.keyCode === 10) {
                        if (ctrlKey === true) {
                            ctrlKey = false;
                            markup(options.onCtrlEnter);
                            return options.onCtrlEnter.keepDefault
                        } else {
                            if (shiftKey === true) {
                                shiftKey = false;
                                markup(options.onShiftEnter);
                                return options.onShiftEnter.keepDefault
                            } else {
                                markup(options.onEnter);
                                return options.onEnter.keepDefault
                            }
                        }
                    }
                    if (e.keyCode === 9) {
                        if (shiftKey == true || ctrlKey == true || altKey == true) {
                            return false
                        }
                        if (caretOffset !== -1) {
                            get();
                            caretOffset = $$.val().length - caretOffset;
                            set(caretOffset, 0);
                            caretOffset = -1;
                            return false
                        } else {
                            markup(options.onTab);
                            return options.onTab.keepDefault
                        }
                    }
                }
            }

            function remove() {
                $$.unbind(".markItUp").removeClass("markItUpEditor");
                $$.parent("div").parent("div.markItUp").parent("div").replaceWith($$);
                $$.data("markItUp", null)
            }

            init()
        })
    };
    $.fn.markItUpRemove = function () {
        return this.each(function () {
            $(this).markItUp("remove")
        })
    };
    $.markItUp = function (settings) {
        var options = {target: false};
        $.extend(options, settings);
        if (options.target) {
            return $(options.target).each(function () {
                $(this).focus();
                $(this).trigger("insertion", [options])
            })
        } else {
            $("textarea").trigger("insertion", [options])
        }
    }
})(jQuery);
/*
 * jQuery Mousewheel 3.1.13
 *
 * Copyright 2015 jQuery Foundation and other contributors
 * Released under the MIT license.
 * http://jquery.org/license
 */
!function (a) {
    "function" == typeof define && define.amd ? define(["./jquery"], a) : "object" == typeof exports ? module.exports = a : a(jQuery)
}(function (h) {
    function k(m) {
        var n = m || window.event, o = e.call(arguments, 1), v = 0, E = 0, p = 0, q = 0, r = 0, s = 0;
        if (m = h.event.fix(n), m.type = "mousewheel", "detail" in n && (p = -1 * n.detail), "wheelDelta" in n && (p = n.wheelDelta), "wheelDeltaY" in n && (p = n.wheelDeltaY), "wheelDeltaX" in n && (E = -1 * n.wheelDeltaX), "axis" in n && n.axis === n.HORIZONTAL_AXIS && (E = -1 * p, p = 0), v = 0 === p ? E : p, "deltaY" in n && (p = -1 * n.deltaY, v = p), "deltaX" in n && (E = n.deltaX, 0 === p && (v = -1 * E)), 0 !== p || 0 !== E) {
            if (1 === n.deltaMode) {
                var u = h.data(this, "mousewheel-line-height");
                v *= u, p *= u, E *= u
            } else {
                if (2 === n.deltaMode) {
                    var w = h.data(this, "mousewheel-page-height");
                    v *= w, p *= w, E *= w
                }
            }
            if (q = Math.max(Math.abs(p), Math.abs(E)), (!b || b > q) && (b = q, y(n, q) && (b /= 40)), y(n, q) && (v /= 40, E /= 40, p /= 40), v = Math[v >= 1 ? "floor" : "ceil"](v / b), E = Math[E >= 1 ? "floor" : "ceil"](E / b), p = Math[p >= 1 ? "floor" : "ceil"](p / b), g.settings.normalizeOffset && this.getBoundingClientRect) {
                var l = this.getBoundingClientRect();
                r = m.clientX - l.left, s = m.clientY - l.top
            }
            return m.deltaX = E, m.deltaY = p, m.deltaFactor = b, m.offsetX = r, m.offsetY = s, m.deltaMode = 0, o.unshift(m, v, E, p), a && clearTimeout(a), a = setTimeout(x, 200), (h.event.dispatch || h.event.handle).apply(this, o)
        }
    }

    function x() {
        b = null
    }

    function y(l, m) {
        return g.settings.adjustOldDeltas && "mousewheel" === l.type && m % 120 === 0
    }

    var a, b, c = ["wheel", "mousewheel", "DOMMouseScroll", "MozMousePixelScroll"], d = "onwheel" in document || document.documentMode >= 9 ? ["wheel"] : ["mousewheel", "DomMouseScroll", "MozMousePixelScroll"], e = Array.prototype.slice;
    if (h.event.fixHooks) {
        for (var f = c.length; f;) {
            h.event.fixHooks[c[--f]] = h.event.mouseHooks
        }
    }
    var g = h.event.special.mousewheel = {
        version: "3.1.12",
        setup: function () {
            if (this.addEventListener) {
                for (var l = d.length; l;) {
                    this.addEventListener(d[--l], k, !1)
                }
            } else {
                this.onmousewheel = k
            }
            h.data(this, "mousewheel-line-height", g.getLineHeight(this)), h.data(this, "mousewheel-page-height", g.getPageHeight(this))
        },
        teardown: function () {
            if (this.removeEventListener) {
                for (var l = d.length; l;) {
                    this.removeEventListener(d[--l], k, !1)
                }
            } else {
                this.onmousewheel = null
            }
            h.removeData(this, "mousewheel-line-height"), h.removeData(this, "mousewheel-page-height")
        },
        getLineHeight: function (l) {
            var m = h(l), n = m["offsetParent" in h.fn ? "offsetParent" : "parent"]();
            return n.length || (n = h("body")), parseInt(n.css("fontSize"), 10) || parseInt(m.css("fontSize"), 10) || 16
        },
        getPageHeight: function (l) {
            return h(l).height()
        },
        settings: {adjustOldDeltas: !0, normalizeOffset: !0}
    };
    h.fn.extend({
        mousewheel: function (l) {
            return l ? this.bind("mousewheel", l) : this.trigger("mousewheel")
        }, unmousewheel: function (l) {
            return this.unbind("mousewheel", l)
        }
    })
});
(function ($) {
    $.extend({
        tablesorter: new function () {
            var parsers = [], widgets = [];
            this.defaults = {
                cssHeader: "header",
                cssAsc: "headerSortUp",
                cssDesc: "headerSortDown",
                cssChildRow: "expand-child",
                sortInitialOrder: "asc",
                sortMultiSortKey: "shiftKey",
                sortForce: null,
                sortAppend: null,
                sortLocaleCompare: true,
                textExtraction: "simple",
                parsers: {},
                widgets: [],
                widgetZebra: {css: ["even", "odd"]},
                headers: {},
                widthFixed: false,
                cancelSelection: true,
                sortList: [],
                headerList: [],
                dateFormat: "us",
                decimal: "/.|,/g",
                onRenderHeader: null,
                selectorHeaders: "thead th",
                debug: false
            };
            function benchmark(s, d) {
                log(s + "," + (new Date().getTime() - d.getTime()) + "ms")
            }

            this.benchmark = benchmark;
            function log(s) {
                if (typeof console != "undefined" && typeof console.debug != "undefined") {
                    console.log(s)
                } else {
                    alert(s)
                }
            }

            function buildParserCache(table, $headers) {
                if (table.config.debug) {
                    var parsersDebug = ""
                }
                if (table.tBodies.length == 0) {
                    return
                }
                var rows = table.tBodies[0].rows;
                if (rows[0]) {
                    var list = [], cells = rows[0].cells, l = cells.length;
                    for (var i = 0; i < l; i++) {
                        var p = false;
                        if ($.metadata && ($($headers[i]).metadata() && $($headers[i]).metadata().sorter)) {
                            p = getParserById($($headers[i]).metadata().sorter)
                        } else {
                            if ((table.config.headers[i] && table.config.headers[i].sorter)) {
                                p = getParserById(table.config.headers[i].sorter)
                            }
                        }
                        if (!p) {
                            p = detectParserForColumn(table, rows, -1, i)
                        }
                        if (table.config.debug) {
                            parsersDebug += "column:" + i + " parser:" + p.id + "\n"
                        }
                        list.push(p)
                    }
                }
                if (table.config.debug) {
                    log(parsersDebug)
                }
                return list
            }

            function detectParserForColumn(table, rows, rowIndex, cellIndex) {
                var l = parsers.length, node = false, nodeValue = false, keepLooking = true;
                while (nodeValue == "" && keepLooking) {
                    rowIndex++;
                    if (rows[rowIndex]) {
                        node = getNodeFromRowAndCellIndex(rows, rowIndex, cellIndex);
                        nodeValue = trimAndGetNodeText(table.config, node);
                        if (table.config.debug) {
                            log("Checking if value was empty on row:" + rowIndex)
                        }
                    } else {
                        keepLooking = false
                    }
                }
                for (var i = 1; i < l; i++) {
                    if (parsers[i].is(nodeValue, table, node)) {
                        return parsers[i]
                    }
                }
                return parsers[0]
            }

            function getNodeFromRowAndCellIndex(rows, rowIndex, cellIndex) {
                return rows[rowIndex].cells[cellIndex]
            }

            function trimAndGetNodeText(config, node) {
                return $.trim(getElementText(config, node))
            }

            function getParserById(name) {
                var l = parsers.length;
                for (var i = 0; i < l; i++) {
                    if (parsers[i].id.toLowerCase() == name.toLowerCase()) {
                        return parsers[i]
                    }
                }
                return false
            }

            function buildCache(table) {
                if (table.config.debug) {
                    var cacheTime = new Date()
                }
                var totalRows = (table.tBodies[0] && table.tBodies[0].rows.length) || 0, totalCells = (table.tBodies[0].rows[0] && table.tBodies[0].rows[0].cells.length) || 0, parsers = table.config.parsers, cache = {
                    row: [],
                    normalized: []
                };
                for (var i = 0; i < totalRows; ++i) {
                    var c = $(table.tBodies[0].rows[i]), cols = [];
                    if (c.hasClass(table.config.cssChildRow)) {
                        cache.row[cache.row.length - 1] = cache.row[cache.row.length - 1].add(c);
                        continue
                    }
                    cache.row.push(c);
                    for (var j = 0; j < totalCells; ++j) {
                        cols.push(parsers[j].format(getElementText(table.config, c[0].cells[j]), table, c[0].cells[j]))
                    }
                    cols.push(cache.normalized.length);
                    cache.normalized.push(cols);
                    cols = null
                }
                if (table.config.debug) {
                    benchmark("Building cache for " + totalRows + " rows:", cacheTime)
                }
                return cache
            }

            function getElementText(config, node) {
                var text = "";
                if (!node) {
                    return ""
                }
                if (!config.supportsTextContent) {
                    config.supportsTextContent = node.textContent || false
                }
                if (config.textExtraction == "simple") {
                    if (config.supportsTextContent) {
                        text = node.textContent
                    } else {
                        if (node.childNodes[0] && node.childNodes[0].hasChildNodes()) {
                            text = node.childNodes[0].innerHTML
                        } else {
                            text = node.innerHTML
                        }
                    }
                } else {
                    if (typeof(config.textExtraction) == "function") {
                        text = config.textExtraction(node)
                    } else {
                        text = $(node).text()
                    }
                }
                return text
            }

            function appendToTable(table, cache) {
                if (table.config.debug) {
                    var appendTime = new Date()
                }
                var c = cache, r = c.row, n = c.normalized, totalRows = n.length, checkCell = (n[0].length - 1), tableBody = $(table.tBodies[0]), rows = [];
                for (var i = 0; i < totalRows; i++) {
                    var pos = n[i][checkCell];
                    rows.push(r[pos]);
                    if (!table.config.appender) {
                        var l = r[pos].length;
                        for (var j = 0; j < l; j++) {
                            tableBody[0].appendChild(r[pos][j])
                        }
                    }
                }
                if (table.config.appender) {
                    table.config.appender(table, rows)
                }
                rows = null;
                if (table.config.debug) {
                    benchmark("Rebuilt table:", appendTime)
                }
                applyWidget(table);
                setTimeout(function () {
                    $(table).trigger("sortEnd")
                }, 0)
            }

            function buildHeaders(table) {
                if (table.config.debug) {
                    var time = new Date()
                }
                var meta = ($.metadata) ? true : false;
                var header_index = computeTableHeaderCellIndexes(table);
                $tableHeaders = $(table.config.selectorHeaders, table).each(function (index) {
                    this.column = header_index[this.parentNode.rowIndex + "-" + this.cellIndex];
                    this.order = formatSortingOrder(table.config.sortInitialOrder);
                    this.count = this.order;
                    if (checkHeaderMetadata(this) || checkHeaderOptions(table, index)) {
                        this.sortDisabled = true
                    }
                    if (checkHeaderOptionsSortingLocked(table, index)) {
                        this.order = this.lockedOrder = checkHeaderOptionsSortingLocked(table, index)
                    }
                    if (!this.sortDisabled) {
                        var $th = $(this).addClass(table.config.cssHeader);
                        if (table.config.onRenderHeader) {
                            table.config.onRenderHeader.apply($th)
                        }
                    }
                    table.config.headerList[index] = this
                });
                if (table.config.debug) {
                    benchmark("Built headers:", time);
                    log($tableHeaders)
                }
                return $tableHeaders
            }

            function computeTableHeaderCellIndexes(t) {
                var matrix = [];
                var lookup = {};
                var thead = t.getElementsByTagName("THEAD")[0];
                var trs = thead.getElementsByTagName("TR");
                for (var i = 0; i < trs.length; i++) {
                    var cells = trs[i].cells;
                    for (var j = 0; j < cells.length; j++) {
                        var c = cells[j];
                        var rowIndex = c.parentNode.rowIndex;
                        var cellId = rowIndex + "-" + c.cellIndex;
                        var rowSpan = c.rowSpan || 1;
                        var colSpan = c.colSpan || 1;
                        var firstAvailCol;
                        if (typeof(matrix[rowIndex]) == "undefined") {
                            matrix[rowIndex] = []
                        }
                        for (var k = 0; k < matrix[rowIndex].length + 1; k++) {
                            if (typeof(matrix[rowIndex][k]) == "undefined") {
                                firstAvailCol = k;
                                break
                            }
                        }
                        lookup[cellId] = firstAvailCol;
                        for (var k = rowIndex; k < rowIndex + rowSpan; k++) {
                            if (typeof(matrix[k]) == "undefined") {
                                matrix[k] = []
                            }
                            var matrixrow = matrix[k];
                            for (var l = firstAvailCol; l < firstAvailCol + colSpan; l++) {
                                matrixrow[l] = "x"
                            }
                        }
                    }
                }
                return lookup
            }

            function checkCellColSpan(table, rows, row) {
                var arr = [], r = table.tHead.rows, c = r[row].cells;
                for (var i = 0; i < c.length; i++) {
                    var cell = c[i];
                    if (cell.colSpan > 1) {
                        arr = arr.concat(checkCellColSpan(table, headerArr, row++))
                    } else {
                        if (table.tHead.length == 1 || (cell.rowSpan > 1 || !r[row + 1])) {
                            arr.push(cell)
                        }
                    }
                }
                return arr
            }

            function checkHeaderMetadata(cell) {
                if (($.metadata) && ($(cell).metadata().sorter === false)) {
                    return true
                }
                return false
            }

            function checkHeaderOptions(table, i) {
                if ((table.config.headers[i]) && (table.config.headers[i].sorter === false)) {
                    return true
                }
                return false
            }

            function checkHeaderOptionsSortingLocked(table, i) {
                if ((table.config.headers[i]) && (table.config.headers[i].lockedOrder)) {
                    return table.config.headers[i].lockedOrder
                }
                return false
            }

            function applyWidget(table) {
                var c = table.config.widgets;
                var l = c.length;
                for (var i = 0; i < l; i++) {
                    getWidgetById(c[i]).format(table)
                }
            }

            function getWidgetById(name) {
                var l = widgets.length;
                for (var i = 0; i < l; i++) {
                    if (widgets[i].id.toLowerCase() == name.toLowerCase()) {
                        return widgets[i]
                    }
                }
            }

            function formatSortingOrder(v) {
                if (typeof(v) != "Number") {
                    return (v.toLowerCase() == "desc") ? 1 : 0
                } else {
                    return (v == 1) ? 1 : 0
                }
            }

            function isValueInArray(v, a) {
                var l = a.length;
                for (var i = 0; i < l; i++) {
                    if (a[i][0] == v) {
                        return true
                    }
                }
                return false
            }

            function setHeadersCss(table, $headers, list, css) {
                $headers.removeClass(css[0]).removeClass(css[1]);
                var h = [];
                $headers.each(function (offset) {
                    if (!this.sortDisabled) {
                        h[this.column] = $(this)
                    }
                });
                var l = list.length;
                for (var i = 0; i < l; i++) {
                    h[list[i][0]].addClass(css[list[i][1]])
                }
            }

            function fixColumnWidth(table, $headers) {
                var c = table.config;
                if (c.widthFixed) {
                    var colgroup = $("<colgroup>");
                    $("tr:first td", table.tBodies[0]).each(function () {
                        colgroup.append($("<col>").css("width", $(this).width()))
                    });
                    $(table).prepend(colgroup)
                }
            }

            function updateHeaderSortCount(table, sortList) {
                var c = table.config, l = sortList.length;
                for (var i = 0; i < l; i++) {
                    var s = sortList[i], o = c.headerList[s[0]];
                    o.count = s[1];
                    o.count++
                }
            }

            function multisort(table, sortList, cache) {
                if (table.config.debug) {
                    var sortTime = new Date()
                }
                var dynamicExp = "var sortWrapper = function(a,b) {", l = sortList.length;
                for (var i = 0; i < l; i++) {
                    var c = sortList[i][0];
                    var order = sortList[i][1];
                    var s = (table.config.parsers[c].type == "text") ? ((order == 0) ? makeSortFunction("text", "asc", c) : makeSortFunction("text", "desc", c)) : ((order == 0) ? makeSortFunction("numeric", "asc", c) : makeSortFunction("numeric", "desc", c));
                    var e = "e" + i;
                    dynamicExp += "var " + e + " = " + s;
                    dynamicExp += "if(" + e + ") { return " + e + "; } ";
                    dynamicExp += "else { "
                }
                var orgOrderCol = cache.normalized[0].length - 1;
                dynamicExp += "return a[" + orgOrderCol + "]-b[" + orgOrderCol + "];";
                for (var i = 0; i < l; i++) {
                    dynamicExp += "}; "
                }
                dynamicExp += "return 0; ";
                dynamicExp += "}; ";
                if (table.config.debug) {
                    benchmark("Evaling expression:" + dynamicExp, new Date())
                }
                eval(dynamicExp);
                cache.normalized.sort(sortWrapper);
                if (table.config.debug) {
                    benchmark("Sorting on " + sortList.toString() + " and dir " + order + " time:", sortTime)
                }
                return cache
            }

            function makeSortFunction(type, direction, index) {
                var a = "a[" + index + "]", b = "b[" + index + "]";
                if (type == "text" && direction == "asc") {
                    return "(" + a + " == " + b + " ? 0 : (" + a + " === null ? Number.POSITIVE_INFINITY : (" + b + " === null ? Number.NEGATIVE_INFINITY : (" + a + " < " + b + ") ? -1 : 1 )));"
                } else {
                    if (type == "text" && direction == "desc") {
                        return "(" + a + " == " + b + " ? 0 : (" + a + " === null ? Number.POSITIVE_INFINITY : (" + b + " === null ? Number.NEGATIVE_INFINITY : (" + b + " < " + a + ") ? -1 : 1 )));"
                    } else {
                        if (type == "numeric" && direction == "asc") {
                            return "(" + a + " === null && " + b + " === null) ? 0 :(" + a + " === null ? Number.POSITIVE_INFINITY : (" + b + " === null ? Number.NEGATIVE_INFINITY : " + a + " - " + b + "));"
                        } else {
                            if (type == "numeric" && direction == "desc") {
                                return "(" + a + " === null && " + b + " === null) ? 0 :(" + a + " === null ? Number.POSITIVE_INFINITY : (" + b + " === null ? Number.NEGATIVE_INFINITY : " + b + " - " + a + "));"
                            }
                        }
                    }
                }
            }

            function makeSortText(i) {
                return "((a[" + i + "] < b[" + i + "]) ? -1 : ((a[" + i + "] > b[" + i + "]) ? 1 : 0));"
            }

            function makeSortTextDesc(i) {
                return "((b[" + i + "] < a[" + i + "]) ? -1 : ((b[" + i + "] > a[" + i + "]) ? 1 : 0));"
            }

            function makeSortNumeric(i) {
                return "a[" + i + "]-b[" + i + "];"
            }

            function makeSortNumericDesc(i) {
                return "b[" + i + "]-a[" + i + "];"
            }

            function sortText(a, b) {
                if (table.config.sortLocaleCompare) {
                    return a.localeCompare(b)
                }
                return ((a < b) ? -1 : ((a > b) ? 1 : 0))
            }

            function sortTextDesc(a, b) {
                if (table.config.sortLocaleCompare) {
                    return b.localeCompare(a)
                }
                return ((b < a) ? -1 : ((b > a) ? 1 : 0))
            }

            function sortNumeric(a, b) {
                return a - b
            }

            function sortNumericDesc(a, b) {
                return b - a
            }

            function getCachedSortType(parsers, i) {
                return parsers[i].type
            }

            this.construct = function (settings) {
                return this.each(function () {
                    if (!this.tHead || !this.tBodies) {
                        return
                    }
                    var $this, $document, $headers, cache, config, shiftDown = 0, sortOrder;
                    this.config = {};
                    config = $.extend(this.config, $.tablesorter.defaults, settings);
                    $this = $(this);
                    $.data(this, "tablesorter", config);
                    $headers = buildHeaders(this);
                    this.config.parsers = buildParserCache(this, $headers);
                    cache = buildCache(this);
                    var sortCSS = [config.cssDesc, config.cssAsc];
                    fixColumnWidth(this);
                    $headers.click(function (e) {
                        var totalRows = ($this[0].tBodies[0] && $this[0].tBodies[0].rows.length) || 0;
                        if (!this.sortDisabled && totalRows > 0) {
                            $this.trigger("sortStart");
                            var $cell = $(this);
                            var i = this.column;
                            this.order = this.count++ % 2;
                            if (this.lockedOrder) {
                                this.order = this.lockedOrder
                            }
                            if (!e[config.sortMultiSortKey]) {
                                config.sortList = [];
                                if (config.sortForce != null) {
                                    var a = config.sortForce;
                                    for (var j = 0; j < a.length; j++) {
                                        if (a[j][0] != i) {
                                            config.sortList.push(a[j])
                                        }
                                    }
                                }
                                config.sortList.push([i, this.order])
                            } else {
                                if (isValueInArray(i, config.sortList)) {
                                    for (var j = 0; j < config.sortList.length; j++) {
                                        var s = config.sortList[j], o = config.headerList[s[0]];
                                        if (s[0] == i) {
                                            o.count = s[1];
                                            o.count++;
                                            s[1] = o.count % 2
                                        }
                                    }
                                } else {
                                    config.sortList.push([i, this.order])
                                }
                            }
                            setTimeout(function () {
                                setHeadersCss($this[0], $headers, config.sortList, sortCSS);
                                appendToTable($this[0], multisort($this[0], config.sortList, cache))
                            }, 1);
                            return false
                        }
                    }).mousedown(function () {
                        if (config.cancelSelection) {
                            this.onselectstart = function () {
                                return false
                            };
                            return false
                        }
                    });
                    $this.bind("update", function () {
                        var me = this;
                        setTimeout(function () {
                            me.config.parsers = buildParserCache(me, $headers);
                            cache = buildCache(me)
                        }, 1)
                    }).bind("updateCell", function (e, cell) {
                        var config = this.config;
                        var pos = [(cell.parentNode.rowIndex - 1), cell.cellIndex];
                        cache.normalized[pos[0]][pos[1]] = config.parsers[pos[1]].format(getElementText(config, cell), cell)
                    }).bind("sorton", function (e, list) {
                        $(this).trigger("sortStart");
                        config.sortList = list;
                        var sortList = config.sortList;
                        updateHeaderSortCount(this, sortList);
                        setHeadersCss(this, $headers, sortList, sortCSS);
                        appendToTable(this, multisort(this, sortList, cache))
                    }).bind("appendCache", function () {
                        appendToTable(this, cache)
                    }).bind("applyWidgetId", function (e, id) {
                        getWidgetById(id).format(this)
                    }).bind("applyWidgets", function () {
                        applyWidget(this)
                    });
                    if ($.metadata && ($(this).metadata() && $(this).metadata().sortlist)) {
                        config.sortList = $(this).metadata().sortlist
                    }
                    if (config.sortList.length > 0) {
                        $this.trigger("sorton", [config.sortList])
                    }
                    applyWidget(this)
                })
            };
            this.addParser = function (parser) {
                var l = parsers.length, a = true;
                for (var i = 0; i < l; i++) {
                    if (parsers[i].id.toLowerCase() == parser.id.toLowerCase()) {
                        a = false
                    }
                }
                if (a) {
                    parsers.push(parser)
                }
            };
            this.addWidget = function (widget) {
                widgets.push(widget)
            };
            this.formatFloat = function (s) {
                var i = parseFloat(s);
                return (isNaN(i)) ? 0 : i
            };
            this.formatInt = function (s) {
                var i = parseInt(s);
                return (isNaN(i)) ? 0 : i
            };
            this.isDigit = function (s, config) {
                return /^[-+]?\d*$/.test($.trim(s.replace(/[,.']/g, "")))
            };
            this.clearTableBody = function (table) {
                if ($.browser.msie) {
                    function empty() {
                        while (this.firstChild) {
                            this.removeChild(this.firstChild)
                        }
                    }

                    empty.apply(table.tBodies[0])
                } else {
                    table.tBodies[0].innerHTML = ""
                }
            }
        }
    });
    $.fn.extend({tablesorter: $.tablesorter.construct});
    var ts = $.tablesorter;
    ts.addParser({
        id: "text", is: function (s) {
            return true
        }, format: function (s) {
            return $.trim(s.toLocaleLowerCase())
        }, type: "text"
    });
    ts.addParser({
        id: "digit", is: function (s, table) {
            var c = table.config;
            return $.tablesorter.isDigit(s, c)
        }, format: function (s) {
            return $.tablesorter.formatFloat(s)
        }, type: "numeric"
    });
    ts.addParser({
        id: "currency", is: function (s) {
            return /^[£$€?.]/.test(s)
        }, format: function (s) {
            return $.tablesorter.formatFloat(s.replace(new RegExp(/[£$€]/g), ""))
        }, type: "numeric"
    });
    ts.addParser({
        id: "ipAddress", is: function (s) {
            return /^\d{2,3}[\.]\d{2,3}[\.]\d{2,3}[\.]\d{2,3}$/.test(s)
        }, format: function (s) {
            var a = s.split("."), r = "", l = a.length;
            for (var i = 0; i < l; i++) {
                var item = a[i];
                if (item.length == 2) {
                    r += "0" + item
                } else {
                    r += item
                }
            }
            return $.tablesorter.formatFloat(r)
        }, type: "numeric"
    });
    ts.addParser({
        id: "url", is: function (s) {
            return /^(https?|ftp|file):\/\/$/.test(s)
        }, format: function (s) {
            return jQuery.trim(s.replace(new RegExp(/(https?|ftp|file):\/\//), ""))
        }, type: "text"
    });
    ts.addParser({
        id: "isoDate", is: function (s) {
            return /^\d{4}[\/-]\d{1,2}[\/-]\d{1,2}$/.test(s)
        }, format: function (s) {
            return $.tablesorter.formatFloat((s != "") ? new Date(s.replace(new RegExp(/-/g), "/")).getTime() : "0")
        }, type: "numeric"
    });
    ts.addParser({
        id: "percent", is: function (s) {
            return /\%$/.test($.trim(s))
        }, format: function (s) {
            return $.tablesorter.formatFloat(s.replace(new RegExp(/%/g), ""))
        }, type: "numeric"
    });
    ts.addParser({
        id: "usLongDate", is: function (s) {
            return s.match(new RegExp(/^[A-Za-z]{3,10}\.? [0-9]{1,2}, ([0-9]{4}|'?[0-9]{2}) (([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(AM|PM)))$/))
        }, format: function (s) {
            return $.tablesorter.formatFloat(new Date(s).getTime())
        }, type: "numeric"
    });
    ts.addParser({
        id: "shortDate", is: function (s) {
            return /\d{1,2}[\/\-]\d{1,2}[\/\-]\d{2,4}/.test(s)
        }, format: function (s, table) {
            var c = table.config;
            s = s.replace(/\-/g, "/");
            if (c.dateFormat == "us") {
                s = s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/, "$3/$1/$2")
            } else {
                if (c.dateFormat == "uk") {
                    s = s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{4})/, "$3/$2/$1")
                } else {
                    if (c.dateFormat == "dd/mm/yy" || c.dateFormat == "dd-mm-yy") {
                        s = s.replace(/(\d{1,2})[\/\-](\d{1,2})[\/\-](\d{2})/, "$1/$2/$3")
                    }
                }
            }
            return $.tablesorter.formatFloat(new Date(s).getTime())
        }, type: "numeric"
    });
    ts.addParser({
        id: "time", is: function (s) {
            return /^(([0-2]?[0-9]:[0-5][0-9])|([0-1]?[0-9]:[0-5][0-9]\s(am|pm)))$/.test(s)
        }, format: function (s) {
            return $.tablesorter.formatFloat(new Date("2000/01/01 " + s).getTime())
        }, type: "numeric"
    });
    ts.addParser({
        id: "metadata", is: function (s) {
            return false
        }, format: function (s, table, cell) {
            var c = table.config, p = (!c.parserMetadataName) ? "sortValue" : c.parserMetadataName;
            return $(cell).metadata()[p]
        }, type: "numeric"
    });
    ts.addWidget({
        id: "zebra", format: function (table) {
            if (table.config.debug) {
                var time = new Date()
            }
            var $tr, row = -1, odd;
            $("tr:visible", table.tBodies[0]).each(function (i) {
                $tr = $(this);
                if (!$tr.hasClass(table.config.cssChildRow)) {
                    row++
                }
                odd = (row % 2 == 0);
                $tr.removeClass(table.config.widgetZebra.css[odd ? 0 : 1]).addClass(table.config.widgetZebra.css[odd ? 1 : 0])
            });
            if (table.config.debug) {
                $.tablesorter.benchmark("Applying Zebra widget", time)
            }
        }
    })
})(jQuery);
(function (f) {
    var d = {
        init: function (b) {
            var a = this;
            if (!a.data("jqv") || a.data("jqv") == null) {
                b = d._saveOptions(a, b);
                f(document).on("click", ".formError", function () {
                    f(this).fadeOut(150, function () {
                        f(this).parent(".formErrorOuter").remove();
                        f(this).remove()
                    })
                })
            }
            return this
        },
        attach: function (a) {
            var b = this;
            var c;
            if (a) {
                c = d._saveOptions(b, a)
            } else {
                c = b.data("jqv")
            }
            c.validateAttribute = (b.find("[data-validation-engine*=validate]").length) ? "data-validation-engine" : "class";
            if (c.binded) {
                b.on(c.validationEventTrigger, "[" + c.validateAttribute + "*=validate]:not([type=checkbox]):not([type=radio]):not(.datepicker)", d._onFieldEvent);
                b.on("click", "[" + c.validateAttribute + "*=validate][type=checkbox],[" + c.validateAttribute + "*=validate][type=radio]", d._onFieldEvent);
                b.on(c.validationEventTrigger, "[" + c.validateAttribute + "*=validate][class*=datepicker]", {delay: 300}, d._onFieldEvent)
            }
            if (c.autoPositionUpdate) {
                f(window).bind("resize", {
                    noAnimation: true,
                    formElem: b
                }, d.updatePromptsPosition)
            }
            b.on("click", "a[data-validation-engine-skip], a[class*='validate-skip'], button[data-validation-engine-skip], button[class*='validate-skip'], input[data-validation-engine-skip], input[class*='validate-skip']", d._submitButtonClick);
            b.removeData("jqv_submitButton");
            b.on("submit", d._onSubmitEvent);
            return this
        },
        detach: function () {
            var a = this;
            var b = a.data("jqv");
            a.find("[" + b.validateAttribute + "*=validate]").not("[type=checkbox]").off(b.validationEventTrigger, d._onFieldEvent);
            a.find("[" + b.validateAttribute + "*=validate][type=checkbox],[class*=validate][type=radio]").off("click", d._onFieldEvent);
            a.off("submit", d._onSubmitEvent);
            a.removeData("jqv");
            a.off("click", "a[data-validation-engine-skip], a[class*='validate-skip'], button[data-validation-engine-skip], button[class*='validate-skip'], input[data-validation-engine-skip], input[class*='validate-skip']", d._submitButtonClick);
            a.removeData("jqv_submitButton");
            if (b.autoPositionUpdate) {
                f(window).off("resize", d.updatePromptsPosition)
            }
            return this
        },
        validate: function () {
            var c = f(this);
            var a = null;
            if (c.is("form") || c.hasClass("validationEngineContainer")) {
                if (c.hasClass("validating")) {
                    return false
                } else {
                    c.addClass("validating");
                    var h = c.data("jqv");
                    var a = d._validateFields(this);
                    setTimeout(function () {
                        c.removeClass("validating")
                    }, 100);
                    if (a && h.onSuccess) {
                        h.onSuccess()
                    } else {
                        if (!a && h.onFailure) {
                            h.onFailure()
                        }
                    }
                }
            } else {
                if (c.is("form") || c.hasClass("validationEngineContainer")) {
                    c.removeClass("validating")
                } else {
                    var b = c.closest("form, .validationEngineContainer"), h = (b.data("jqv")) ? b.data("jqv") : f.validationEngine.defaults, a = d._validateField(c, h);
                    if (a && h.onFieldSuccess) {
                        h.onFieldSuccess()
                    } else {
                        if (h.onFieldFailure && h.InvalidFields.length > 0) {
                            h.onFieldFailure()
                        }
                    }
                }
            }
            if (h.onValidationComplete) {
                return !!h.onValidationComplete(b, a)
            }
            return a
        },
        updatePromptsPosition: function (a) {
            if (a && this == window) {
                var b = a.data.formElem;
                var h = a.data.noAnimation
            } else {
                var b = f(this.closest("form, .validationEngineContainer"))
            }
            var c = b.data("jqv");
            b.find("[" + c.validateAttribute + "*=validate]").not(":disabled").each(function () {
                var g = f(this);
                if (c.prettySelect && g.is(":hidden")) {
                    g = b.find("#" + c.usePrefix + g.attr("id") + c.useSuffix)
                }
                var n = d._getPrompt(g);
                var m = f(n).find(".formErrorContent").html();
                if (n) {
                    d._updatePrompt(g, f(n), m, undefined, false, c, h)
                }
            });
            return this
        },
        showPrompt: function (m, c, a, l) {
            var b = this.closest("form, .validationEngineContainer");
            var n = b.data("jqv");
            if (!n) {
                n = d._saveOptions(this, n)
            }
            if (a) {
                n.promptPosition = a
            }
            n.showArrow = l == true;
            d._showPrompt(this, m, c, false, n);
            return this
        },
        hide: function () {
            var a = f(this).closest("form, .validationEngineContainer");
            var c = a.data("jqv");
            var b = (c && c.fadeDuration) ? c.fadeDuration : 0.3;
            var h;
            if (f(this).is("form") || f(this).hasClass("validationEngineContainer")) {
                h = "parentForm" + d._getClassName(f(this).attr("id"))
            } else {
                h = d._getClassName(f(this).attr("id")) + "formError"
            }
            f("." + h).fadeTo(b, 0.3, function () {
                f(this).parent(".formErrorOuter").remove();
                f(this).remove()
            });
            return this
        },
        hideAll: function () {
            var b = this;
            var c = b.data("jqv");
            var a = c ? c.fadeDuration : 300;
            f(".formError").fadeTo(a, 300, function () {
                f(this).parent(".formErrorOuter").remove();
                f(this).remove()
            });
            return this
        },
        _onFieldEvent: function (b) {
            var a = f(this);
            var c = a.closest("form, .validationEngineContainer");
            var h = c.data("jqv");
            h.eventTrigger = "field";
            window.setTimeout(function () {
                d._validateField(a, h);
                if (h.InvalidFields.length == 0 && h.onFieldSuccess) {
                    h.onFieldSuccess()
                } else {
                    if (h.InvalidFields.length > 0 && h.onFieldFailure) {
                        h.onFieldFailure()
                    }
                }
            }, (b.data) ? b.data.delay : 0)
        },
        _onSubmitEvent: function () {
            var a = f(this);
            var h = a.data("jqv");
            if (a.data("jqv_submitButton")) {
                var c = f("#" + a.data("jqv_submitButton"));
                if (c) {
                    if (c.length > 0) {
                        if (c.hasClass("validate-skip") || c.attr("data-validation-engine-skip") == "true") {
                            return true
                        }
                    }
                }
            }
            h.eventTrigger = "submit";
            var b = d._validateFields(a);
            if (b && h.ajaxFormValidation) {
                d._validateFormWithAjax(a, h);
                return false
            }
            if (h.onValidationComplete) {
                return !!h.onValidationComplete(a, b)
            }
            return b
        },
        _checkAjaxStatus: function (a) {
            var b = true;
            f.each(a.ajaxValidCache, function (h, c) {
                if (!c) {
                    b = false;
                    return false
                }
            });
            return b
        },
        _checkAjaxFieldStatus: function (b, a) {
            return a.ajaxValidCache[b] == true
        },
        _validateFields: function (y) {
            var b = y.data("jqv");
            var x = false;
            y.trigger("jqv.form.validating");
            var a = null;
            y.find("[" + b.validateAttribute + "*=validate]").not(":disabled").each(function () {
                var g = f(this);
                var h = [];
                if (f.inArray(g.attr("name"), h) < 0) {
                    x |= d._validateField(g, b);
                    if (x && a == null) {
                        if (g.is(":hidden") && b.prettySelect) {
                            a = g = y.find("#" + b.usePrefix + d._jqSelector(g.attr("id")) + b.useSuffix)
                        } else {
                            if (g.data("jqv-prompt-at") instanceof jQuery) {
                                g = g.data("jqv-prompt-at")
                            } else {
                                if (g.data("jqv-prompt-at")) {
                                    g = f(g.data("jqv-prompt-at"))
                                }
                            }
                            a = g
                        }
                    }
                    if (b.doNotShowAllErrosOnSubmit) {
                        return false
                    }
                    h.push(g.attr("name"));
                    if (b.showOneMessage == true && x) {
                        return false
                    }
                }
            });
            y.trigger("jqv.form.result", [x]);
            if (x) {
                if (b.scroll) {
                    var c = a.offset().top;
                    var v = a.offset().left;
                    var s = b.promptPosition;
                    if (typeof(s) == "string" && s.indexOf(":") != -1) {
                        s = s.substring(0, s.indexOf(":"))
                    }
                    if (s != "bottomRight" && s != "bottomLeft") {
                        var u = d._getPrompt(a);
                        if (u) {
                            c = u.offset().top
                        }
                    }
                    if (b.scrollOffset) {
                        c -= b.scrollOffset
                    }
                    if (b.isOverflown) {
                        var B = f(b.overflownDIV);
                        if (!B.length) {
                            return false
                        }
                        var A = B.scrollTop();
                        var w = -parseInt(B.offset().top);
                        c += A + w - 5;
                        var r = f(b.overflownDIV + ":not(:animated)");
                        r.animate({scrollTop: c}, 1100, function () {
                            if (b.focusFirstField) {
                                a.focus()
                            }
                        })
                    } else {
                        f("html, body").animate({scrollTop: c}, 1100, function () {
                            if (b.focusFirstField) {
                                a.focus()
                            }
                        });
                        f("html, body").animate({scrollLeft: v}, 1100)
                    }
                } else {
                    if (b.focusFirstField) {
                        a.focus()
                    }
                }
                return false
            }
            return true
        },
        _validateFormWithAjax: function (b, l) {
            var a = b.serialize();
            var c = (l.ajaxFormValidationMethod) ? l.ajaxFormValidationMethod : "GET";
            var m = (l.ajaxFormValidationURL) ? l.ajaxFormValidationURL : b.attr("action");
            var n = (l.dataType) ? l.dataType : "json";
            f.ajax({
                type: c,
                url: m,
                cache: false,
                dataType: n,
                data: a,
                form: b,
                methods: d,
                options: l,
                beforeSend: function () {
                    return l.onBeforeAjaxFormValidation(b, l)
                },
                error: function (h, g) {
                    d._ajaxError(h, g)
                },
                success: function (w) {
                    if ((n == "json") && (w !== true)) {
                        var y = false;
                        for (var x = 0; x < w.length; x++) {
                            var v = w[x];
                            var k = v[0];
                            var g = f(f("#" + k)[0]);
                            if (g.length == 1) {
                                var u = v[2];
                                if (v[1] == true) {
                                    if (u == "" || !u) {
                                        d._closePrompt(g)
                                    } else {
                                        if (l.allrules[u]) {
                                            var h = l.allrules[u].alertTextOk;
                                            if (h) {
                                                u = h
                                            }
                                        }
                                        if (l.showPrompts) {
                                            d._showPrompt(g, u, "pass", false, l, true)
                                        }
                                    }
                                } else {
                                    y |= true;
                                    if (l.allrules[u]) {
                                        var h = l.allrules[u].alertText;
                                        if (h) {
                                            u = h
                                        }
                                    }
                                    if (l.showPrompts) {
                                        d._showPrompt(g, u, "", false, l, true)
                                    }
                                }
                            }
                        }
                        l.onAjaxFormComplete(!y, b, w, l)
                    } else {
                        l.onAjaxFormComplete(true, b, w, l)
                    }
                }
            })
        },
        _validateField: function (Y, R, F) {
            if (!Y.attr("id")) {
                Y.attr("id", "form-validation-field-" + f.validationEngine.fieldIdCounter);
                ++f.validationEngine.fieldIdCounter
            }
            if (!R.validateNonVisibleFields && (Y.is(":hidden") && !R.prettySelect || Y.parent().is(":hidden"))) {
                return false
            }
            var b = Y.attr(R.validateAttribute);
            var J = /validate\[(.*)\]/.exec(b);
            if (!J) {
                return false
            }
            var a = J[1];
            var G = a.split(/\[|,|\]/);
            var N = false;
            var T = Y.attr("name");
            var U = "";
            var L = "";
            var c = false;
            var H = false;
            R.isError = false;
            R.showArrow = true;
            if (R.maxErrorsPerField > 0) {
                H = true
            }
            var X = f(Y.closest("form, .validationEngineContainer"));
            for (var M = 0; M < G.length; M++) {
                G[M] = G[M].replace(" ", "");
                if (G[M] === "") {
                    delete G[M]
                }
            }
            for (var M = 0, P = 0; M < G.length; M++) {
                if (H && P >= R.maxErrorsPerField) {
                    if (!c) {
                        var S = f.inArray("required", G);
                        c = (S != -1 && S >= M)
                    }
                    break
                }
                var V = undefined;
                switch (G[M]) {
                    case"required":
                        c = true;
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._required);
                        break;
                    case"custom":
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._custom);
                        break;
                    case"groupRequired":
                        var O = "[" + R.validateAttribute + "*=" + G[M + 1] + "]";
                        var W = X.find(O).eq(0);
                        if (W[0] != Y[0]) {
                            d._validateField(W, R, F);
                            R.showArrow = true
                        }
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._groupRequired);
                        if (V) {
                            c = true
                        }
                        R.showArrow = false;
                        break;
                    case"ajax":
                        V = d._ajax(Y, G, M, R);
                        if (V) {
                            L = "load"
                        }
                        break;
                    case"minSize":
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._minSize);
                        break;
                    case"maxSize":
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._maxSize);
                        break;
                    case"min":
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._min);
                        break;
                    case"max":
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._max);
                        break;
                    case"past":
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._past);
                        break;
                    case"future":
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._future);
                        break;
                    case"dateRange":
                        var O = "[" + R.validateAttribute + "*=" + G[M + 1] + "]";
                        R.firstOfGroup = X.find(O).eq(0);
                        R.secondOfGroup = X.find(O).eq(1);
                        if (R.firstOfGroup[0].value || R.secondOfGroup[0].value) {
                            V = d._getErrorMessage(X, Y, G[M], G, M, R, d._dateRange)
                        }
                        if (V) {
                            c = true
                        }
                        R.showArrow = false;
                        break;
                    case"dateTimeRange":
                        var O = "[" + R.validateAttribute + "*=" + G[M + 1] + "]";
                        R.firstOfGroup = X.find(O).eq(0);
                        R.secondOfGroup = X.find(O).eq(1);
                        if (R.firstOfGroup[0].value || R.secondOfGroup[0].value) {
                            V = d._getErrorMessage(X, Y, G[M], G, M, R, d._dateTimeRange)
                        }
                        if (V) {
                            c = true
                        }
                        R.showArrow = false;
                        break;
                    case"maxCheckbox":
                        Y = f(X.find("input[name='" + T + "']"));
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._maxCheckbox);
                        break;
                    case"minCheckbox":
                        Y = f(X.find("input[name='" + T + "']"));
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._minCheckbox);
                        break;
                    case"equals":
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._equals);
                        break;
                    case"funcCall":
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._funcCall);
                        break;
                    case"creditCard":
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._creditCard);
                        break;
                    case"condRequired":
                        V = d._getErrorMessage(X, Y, G[M], G, M, R, d._condRequired);
                        if (V !== undefined) {
                            c = true
                        }
                        break;
                    default:
                }
                var Q = false;
                if (typeof V == "object") {
                    switch (V.status) {
                        case"_break":
                            Q = true;
                            break;
                        case"_error":
                            V = V.message;
                            break;
                        case"_error_no_prompt":
                            return true;
                            break;
                        default:
                            break
                    }
                }
                if (Q) {
                    break
                }
                if (typeof V == "string") {
                    U += V + "<br/>";
                    R.isError = true;
                    P++
                }
            }
            if (!c && !(Y.val()) && Y.val().length < 1) {
                R.isError = false
            }
            var K = Y.prop("type");
            var Z = Y.data("promptPosition") || R.promptPosition;
            if ((K == "radio" || K == "checkbox") && X.find("input[name='" + T + "']").size() > 1) {
                if (Z === "inline") {
                    Y = f(X.find("input[name='" + T + "'][type!=hidden]:last"))
                } else {
                    Y = f(X.find("input[name='" + T + "'][type!=hidden]:first"))
                }
                R.showArrow = false
            }
            if (Y.is(":hidden") && R.prettySelect) {
                Y = X.find("#" + R.usePrefix + d._jqSelector(Y.attr("id")) + R.useSuffix)
            }
            if (R.isError && R.showPrompts) {
                d._showPrompt(Y, U, L, false, R)
            } else {
                if (!N) {
                    d._closePrompt(Y)
                }
            }
            if (!N) {
                Y.trigger("jqv.field.result", [Y, R.isError, U])
            }
            var I = f.inArray(Y[0], R.InvalidFields);
            if (I == -1) {
                if (R.isError) {
                    R.InvalidFields.push(Y[0])
                }
            } else {
                if (!R.isError) {
                    R.InvalidFields.splice(I, 1)
                }
            }
            d._handleStatusCssClasses(Y, R);
            if (R.isError && R.onFieldFailure) {
                R.onFieldFailure(Y)
            }
            if (!R.isError && R.onFieldSuccess) {
                R.onFieldSuccess(Y)
            }
            return R.isError
        },
        _handleStatusCssClasses: function (a, b) {
            if (b.addSuccessCssClassToField) {
                a.removeClass(b.addSuccessCssClassToField)
            }
            if (b.addFailureCssClassToField) {
                a.removeClass(b.addFailureCssClassToField)
            }
            if (b.addSuccessCssClassToField && !b.isError) {
                a.addClass(b.addSuccessCssClassToField)
            }
            if (b.addFailureCssClassToField && b.isError) {
                a.addClass(b.addFailureCssClassToField)
            }
        },
        _getErrorMessage: function (E, c, v, a, A, F, u) {
            var x = jQuery.inArray(v, a);
            if (v === "custom" || v === "funcCall") {
                var b = a[x + 1];
                v = v + "[" + b + "]";
                delete (a[x])
            }
            var D = v;
            var C = (c.attr("data-validation-engine")) ? c.attr("data-validation-engine") : c.attr("class");
            var y = C.split(" ");
            var w;
            if (v == "future" || v == "past" || v == "maxCheckbox" || v == "minCheckbox") {
                w = u(E, c, a, A, F)
            } else {
                w = u(c, a, A, F)
            }
            if (w != undefined) {
                var B = d._getCustomErrorMessage(f(c), y, D, F);
                if (B) {
                    w = B
                }
            }
            return w
        },
        _getCustomErrorMessage: function (c, r, o, a) {
            var q = false;
            var s = /^custom\[.*\]$/.test(o) ? d._validityProp.custom : d._validityProp[o];
            if (s != undefined) {
                q = c.attr("data-errormessage-" + s);
                if (q != undefined) {
                    return q
                }
            }
            q = c.attr("data-errormessage");
            if (q != undefined) {
                return q
            }
            var u = "#" + c.attr("id");
            if (typeof a.custom_error_messages[u] != "undefined" && typeof a.custom_error_messages[u][o] != "undefined") {
                q = a.custom_error_messages[u][o]["message"]
            } else {
                if (r.length > 0) {
                    for (var p = 0; p < r.length && r.length > 0; p++) {
                        var b = "." + r[p];
                        if (typeof a.custom_error_messages[b] != "undefined" && typeof a.custom_error_messages[b][o] != "undefined") {
                            q = a.custom_error_messages[b][o]["message"];
                            break
                        }
                    }
                }
            }
            if (!q && typeof a.custom_error_messages[o] != "undefined" && typeof a.custom_error_messages[o]["message"] != "undefined") {
                q = a.custom_error_messages[o]["message"]
            }
            return q
        },
        _validityProp: {
            required: "value-missing",
            custom: "custom-error",
            groupRequired: "value-missing",
            ajax: "custom-error",
            minSize: "range-underflow",
            maxSize: "range-overflow",
            min: "range-underflow",
            max: "range-overflow",
            past: "type-mismatch",
            future: "type-mismatch",
            dateRange: "type-mismatch",
            dateTimeRange: "type-mismatch",
            maxCheckbox: "range-overflow",
            minCheckbox: "range-underflow",
            equals: "pattern-mismatch",
            funcCall: "custom-error",
            creditCard: "pattern-mismatch",
            condRequired: "value-missing"
        },
        _required: function (o, c, q, a, p) {
            switch (o.prop("type")) {
                case"text":
                case"password":
                case"textarea":
                case"file":
                case"select-one":
                case"select-multiple":
                default:
                    var b = f.trim(o.val());
                    var r = f.trim(o.attr("data-validation-placeholder"));
                    if ((!b) || (r && b == r)) {
                        return a.allrules[c[q]].alertText
                    }
                    break;
                case"radio":
                case"checkbox":
                    if (p) {
                        if (!o.attr("checked")) {
                            return a.allrules[c[q]].alertTextCheckboxMultiple
                        }
                        break
                    }
                    var s = o.closest("form, .validationEngineContainer");
                    var u = o.attr("name");
                    if (s.find("input[name='" + u + "']:checked").size() == 0) {
                        if (s.find("input[name='" + u + "']:visible").size() == 1) {
                            return a.allrules[c[q]].alertTextCheckboxe
                        } else {
                            return a.allrules[c[q]].alertTextCheckboxMultiple
                        }
                    }
                    break
            }
        },
        _groupRequired: function (c, a, m, n) {
            var b = "[" + n.validateAttribute + "*=" + a[m + 1] + "]";
            var l = false;
            c.closest("form, .validationEngineContainer").find(b).each(function () {
                if (!d._required(f(this), a, m, n)) {
                    l = true;
                    return false
                }
            });
            if (!l) {
                return n.allrules[a[m]].alertText
            }
        },
        _custom: function (c, b, s, a) {
            var u = b[s + 1];
            var p = a.allrules[u];
            var o;
            if (!p) {
                alert("jqv:custom rule not found - " + u);
                return
            }
            if (p.regex) {
                var q = p.regex;
                if (!q) {
                    alert("jqv:custom regex not found - " + u);
                    return
                }
                var r = new RegExp(q);
                if (!r.test(c.val())) {
                    return a.allrules[u].alertText
                }
            } else {
                if (p.func) {
                    o = p.func;
                    if (typeof(o) !== "function") {
                        alert("jqv:custom parameter 'function' is no function - " + u);
                        return
                    }
                    if (!o(c, b, s, a)) {
                        return a.allrules[u].alertText
                    }
                } else {
                    alert("jqv:custom type not allowed " + u);
                    return
                }
            }
        },
        _funcCall: function (b, a, q, r) {
            var c = a[q + 1];
            var o;
            if (c.indexOf(".") > -1) {
                var n = c.split(".");
                var p = window;
                while (n.length) {
                    p = p[n.shift()]
                }
                o = p
            } else {
                o = window[c] || r.customFunctions[c]
            }
            if (typeof(o) == "function") {
                return o(b, a, q, r)
            }
        },
        _equals: function (b, a, c, k) {
            var l = a[c + 1];
            if (b.val() != f("#" + l).val()) {
                return k.allrules.equals.alertText
            }
        },
        _maxSize: function (b, a, m, n) {
            var o = a[m + 1];
            var p = b.val().length;
            if (p > o) {
                var c = n.allrules.maxSize;
                if (typeof c.alertText2 == "string") {
                    return c.alertText + min + c.alertText2
                } else {
                    return c.alertText
                }
            }
        },
        _minSize: function (b, a, m, o) {
            var n = a[m + 1];
            var p = b.val().length;
            if (p < n) {
                var c = o.allrules.minSize;
                if (typeof c.alertText2 == "string") {
                    return c.alertText + n + c.alertText2
                } else {
                    return c.alertText
                }
            }
        },
        _min: function (b, a, m, o) {
            var n = parseFloat(a[m + 1]);
            var p = parseFloat(b.val());
            if (p < n) {
                var c = o.allrules.min;
                if (c.alertText2) {
                    return c.alertText + n + c.alertText2
                }
                return c.alertText + n
            }
        },
        _max: function (b, a, m, n) {
            var o = parseFloat(a[m + 1]);
            var p = parseFloat(b.val());
            if (p > o) {
                var c = n.allrules.max;
                if (c.alertText2) {
                    return c.alertText + o + c.alertText2
                }
                return c.alertText + o
            }
        },
        _past: function (v, p, c, u, a) {
            var w = c[u + 1];
            var r = f(v.find("input[name='" + w.replace(/^#+/, "") + "']"));
            var s;
            if (w.toLowerCase() == "now") {
                s = new Date()
            } else {
                if (undefined != r.val()) {
                    if (r.is(":disabled")) {
                        return
                    }
                    s = d._parseDate(r.val())
                } else {
                    s = d._parseDate(w)
                }
            }
            var b = d._parseDate(p.val());
            if (b > s) {
                var q = a.allrules.past;
                if (q.alertText2) {
                    return q.alertText + d._dateToString(s) + q.alertText2
                }
                return q.alertText + d._dateToString(s)
            }
        },
        _future: function (v, p, c, u, a) {
            var w = c[u + 1];
            var r = f(v.find("input[name='" + w.replace(/^#+/, "") + "']"));
            var s;
            if (w.toLowerCase() == "now") {
                s = new Date()
            } else {
                if (undefined != r.val()) {
                    if (r.is(":disabled")) {
                        return
                    }
                    s = d._parseDate(r.val())
                } else {
                    s = d._parseDate(w)
                }
            }
            var b = d._parseDate(p.val());
            if (b < s) {
                var q = a.allrules.future;
                if (q.alertText2) {
                    return q.alertText + d._dateToString(s) + q.alertText2
                }
                return q.alertText + d._dateToString(s)
            }
        },
        _isDate: function (a) {
            var b = new RegExp(/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$|^(?:(?:(?:0?[13578]|1[02])(\/|-)31)|(?:(?:0?[1,3-9]|1[0-2])(\/|-)(?:29|30)))(\/|-)(?:[1-9]\d\d\d|\d[1-9]\d\d|\d\d[1-9]\d|\d\d\d[1-9])$|^(?:(?:0?[1-9]|1[0-2])(\/|-)(?:0?[1-9]|1\d|2[0-8]))(\/|-)(?:[1-9]\d\d\d|\d[1-9]\d\d|\d\d[1-9]\d|\d\d\d[1-9])$|^(0?2(\/|-)29)(\/|-)(?:(?:0[48]00|[13579][26]00|[2468][048]00)|(?:\d\d)?(?:0[48]|[2468][048]|[13579][26]))$/);
            return b.test(a)
        },
        _isDateTime: function (a) {
            var b = new RegExp(/^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])\s+(1[012]|0?[1-9]){1}:(0?[1-5]|[0-6][0-9]){1}:(0?[0-6]|[0-6][0-9]){1}\s+(am|pm|AM|PM){1}$|^(?:(?:(?:0?[13578]|1[02])(\/|-)31)|(?:(?:0?[1,3-9]|1[0-2])(\/|-)(?:29|30)))(\/|-)(?:[1-9]\d\d\d|\d[1-9]\d\d|\d\d[1-9]\d|\d\d\d[1-9])$|^((1[012]|0?[1-9]){1}\/(0?[1-9]|[12][0-9]|3[01]){1}\/\d{2,4}\s+(1[012]|0?[1-9]){1}:(0?[1-5]|[0-6][0-9]){1}:(0?[0-6]|[0-6][0-9]){1}\s+(am|pm|AM|PM){1})$/);
            return b.test(a)
        },
        _dateCompare: function (a, b) {
            return (new Date(a.toString()) < new Date(b.toString()))
        },
        _dateRange: function (b, a, c, h) {
            if ((!h.firstOfGroup[0].value && h.secondOfGroup[0].value) || (h.firstOfGroup[0].value && !h.secondOfGroup[0].value)) {
                return h.allrules[a[c]].alertText + h.allrules[a[c]].alertText2
            }
            if (!d._isDate(h.firstOfGroup[0].value) || !d._isDate(h.secondOfGroup[0].value)) {
                return h.allrules[a[c]].alertText + h.allrules[a[c]].alertText2
            }
            if (!d._dateCompare(h.firstOfGroup[0].value, h.secondOfGroup[0].value)) {
                return h.allrules[a[c]].alertText + h.allrules[a[c]].alertText2
            }
        },
        _dateTimeRange: function (b, a, c, h) {
            if ((!h.firstOfGroup[0].value && h.secondOfGroup[0].value) || (h.firstOfGroup[0].value && !h.secondOfGroup[0].value)) {
                return h.allrules[a[c]].alertText + h.allrules[a[c]].alertText2
            }
            if (!d._isDateTime(h.firstOfGroup[0].value) || !d._isDateTime(h.secondOfGroup[0].value)) {
                return h.allrules[a[c]].alertText + h.allrules[a[c]].alertText2
            }
            if (!d._dateCompare(h.firstOfGroup[0].value, h.secondOfGroup[0].value)) {
                return h.allrules[a[c]].alertText + h.allrules[a[c]].alertText2
            }
        },
        _maxCheckbox: function (c, b, a, n, o) {
            var q = a[n + 1];
            var p = b.attr("name");
            var r = c.find("input[name='" + p + "']:checked").size();
            if (r > q) {
                o.showArrow = false;
                if (o.allrules.maxCheckbox.alertText2) {
                    return o.allrules.maxCheckbox.alertText + " " + q + " " + o.allrules.maxCheckbox.alertText2
                }
                return o.allrules.maxCheckbox.alertText
            }
        },
        _minCheckbox: function (c, b, a, n, o) {
            var q = a[n + 1];
            var p = b.attr("name");
            var r = c.find("input[name='" + p + "']:checked").size();
            if (r < q) {
                o.showArrow = false;
                return o.allrules.minCheckbox.alertText + " " + q + " " + o.allrules.minCheckbox.alertText2
            }
        },
        _creditCard: function (q, c, v, a) {
            var x = false, b = q.val().replace(/ +/g, "").replace(/-+/g, "");
            var y = b.length;
            if (y >= 14 && y <= 16 && parseInt(b) > 0) {
                var u = 0, v = y - 1, r = 1, s, w = new String();
                do {
                    s = parseInt(b.charAt(v));
                    w += (r++ % 2 == 0) ? s * 2 : s
                } while (--v >= 0);
                for (v = 0; v < w.length; v++) {
                    u += parseInt(w.charAt(v))
                }
                x = u % 10 == 0
            }
            if (!x) {
                return a.allrules.creditCard.alertText
            }
        },
        _ajax: function (b, I, A, H) {
            var J = I[A + 1];
            var c = H.allrules[J];
            var E = c.extraData;
            var x = c.extraDataDynamic;
            var B = {fieldId: b.attr("id"), fieldValue: b.val()};
            if (typeof E === "object") {
                f.extend(B, E)
            } else {
                if (typeof E === "string") {
                    var y = E.split("&");
                    for (var A = 0; A < y.length; A++) {
                        var a = y[A].split("=");
                        if (a[0] && a[0]) {
                            B[a[0]] = a[1]
                        }
                    }
                }
            }
            if (x) {
                var C = [];
                var w = String(x).split(",");
                for (var A = 0; A < w.length; A++) {
                    var G = w[A];
                    if (f(G).length) {
                        var F = b.closest("form, .validationEngineContainer").find(G).val();
                        var D = G.replace("#", "") + "=" + escape(F);
                        B[G.replace("#", "")] = F
                    }
                }
            }
            if (H.eventTrigger == "field") {
                delete (H.ajaxValidCache[b.attr("id")])
            }
            if (!H.isError && !d._checkAjaxFieldStatus(b.attr("id"), H)) {
                f.ajax({
                    type: H.ajaxFormValidationMethod,
                    url: c.url,
                    cache: false,
                    dataType: "json",
                    data: B,
                    field: b,
                    rule: c,
                    methods: d,
                    options: H,
                    beforeSend: function () {
                    },
                    error: function (h, g) {
                        d._ajaxError(h, g)
                    },
                    success: function (h) {
                        var l = h[0];
                        var n = f("#" + l).eq(0);
                        if (n.length == 1) {
                            var g = h[1];
                            var m = h[2];
                            if (!g) {
                                H.ajaxValidCache[l] = false;
                                H.isError = true;
                                if (m) {
                                    if (H.allrules[m]) {
                                        var k = H.allrules[m].alertText;
                                        if (k) {
                                            m = k
                                        }
                                    }
                                } else {
                                    m = c.alertText
                                }
                                if (H.showPrompts) {
                                    d._showPrompt(n, m, "", true, H)
                                }
                            } else {
                                H.ajaxValidCache[l] = true;
                                if (m) {
                                    if (H.allrules[m]) {
                                        var k = H.allrules[m].alertTextOk;
                                        if (k) {
                                            m = k
                                        }
                                    }
                                } else {
                                    m = c.alertTextOk
                                }
                                if (H.showPrompts) {
                                    if (m) {
                                        d._showPrompt(n, m, "pass", true, H)
                                    } else {
                                        d._closePrompt(n)
                                    }
                                }
                                if (H.eventTrigger == "submit") {
                                    b.closest("form").submit()
                                }
                            }
                        }
                        n.trigger("jqv.field.result", [n, H.isError, m])
                    }
                });
                return c.alertTextLoad
            }
        },
        _ajaxError: function (b, a) {
            if (b.status == 0 && a == null) {
                alert("The page is not served from a server! ajax call failed")
            } else {
                if (typeof console != "undefined") {
                    console.log("Ajax error: " + b.status + " " + a)
                }
            }
        },
        _dateToString: function (a) {
            return a.getFullYear() + "-" + (a.getMonth() + 1) + "-" + a.getDate()
        },
        _parseDate: function (a) {
            var b = a.split("-");
            if (b == a) {
                b = a.split("/")
            }
            if (b == a) {
                b = a.split(".");
                return new Date(b[2], (b[1] - 1), b[0])
            }
            return new Date(b[0], (b[1] - 1), b[2])
        },
        _showPrompt: function (a, c, b, m, n, o) {
            if (a.data("jqv-prompt-at") instanceof jQuery) {
                a = a.data("jqv-prompt-at")
            } else {
                if (a.data("jqv-prompt-at")) {
                    a = f(a.data("jqv-prompt-at"))
                }
            }
            var p = d._getPrompt(a);
            if (o) {
                p = false
            }
            if (f.trim(c)) {
                if (p) {
                    d._updatePrompt(a, p, c, b, m, n)
                } else {
                    d._buildPrompt(a, c, b, m, n)
                }
            }
        },
        _buildPrompt: function (u, B, w, r, b) {
            var A = f("<div>");
            A.addClass(d._getClassName(u.attr("id")) + "formError");
            A.addClass("parentForm" + d._getClassName(u.closest("form, .validationEngineContainer").attr("id")));
            A.addClass("formError");
            switch (w) {
                case"pass":
                    A.addClass("greenPopup");
                    break;
                case"load":
                    A.addClass("blackPopup");
                    break;
                default:
            }
            if (r) {
                A.addClass("ajaxed")
            }
            var a = f("<div>").addClass("formErrorContent").html(B).appendTo(A);
            var x = u.data("promptPosition") || b.promptPosition;
            if (b.showArrow) {
                var s = f("<div>").addClass("formErrorArrow");
                if (typeof(x) == "string") {
                    var v = x.indexOf(":");
                    if (v != -1) {
                        x = x.substring(0, v)
                    }
                }
                switch (x) {
                    case"bottomLeft":
                    case"bottomRight":
                        A.find(".formErrorContent").before(s);
                        s.addClass("formErrorArrowBottom").html('<div class="line1"><!-- --></div><div class="line2"><!-- --></div><div class="line3"><!-- --></div><div class="line4"><!-- --></div><div class="line5"><!-- --></div><div class="line6"><!-- --></div><div class="line7"><!-- --></div><div class="line8"><!-- --></div><div class="line9"><!-- --></div><div class="line10"><!-- --></div>');
                        break;
                    case"topLeft":
                    case"topRight":
                        s.html('<div class="line10"><!-- --></div><div class="line9"><!-- --></div><div class="line8"><!-- --></div><div class="line7"><!-- --></div><div class="line6"><!-- --></div><div class="line5"><!-- --></div><div class="line4"><!-- --></div><div class="line3"><!-- --></div><div class="line2"><!-- --></div><div class="line1"><!-- --></div>');
                        A.append(s);
                        break
                }
            }
            if (b.addPromptClass) {
                A.addClass(b.addPromptClass)
            }
            var c = u.attr("data-required-class");
            if (c !== undefined) {
                A.addClass(c)
            } else {
                if (b.prettySelect) {
                    if (f("#" + u.attr("id")).next().is("select")) {
                        var y = f("#" + u.attr("id").substr(b.usePrefix.length).substring(b.useSuffix.length)).attr("data-required-class");
                        if (y !== undefined) {
                            A.addClass(y)
                        }
                    }
                }
            }
            A.css({opacity: 0});
            if (x === "inline") {
                A.addClass("inline");
                if (typeof u.attr("data-prompt-target") !== "undefined" && f("#" + u.attr("data-prompt-target")).length > 0) {
                    A.appendTo(f("#" + u.attr("data-prompt-target")))
                } else {
                    u.after(A)
                }
            } else {
                u.before(A)
            }
            var v = d._calculatePosition(u, A, b);
            A.css({
                position: x === "inline" ? "relative" : "absolute",
                top: v.callerTopPosition,
                left: v.callerleftPosition,
                marginTop: v.marginTopSize,
                opacity: 0
            }).data("callerField", u);
            if (b.autoHidePrompt) {
                setTimeout(function () {
                    A.animate({opacity: 0}, function () {
                        A.closest(".formErrorOuter").remove();
                        A.remove()
                    })
                }, b.autoHideDelay)
            }
            return A.animate({opacity: 0.87})
        },
        _updatePrompt: function (c, s, u, p, b, a, r) {
            if (s) {
                if (typeof p !== "undefined") {
                    if (p == "pass") {
                        s.addClass("greenPopup")
                    } else {
                        s.removeClass("greenPopup")
                    }
                    if (p == "load") {
                        s.addClass("blackPopup")
                    } else {
                        s.removeClass("blackPopup")
                    }
                }
                if (b) {
                    s.addClass("ajaxed")
                } else {
                    s.removeClass("ajaxed")
                }
                s.find(".formErrorContent").html(u);
                var o = d._calculatePosition(c, s, a);
                var q = {
                    top: o.callerTopPosition,
                    left: o.callerleftPosition,
                    marginTop: o.marginTopSize
                };
                if (r) {
                    s.css(q)
                } else {
                    s.animate(q)
                }
            }
        },
        _closePrompt: function (a) {
            var b = d._getPrompt(a);
            if (b) {
                b.fadeTo("fast", 0, function () {
                    b.parent(".formErrorOuter").remove();
                    b.remove()
                })
            }
        },
        closePrompt: function (a) {
            return d._closePrompt(a)
        },
        _getPrompt: function (b) {
            var a = f(b).closest("form, .validationEngineContainer").attr("id");
            var c = d._getClassName(b.attr("id")) + "formError";
            var h = f("." + d._escapeExpression(c) + ".parentForm" + d._getClassName(a))[0];
            if (h) {
                return f(h)
            }
        },
        _escapeExpression: function (a) {
            return a.replace(/([#;&,\.\+\*\~':"\!\^$\[\]\(\)=>\|])/g, "\\$1")
        },
        isRTL: function (b) {
            var a = f(document);
            var h = f("body");
            var c = (b && b.hasClass("rtl")) || (b && (b.attr("dir") || "").toLowerCase() === "rtl") || a.hasClass("rtl") || (a.attr("dir") || "").toLowerCase() === "rtl" || h.hasClass("rtl") || (h.attr("dir") || "").toLowerCase() === "rtl";
            return Boolean(c)
        },
        _calculatePosition: function (c, D, H) {
            var E, b, x;
            var C = c.width();
            var G = c.position().left;
            var J = c.position().top;
            var F = c.height();
            var I = D.height();
            E = b = 0;
            x = -I;
            var y = c.data("promptPosition") || H.promptPosition;
            var A = "";
            var B = "";
            var a = 0;
            var w = 0;
            if (typeof(y) == "string") {
                if (y.indexOf(":") != -1) {
                    A = y.substring(y.indexOf(":") + 1);
                    y = y.substring(0, y.indexOf(":"));
                    if (A.indexOf(",") != -1) {
                        B = A.substring(A.indexOf(",") + 1);
                        A = A.substring(0, A.indexOf(","));
                        w = parseInt(B);
                        if (isNaN(w)) {
                            w = 0
                        }
                    }
                    a = parseInt(A);
                    if (isNaN(A)) {
                        A = 0
                    }
                }
            }
            switch (y) {
                default:
                case"topRight":
                    b += G + C - 30;
                    E += J;
                    break;
                case"topLeft":
                    E += J;
                    b += G;
                    break;
                case"centerRight":
                    E = J + 4;
                    x = 0;
                    b = G + c.outerWidth(true) + 5;
                    break;
                case"centerLeft":
                    b = G - (D.width() + 2);
                    E = J + 4;
                    x = 0;
                    break;
                case"bottomLeft":
                    E = J + c.height() + 5;
                    x = 0;
                    b = G;
                    break;
                case"bottomRight":
                    b = G + C - 30;
                    E = J + c.height() + 5;
                    x = 0;
                    break;
                case"inline":
                    b = 0;
                    E = 0;
                    x = 0
            }
            b += a;
            E += w;
            return {
                callerTopPosition: E + "px",
                callerleftPosition: b + "px",
                marginTopSize: x + "px"
            }
        },
        _saveOptions: function (b, c) {
            if (f.validationEngineLanguage) {
                var h = f.validationEngineLanguage.allRules
            } else {
                f.error("jQuery.validationEngine rules are not loaded, plz add localization files to the page")
            }
            f.validationEngine.defaults.allrules = h;
            var a = f.extend(true, {}, f.validationEngine.defaults, c);
            b.data("jqv", a);
            return a
        },
        _getClassName: function (a) {
            if (a) {
                return a.replace(/:/g, "_").replace(/\./g, "_")
            }
        },
        _jqSelector: function (a) {
            return a.replace(/([;&,\.\+\*\~':"\!\^#$%@\[\]\(\)=>\|])/g, "\\$1")
        },
        _condRequired: function (b, a, l, m) {
            var n, c;
            for (n = (l + 1); n < a.length; n++) {
                c = jQuery("#" + a[n]).first();
                if (c.length && d._required(c, ["required"], 0, m, true) == undefined) {
                    return d._required(b, ["required"], 0, m)
                }
            }
        },
        _submitButtonClick: function (a) {
            var c = f(this);
            var b = c.closest("form, .validationEngineContainer");
            b.data("jqv_submitButton", c.attr("id"))
        }
    };
    f.fn.validationEngine = function (a) {
        var b = f(this);
        if (!b[0]) {
            return b
        }
        if (typeof(a) == "string" && a.charAt(0) != "_" && d[a]) {
            if (a != "showPrompt" && a != "hide" && a != "hideAll") {
                d.init.apply(b)
            }
            return d[a].apply(b, Array.prototype.slice.call(arguments, 1))
        } else {
            if (typeof a == "object" || !a) {
                d.init.apply(b, arguments);
                return d.attach.apply(b)
            } else {
                f.error("Method " + a + " does not exist in jQuery.validationEngine")
            }
        }
    };
    f.validationEngine = {
        fieldIdCounter: 0,
        defaults: {
            validationEventTrigger: "blur",
            scroll: true,
            focusFirstField: true,
            showPrompts: true,
            validateNonVisibleFields: false,
            promptPosition: "topRight",
            bindMethod: "bind",
            inlineAjax: false,
            ajaxFormValidation: false,
            ajaxFormValidationURL: false,
            ajaxFormValidationMethod: "get",
            onAjaxFormComplete: f.noop,
            onBeforeAjaxFormValidation: f.noop,
            onValidationComplete: false,
            doNotShowAllErrosOnSubmit: false,
            custom_error_messages: {},
            binded: true,
            showArrow: true,
            isError: false,
            maxErrorsPerField: false,
            ajaxValidCache: {},
            autoPositionUpdate: false,
            InvalidFields: [],
            onFieldSuccess: false,
            onFieldFailure: false,
            onSuccess: false,
            onFailure: false,
            validateAttribute: "class",
            addSuccessCssClassToField: "",
            addFailureCssClassToField: "",
            autoHidePrompt: false,
            autoHideDelay: 10000,
            fadeDuration: 0.3,
            prettySelect: false,
            addPromptClass: "",
            usePrefix: "",
            useSuffix: "",
            showOneMessage: false
        }
    };
    var e = {
        hook: "rightmiddle",
        hideOn: false,
        skin: "cloud",
        hideOthers: false
    };
    d._buildPrompt = function (a, c, b, k, l) {
        a.data("promptText", c);
        Tipped.create(a[0], c, e);
        Tipped.show(a[0])
    };
    d._closePrompt = function (a) {
        a.data("promptText", "");
        Tipped.remove(a[0])
    };
    d._updatePrompt = function (a, p, c, b, m, n, o) {
        if (a.data("promptText") != c) {
            d._closePrompt(a);
            d._buildPrompt(a, c)
        }
    };
    d._getPrompt = function (a) {
        return Tipped.get(a[0])
    };
    f(function () {
        f.validationEngine.defaults.promptPosition = d.isRTL() ? "topLeft" : "topRight"
    })
})(jQuery);
(function (b) {
    b.fn.wipetouch = function (d) {
        var a = {
            moveX: 40,
            moveY: 40,
            tapToClick: false,
            preventDefault: true,
            allowDiagonal: false,
            preventDefaultWhenTriggering: true,
            wipeLeft: false,
            wipeRight: false,
            wipeUp: false,
            wipeDown: false,
            wipeUpLeft: false,
            wipeDownLeft: false,
            wipeUpRight: false,
            wipeDownRight: false,
            wipeMove: false,
            wipeTopLeft: false,
            wipeBottomLeft: false,
            wipeTopRight: false,
            wipeBottomRight: false
        };
        if (d) {
            b.extend(a, d)
        }
        this.each(function () {
            var B;
            var C;
            var E = false;
            var F;
            var G;
            var x = false;
            var I = false;
            var J = false;
            var c = false;

            function D(f) {
                A();
                var e = J || (f.originalEvent.touches && f.originalEvent.touches.length > 0);
                if (!x && e) {
                    if (a.preventDefault) {
                        f.preventDefault()
                    }
                    if (a.allowDiagonal) {
                        if (!a.wipeDownLeft) {
                            a.wipeDownLeft = a.wipeBottomLeft
                        }
                        if (!a.wipeDownRight) {
                            a.wipeDownRight = a.wipeBottomRight
                        }
                        if (!a.wipeUpLeft) {
                            a.wipeUpLeft = a.wipeTopLeft
                        }
                        if (!a.wipeUpRight) {
                            a.wipeUpRight = a.wipeTopRight
                        }
                    }
                    if (J) {
                        B = f.pageX;
                        C = f.pageY;
                        b(this).bind("mousemove", H);
                        b(this).one("mouseup", v)
                    } else {
                        B = f.originalEvent.touches[0].pageX;
                        C = f.originalEvent.touches[0].pageY;
                        b(this).bind("touchmove", H)
                    }
                    E = new Date().getTime();
                    F = B;
                    G = C;
                    x = true;
                    I = b(f.target)
                }
            }

            function v(e) {
                if (a.preventDefault) {
                    e.preventDefault()
                }
                if (J) {
                    b(this).unbind("mousemove", H)
                } else {
                    b(this).unbind("touchmove", H)
                }
                if (x) {
                    y(e)
                } else {
                    A()
                }
            }

            function H(e) {
                if (a.preventDefault) {
                    e.preventDefault()
                }
                if (J && !x) {
                    D(e)
                }
                if (x) {
                    if (J) {
                        F = e.pageX;
                        G = e.pageY
                    } else {
                        F = e.originalEvent.touches[0].pageX;
                        G = e.originalEvent.touches[0].pageY
                    }
                    if (a.wipeMove) {
                        w(a.wipeMove, {curX: F, curY: G})
                    }
                }
            }

            function y(f) {
                var g = new Date().getTime();
                var p = E - g;
                var N = F;
                var e = G;
                var k = N - B;
                var o = e - C;
                var r = Math.abs(k);
                var l = Math.abs(o);
                if (r < 15 && l < 15 && p < 100) {
                    c = false;
                    if (a.preventDefault) {
                        A();
                        I.trigger("click");
                        return
                    }
                } else {
                    if (J) {
                        var q = I.data("events");
                        if (q) {
                            var s = q.click;
                            if (s && s.length > 0) {
                                b.each(s, function (K, L) {
                                    c = L;
                                    return
                                });
                                I.unbind("click")
                            }
                        }
                    }
                }
                var u = k > 0;
                var h = o > 0;
                var m = ((r + l) * 60) / ((p) / 6 * (p));
                if (m < 1) {
                    m = 1
                }
                if (m > 5) {
                    m = 5
                }
                var n = {speed: parseInt(m), x: r, y: l, source: I};
                if (r >= a.moveX) {
                    if (a.allowDiagonal && l >= a.moveY) {
                        if (u && h) {
                            w(a.wipeDownRight, n, f)
                        } else {
                            if (u && !h) {
                                w(a.wipeUpRight, n, f)
                            } else {
                                if (!u && h) {
                                    w(a.wipeDownLeft, n, f)
                                } else {
                                    w(a.wipeUpLeft, n, f)
                                }
                            }
                        }
                    } else {
                        if (r >= l) {
                            if (u) {
                                w(a.wipeRight, n, f)
                            } else {
                                w(a.wipeLeft, n, f)
                            }
                        }
                    }
                } else {
                    if (l >= a.moveY && l > r) {
                        if (h) {
                            w(a.wipeDown, n, f)
                        } else {
                            w(a.wipeUp, n, f)
                        }
                    }
                }
                A()
            }

            function A() {
                B = false;
                C = false;
                E = false;
                x = false;
                if (c) {
                    window.setTimeout(function () {
                        I.bind("click", c);
                        c = false
                    }, 50)
                }
            }

            function w(e, g, f) {
                if (e) {
                    if (a.preventDefaultWhenTriggering) {
                        f.preventDefault()
                    }
                    e(g)
                }
            }

            if ("ontouchstart" in document.documentElement) {
                b(this).bind("touchstart", D);
                b(this).bind("touchend", v)
            } else {
                J = true;
                b(this).bind("mousedown", D);
                b(this).bind("mouseout mouseup", v)
            }
        });
        return this
    }
})(jQuery);
!function (b) {
    "function" == typeof define && define.amd ? define(["./jquery"], b) : "undefined" != typeof module && module.exports ? module.exports = b : b(jQuery, window, document)
}(function (b) {
    !function (k) {
        var h = "function" == typeof define && define.amd, a = "undefined" != typeof module && module.exports, g = "https:" == document.location.protocol ? "https:" : "http:", l = "cdnjs.cloudflare.com/ajax/libs/jquery-mousewheel/3.1.13/jquery.mousewheel.js";
        h || (a ? require("./jquery-mousewheel")(b) : b.event.special.mousewheel || b("head").append(decodeURI("%3Cscript src=" + g + "//" + l + "%3E%3C/script%3E"))), k()
    }(function () {
        var R, M = "mCustomScrollbar", af = "mCS", L = ".mCustomScrollbar", G = {
            setTop: 0,
            setLeft: 0,
            axis: "y",
            scrollbarPosition: "inside",
            scrollInertia: 950,
            autoDraggerLength: !0,
            alwaysShowScrollbar: 0,
            snapOffset: 0,
            mouseWheel: {
                enable: !0,
                scrollAmount: "auto",
                axis: "y",
                deltaFactor: "auto",
                disableOver: ["select", "option", "keygen", "datalist", "textarea"]
            },
            scrollButtons: {scrollType: "stepless", scrollAmount: "auto"},
            keyboard: {
                enable: !0,
                scrollType: "stepless",
                scrollAmount: "auto"
            },
            contentTouchScroll: 25,
            documentTouchScroll: !0,
            advanced: {
                autoScrollOnFocus: "input,textarea,select,button,datalist,keygen,a[tabindex],area,object,[contenteditable='true']",
                updateOnContentResize: !0,
                updateOnImageLoad: "auto",
                autoUpdateTimeout: 60
            },
            theme: "light",
            callbacks: {
                onTotalScrollOffset: 0,
                onTotalScrollBackOffset: 0,
                alwaysTriggerOffsets: !0
            }
        }, P = 0, J = {}, Q = window.attachEvent && !window.addEventListener ? 1 : 0, ai = !1, aj = ["mCSB_dragger_onDrag", "mCSB_scrollTools_onDrag", "mCS_img_loaded", "mCS_disabled", "mCS_destroyed", "mCS_no_scrollbar", "mCS-autoHide", "mCS-dir-rtl", "mCS_no_scrollbar_y", "mCS_no_scrollbar_x", "mCS_y_hidden", "mCS_x_hidden", "mCSB_draggerContainer", "mCSB_buttonUp", "mCSB_buttonDown", "mCSB_buttonLeft", "mCSB_buttonRight"], S = {
            init: function (e) {
                var e = b.extend(!0, {}, G, e), an = ak.call(this);
                if (e.live) {
                    var ao = e.liveSelector || this.selector || L, am = b(ao);
                    if ("off" === e.live) {
                        return void K(ao)
                    }
                    J[ao] = setTimeout(function () {
                        am.mCustomScrollbar(e), "once" === e.live && am.length && K(ao)
                    }, 500)
                } else {
                    K(ao)
                }
                return e.setWidth = e.set_width ? e.set_width : e.setWidth, e.setHeight = e.set_height ? e.set_height : e.setHeight, e.axis = e.horizontalScroll ? "x" : N(e.axis), e.scrollInertia = e.scrollInertia > 0 && e.scrollInertia < 17 ? 17 : e.scrollInertia, "object" != typeof e.mouseWheel && 1 == e.mouseWheel && (e.mouseWheel = {
                    enable: !0,
                    scrollAmount: "auto",
                    axis: "y",
                    preventDefault: !1,
                    deltaFactor: "auto",
                    normalizeDelta: !1,
                    invert: !1
                }), e.mouseWheel.scrollAmount = e.mouseWheelPixels ? e.mouseWheelPixels : e.mouseWheel.scrollAmount, e.mouseWheel.normalizeDelta = e.advanced.normalizeMouseWheelDelta ? e.advanced.normalizeMouseWheelDelta : e.mouseWheel.normalizeDelta, e.scrollButtons.scrollType = E(e.scrollButtons.scrollType), F(e), b(an).each(function () {
                    var av = b(this);
                    if (!av.data(af)) {
                        av.data(af, {
                            idx: ++P,
                            opt: e,
                            scrollRatio: {y: null, x: null},
                            overflowed: null,
                            contentReset: {y: null, x: null},
                            bindEvents: !1,
                            tweenRunning: !1,
                            sequential: {},
                            langDir: av.css("direction"),
                            cbOffsets: null,
                            trigger: null,
                            poll: {
                                size: {o: 0, n: 0},
                                img: {o: 0, n: 0},
                                change: {o: 0, n: 0}
                            }
                        });
                        var at = av.data(af), aq = at.opt, ar = av.data("mcs-axis"), ap = av.data("mcs-scrollbar-position"), au = av.data("mcs-theme");
                        ar && (aq.axis = ar), ap && (aq.scrollbarPosition = ap), au && (aq.theme = au, F(aq)), T.call(this), at && aq.callbacks.onCreate && "function" == typeof aq.callbacks.onCreate && aq.callbacks.onCreate.call(this), b("#mCSB_" + at.idx + "_container img:not(." + aj[2] + ")").addClass(aj[2]), S.update.call(null, av)
                    }
                })
            }, update: function (e, an) {
                var am = e || ak.call(this);
                return b(am).each(function () {
                    var aq = b(this);
                    if (aq.data(af)) {
                        var au = aq.data(af), ar = au.opt, ao = b("#mCSB_" + au.idx + "_container"), at = b("#mCSB_" + au.idx), ap = [b("#mCSB_" + au.idx + "_dragger_vertical"), b("#mCSB_" + au.idx + "_dragger_horizontal")];
                        if (!ao.length) {
                            return
                        }
                        au.tweenRunning && r(aq), an && au && ar.callbacks.onBeforeUpdate && "function" == typeof ar.callbacks.onBeforeUpdate && ar.callbacks.onBeforeUpdate.call(this), aq.hasClass(aj[3]) && aq.removeClass(aj[3]), aq.hasClass(aj[4]) && aq.removeClass(aj[4]), at.css("max-height", "none"), at.height() !== aq.height() && at.css("max-height", aq.height()), ae.call(this), "y" === ar.axis || ar.advanced.autoExpandHorizontalScroll || ao.css("width", V(ao)), au.overflowed = W.call(this), n.call(this), ar.autoDraggerLength && u.call(this), ah.call(this), v.call(this);
                        var av = [Math.abs(ao[0].offsetTop), Math.abs(ao[0].offsetLeft)];
                        "x" !== ar.axis && (au.overflowed[0] ? ap[0].height() > ap[0].parent().height() ? ab.call(this) : (f(aq, av[0].toString(), {
                            dir: "y",
                            dur: 0,
                            overwrite: "none"
                        }), au.contentReset.y = null) : (ab.call(this), "y" === ar.axis ? I.call(this) : "yx" === ar.axis && au.overflowed[1] && f(aq, av[1].toString(), {
                            dir: "x",
                            dur: 0,
                            overwrite: "none"
                        }))), "y" !== ar.axis && (au.overflowed[1] ? ap[1].width() > ap[1].parent().width() ? ab.call(this) : (f(aq, av[1].toString(), {
                            dir: "x",
                            dur: 0,
                            overwrite: "none"
                        }), au.contentReset.x = null) : (ab.call(this), "x" === ar.axis ? I.call(this) : "yx" === ar.axis && au.overflowed[0] && f(aq, av[0].toString(), {
                            dir: "y",
                            dur: 0,
                            overwrite: "none"
                        }))), an && au && (2 === an && ar.callbacks.onImageLoad && "function" == typeof ar.callbacks.onImageLoad ? ar.callbacks.onImageLoad.call(this) : 3 === an && ar.callbacks.onSelectorChange && "function" == typeof ar.callbacks.onSelectorChange ? ar.callbacks.onSelectorChange.call(this) : ar.callbacks.onUpdate && "function" == typeof ar.callbacks.onUpdate && ar.callbacks.onUpdate.call(this)), o.call(this)
                    }
                })
            }, scrollTo: function (e, an) {
                if ("undefined" != typeof e && null != e) {
                    var am = ak.call(this);
                    return b(am).each(function () {
                        var au = b(this);
                        if (au.data(af)) {
                            var ar = au.data(af), ap = ar.opt, at = {
                                trigger: "external",
                                scrollInertia: ap.scrollInertia,
                                scrollEasing: "mcsEaseInOut",
                                moveDragger: !1,
                                timeout: 60,
                                callbacks: !0,
                                onStart: !0,
                                onUpdate: !0,
                                onComplete: !0
                            }, aq = b.extend(!0, {}, at, an), av = C.call(this, e), ao = aq.scrollInertia > 0 && aq.scrollInertia < 17 ? 17 : aq.scrollInertia;
                            av[0] = B.call(this, av[0], "y"), av[1] = B.call(this, av[1], "x"), aq.moveDragger && (av[0] *= ar.scrollRatio.y, av[1] *= ar.scrollRatio.x), aq.dur = al() ? 0 : ao, setTimeout(function () {
                                null !== av[0] && "undefined" != typeof av[0] && "x" !== ap.axis && ar.overflowed[0] && (aq.dir = "y", aq.overwrite = "all", f(au, av[0].toString(), aq)), null !== av[1] && "undefined" != typeof av[1] && "y" !== ap.axis && ar.overflowed[1] && (aq.dir = "x", aq.overwrite = "none", f(au, av[1].toString(), aq))
                            }, aq.timeout)
                        }
                    })
                }
            }, stop: function () {
                var e = ak.call(this);
                return b(e).each(function () {
                    var am = b(this);
                    am.data(af) && r(am)
                })
            }, disable: function (e) {
                var am = ak.call(this);
                return b(am).each(function () {
                    var an = b(this);
                    if (an.data(af)) {
                        an.data(af);
                        o.call(this, "remove"), I.call(this), e && ab.call(this), n.call(this, !0), an.addClass(aj[3])
                    }
                })
            }, destroy: function () {
                var e = ak.call(this);
                return b(e).each(function () {
                    var am = b(this);
                    if (am.data(af)) {
                        var aq = am.data(af), ao = aq.opt, ar = b("#mCSB_" + aq.idx), ap = b("#mCSB_" + aq.idx + "_container"), an = b(".mCSB_" + aq.idx + "_scrollbar");
                        ao.live && K(ao.liveSelector || b(e).selector), o.call(this, "remove"), I.call(this), ab.call(this), am.removeData(af), Z(this, "mcs"), an.remove(), ap.find("img." + aj[2]).removeClass(aj[2]), ar.replaceWith(ap.contents()), am.removeClass(M + " _" + af + "_" + aq.idx + " " + aj[6] + " " + aj[7] + " " + aj[5] + " " + aj[3]).addClass(aj[4])
                    }
                })
            }
        }, ak = function () {
            return "object" != typeof b(this) || b(this).length < 1 ? L : this
        }, F = function (ap) {
            var an = ["rounded", "rounded-dark", "rounded-dots", "rounded-dots-dark"], e = ["rounded-dots", "rounded-dots-dark", "3d", "3d-dark", "3d-thick", "3d-thick-dark", "inset", "inset-dark", "inset-2", "inset-2-dark", "inset-3", "inset-3-dark"], am = ["minimal", "minimal-dark"], aq = ["minimal", "minimal-dark"], ao = ["minimal", "minimal-dark"];
            ap.autoDraggerLength = b.inArray(ap.theme, an) > -1 ? !1 : ap.autoDraggerLength, ap.autoExpandScrollbar = b.inArray(ap.theme, e) > -1 ? !1 : ap.autoExpandScrollbar, ap.scrollButtons.enable = b.inArray(ap.theme, am) > -1 ? !1 : ap.scrollButtons.enable, ap.autoHideScrollbar = b.inArray(ap.theme, aq) > -1 ? !0 : ap.autoHideScrollbar, ap.scrollbarPosition = b.inArray(ap.theme, ao) > -1 ? "outside" : ap.scrollbarPosition
        }, K = function (e) {
            J[e] && (clearTimeout(J[e]), Z(J, e))
        }, N = function (e) {
            return "yx" === e || "xy" === e || "auto" === e ? "yx" : "x" === e || "horizontal" === e ? "x" : "y"
        }, E = function (e) {
            return "stepped" === e || "pixels" === e || "step" === e || "click" === e ? "stepped" : "stepless"
        }, T = function () {
            var am = b(this), ar = am.data(af), ay = ar.opt, av = ay.autoExpandScrollbar ? " " + aj[1] + "_expand" : "", an = ["<div id='mCSB_" + ar.idx + "_scrollbar_vertical' class='mCSB_scrollTools mCSB_" + ar.idx + "_scrollbar mCS-" + ay.theme + " mCSB_scrollTools_vertical" + av + "'><div class='" + aj[12] + "'><div id='mCSB_" + ar.idx + "_dragger_vertical' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>", "<div id='mCSB_" + ar.idx + "_scrollbar_horizontal' class='mCSB_scrollTools mCSB_" + ar.idx + "_scrollbar mCS-" + ay.theme + " mCSB_scrollTools_horizontal" + av + "'><div class='" + aj[12] + "'><div id='mCSB_" + ar.idx + "_dragger_horizontal' class='mCSB_dragger' style='position:absolute;'><div class='mCSB_dragger_bar' /></div><div class='mCSB_draggerRail' /></div></div>"], e = "yx" === ay.axis ? "mCSB_vertical_horizontal" : "x" === ay.axis ? "mCSB_horizontal" : "mCSB_vertical", aq = "yx" === ay.axis ? an[0] + an[1] : "x" === ay.axis ? an[1] : an[0], ao = "yx" === ay.axis ? "<div id='mCSB_" + ar.idx + "_container_wrapper' class='mCSB_container_wrapper' />" : "", au = ay.autoHideScrollbar ? " " + aj[6] : "", ax = "x" !== ay.axis && "rtl" === ar.langDir ? " " + aj[7] : "";
            ay.setWidth && am.css("width", ay.setWidth), ay.setHeight && am.css("height", ay.setHeight), ay.setLeft = "y" !== ay.axis && "rtl" === ar.langDir ? "989999px" : ay.setLeft, am.addClass(M + " _" + af + "_" + ar.idx + au + ax).wrapInner("<div id='mCSB_" + ar.idx + "' class='mCustomScrollBox mCS-" + ay.theme + " " + e + "'><div id='mCSB_" + ar.idx + "_container' class='mCSB_container' style='position:relative; top:" + ay.setTop + "; left:" + ay.setLeft + ";' dir='" + ar.langDir + "' /></div>");
            var ap = b("#mCSB_" + ar.idx), at = b("#mCSB_" + ar.idx + "_container");
            "y" === ay.axis || ay.advanced.autoExpandHorizontalScroll || at.css("width", V(at)), "outside" === ay.scrollbarPosition ? ("static" === am.css("position") && am.css("position", "relative"), am.css("overflow", "visible"), ap.addClass("mCSB_outside").after(aq)) : (ap.addClass("mCSB_inside").append(aq), at.wrap(ao)), U.call(this);
            var aw = [b("#mCSB_" + ar.idx + "_dragger_vertical"), b("#mCSB_" + ar.idx + "_dragger_horizontal")];
            aw[0].css("min-height", aw[0].height()), aw[1].css("min-width", aw[1].width())
        }, V = function (an) {
            var am = [an[0].scrollWidth, Math.max.apply(Math, an.children().map(function () {
                return b(this).outerWidth(!0)
            }).get())], e = an.parent().width();
            return am[0] > e ? am[0] : am[1] > e ? am[1] : "100%"
        }, ae = function () {
            var ap = b(this), an = ap.data(af), am = an.opt, e = b("#mCSB_" + an.idx + "_container");
            if (am.advanced.autoExpandHorizontalScroll && "y" !== am.axis) {
                e.css({width: "auto", "min-width": 0, "overflow-x": "scroll"});
                var ao = Math.ceil(e[0].scrollWidth);
                3 === am.advanced.autoExpandHorizontalScroll || 2 !== am.advanced.autoExpandHorizontalScroll && ao > e.parent().width() ? e.css({
                    width: ao,
                    "min-width": "100%",
                    "overflow-x": "inherit"
                }) : e.css({
                    "overflow-x": "inherit",
                    position: "absolute"
                }).wrap("<div class='mCSB_h_wrapper' style='position:relative; left:0; width:999999px;' />").css({
                    width: Math.ceil(e[0].getBoundingClientRect().right + 0.4) - Math.floor(e[0].getBoundingClientRect().left),
                    "min-width": "100%",
                    position: "relative"
                }).unwrap()
            }
        }, U = function () {
            var aq = b(this), an = aq.data(af), am = an.opt, ar = b(".mCSB_" + an.idx + "_scrollbar:first"), ao = Y(am.scrollButtons.tabindex) ? "tabindex='" + am.scrollButtons.tabindex + "'" : "", e = ["<a href='#' class='" + aj[13] + "' " + ao + " />", "<a href='#' class='" + aj[14] + "' " + ao + " />", "<a href='#' class='" + aj[15] + "' " + ao + " />", "<a href='#' class='" + aj[16] + "' " + ao + " />"], ap = ["x" === am.axis ? e[2] : e[0], "x" === am.axis ? e[3] : e[1], e[2], e[3]];
            am.scrollButtons.enable && ar.prepend(ap[0]).append(ap[1]).next(".mCSB_scrollTools").prepend(ap[2]).append(ap[3])
        }, u = function () {
            var au = b(this), ar = au.data(af), aq = b("#mCSB_" + ar.idx), ao = b("#mCSB_" + ar.idx + "_container"), at = [b("#mCSB_" + ar.idx + "_dragger_vertical"), b("#mCSB_" + ar.idx + "_dragger_horizontal")], ap = [aq.height() / ao.outerHeight(!1), aq.width() / ao.outerWidth(!1)], am = [parseInt(at[0].css("min-height")), Math.round(ap[0] * at[0].parent().height()), parseInt(at[1].css("min-width")), Math.round(ap[1] * at[1].parent().width())], an = Q && am[1] < am[0] ? am[0] : am[1], e = Q && am[3] < am[2] ? am[2] : am[3];
            at[0].css({
                height: an,
                "max-height": at[0].parent().height() - 10
            }).find(".mCSB_dragger_bar").css({"line-height": am[0] + "px"}), at[1].css({
                width: e,
                "max-width": at[1].parent().width() - 10
            })
        }, ah = function () {
            var aq = b(this), an = aq.data(af), am = b("#mCSB_" + an.idx), ar = b("#mCSB_" + an.idx + "_container"), ao = [b("#mCSB_" + an.idx + "_dragger_vertical"), b("#mCSB_" + an.idx + "_dragger_horizontal")], e = [ar.outerHeight(!1) - am.height(), ar.outerWidth(!1) - am.width()], ap = [e[0] / (ao[0].parent().height() - ao[0].height()), e[1] / (ao[1].parent().width() - ao[1].width())];
            an.scrollRatio = {y: ap[0], x: ap[1]}
        }, ac = function (ao, ap, an) {
            var e = an ? aj[0] + "_expanded" : "", am = ao.closest(".mCSB_scrollTools");
            "active" === ap ? (ao.toggleClass(aj[0] + " " + e), am.toggleClass(aj[1]), ao[0]._draggable = ao[0]._draggable ? 0 : 1) : ao[0]._draggable || ("hide" === ap ? (ao.removeClass(aj[0]), am.removeClass(aj[1])) : (ao.addClass(aj[0]), am.addClass(aj[1])))
        }, W = function () {
            var aq = b(this), an = aq.data(af), ar = b("#mCSB_" + an.idx), at = b("#mCSB_" + an.idx + "_container"), ao = null == an.overflowed ? at.height() : at.outerHeight(!1), am = null == an.overflowed ? at.width() : at.outerWidth(!1), ap = at[0].scrollHeight, e = at[0].scrollWidth;
            return ap > ao && (ao = ap), e > am && (am = e), [ao > ar.height(), am > ar.width()]
        }, ab = function () {
            var aq = b(this), an = aq.data(af), am = an.opt, ar = b("#mCSB_" + an.idx), ao = b("#mCSB_" + an.idx + "_container"), e = [b("#mCSB_" + an.idx + "_dragger_vertical"), b("#mCSB_" + an.idx + "_dragger_horizontal")];
            if (r(aq), ("x" !== am.axis && !an.overflowed[0] || "y" === am.axis && an.overflowed[0]) && (e[0].add(ao).css("top", 0), f(aq, "_resetY")), "y" !== am.axis && !an.overflowed[1] || "x" === am.axis && an.overflowed[1]) {
                var ap = dx = 0;
                "rtl" === an.langDir && (ap = ar.width() - ao.outerWidth(!1), dx = Math.abs(ap / an.scrollRatio.x)), ao.css("left", ap), e[1].css("left", dx), f(aq, "_resetX")
            }
        }, v = function () {
            function ap() {
                ao = setTimeout(function () {
                    b.event.special.mousewheel ? (clearTimeout(ao), y.call(an[0])) : ap()
                }, 100)
            }

            var an = b(this), am = an.data(af), e = am.opt;
            if (!am.bindEvents) {
                if (h.call(this), e.contentTouchScroll && ad.call(this), c.call(this), e.mouseWheel.enable) {
                    var ao;
                    ap()
                }
                q.call(this), w.call(this), e.advanced.autoScrollOnFocus && g.call(this), e.scrollButtons.enable && d.call(this), e.keyboard.enable && O.call(this), am.bindEvents = !0
            }
        }, I = function () {
            var aq = b(this), an = aq.data(af), am = an.opt, ar = af + "_" + an.idx, ao = ".mCSB_" + an.idx + "_scrollbar", e = b("#mCSB_" + an.idx + ",#mCSB_" + an.idx + "_container,#mCSB_" + an.idx + "_container_wrapper," + ao + " ." + aj[12] + ",#mCSB_" + an.idx + "_dragger_vertical,#mCSB_" + an.idx + "_dragger_horizontal," + ao + ">a"), ap = b("#mCSB_" + an.idx + "_container");
            am.advanced.releaseDraggableSelectors && e.add(b(am.advanced.releaseDraggableSelectors)), am.advanced.extraDraggableSelectors && e.add(b(am.advanced.extraDraggableSelectors)), an.bindEvents && (b(document).add(b(!aa() || top.document)).unbind("." + ar), e.each(function () {
                b(this).unbind("." + ar)
            }), clearTimeout(aq[0]._focusTimeout), Z(aq[0], "_focusTimeout"), clearTimeout(an.sequential.step), Z(an.sequential, "step"), clearTimeout(ap[0].onCompleteTimeout), Z(ap[0], "onCompleteTimeout"), an.bindEvents = !1)
        }, n = function (aq) {
            var an = b(this), ar = an.data(af), at = ar.opt, ao = b("#mCSB_" + ar.idx + "_container_wrapper"), am = ao.length ? ao : b("#mCSB_" + ar.idx + "_container"), ap = [b("#mCSB_" + ar.idx + "_scrollbar_vertical"), b("#mCSB_" + ar.idx + "_scrollbar_horizontal")], e = [ap[0].find(".mCSB_dragger"), ap[1].find(".mCSB_dragger")];
            "x" !== at.axis && (ar.overflowed[0] && !aq ? (ap[0].add(e[0]).add(ap[0].children("a")).css("display", "block"), am.removeClass(aj[8] + " " + aj[10])) : (at.alwaysShowScrollbar ? (2 !== at.alwaysShowScrollbar && e[0].css("display", "none"), am.removeClass(aj[10])) : (ap[0].css("display", "none"), am.addClass(aj[10])), am.addClass(aj[8]))), "y" !== at.axis && (ar.overflowed[1] && !aq ? (ap[1].add(e[1]).add(ap[1].children("a")).css("display", "block"), am.removeClass(aj[9] + " " + aj[11])) : (at.alwaysShowScrollbar ? (2 !== at.alwaysShowScrollbar && e[1].css("display", "none"), am.removeClass(aj[11])) : (ap[1].css("display", "none"), am.addClass(aj[11])), am.addClass(aj[9]))), ar.overflowed[0] || ar.overflowed[1] ? an.removeClass(aj[5]) : an.addClass(aj[5])
        }, p = function (ap) {
            var an = ap.type, e = ap.target.ownerDocument !== document && null !== frameElement ? [b(frameElement).offset().top, b(frameElement).offset().left] : null, am = aa() && ap.target.ownerDocument !== top.document && null !== frameElement ? [b(ap.view.frameElement).offset().top, b(ap.view.frameElement).offset().left] : [0, 0];
            switch (an) {
                case"pointerdown":
                case"MSPointerDown":
                case"pointermove":
                case"MSPointerMove":
                case"pointerup":
                case"MSPointerUp":
                    return e ? [ap.originalEvent.pageY - e[0] + am[0], ap.originalEvent.pageX - e[1] + am[1], !1] : [ap.originalEvent.pageY, ap.originalEvent.pageX, !1];
                case"touchstart":
                case"touchmove":
                case"touchend":
                    var aq = ap.originalEvent.touches[0] || ap.originalEvent.changedTouches[0], ao = ap.originalEvent.touches.length || ap.originalEvent.changedTouches.length;
                    return ap.target.ownerDocument !== document ? [aq.screenY, aq.screenX, ao > 1] : [aq.pageY, aq.pageX, ao > 1];
                default:
                    return e ? [ap.pageY - e[0] + am[0], ap.pageX - e[1] + am[1], !1] : [ap.pageY, ap.pageX, !1]
            }
        }, h = function () {
            function e(aA, aC, aE, az) {
                if (av[0].idleTimer = ao.scrollInertia < 233 ? 250 : 0, aq.attr("id") === ap[1]) {
                    var aD = "x", aB = (aq[0].offsetLeft - aC + az) * ax.scrollRatio.x
                } else {
                    var aD = "y", aB = (aq[0].offsetTop - aA + aE) * ax.scrollRatio.y
                }
                f(au, aB.toString(), {dir: aD, drag: !0})
            }

            var aq, an, aw, au = b(this), ax = au.data(af), ao = ax.opt, am = af + "_" + ax.idx, ap = ["mCSB_" + ax.idx + "_dragger_vertical", "mCSB_" + ax.idx + "_dragger_horizontal"], av = b("#mCSB_" + ax.idx + "_container"), ay = b("#" + ap[0] + ",#" + ap[1]), ar = ao.advanced.releaseDraggableSelectors ? ay.add(b(ao.advanced.releaseDraggableSelectors)) : ay, at = ao.advanced.extraDraggableSelectors ? b(!aa() || top.document).add(b(ao.advanced.extraDraggableSelectors)) : b(!aa() || top.document);
            ay.bind("contextmenu." + am, function (az) {
                az.preventDefault()
            }).bind("mousedown." + am + " touchstart." + am + " pointerdown." + am + " MSPointerDown." + am, function (aD) {
                if (aD.stopImmediatePropagation(), aD.preventDefault(), ag(aD)) {
                    ai = !0, Q && (document.onselectstart = function () {
                        return !1
                    }), m.call(av, !1), r(au), aq = b(this);
                    var az = aq.offset(), aA = p(aD)[0] - az.top, aE = p(aD)[1] - az.left, aB = aq.height() + az.top, aC = aq.width() + az.left;
                    aB > aA && aA > 0 && aC > aE && aE > 0 && (an = aA, aw = aE), ac(aq, "active", ao.autoExpandScrollbar)
                }
            }).bind("touchmove." + am, function (az) {
                az.stopImmediatePropagation(), az.preventDefault();
                var aB = aq.offset(), aA = p(az)[0] - aB.top, aC = p(az)[1] - aB.left;
                e(an, aw, aA, aC)
            }), b(document).add(at).bind("mousemove." + am + " pointermove." + am + " MSPointerMove." + am, function (az) {
                if (aq) {
                    var aB = aq.offset(), aA = p(az)[0] - aB.top, aC = p(az)[1] - aB.left;
                    if (an === aA && aw === aC) {
                        return
                    }
                    e(an, aw, aA, aC)
                }
            }).add(ar).bind("mouseup." + am + " touchend." + am + " pointerup." + am + " MSPointerUp." + am, function () {
                aq && (ac(aq, "active", ao.autoExpandScrollbar), aq = null), ai = !1, Q && (document.onselectstart = null), m.call(av, !0)
            })
        }, ad = function () {
            function ay(aV) {
                if (!A(aV) || ai || p(aV)[2]) {
                    return void (R = 0)
                }
                R = 1, aT = 0, aD = 0, aU = 1, aC.removeClass("mCS_touch_action");
                var aW = aw.offset();
                aP = p(aV)[0] - aW.top, e = p(aV)[1] - aW.left, aF = [p(aV)[0], p(aV)[1]]
            }

            function ax(aV) {
                if (A(aV) && !ai && !p(aV)[2] && (aM.documentTouchScroll || aV.preventDefault(), aV.stopImmediatePropagation(), (!aD || aT) && aU)) {
                    am = l();
                    var a2 = aH.offset(), a0 = p(aV)[0] - a2.top, a3 = p(aV)[1] - a2.left, aZ = "mcsLinearOut";
                    if (aO.push(a0), aR.push(a3), aF[2] = Math.abs(p(aV)[0] - aF[0]), aF[3] = Math.abs(p(aV)[1] - aF[1]), aA.overflowed[0]) {
                        var aX = aN[0].parent().height() - aN[0].height(), a1 = aP - a0 > 0 && a0 - aP > -(aX * aA.scrollRatio.y) && (2 * aF[3] < aF[2] || "yx" === aM.axis)
                    }
                    if (aA.overflowed[1]) {
                        var aY = aN[1].parent().width() - aN[1].width(), aW = e - a3 > 0 && a3 - e > -(aY * aA.scrollRatio.x) && (2 * aF[2] < aF[3] || "yx" === aM.axis)
                    }
                    a1 || aW ? (aL || aV.preventDefault(), aT = 1) : (aD = 1, aC.addClass("mCS_touch_action")), aL && aV.preventDefault(), ap = "yx" === aM.axis ? [aP - a0, e - a3] : "x" === aM.axis ? [null, e - a3] : [aP - a0, null], aw[0].idleTimer = 250, aA.overflowed[0] && aE(ap[0], aJ, aZ, "y", "all", !0), aA.overflowed[1] && aE(ap[1], aJ, aZ, "x", aG, !0)
                }
            }

            function ao(aV) {
                if (!A(aV) || ai || p(aV)[2]) {
                    return void (R = 0)
                }
                R = 1, aV.stopImmediatePropagation(), r(aC), az = l();
                var aW = aH.offset();
                an = p(aV)[0] - aW.top, av = p(aV)[1] - aW.left, aO = [], aR = []
            }

            function aB(aX) {
                if (A(aX) && !ai && !p(aX)[2]) {
                    aU = 0, aX.stopImmediatePropagation(), aT = 0, aD = 0, aQ = l();
                    var a3 = aH.offset(), a1 = p(aX)[0] - a3.top, aV = p(aX)[1] - a3.left;
                    if (!(aQ - am > 30)) {
                        aS = 1000 / (aQ - az);
                        var a0 = "mcsEaseOut", aZ = 2.5 > aS, a2 = aZ ? [aO[aO.length - 2], aR[aR.length - 2]] : [0, 0];
                        au = aZ ? [a1 - a2[0], aV - a2[1]] : [a1 - an, aV - av];
                        var a4 = [Math.abs(au[0]), Math.abs(au[1])];
                        aS = aZ ? [Math.abs(au[0] / 4), Math.abs(au[1] / 4)] : [aS, aS];
                        var aY = [Math.abs(aw[0].offsetTop) - au[0] * at(a4[0] / aS[0], aS[0]), Math.abs(aw[0].offsetLeft) - au[1] * at(a4[1] / aS[1], aS[1])];
                        ap = "yx" === aM.axis ? [aY[0], aY[1]] : "x" === aM.axis ? [null, aY[1]] : [aY[0], null], aK = [4 * a4[0] + aM.scrollInertia, 4 * a4[1] + aM.scrollInertia];
                        var aW = parseInt(aM.contentTouchScroll) || 0;
                        ap[0] = a4[0] > aW ? ap[0] : 0, ap[1] = a4[1] > aW ? ap[1] : 0, aA.overflowed[0] && aE(ap[0], aK[0], a0, "y", aG, !1), aA.overflowed[1] && aE(ap[1], aK[1], a0, "x", aG, !1)
                    }
                }
            }

            function at(aX, aV) {
                var aW = [1.5 * aV, 2 * aV, aV / 1.5, aV / 2];
                return aX > 90 ? aV > 4 ? aW[0] : aW[3] : aX > 60 ? aV > 3 ? aW[3] : aW[2] : aX > 30 ? aV > 8 ? aW[1] : aV > 6 ? aW[0] : aV > 4 ? aV : aW[2] : aV > 8 ? aV : aW[3]
            }

            function aE(aY, aZ, aX, aV, aW, a0) {
                aY && f(aC, aY.toString(), {
                    dur: aZ,
                    scrollEasing: aX,
                    dir: aV,
                    overwrite: aW,
                    drag: a0
                })
            }

            var aU, aP, e, an, av, az, am, aQ, au, aS, ap, aK, aT, aD, aC = b(this), aA = aC.data(af), aM = aA.opt, ar = af + "_" + aA.idx, aH = b("#mCSB_" + aA.idx), aw = b("#mCSB_" + aA.idx + "_container"), aN = [b("#mCSB_" + aA.idx + "_dragger_vertical"), b("#mCSB_" + aA.idx + "_dragger_horizontal")], aO = [], aR = [], aJ = 0, aG = "yx" === aM.axis ? "none" : "all", aF = [], aI = aw.find("iframe"), aq = ["touchstart." + ar + " pointerdown." + ar + " MSPointerDown." + ar, "touchmove." + ar + " pointermove." + ar + " MSPointerMove." + ar, "touchend." + ar + " pointerup." + ar + " MSPointerUp." + ar], aL = void 0 !== document.body.style.touchAction && "" !== document.body.style.touchAction;
            aw.bind(aq[0], function (aV) {
                ay(aV)
            }).bind(aq[1], function (aV) {
                ax(aV)
            }), aH.bind(aq[0], function (aV) {
                ao(aV)
            }).bind(aq[2], function (aV) {
                aB(aV)
            }), aI.length && aI.each(function () {
                b(this).bind("load", function () {
                    aa(this) && b(this.contentDocument || this.contentWindow.document).bind(aq[0], function (aV) {
                        ay(aV), ao(aV)
                    }).bind(aq[1], function (aV) {
                        ax(aV)
                    }).bind(aq[2], function (aV) {
                        aB(aV)
                    })
                })
            })
        }, c = function () {
            function aq() {
                return window.getSelection ? window.getSelection().toString() : document.selection && "Control" != document.selection.type ? document.selection.createRange().text : 0
            }

            function ap(ax, ay, aw) {
                av.type = aw && an ? "stepped" : "stepless", av.scrollAmount = 10, H(ar, ax, ay, "mcsLinearOut", aw ? 60 : null)
            }

            var an, ar = b(this), ao = ar.data(af), at = ao.opt, av = ao.sequential, au = af + "_" + ao.idx, e = b("#mCSB_" + ao.idx + "_container"), am = e.parent();
            e.bind("mousedown." + au, function () {
                R || an || (an = 1, ai = !0)
            }).add(document).bind("mousemove." + au, function (ax) {
                if (!R && an && aq()) {
                    var az = e.offset(), ay = p(ax)[0] - az.top + e[0].offsetTop, aw = p(ax)[1] - az.left + e[0].offsetLeft;
                    ay > 0 && ay < am.height() && aw > 0 && aw < am.width() ? av.step && ap("off", null, "stepped") : ("x" !== at.axis && ao.overflowed[0] && (0 > ay ? ap("on", 38) : ay > am.height() && ap("on", 40)), "y" !== at.axis && ao.overflowed[1] && (0 > aw ? ap("on", 37) : aw > am.width() && ap("on", 39)))
                }
            }).bind("mouseup." + au + " dragend." + au, function () {
                R || (an && (an = 0, ap("off", null)), ai = !1)
            })
        }, y = function () {
            function ap(au, aB) {
                if (r(am), !X(am, au.target)) {
                    var aA = "auto" !== aq.mouseWheel.deltaFactor ? parseInt(aq.mouseWheel.deltaFactor) : Q && au.deltaFactor < 100 ? 100 : au.deltaFactor || 100, aC = aq.scrollInertia;
                    if ("x" === aq.axis || "x" === aq.mouseWheel.axis) {
                        var av = "x", aD = [Math.round(aA * ar.scrollRatio.x), parseInt(aq.mouseWheel.scrollAmount)], ax = "auto" !== aq.mouseWheel.scrollAmount ? aD[1] : aD[0] >= e.width() ? 0.9 * e.width() : aD[0], ay = Math.abs(b("#mCSB_" + ar.idx + "_container")[0].offsetLeft), az = at[1][0].offsetLeft, aE = at[1].parent().width() - at[1].width(), aw = "y" === aq.mouseWheel.axis ? au.deltaY || aB : au.deltaX
                    } else {
                        var av = "y", aD = [Math.round(aA * ar.scrollRatio.y), parseInt(aq.mouseWheel.scrollAmount)], ax = "auto" !== aq.mouseWheel.scrollAmount ? aD[1] : aD[0] >= e.height() ? 0.9 * e.height() : aD[0], ay = Math.abs(b("#mCSB_" + ar.idx + "_container")[0].offsetTop), az = at[0][0].offsetTop, aE = at[0].parent().height() - at[0].height(), aw = au.deltaY || aB
                    }
                    "y" === av && !ar.overflowed[0] || "x" === av && !ar.overflowed[1] || ((aq.mouseWheel.invert || au.webkitDirectionInvertedFromDevice) && (aw = -aw), aq.mouseWheel.normalizeDelta && (aw = 0 > aw ? -1 : 1), (aw > 0 && 0 !== az || 0 > aw && az !== aE || aq.mouseWheel.preventDefault) && (au.stopImmediatePropagation(), au.preventDefault()), au.deltaFactor < 5 && !aq.mouseWheel.normalizeDelta && (ax = au.deltaFactor, aC = 17), f(am, (ay - aw * ax).toString(), {
                        dir: av,
                        dur: aC
                    }))
                }
            }

            if (b(this).data(af)) {
                var am = b(this), ar = am.data(af), aq = ar.opt, ao = af + "_" + ar.idx, e = b("#mCSB_" + ar.idx), at = [b("#mCSB_" + ar.idx + "_dragger_vertical"), b("#mCSB_" + ar.idx + "_dragger_horizontal")], an = b("#mCSB_" + ar.idx + "_container").find("iframe");
                an.length && an.each(function () {
                    b(this).bind("load", function () {
                        aa(this) && b(this.contentDocument || this.contentWindow.document).bind("mousewheel." + ao, function (av, au) {
                            ap(av, au)
                        })
                    })
                }), e.bind("mousewheel." + ao, function (av, au) {
                    ap(av, au)
                })
            }
        }, s = new Object, aa = function (ap) {
            var an = !1, e = !1, am = null;
            if (void 0 === ap ? e = "#empty" : void 0 !== b(ap).attr("id") && (e = b(ap).attr("id")), e !== !1 && void 0 !== s[e]) {
                return s[e]
            }
            if (ap) {
                try {
                    var aq = ap.contentDocument || ap.contentWindow.document;
                    am = aq.body.innerHTML
                } catch (ao) {
                }
                an = null !== am
            } else {
                try {
                    var aq = top.document;
                    am = aq.body.innerHTML
                } catch (ao) {
                }
                an = null !== am
            }
            return e !== !1 && (s[e] = an), an
        }, m = function (an) {
            var e = this.find("iframe");
            if (e.length) {
                var am = an ? "auto" : "none";
                e.css("pointer-events", am)
            }
        }, X = function (ap, an) {
            var am = an.nodeName.toLowerCase(), e = ap.data(af).opt.mouseWheel.disableOver, ao = ["select", "textarea"];
            return b.inArray(am, e) > -1 && !(b.inArray(am, ao) > -1 && !b(an).is(":focus"))
        }, q = function () {
            var aq, an = b(this), am = an.data(af), ar = af + "_" + am.idx, ao = b("#mCSB_" + am.idx + "_container"), e = ao.parent(), ap = b(".mCSB_" + am.idx + "_scrollbar ." + aj[12]);
            ap.bind("mousedown." + ar + " touchstart." + ar + " pointerdown." + ar + " MSPointerDown." + ar, function (at) {
                ai = !0, b(at.target).hasClass("mCSB_dragger") || (aq = 1)
            }).bind("touchend." + ar + " pointerup." + ar + " MSPointerUp." + ar, function () {
                ai = !1
            }).bind("click." + ar, function (au) {
                if (aq && (aq = 0, b(au.target).hasClass(aj[12]) || b(au.target).hasClass("mCSB_draggerRail"))) {
                    r(an);
                    var ay = b(this), ax = ay.find(".mCSB_dragger");
                    if (ay.parent(".mCSB_scrollTools_horizontal").length > 0) {
                        if (!am.overflowed[1]) {
                            return
                        }
                        var av = "x", at = au.pageX > ax.offset().left ? -1 : 1, aw = Math.abs(ao[0].offsetLeft) - at * (0.9 * e.width())
                    } else {
                        if (!am.overflowed[0]) {
                            return
                        }
                        var av = "y", at = au.pageY > ax.offset().top ? -1 : 1, aw = Math.abs(ao[0].offsetTop) - at * (0.9 * e.height())
                    }
                    f(an, aw.toString(), {
                        dir: av,
                        scrollEasing: "mcsEaseInOut"
                    })
                }
            })
        }, g = function () {
            var ap = b(this), an = ap.data(af), am = an.opt, aq = af + "_" + an.idx, ao = b("#mCSB_" + an.idx + "_container"), e = ao.parent();
            ao.bind("focusin." + aq, function () {
                var ar = b(document.activeElement), au = ao.find(".mCustomScrollBox").length, at = 0;
                ar.is(am.advanced.autoScrollOnFocus) && (r(ap), clearTimeout(ap[0]._focusTimeout), ap[0]._focusTimer = au ? (at + 17) * au : 0, ap[0]._focusTimeout = setTimeout(function () {
                    var aw = [a(ar)[0], a(ar)[1]], ay = [ao[0].offsetTop, ao[0].offsetLeft], ax = [ay[0] + aw[0] >= 0 && ay[0] + aw[0] < e.height() - ar.outerHeight(!1), ay[1] + aw[1] >= 0 && ay[0] + aw[1] < e.width() - ar.outerWidth(!1)], av = "yx" !== am.axis || ax[0] || ax[1] ? "all" : "none";
                    "x" === am.axis || ax[0] || f(ap, aw[0].toString(), {
                        dir: "y",
                        scrollEasing: "mcsEaseInOut",
                        overwrite: av,
                        dur: at
                    }), "y" === am.axis || ax[1] || f(ap, aw[1].toString(), {
                        dir: "x",
                        scrollEasing: "mcsEaseInOut",
                        overwrite: av,
                        dur: at
                    })
                }, ap[0]._focusTimer))
            })
        }, w = function () {
            var ao = b(this), an = ao.data(af), am = af + "_" + an.idx, e = b("#mCSB_" + an.idx + "_container").parent();
            e.bind("scroll." + am, function () {
                0 === e.scrollTop() && 0 === e.scrollLeft() || b(".mCSB_" + an.idx + "_scrollbar").css("visibility", "hidden")
            })
        }, d = function () {
            var aq = b(this), an = aq.data(af), am = an.opt, ar = an.sequential, ao = af + "_" + an.idx, e = ".mCSB_" + an.idx + "_scrollbar", ap = b(e + ">a");
            ap.bind("contextmenu." + ao, function (at) {
                at.preventDefault()
            }).bind("mousedown." + ao + " touchstart." + ao + " pointerdown." + ao + " MSPointerDown." + ao + " mouseup." + ao + " touchend." + ao + " pointerup." + ao + " MSPointerUp." + ao + " mouseout." + ao + " pointerout." + ao + " MSPointerOut." + ao + " click." + ao, function (av) {
                function au(aw, ax) {
                    ar.scrollAmount = am.scrollButtons.scrollAmount, H(aq, aw, ax)
                }

                if (av.preventDefault(), ag(av)) {
                    var at = b(this).attr("class");
                    switch (ar.type = am.scrollButtons.scrollType, av.type) {
                        case"mousedown":
                        case"touchstart":
                        case"pointerdown":
                        case"MSPointerDown":
                            if ("stepped" === ar.type) {
                                return
                            }
                            ai = !0, an.tweenRunning = !1, au("on", at);
                            break;
                        case"mouseup":
                        case"touchend":
                        case"pointerup":
                        case"MSPointerUp":
                        case"mouseout":
                        case"pointerout":
                        case"MSPointerOut":
                            if ("stepped" === ar.type) {
                                return
                            }
                            ai = !1, ar.dir && au("off", at);
                            break;
                        case"click":
                            if ("stepped" !== ar.type || an.tweenRunning) {
                                return
                            }
                            au("on", at)
                    }
                }
            })
        }, O = function () {
            function ao(aC) {
                function aE(aF, aG) {
                    au.type = an.keyboard.scrollType, au.scrollAmount = an.keyboard.scrollAmount, "stepped" === au.type && aq.tweenRunning || H(ar, aF, aG)
                }

                switch (aC.type) {
                    case"blur":
                        aq.tweenRunning && au.dir && aE("off", null);
                        break;
                    case"keydown":
                    case"keyup":
                        var aB = aC.keyCode ? aC.keyCode : aC.which, ay = "on";
                        if ("x" !== an.axis && (38 === aB || 40 === aB) || "y" !== an.axis && (37 === aB || 39 === aB)) {
                            if ((38 === aB || 40 === aB) && !aq.overflowed[0] || (37 === aB || 39 === aB) && !aq.overflowed[1]) {
                                return
                            }
                            "keyup" === aC.type && (ay = "off"), b(document.activeElement).is(at) || (aC.preventDefault(), aC.stopImmediatePropagation(), aE(ay, aB))
                        } else {
                            if (33 === aB || 34 === aB) {
                                if ((aq.overflowed[0] || aq.overflowed[1]) && (aC.preventDefault(), aC.stopImmediatePropagation()), "keyup" === aC.type) {
                                    r(ar);
                                    var aA = 34 === aB ? -1 : 1;
                                    if ("x" === an.axis || "yx" === an.axis && aq.overflowed[1] && !aq.overflowed[0]) {
                                        var az = "x", aD = Math.abs(av[0].offsetLeft) - aA * (0.9 * aw.width())
                                    } else {
                                        var az = "y", aD = Math.abs(av[0].offsetTop) - aA * (0.9 * aw.height())
                                    }
                                    f(ar, aD.toString(), {
                                        dir: az,
                                        scrollEasing: "mcsEaseInOut"
                                    })
                                }
                            } else {
                                if ((35 === aB || 36 === aB) && !b(document.activeElement).is(at) && ((aq.overflowed[0] || aq.overflowed[1]) && (aC.preventDefault(), aC.stopImmediatePropagation()), "keyup" === aC.type)) {
                                    if ("x" === an.axis || "yx" === an.axis && aq.overflowed[1] && !aq.overflowed[0]) {
                                        var az = "x", aD = 35 === aB ? Math.abs(aw.width() - av.outerWidth(!1)) : 0
                                    } else {
                                        var az = "y", aD = 35 === aB ? Math.abs(aw.height() - av.outerHeight(!1)) : 0
                                    }
                                    f(ar, aD.toString(), {
                                        dir: az,
                                        scrollEasing: "mcsEaseInOut"
                                    })
                                }
                            }
                        }
                }
            }

            var ar = b(this), aq = ar.data(af), an = aq.opt, au = aq.sequential, ap = af + "_" + aq.idx, am = b("#mCSB_" + aq.idx), av = b("#mCSB_" + aq.idx + "_container"), aw = av.parent(), at = "input,textarea,select,datalist,keygen,[contenteditable='true']", ax = av.find("iframe"), e = ["blur." + ap + " keydown." + ap + " keyup." + ap];
            ax.length && ax.each(function () {
                b(this).bind("load", function () {
                    aa(this) && b(this.contentDocument || this.contentWindow.document).bind(e[0], function (ay) {
                        ao(ay)
                    })
                })
            }), am.attr("tabindex", "0").bind(e[0], function (ay) {
                ao(ay)
            })
        }, H = function (az, aq, an, av, au) {
            function aw(aD) {
                e.snapAmount && (ao.scrollAmount = e.snapAmount instanceof Array ? "x" === ao.dir[0] ? e.snapAmount[1] : e.snapAmount[0] : e.snapAmount);
                var aG = "stepped" !== ao.type, aA = au ? au : aD ? aG ? ar / 1.5 : ap : 1000 / 60, aF = aD ? aG ? 7.5 : 40 : 2.5, aH = [Math.abs(at[0].offsetTop), Math.abs(at[0].offsetLeft)], aC = [am.scrollRatio.y > 10 ? 10 : am.scrollRatio.y, am.scrollRatio.x > 10 ? 10 : am.scrollRatio.x], aE = "x" === ao.dir[0] ? aH[1] + ao.dir[1] * (aC[1] * aF) : aH[0] + ao.dir[1] * (aC[0] * aF), aI = "x" === ao.dir[0] ? aH[1] + ao.dir[1] * parseInt(ao.scrollAmount) : aH[0] + ao.dir[1] * parseInt(ao.scrollAmount), aB = "auto" !== ao.scrollAmount ? aI : aE, aK = av ? av : aD ? aG ? "mcsLinearOut" : "mcsEaseInOut" : "mcsLinear", aJ = !!aD;
                return aD && 17 > aA && (aB = "x" === ao.dir[0] ? aH[1] : aH[0]), f(az, aB.toString(), {
                    dir: ao.dir[0],
                    scrollEasing: aK,
                    dur: aA,
                    onComplete: aJ
                }), aD ? void (ao.dir = !1) : (clearTimeout(ao.step), void (ao.step = setTimeout(function () {
                    aw()
                }, aA)))
            }

            function ay() {
                clearTimeout(ao.step), Z(ao, "step"), r(az)
            }

            var am = az.data(af), e = am.opt, ao = am.sequential, at = b("#mCSB_" + am.idx + "_container"), ax = "stepped" === ao.type, ar = e.scrollInertia < 26 ? 26 : e.scrollInertia, ap = e.scrollInertia < 1 ? 17 : e.scrollInertia;
            switch (aq) {
                case"on":
                    if (ao.dir = [an === aj[16] || an === aj[15] || 39 === an || 37 === an ? "x" : "y", an === aj[13] || an === aj[15] || 38 === an || 37 === an ? -1 : 1], r(az), Y(an) && "stepped" === ao.type) {
                        return
                    }
                    aw(ax);
                    break;
                case"off":
                    ay(), (ax || am.tweenRunning && ao.dir) && aw(!0)
            }
        }, C = function (e) {
            var an = b(this).data(af).opt, am = [];
            return "function" == typeof e && (e = e()), e instanceof Array ? am = e.length > 1 ? [e[0], e[1]] : "x" === an.axis ? [null, e[0]] : [e[0], null] : (am[0] = e.y ? e.y : e.x || "x" === an.axis ? null : e, am[1] = e.x ? e.x : e.y || "y" === an.axis ? null : e), "function" == typeof am[0] && (am[0] = am[0]()), "function" == typeof am[1] && (am[1] = am[1]()), am
        }, B = function (am, aq) {
            if (null != am && "undefined" != typeof am) {
                var an = b(this), aw = an.data(af), au = aw.opt, ax = b("#mCSB_" + aw.idx + "_container"), e = ax.parent(), ao = typeof am;
                aq || (aq = "x" === au.axis ? "x" : "y");
                var ap = "x" === aq ? ax.outerWidth(!1) - e.width() : ax.outerHeight(!1) - e.height(), at = "x" === aq ? ax[0].offsetLeft : ax[0].offsetTop, av = "x" === aq ? "left" : "top";
                switch (ao) {
                    case"function":
                        return am();
                    case"object":
                        var ay = am.jquery ? am : b(am);
                        if (!ay.length) {
                            return
                        }
                        return "x" === aq ? a(ay)[1] : a(ay)[0];
                    case"string":
                    case"number":
                        if (Y(am)) {
                            return Math.abs(am)
                        }
                        if (-1 !== am.indexOf("%")) {
                            return Math.abs(ap * parseInt(am) / 100)
                        }
                        if (-1 !== am.indexOf("-=")) {
                            return Math.abs(at - parseInt(am.split("-=")[1]))
                        }
                        if (-1 !== am.indexOf("+=")) {
                            var ar = at + parseInt(am.split("+=")[1]);
                            return ar >= 0 ? 0 : Math.abs(ar)
                        }
                        if (-1 !== am.indexOf("px") && Y(am.split("px")[0])) {
                            return Math.abs(am.split("px")[0])
                        }
                        if ("top" === am || "left" === am) {
                            return 0
                        }
                        if ("bottom" === am) {
                            return Math.abs(e.height() - ax.outerHeight(!1))
                        }
                        if ("right" === am) {
                            return Math.abs(e.width() - ax.outerWidth(!1))
                        }
                        if ("first" === am || "last" === am) {
                            var ay = ax.find(":" + am);
                            return "x" === aq ? a(ay)[1] : a(ay)[0]
                        }
                        return b(am).length ? "x" === aq ? a(b(am))[1] : a(b(am))[0] : (ax.css(av, am), void S.update.call(null, an[0]))
                }
            }
        }, o = function (e) {
            function ar() {
                return clearTimeout(an[0].autoUpdate), 0 === ap.parents("html").length ? void (ap = null) : void (an[0].autoUpdate = setTimeout(function () {
                    return am.advanced.updateOnSelectorChange && (au.poll.change.n = ao(), au.poll.change.n !== au.poll.change.o) ? (au.poll.change.o = au.poll.change.n, void at(3)) : am.advanced.updateOnContentResize && (au.poll.size.n = ap[0].scrollHeight + ap[0].scrollWidth + an[0].offsetHeight + ap[0].offsetHeight + ap[0].offsetWidth, au.poll.size.n !== au.poll.size.o) ? (au.poll.size.o = au.poll.size.n, void at(1)) : !am.advanced.updateOnImageLoad || "auto" === am.advanced.updateOnImageLoad && "y" === am.axis || (au.poll.img.n = an.find("img").length, au.poll.img.n === au.poll.img.o) ? void ((am.advanced.updateOnSelectorChange || am.advanced.updateOnContentResize || am.advanced.updateOnImageLoad) && ar()) : (au.poll.img.o = au.poll.img.n, void an.find("img").each(function () {
                        aq(this)
                    }))
                }, am.advanced.autoUpdateTimeout))
            }

            function aq(ax) {
                function av(az, aA) {
                    return function () {
                        return aA.apply(az, arguments)
                    }
                }

                function ay() {
                    this.onload = null, b(ax).addClass(aj[2]), at(2)
                }

                if (b(ax).hasClass(aj[2])) {
                    return void at()
                }
                var aw = new Image;
                aw.onload = av(aw, ay), aw.src = ax.src
            }

            function ao() {
                am.advanced.updateOnSelectorChange === !0 && (am.advanced.updateOnSelectorChange = "*");
                var av = 0, aw = an.find(am.advanced.updateOnSelectorChange);
                return am.advanced.updateOnSelectorChange && aw.length > 0 && aw.each(function () {
                    av += this.offsetHeight + this.offsetWidth
                }), av
            }

            function at(av) {
                clearTimeout(an[0].autoUpdate), S.update.call(null, ap[0], av)
            }

            var ap = b(this), au = ap.data(af), am = au.opt, an = b("#mCSB_" + au.idx + "_container");
            return e ? (clearTimeout(an[0].autoUpdate), void Z(an[0], "autoUpdate")) : void ar()
        }, x = function (an, e, am) {
            return Math.round(an / e) * e - am
        }, r = function (e) {
            var an = e.data(af), am = b("#mCSB_" + an.idx + "_container,#mCSB_" + an.idx + "_container_wrapper,#mCSB_" + an.idx + "_dragger_vertical,#mCSB_" + an.idx + "_dragger_horizontal");
            am.each(function () {
                D.call(this)
            })
        }, f = function (aC, ax, aw) {
            function ar(aL) {
                return aB && am.callbacks[aL] && "function" == typeof am.callbacks[aL]
            }

            function aA() {
                return [am.callbacks.alwaysTriggerOffsets || aF >= aJ[0] + aH, am.callbacks.alwaysTriggerOffsets || -az >= aF]
            }

            function au() {
                var aN = [aq[0].offsetTop, aq[0].offsetLeft], aM = [aG[0].offsetTop, aG[0].offsetLeft], aL = [aq.outerHeight(!1), aq.outerWidth(!1)], aO = [ao.height(), ao.width()];
                aC[0].mcs = {
                    content: aq,
                    top: aN[0],
                    left: aN[1],
                    draggerTop: aM[0],
                    draggerLeft: aM[1],
                    topPct: Math.round(100 * Math.abs(aN[0]) / (Math.abs(aL[0]) - aO[0])),
                    leftPct: Math.round(100 * Math.abs(aN[1]) / (Math.abs(aL[1]) - aO[1])),
                    direction: aw.dir
                }
            }

            var aB = aC.data(af), am = aB.opt, an = {
                trigger: "internal",
                dir: "y",
                scrollEasing: "mcsEaseOut",
                drag: !1,
                dur: am.scrollInertia,
                overwrite: "all",
                callbacks: !0,
                onStart: !0,
                onUpdate: !0,
                onComplete: !0
            }, aw = b.extend(an, aw), aD = [aw.dur, aw.drag ? 0 : aw.dur], ao = b("#mCSB_" + aB.idx), aq = b("#mCSB_" + aB.idx + "_container"), av = aq.parent(), ay = am.callbacks.onTotalScrollOffset ? C.call(aC, am.callbacks.onTotalScrollOffset) : [0, 0], ap = am.callbacks.onTotalScrollBackOffset ? C.call(aC, am.callbacks.onTotalScrollBackOffset) : [0, 0];
            if (aB.trigger = aw.trigger, 0 === av.scrollTop() && 0 === av.scrollLeft() || (b(".mCSB_" + aB.idx + "_scrollbar").css("visibility", "visible"), av.scrollTop(0).scrollLeft(0)), "_resetY" !== ax || aB.contentReset.y || (ar("onOverflowYNone") && am.callbacks.onOverflowYNone.call(aC[0]), aB.contentReset.y = 1), "_resetX" !== ax || aB.contentReset.x || (ar("onOverflowXNone") && am.callbacks.onOverflowXNone.call(aC[0]), aB.contentReset.x = 1), "_resetY" !== ax && "_resetX" !== ax) {
                if (!aB.contentReset.y && aC[0].mcs || !aB.overflowed[0] || (ar("onOverflowY") && am.callbacks.onOverflowY.call(aC[0]), aB.contentReset.x = null), !aB.contentReset.x && aC[0].mcs || !aB.overflowed[1] || (ar("onOverflowX") && am.callbacks.onOverflowX.call(aC[0]), aB.contentReset.x = null), am.snapAmount) {
                    var aE = am.snapAmount instanceof Array ? "x" === aw.dir ? am.snapAmount[1] : am.snapAmount[0] : am.snapAmount;
                    ax = x(ax, aE, am.snapOffset)
                }
                switch (aw.dir) {
                    case"x":
                        var aG = b("#mCSB_" + aB.idx + "_dragger_horizontal"), aK = "left", aF = aq[0].offsetLeft, aJ = [ao.width() - aq.outerWidth(!1), aG.parent().width() - aG.width()], e = [ax, 0 === ax ? 0 : ax / aB.scrollRatio.x], aH = ay[1], az = ap[1], aI = aH > 0 ? aH / aB.scrollRatio.x : 0, at = az > 0 ? az / aB.scrollRatio.x : 0;
                        break;
                    case"y":
                        var aG = b("#mCSB_" + aB.idx + "_dragger_vertical"), aK = "top", aF = aq[0].offsetTop, aJ = [ao.height() - aq.outerHeight(!1), aG.parent().height() - aG.height()], e = [ax, 0 === ax ? 0 : ax / aB.scrollRatio.y], aH = ay[0], az = ap[0], aI = aH > 0 ? aH / aB.scrollRatio.y : 0, at = az > 0 ? az / aB.scrollRatio.y : 0
                }
                e[1] < 0 || 0 === e[0] && 0 === e[1] ? e = [0, 0] : e[1] >= aJ[1] ? e = [aJ[0], aJ[1]] : e[0] = -e[0], aC[0].mcs || (au(), ar("onInit") && am.callbacks.onInit.call(aC[0])), clearTimeout(aq[0].onCompleteTimeout), k(aG[0], aK, Math.round(e[1]), aD[1], aw.scrollEasing), !aB.tweenRunning && (0 === aF && e[0] >= 0 || aF === aJ[0] && e[0] <= aJ[0]) || k(aq[0], aK, Math.round(e[0]), aD[0], aw.scrollEasing, aw.overwrite, {
                    onStart: function () {
                        aw.callbacks && aw.onStart && !aB.tweenRunning && (ar("onScrollStart") && (au(), am.callbacks.onScrollStart.call(aC[0])), aB.tweenRunning = !0, ac(aG), aB.cbOffsets = aA())
                    }, onUpdate: function () {
                        aw.callbacks && aw.onUpdate && ar("whileScrolling") && (au(), am.callbacks.whileScrolling.call(aC[0]))
                    }, onComplete: function () {
                        if (aw.callbacks && aw.onComplete) {
                            "yx" === am.axis && clearTimeout(aq[0].onCompleteTimeout);
                            var aL = aq[0].idleTimer || 0;
                            aq[0].onCompleteTimeout = setTimeout(function () {
                                ar("onScroll") && (au(), am.callbacks.onScroll.call(aC[0])), ar("onTotalScroll") && e[1] >= aJ[1] - aI && aB.cbOffsets[0] && (au(), am.callbacks.onTotalScroll.call(aC[0])), ar("onTotalScrollBack") && e[1] <= at && aB.cbOffsets[1] && (au(), am.callbacks.onTotalScrollBack.call(aC[0])), aB.tweenRunning = !1, aq[0].idleTimer = 0, ac(aG, "hide")
                            }, aL)
                        }
                    }
                })
            }
        }, k = function (aq, aE, aA, am, az, av, aC) {
            function ax() {
                aI.stop || (aF || ay.call(), aF = l() - aH, aD(), aF >= aI.time && (aI.time = aF > aI.time ? aF + ar - (aF - aI.time) : aF + ar - 1, aI.time < aF + 1 && (aI.time = aF + 1)), aI.time < am ? aI.id = au(ax) : at.call())
            }

            function aD() {
                am > 0 ? (aI.currVal = aG(aI.time, e, an, am, az), aw[aE] = Math.round(aI.currVal) + "px") : aw[aE] = aA + "px", aB.call()
            }

            function ao() {
                ar = 1000 / 60, aI.time = aF + ar, au = window.requestAnimationFrame ? window.requestAnimationFrame : function (aJ) {
                    return aD(), setTimeout(aJ, 0.01)
                }, aI.id = au(ax)
            }

            function ap() {
                null != aI.id && (window.requestAnimationFrame ? window.cancelAnimationFrame(aI.id) : clearTimeout(aI.id), aI.id = null)
            }

            function aG(aM, aO, aL, aJ, aK) {
                switch (aK) {
                    case"linear":
                    case"mcsLinear":
                        return aL * aM / aJ + aO;
                    case"mcsLinearOut":
                        return aM /= aJ, aM--, aL * Math.sqrt(1 - aM * aM) + aO;
                    case"easeInOutSmooth":
                        return aM /= aJ / 2, 1 > aM ? aL / 2 * aM * aM + aO : (aM--, -aL / 2 * (aM * (aM - 2) - 1) + aO);
                    case"easeInOutStrong":
                        return aM /= aJ / 2, 1 > aM ? aL / 2 * Math.pow(2, 10 * (aM - 1)) + aO : (aM--, aL / 2 * (-Math.pow(2, -10 * aM) + 2) + aO);
                    case"easeInOut":
                    case"mcsEaseInOut":
                        return aM /= aJ / 2, 1 > aM ? aL / 2 * aM * aM * aM + aO : (aM -= 2, aL / 2 * (aM * aM * aM + 2) + aO);
                    case"easeOutSmooth":
                        return aM /= aJ, aM--, -aL * (aM * aM * aM * aM - 1) + aO;
                    case"easeOutStrong":
                        return aL * (-Math.pow(2, -10 * aM / aJ) + 1) + aO;
                    case"easeOut":
                    case"mcsEaseOut":
                    default:
                        var aP = (aM /= aJ) * aM, aN = aP * aM;
                        return aO + aL * (0.499999999999997 * aN * aP + -2.5 * aP * aP + 5.5 * aN + -6.5 * aP + 4 * aM)
                }
            }

            aq._mTween || (aq._mTween = {top: {}, left: {}});
            var ar, au, aC = aC || {}, ay = aC.onStart || function () {
            }, aB = aC.onUpdate || function () {
            }, at = aC.onComplete || function () {
            }, aH = l(), aF = 0, e = aq.offsetTop, aw = aq.style, aI = aq._mTween[aE];
            "left" === aE && (e = aq.offsetLeft);
            var an = aA - e;
            aI.stop = 0, "none" !== av && ap(), ao()
        }, l = function () {
            return window.performance && window.performance.now ? window.performance.now() : window.performance && window.performance.webkitNow ? window.performance.webkitNow() : Date.now ? Date.now() : (new Date).getTime()
        }, D = function () {
            var an = this;
            an._mTween || (an._mTween = {top: {}, left: {}});
            for (var ao = ["top", "left"], am = 0; am < ao.length; am++) {
                var e = ao[am];
                an._mTween[e].id && (window.requestAnimationFrame ? window.cancelAnimationFrame(an._mTween[e].id) : clearTimeout(an._mTween[e].id), an._mTween[e].id = null, an._mTween[e].stop = 1)
            }
        }, Z = function (an, e) {
            try {
                delete an[e]
            } catch (am) {
                an[e] = null
            }
        }, ag = function (e) {
            return !(e.which && 1 !== e.which)
        }, A = function (am) {
            var e = am.originalEvent.pointerType;
            return !(e && "touch" !== e && 2 !== e)
        }, Y = function (e) {
            return !isNaN(parseFloat(e)) && isFinite(e)
        }, a = function (am) {
            var e = am.parents(".mCSB_container");
            return [am.offset().top - e.offset().top, am.offset().left - e.offset().left]
        }, al = function () {
            function am() {
                var an = ["webkit", "moz", "ms", "o"];
                if ("hidden" in document) {
                    return "hidden"
                }
                for (var ao = 0; ao < an.length; ao++) {
                    if (an[ao] + "Hidden" in document) {
                        return an[ao] + "Hidden"
                    }
                }
                return null
            }

            var e = am();
            return e ? document[e] : !1
        };
        b.fn[M] = function (e) {
            return S[e] ? S[e].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof e && e ? void b.error("Method " + e + " does not exist") : S.init.apply(this, arguments)
        }, b[M] = function (e) {
            return S[e] ? S[e].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof e && e ? void b.error("Method " + e + " does not exist") : S.init.apply(this, arguments)
        }, b[M].defaults = G, window[M] = !0, b(window).bind("load", function () {
            b(L)[M](), b.extend(b.expr[":"], {
                mcsInView: b.expr[":"].mcsInView || function (ao) {
                    var an, e, am = b(ao), ap = am.parents(".mCSB_container");
                    if (ap.length) {
                        return an = ap.parent(), e = [ap[0].offsetTop, ap[0].offsetLeft], e[0] + a(am)[0] >= 0 && e[0] + a(am)[0] < an.height() - am.outerHeight(!1) && e[1] + a(am)[1] >= 0 && e[1] + a(am)[1] < an.width() - am.outerWidth(!1)
                    }
                }, mcsInSight: b.expr[":"].mcsInSight || function (av, ar, e) {
                    var aq, ao, at, ap, au = b(av), am = au.parents(".mCSB_container"), an = "exact" === e[3] ? [[1, 0], [1, 0]] : [[0.9, 0.1], [0.6, 0.4]];
                    if (am.length) {
                        return aq = [au.outerHeight(!1), au.outerWidth(!1)], at = [am[0].offsetTop + a(au)[0], am[0].offsetLeft + a(au)[1]], ao = [am.parent()[0].offsetHeight, am.parent()[0].offsetWidth], ap = [aq[0] < ao[0] ? an[0] : an[1], aq[1] < ao[1] ? an[0] : an[1]], at[0] - ao[0] * ap[0][0] < 0 && at[0] + aq[0] - ao[0] * ap[0][1] >= 0 && at[1] - ao[1] * ap[1][0] < 0 && at[1] + aq[1] - ao[1] * ap[1][1] >= 0
                    }
                }, mcsOverflow: b.expr[":"].mcsOverflow || function (e) {
                    var am = b(e).data(af);
                    if (am) {
                        return am.overflowed[0] || am.overflowed[1]
                    }
                }
            })
        })
    })
});
var ogame = ogame || {};
/*
 * Select2 4.0.0
 * https://select2.github.io
 *
 * Released under the MIT license
 * https://github.com/select2/select2/blob/master/LICENSE.md
 */
(function (b) {
    if (typeof define === "function" && define.amd) {
        define(["./jquery"], b)
    } else {
        if (typeof exports === "object") {
            b(require("./jquery"))
        } else {
            b(jQuery)
        }
    }
}(function (f) {
    var d = (function () {
        if (f && f.fn && f.fn.select2 && f.fn.select2.amd) {
            var a = f.fn.select2.amd
        }
        var a;
        (function () {
            if (!a || !a.requirejs) {
                if (!a) {
                    a = {}
                } else {
                    h = a
                }
                var c, h, b;
                (function (T) {
                    var P, X, H, G, U = {}, V = {}, L = {}, R = {}, I = Object.prototype.hasOwnProperty, N = [].slice, K = /\.js$/;

                    function J(l, k) {
                        return I.call(l, k)
                    }

                    function F(x, A) {
                        var o, s, v, r, n, w, l, k, p, q, u, m = A && A.split("/"), y = L.map, B = (y && y["*"]) || {};
                        if (x && x.charAt(0) === ".") {
                            if (A) {
                                m = m.slice(0, m.length - 1);
                                x = x.split("/");
                                n = x.length - 1;
                                if (L.nodeIdCompat && K.test(x[n])) {
                                    x[n] = x[n].replace(K, "")
                                }
                                x = m.concat(x);
                                for (p = 0; p < x.length; p += 1) {
                                    u = x[p];
                                    if (u === ".") {
                                        x.splice(p, 1);
                                        p -= 1
                                    } else {
                                        if (u === "..") {
                                            if (p === 1 && (x[2] === ".." || x[0] === "..")) {
                                                break
                                            } else {
                                                if (p > 0) {
                                                    x.splice(p - 1, 2);
                                                    p -= 2
                                                }
                                            }
                                        }
                                    }
                                }
                                x = x.join("/")
                            } else {
                                if (x.indexOf("./") === 0) {
                                    x = x.substring(2)
                                }
                            }
                        }
                        if ((m || B) && y) {
                            o = x.split("/");
                            for (p = o.length; p > 0; p -= 1) {
                                s = o.slice(0, p).join("/");
                                if (m) {
                                    for (q = m.length; q > 0; q -= 1) {
                                        v = y[m.slice(0, q).join("/")];
                                        if (v) {
                                            v = v[s];
                                            if (v) {
                                                r = v;
                                                w = p;
                                                break
                                            }
                                        }
                                    }
                                }
                                if (r) {
                                    break
                                }
                                if (!l && B && B[s]) {
                                    l = B[s];
                                    k = p
                                }
                            }
                            if (!r && l) {
                                r = l;
                                w = k
                            }
                            if (r) {
                                o.splice(0, w, r);
                                x = o.join("/")
                            }
                        }
                        return x
                    }

                    function M(l, k) {
                        return function () {
                            return X.apply(T, N.call(arguments, 0).concat([l, k]))
                        }
                    }

                    function g(k) {
                        return function (l) {
                            return F(l, k)
                        }
                    }

                    function S(k) {
                        return function (l) {
                            U[k] = l
                        }
                    }

                    function Q(k) {
                        if (J(V, k)) {
                            var l = V[k];
                            delete V[k];
                            R[k] = true;
                            P.apply(T, l)
                        }
                        if (!J(U, k) && !J(R, k)) {
                            throw new Error("No " + k)
                        }
                        return U[k]
                    }

                    function O(l) {
                        var k, m = l ? l.indexOf("!") : -1;
                        if (m > -1) {
                            k = l.substring(0, m);
                            l = l.substring(m + 1, l.length)
                        }
                        return [k, l]
                    }

                    H = function (n, o) {
                        var m, k = O(n), l = k[0];
                        n = k[1];
                        if (l) {
                            l = F(l, o);
                            m = Q(l)
                        }
                        if (l) {
                            if (m && m.normalize) {
                                n = m.normalize(n, g(o))
                            } else {
                                n = F(n, o)
                            }
                        } else {
                            n = F(n, o);
                            k = O(n);
                            l = k[0];
                            n = k[1];
                            if (l) {
                                m = Q(l)
                            }
                        }
                        return {f: l ? l + "!" + n : n, n: n, pr: l, p: m}
                    };
                    function W(k) {
                        return function () {
                            return (L && L.config && L.config[k]) || {}
                        }
                    }

                    G = {
                        require: function (k) {
                            return M(k)
                        }, exports: function (l) {
                            var k = U[l];
                            if (typeof k !== "undefined") {
                                return k
                            } else {
                                return (U[l] = {})
                            }
                        }, module: function (k) {
                            return {id: k, uri: "", exports: U[k], config: W(k)}
                        }
                    };
                    P = function (v, k, l, m) {
                        var r, n, q, w, s, p = [], u = typeof l, o;
                        m = m || v;
                        if (u === "undefined" || u === "function") {
                            k = !k.length && l.length ? ["require", "exports", "module"] : k;
                            for (s = 0; s < k.length; s += 1) {
                                w = H(k[s], m);
                                n = w.f;
                                if (n === "require") {
                                    p[s] = G.require(v)
                                } else {
                                    if (n === "exports") {
                                        p[s] = G.exports(v);
                                        o = true
                                    } else {
                                        if (n === "module") {
                                            r = p[s] = G.module(v)
                                        } else {
                                            if (J(U, n) || J(V, n) || J(R, n)) {
                                                p[s] = Q(n)
                                            } else {
                                                if (w.p) {
                                                    w.p.load(w.n, M(m, true), S(n), {});
                                                    p[s] = U[n]
                                                } else {
                                                    throw new Error(v + " missing " + n)
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            q = l ? l.apply(U[v], p) : undefined;
                            if (v) {
                                if (r && r.exports !== T && r.exports !== U[v]) {
                                    U[v] = r.exports
                                } else {
                                    if (q !== T || !o) {
                                        U[v] = q
                                    }
                                }
                            }
                        } else {
                            if (v) {
                                U[v] = l
                            }
                        }
                    };
                    c = h = X = function (l, k, o, n, m) {
                        if (typeof l === "string") {
                            if (G[l]) {
                                return G[l](k)
                            }
                            return Q(H(l, k).f)
                        } else {
                            if (!l.splice) {
                                L = l;
                                if (L.deps) {
                                    X(L.deps, L.callback)
                                }
                                if (!k) {
                                    return
                                }
                                if (k.splice) {
                                    l = k;
                                    k = o;
                                    o = null
                                } else {
                                    l = T
                                }
                            }
                        }
                        k = k || function () {
                        };
                        if (typeof o === "function") {
                            o = n;
                            n = m
                        }
                        if (n) {
                            P(T, l, k, o)
                        } else {
                            setTimeout(function () {
                                P(T, l, k, o)
                            }, 4)
                        }
                        return X
                    };
                    X.config = function (k) {
                        return X(k)
                    };
                    c._defined = U;
                    b = function (m, l, k) {
                        if (!l.splice) {
                            k = l;
                            l = []
                        }
                        if (!J(U, m) && !J(V, m)) {
                            V[m] = [m, l, k]
                        }
                    };
                    b.amd = {jQuery: true}
                }());
                a.requirejs = c;
                a.require = h;
                a.define = b
            }
        }());
        a.define("almond", function () {
        });
        a.define("jquery", [], function () {
            var b = f || $;
            if (b == null && console && console.error) {
                console.error("Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page.")
            }
            return b
        });
        a.define("select2/utils", ["jquery"], function (b) {
            var c = {};
            c.Extend = function (q, h) {
                var g = {}.hasOwnProperty;

                function p() {
                    this.constructor = q
                }

                for (var r in h) {
                    if (g.call(h, r)) {
                        q[r] = h[r]
                    }
                }
                p.prototype = h.prototype;
                q.prototype = new p();
                q.__super__ = h.prototype;
                return q
            };
            function k(m) {
                var q = m.prototype;
                var r = [];
                for (var g in q) {
                    var h = q[g];
                    if (typeof h !== "function") {
                        continue
                    }
                    if (g === "constructor") {
                        continue
                    }
                    r.push(g)
                }
                return r
            }

            c.Decorate = function (F, g) {
                var h = k(g);
                var m = k(F);

                function C() {
                    var o = Array.prototype.unshift;
                    var p = g.prototype.constructor.length;
                    var n = F.prototype.constructor;
                    if (p > 0) {
                        o.call(arguments, F.prototype.constructor);
                        n = g.prototype.constructor
                    }
                    n.apply(this, arguments)
                }

                g.displayName = F.displayName;
                function B() {
                    this.constructor = C
                }

                C.prototype = new B();
                for (var x = 0; x < m.length; x++) {
                    var A = m[x];
                    C.prototype[A] = F.prototype[A]
                }
                var D = function (o) {
                    var n = function () {
                    };
                    if (o in C.prototype) {
                        n = C.prototype[o]
                    }
                    var p = g.prototype[o];
                    return function () {
                        var q = Array.prototype.unshift;
                        q.call(arguments, n);
                        return p.apply(this, arguments)
                    }
                };
                for (var E = 0; E < h.length; E++) {
                    var y = h[E];
                    C.prototype[y] = D(y)
                }
                return C
            };
            var l = function () {
                this.listeners = {}
            };
            l.prototype.on = function (h, g) {
                this.listeners = this.listeners || {};
                if (h in this.listeners) {
                    this.listeners[h].push(g)
                } else {
                    this.listeners[h] = [g]
                }
            };
            l.prototype.trigger = function (h) {
                var g = Array.prototype.slice;
                this.listeners = this.listeners || {};
                if (h in this.listeners) {
                    this.invoke(this.listeners[h], g.call(arguments, 1))
                }
                if ("*" in this.listeners) {
                    this.invoke(this.listeners["*"], arguments)
                }
            };
            l.prototype.invoke = function (g, p) {
                for (var h = 0, o = g.length; h < o; h++) {
                    g[h].apply(this, p)
                }
            };
            c.Observable = l;
            c.generateChars = function (p) {
                var g = "";
                for (var h = 0; h < p; h++) {
                    var o = Math.floor(Math.random() * 36);
                    g += o.toString(36)
                }
                return g
            };
            c.bind = function (g, h) {
                return function () {
                    g.apply(h, arguments)
                }
            };
            c._convertData = function (r) {
                for (var s in r) {
                    var u = s.split("-");
                    var h = r;
                    if (u.length === 1) {
                        continue
                    }
                    for (var g = 0; g < u.length; g++) {
                        var v = u[g];
                        v = v.substring(0, 1).toLowerCase() + v.substring(1);
                        if (!(v in h)) {
                            h[v] = {}
                        }
                        if (g == u.length - 1) {
                            h[v] = r[s]
                        }
                        h = h[v]
                    }
                    delete r[s]
                }
                return r
            };
            c.hasScroll = function (g, q) {
                var r = b(q);
                var h = q.style.overflowX;
                var p = q.style.overflowY;
                if (h === p && (p === "hidden" || p === "visible")) {
                    return false
                }
                if (h === "scroll" || p === "scroll") {
                    return true
                }
                return (r.innerHeight() < q.scrollHeight || r.innerWidth() < q.scrollWidth)
            };
            c.escapeMarkup = function (h) {
                var g = {
                    "\\": "&#92;",
                    "&": "&amp;",
                    "<": "&lt;",
                    ">": "&gt;",
                    '"': "&quot;",
                    "'": "&#39;",
                    "/": "&#47;"
                };
                if (typeof h !== "string") {
                    return h
                }
                return String(h).replace(/[&<>"'\/\\]/g, function (n) {
                    return g[n]
                })
            };
            c.appendMany = function (n, g) {
                if (b.fn.jquery.substr(0, 3) === "1.7") {
                    var h = b();
                    b.map(g, function (m) {
                        h = h.add(m)
                    });
                    g = h
                }
                n.append(g)
            };
            return c
        });
        a.define("select2/results", ["jquery", "./utils"], function (b, c) {
            function h(n, m, g) {
                this.$element = n;
                this.data = g;
                this.options = m;
                h.__super__.constructor.call(this)
            }

            c.Extend(h, c.Observable);
            h.prototype.render = function () {
                var g = b('<ul class="select2-results__options" role="tree"></ul>');
                if (this.options.get("multiple")) {
                    g.attr("aria-multiselectable", "true")
                }
                this.$results = g;
                return g
            };
            h.prototype.clear = function () {
                this.$results.empty()
            };
            h.prototype.displayMessage = function (g) {
                var p = this.options.get("escapeMarkup");
                this.clear();
                this.hideLoading();
                var o = b('<li role="treeitem" class="select2-results__option"></li>');
                var n = this.options.get("translations").get(g.message);
                o.append(p(n(g.args)));
                this.$results.append(o)
            };
            h.prototype.append = function (o) {
                this.hideLoading();
                var q = [];
                if (o.results == null || o.results.length === 0) {
                    if (this.$results.children().length === 0) {
                        this.trigger("results:message", {message: "noResults"})
                    }
                    return
                }
                o.results = this.sort(o.results);
                for (var r = 0; r < o.results.length; r++) {
                    var p = o.results[r];
                    var g = this.option(p);
                    q.push(g)
                }
                this.$results.append(q)
            };
            h.prototype.position = function (n, m) {
                var g = m.find(".select2-results");
                g.append(n)
            };
            h.prototype.sort = function (l) {
                var g = this.options.get("sorter");
                return g(l)
            };
            h.prototype.setClasses = function () {
                var g = this;
                this.data.current(function (r) {
                    var p = b.map(r, function (k) {
                        return k.id.toString()
                    });
                    var q = g.$results.find(".select2-results__option[aria-selected]");
                    q.each(function () {
                        var l = b(this);
                        var m = b.data(this, "data");
                        var k = "" + m.id;
                        if ((m.element != null && m.element.selected) || (m.element == null && b.inArray(k, p) > -1)) {
                            l.attr("aria-selected", "true")
                        } else {
                            l.attr("aria-selected", "false")
                        }
                    });
                    var o = q.filter("[aria-selected=true]");
                    if (o.length > 0) {
                        o.first().trigger("mouseenter")
                    } else {
                        q.first().trigger("mouseenter")
                    }
                })
            };
            h.prototype.showLoading = function (n) {
                this.hideLoading();
                var o = this.options.get("translations").get("searching");
                var g = {disabled: true, loading: true, text: o(n)};
                var p = this.option(g);
                p.className += " loading-results";
                this.$results.prepend(p)
            };
            h.prototype.hideLoading = function () {
                this.$results.find(".loading-results").remove()
            };
            h.prototype.option = function (B) {
                var A = document.createElement("li");
                A.className = "select2-results__option";
                var G = {role: "treeitem", "aria-selected": "false"};
                if (B.disabled) {
                    delete G["aria-selected"];
                    G["aria-disabled"] = "true"
                }
                if (B.id == null) {
                    delete G["aria-selected"]
                }
                if (B._resultId != null) {
                    A.id = B._resultId
                }
                if (B.title) {
                    A.title = B.title
                }
                if (B.children) {
                    G.role = "group";
                    G["aria-label"] = B.text;
                    delete G["aria-selected"]
                }
                for (var y in G) {
                    var C = G[y];
                    A.setAttribute(y, C)
                }
                if (B.children) {
                    var F = b(A);
                    var I = document.createElement("strong");
                    I.className = "select2-results__group";
                    var J = b(I);
                    this.template(B, I);
                    var H = [];
                    for (var g = 0; g < B.children.length; g++) {
                        var D = B.children[g];
                        var E = this.option(D);
                        H.push(E)
                    }
                    var x = b("<ul></ul>", {"class": "select2-results__options select2-results__options--nested"});
                    x.append(H);
                    F.append(I);
                    F.append(x)
                } else {
                    this.template(B, A)
                }
                b.data(A, "data", B);
                return A
            };
            h.prototype.bind = function (p, n) {
                var o = this;
                var g = p.id + "-results";
                this.$results.attr("id", g);
                p.on("results:all", function (k) {
                    o.clear();
                    o.append(k.data);
                    if (p.isOpen()) {
                        o.setClasses()
                    }
                });
                p.on("results:append", function (k) {
                    o.append(k.data);
                    if (p.isOpen()) {
                        o.setClasses()
                    }
                });
                p.on("query", function (k) {
                    o.showLoading(k)
                });
                p.on("select", function () {
                    if (!p.isOpen()) {
                        return
                    }
                    o.setClasses()
                });
                p.on("unselect", function () {
                    if (!p.isOpen()) {
                        return
                    }
                    o.setClasses()
                });
                p.on("open", function () {
                    o.$results.attr("aria-expanded", "true");
                    o.$results.attr("aria-hidden", "false");
                    o.setClasses();
                    o.ensureHighlightVisible()
                });
                p.on("close", function () {
                    o.$results.attr("aria-expanded", "false");
                    o.$results.attr("aria-hidden", "true");
                    o.$results.removeAttr("aria-activedescendant")
                });
                p.on("results:toggle", function () {
                    var k = o.getHighlightedResults();
                    if (k.length === 0) {
                        return
                    }
                    k.trigger("mouseup")
                });
                p.on("results:select", function () {
                    var l = o.getHighlightedResults();
                    if (l.length === 0) {
                        return
                    }
                    var k = l.data("data");
                    if (l.attr("aria-selected") == "true") {
                        o.trigger("close")
                    } else {
                        o.trigger("select", {data: k})
                    }
                });
                p.on("results:previous", function () {
                    var y = o.getHighlightedResults();
                    var A = o.$results.find("[aria-selected]");
                    var w = A.index(y);
                    if (w === 0) {
                        return
                    }
                    var B = w - 1;
                    if (y.length === 0) {
                        B = 0
                    }
                    var x = A.eq(B);
                    x.trigger("mouseenter");
                    var k = o.$results.offset().top;
                    var l = x.offset().top;
                    var m = o.$results.scrollTop() + (l - k);
                    if (B === 0) {
                        o.$results.scrollTop(0)
                    } else {
                        if (l - k < 0) {
                            o.$results.scrollTop(m)
                        }
                    }
                });
                p.on("results:next", function () {
                    var y = o.getHighlightedResults();
                    var A = o.$results.find("[aria-selected]");
                    var w = A.index(y);
                    var B = w + 1;
                    if (B >= A.length) {
                        return
                    }
                    var x = A.eq(B);
                    x.trigger("mouseenter");
                    var k = o.$results.offset().top + o.$results.outerHeight(false);
                    var l = x.offset().top + x.outerHeight(false);
                    var m = o.$results.scrollTop() + l - k;
                    if (B === 0) {
                        o.$results.scrollTop(0)
                    } else {
                        if (l > k) {
                            o.$results.scrollTop(m)
                        }
                    }
                });
                p.on("results:focus", function (k) {
                    k.element.addClass("select2-results__option--highlighted")
                });
                p.on("results:message", function (k) {
                    o.displayMessage(k)
                });
                if (b.fn.mousewheel) {
                    this.$results.on("mousewheel", function (l) {
                        var m = o.$results.scrollTop();
                        var u = (o.$results.get(0).scrollHeight - o.$results.scrollTop() + l.deltaY);
                        var k = l.deltaY > 0 && m - l.deltaY <= 0;
                        var s = l.deltaY < 0 && u <= o.$results.height();
                        if (k) {
                            o.$results.scrollTop(0);
                            l.preventDefault();
                            l.stopPropagation()
                        } else {
                            if (s) {
                                o.$results.scrollTop(o.$results.get(0).scrollHeight - o.$results.height());
                                l.preventDefault();
                                l.stopPropagation()
                            }
                        }
                    })
                }
                this.$results.on("mouseup", ".select2-results__option[aria-selected]", function (m) {
                    var k = b(this);
                    var l = k.data("data");
                    if (k.attr("aria-selected") === "true") {
                        if (o.options.get("multiple")) {
                            o.trigger("unselect", {originalEvent: m, data: l})
                        } else {
                            o.trigger("close")
                        }
                        return
                    }
                    o.trigger("select", {originalEvent: m, data: l})
                });
                this.$results.on("mouseenter", ".select2-results__option[aria-selected]", function (l) {
                    var k = b(this).data("data");
                    o.getHighlightedResults().removeClass("select2-results__option--highlighted");
                    o.trigger("results:focus", {data: k, element: b(this)})
                })
            };
            h.prototype.getHighlightedResults = function () {
                var g = this.$results.find(".select2-results__option--highlighted");
                return g
            };
            h.prototype.destroy = function () {
                this.$results.remove()
            };
            h.prototype.ensureHighlightVisible = function () {
                var r = this.getHighlightedResults();
                if (r.length === 0) {
                    return
                }
                var s = this.$results.find("[aria-selected]");
                var q = s.index(r);
                var v = this.$results.offset().top;
                var w = r.offset().top;
                var g = this.$results.scrollTop() + (w - v);
                var u = w - v;
                g -= r.outerHeight(false) * 2;
                if (q <= 2) {
                    this.$results.scrollTop(0)
                } else {
                    if (u > this.$results.outerHeight() || u < 0) {
                        this.$results.scrollTop(g)
                    }
                }
            };
            h.prototype.template = function (p, o) {
                var g = this.options.get("templateResult");
                var q = this.options.get("escapeMarkup");
                var r = g(p);
                if (r == null) {
                    o.style.display = "none"
                } else {
                    if (typeof r === "string") {
                        o.innerHTML = q(r)
                    } else {
                        b(o).append(r)
                    }
                }
            };
            return h
        });
        a.define("select2/keys", [], function () {
            var b = {
                BACKSPACE: 8,
                TAB: 9,
                ENTER: 13,
                SHIFT: 16,
                CTRL: 17,
                ALT: 18,
                ESC: 27,
                SPACE: 32,
                PAGE_UP: 33,
                PAGE_DOWN: 34,
                END: 35,
                HOME: 36,
                LEFT: 37,
                UP: 38,
                RIGHT: 39,
                DOWN: 40,
                DELETE: 46
            };
            return b
        });
        a.define("select2/selection/base", ["jquery", "../utils", "../keys"], function (b, c, l) {
            function k(h, g) {
                this.$element = h;
                this.options = g;
                k.__super__.constructor.call(this)
            }

            c.Extend(k, c.Observable);
            k.prototype.render = function () {
                var g = b('<span class="select2-selection" role="combobox" aria-autocomplete="list" aria-haspopup="true" aria-expanded="false"></span>');
                this._tabindex = 0;
                if (this.$element.data("old-tabindex") != null) {
                    this._tabindex = this.$element.data("old-tabindex")
                } else {
                    if (this.$element.attr("tabindex") != null) {
                        this._tabindex = this.$element.attr("tabindex")
                    }
                }
                g.attr("title", this.$element.attr("title"));
                g.attr("tabindex", this._tabindex);
                this.$selection = g;
                return g
            };
            k.prototype.bind = function (p, r) {
                var g = this;
                var q = p.id + "-container";
                var h = p.id + "-results";
                this.container = p;
                this.$selection.on("focus", function (m) {
                    g.trigger("focus", m)
                });
                this.$selection.on("blur", function (m) {
                    g.trigger("blur", m)
                });
                this.$selection.on("keydown", function (m) {
                    g.trigger("keypress", m);
                    if (m.which === l.SPACE) {
                        m.preventDefault()
                    }
                });
                p.on("results:focus", function (m) {
                    g.$selection.attr("aria-activedescendant", m.data._resultId)
                });
                p.on("selection:update", function (m) {
                    g.update(m.data)
                });
                p.on("open", function () {
                    g.$selection.attr("aria-expanded", "true");
                    g.$selection.attr("aria-owns", h);
                    g._attachCloseHandler(p)
                });
                p.on("close", function () {
                    g.$selection.attr("aria-expanded", "false");
                    g.$selection.removeAttr("aria-activedescendant");
                    g.$selection.removeAttr("aria-owns");
                    g.$selection.focus();
                    g._detachCloseHandler(p)
                });
                p.on("enable", function () {
                    g.$selection.attr("tabindex", g._tabindex)
                });
                p.on("disable", function () {
                    g.$selection.attr("tabindex", "-1")
                })
            };
            k.prototype._attachCloseHandler = function (h) {
                var g = this;
                b(document.body).on("mousedown.select2." + h.id, function (r) {
                    var q = b(r.target);
                    var u = q.closest(".select2");
                    var s = b(".select2.select2-container--open");
                    s.each(function () {
                        var m = b(this);
                        if (this == u[0]) {
                            return
                        }
                        var n = m.data("element");
                        n.select2("close")
                    })
                })
            };
            k.prototype._detachCloseHandler = function (g) {
                b(document.body).off("mousedown.select2." + g.id)
            };
            k.prototype.position = function (n, g) {
                var h = g.find(".selection");
                h.append(n)
            };
            k.prototype.destroy = function () {
                this._detachCloseHandler(this.container)
            };
            k.prototype.update = function (g) {
                throw new Error("The `update` method must be defined in child classes.")
            };
            return k
        });
        a.define("select2/selection/single", ["jquery", "./base", "../utils", "../keys"], function (c, m, l, n) {
            function b() {
                b.__super__.constructor.apply(this, arguments)
            }

            l.Extend(b, m);
            b.prototype.render = function () {
                var g = b.__super__.render.call(this);
                g.addClass("select2-selection--single");
                g.html('<span class="select2-selection__rendered"></span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span>');
                return g
            };
            b.prototype.bind = function (h, p) {
                var g = this;
                b.__super__.bind.apply(this, arguments);
                var k = h.id + "-container";
                this.$selection.find(".select2-selection__rendered").attr("id", k);
                this.$selection.attr("aria-labelledby", k);
                this.$selection.on("mousedown", function (o) {
                    if (o.which !== 1) {
                        return
                    }
                    g.trigger("toggle", {originalEvent: o})
                });
                this.$selection.on("focus", function (o) {
                });
                this.$selection.on("blur", function (o) {
                });
                h.on("selection:update", function (o) {
                    g.update(o.data)
                })
            };
            b.prototype.clear = function () {
                this.$selection.find(".select2-selection__rendered").empty()
            };
            b.prototype.display = function (k) {
                var g = this.options.get("templateSelection");
                var h = this.options.get("escapeMarkup");
                return h(g(k))
            };
            b.prototype.selectionContainer = function () {
                return c("<span></span>")
            };
            b.prototype.update = function (p) {
                if (p.length === 0) {
                    this.clear();
                    return
                }
                var h = p[0];
                var g = this.display(h);
                var k = this.$selection.find(".select2-selection__rendered");
                k.empty().append(g);
                k.prop("title", h.title || h.text)
            };
            return b
        });
        a.define("select2/selection/multiple", ["jquery", "./base", "../utils"], function (b, l, c) {
            function k(h, g) {
                k.__super__.constructor.apply(this, arguments)
            }

            c.Extend(k, l);
            k.prototype.render = function () {
                var g = k.__super__.render.call(this);
                g.addClass("select2-selection--multiple");
                g.html('<ul class="select2-selection__rendered"></ul>');
                return g
            };
            k.prototype.bind = function (n, g) {
                var h = this;
                k.__super__.bind.apply(this, arguments);
                this.$selection.on("click", function (m) {
                    h.trigger("toggle", {originalEvent: m})
                });
                this.$selection.on("click", ".select2-selection__choice__remove", function (s) {
                    var r = b(this);
                    var u = r.parent();
                    var m = u.data("data");
                    h.trigger("unselect", {originalEvent: s, data: m})
                })
            };
            k.prototype.clear = function () {
                this.$selection.find(".select2-selection__rendered").empty()
            };
            k.prototype.display = function (g) {
                var h = this.options.get("templateSelection");
                var n = this.options.get("escapeMarkup");
                return n(h(g))
            };
            k.prototype.selectionContainer = function () {
                var g = b('<li class="select2-selection__choice"><span class="select2-selection__choice__remove" role="presentation">&times;</span></li>');
                return g
            };
            k.prototype.update = function (v) {
                this.clear();
                if (v.length === 0) {
                    return
                }
                var h = [];
                for (var s = 0; s < v.length; s++) {
                    var g = v[s];
                    var w = this.display(g);
                    var r = this.selectionContainer();
                    r.append(w);
                    r.prop("title", g.title || g.text);
                    r.data("data", g);
                    h.push(r)
                }
                var u = this.$selection.find(".select2-selection__rendered");
                c.appendMany(u, h)
            };
            return k
        });
        a.define("select2/selection/placeholder", ["../utils"], function (b) {
            function c(l, n, m) {
                this.placeholder = this.normalizePlaceholder(m.get("placeholder"));
                l.call(this, n, m)
            }

            c.prototype.normalizePlaceholder = function (l, k) {
                if (typeof k === "string") {
                    k = {id: "", text: k}
                }
                return k
            };
            c.prototype.createPlaceholder = function (m, l) {
                var n = this.selectionContainer();
                n.html(this.display(l));
                n.addClass("select2-selection__placeholder").removeClass("select2-selection__choice");
                return n
            };
            c.prototype.update = function (n, o) {
                var q = (o.length == 1 && o[0].id != this.placeholder.id);
                var p = o.length > 1;
                if (p || q) {
                    return n.call(this, o)
                }
                this.clear();
                var r = this.createPlaceholder(this.placeholder);
                this.$selection.find(".select2-selection__rendered").append(r)
            };
            return c
        });
        a.define("select2/selection/allowClear", ["jquery", "../keys"], function (c, h) {
            function b() {
            }

            b.prototype.bind = function (n, p, g) {
                var o = this;
                n.call(this, p, g);
                if (this.placeholder == null) {
                    if (this.options.get("debug") && window.console && console.error) {
                        console.error("Select2: The `allowClear` option should be used in combination with the `placeholder` option.")
                    }
                }
                this.$selection.on("mousedown", ".select2-selection__clear", function (k) {
                    o._handleClear(k)
                });
                p.on("keypress", function (k) {
                    o._handleKeyboardClear(k, p)
                })
            };
            b.prototype._handleClear = function (q, r) {
                if (this.options.get("disabled")) {
                    return
                }
                var u = this.$selection.find(".select2-selection__clear");
                if (u.length === 0) {
                    return
                }
                r.stopPropagation();
                var g = u.data("data");
                for (var s = 0; s < g.length; s++) {
                    var p = {data: g[s]};
                    this.trigger("unselect", p);
                    if (p.prevented) {
                        return
                    }
                }
                this.$element.val(this.placeholder.id).trigger("change");
                this.trigger("toggle")
            };
            b.prototype._handleKeyboardClear = function (g, m, n) {
                if (n.isOpen()) {
                    return
                }
                if (m.which == h.DELETE || m.which == h.BACKSPACE) {
                    this._handleClear(m)
                }
            };
            b.prototype.update = function (g, m) {
                g.call(this, m);
                if (this.$selection.find(".select2-selection__placeholder").length > 0 || m.length === 0) {
                    return
                }
                var n = c('<span class="select2-selection__clear">&times;</span>');
                n.data("data", m);
                this.$selection.find(".select2-selection__rendered").prepend(n)
            };
            return b
        });
        a.define("select2/selection/search", ["jquery", "../utils", "../keys"], function (b, c, l) {
            function k(g, n, h) {
                g.call(this, n, h)
            }

            k.prototype.render = function (h) {
                var n = b('<li class="select2-search select2-search--inline"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="textbox" /></li>');
                this.$searchContainer = n;
                this.$search = n.find("input");
                var g = h.call(this);
                return g
            };
            k.prototype.bind = function (g, o, p) {
                var h = this;
                g.call(this, o, p);
                o.on("open", function () {
                    h.$search.attr("tabindex", 0);
                    h.$search.focus()
                });
                o.on("close", function () {
                    h.$search.attr("tabindex", -1);
                    h.$search.val("");
                    h.$search.focus()
                });
                o.on("enable", function () {
                    h.$search.prop("disabled", false)
                });
                o.on("disable", function () {
                    h.$search.prop("disabled", true)
                });
                this.$selection.on("focusin", ".select2-search--inline", function (m) {
                    h.trigger("focus", m)
                });
                this.$selection.on("focusout", ".select2-search--inline", function (m) {
                    h.trigger("blur", m)
                });
                this.$selection.on("keydown", ".select2-search--inline", function (u) {
                    u.stopPropagation();
                    h.trigger("keypress", u);
                    h._keyUpPrevented = u.isDefaultPrevented();
                    var n = u.which;
                    if (n === l.BACKSPACE && h.$search.val() === "") {
                        var s = h.$searchContainer.prev(".select2-selection__choice");
                        if (s.length > 0) {
                            var m = s.data("data");
                            h.searchRemoveChoice(m);
                            u.preventDefault()
                        }
                    }
                });
                this.$selection.on("input", ".select2-search--inline", function (m) {
                    h.$selection.off("keyup.search")
                });
                this.$selection.on("keyup.search input", ".select2-search--inline", function (m) {
                    h.handleSearch(m)
                })
            };
            k.prototype.createPlaceholder = function (h, g) {
                this.$search.attr("placeholder", g.text)
            };
            k.prototype.update = function (g, h) {
                this.$search.attr("placeholder", "");
                g.call(this, h);
                this.$selection.find(".select2-selection__rendered").append(this.$searchContainer);
                this.resizeSearch()
            };
            k.prototype.handleSearch = function () {
                this.resizeSearch();
                if (!this._keyUpPrevented) {
                    var g = this.$search.val();
                    this.trigger("query", {term: g})
                }
                this._keyUpPrevented = false
            };
            k.prototype.searchRemoveChoice = function (g, h) {
                this.trigger("unselect", {data: h});
                this.trigger("open");
                this.$search.val(h.text + " ")
            };
            k.prototype.resizeSearch = function () {
                this.$search.css("width", "25px");
                var h = "";
                if (this.$search.attr("placeholder") !== "") {
                    h = this.$selection.find(".select2-selection__rendered").innerWidth()
                } else {
                    var g = this.$search.val().length + 1;
                    h = (g * 0.75) + "em"
                }
                this.$search.css("width", h)
            };
            return k
        });
        a.define("select2/selection/eventRelay", ["jquery"], function (c) {
            function b() {
            }

            b.prototype.bind = function (o, s, u) {
                var r = this;
                var q = ["open", "opening", "close", "closing", "select", "selecting", "unselect", "unselecting"];
                var p = ["opening", "closing", "selecting", "unselecting"];
                o.call(this, s, u);
                s.on("*", function (h, g) {
                    if (c.inArray(h, q) === -1) {
                        return
                    }
                    g = g || {};
                    var k = c.Event("select2:" + h, {params: g});
                    r.$element.trigger(k);
                    if (c.inArray(h, p) === -1) {
                        return
                    }
                    g.prevented = k.isDefaultPrevented()
                })
            };
            return b
        });
        a.define("select2/translation", ["jquery", "require"], function (b, c) {
            function h(g) {
                this.dict = g || {}
            }

            h.prototype.all = function () {
                return this.dict
            };
            h.prototype.get = function (g) {
                return this.dict[g]
            };
            h.prototype.extend = function (g) {
                this.dict = b.extend({}, g.all(), this.dict)
            };
            h._cache = {};
            h.loadPath = function (g) {
                if (!(g in h._cache)) {
                    var l = c(g);
                    h._cache[g] = l
                }
                return new h(h._cache[g])
            };
            return h
        });
        a.define("select2/diacritics", [], function () {
            var b = {
                "\u24B6": "A",
                "\uFF21": "A",
                "\u00C0": "A",
                "\u00C1": "A",
                "\u00C2": "A",
                "\u1EA6": "A",
                "\u1EA4": "A",
                "\u1EAA": "A",
                "\u1EA8": "A",
                "\u00C3": "A",
                "\u0100": "A",
                "\u0102": "A",
                "\u1EB0": "A",
                "\u1EAE": "A",
                "\u1EB4": "A",
                "\u1EB2": "A",
                "\u0226": "A",
                "\u01E0": "A",
                "\u00C4": "A",
                "\u01DE": "A",
                "\u1EA2": "A",
                "\u00C5": "A",
                "\u01FA": "A",
                "\u01CD": "A",
                "\u0200": "A",
                "\u0202": "A",
                "\u1EA0": "A",
                "\u1EAC": "A",
                "\u1EB6": "A",
                "\u1E00": "A",
                "\u0104": "A",
                "\u023A": "A",
                "\u2C6F": "A",
                "\uA732": "AA",
                "\u00C6": "AE",
                "\u01FC": "AE",
                "\u01E2": "AE",
                "\uA734": "AO",
                "\uA736": "AU",
                "\uA738": "AV",
                "\uA73A": "AV",
                "\uA73C": "AY",
                "\u24B7": "B",
                "\uFF22": "B",
                "\u1E02": "B",
                "\u1E04": "B",
                "\u1E06": "B",
                "\u0243": "B",
                "\u0182": "B",
                "\u0181": "B",
                "\u24B8": "C",
                "\uFF23": "C",
                "\u0106": "C",
                "\u0108": "C",
                "\u010A": "C",
                "\u010C": "C",
                "\u00C7": "C",
                "\u1E08": "C",
                "\u0187": "C",
                "\u023B": "C",
                "\uA73E": "C",
                "\u24B9": "D",
                "\uFF24": "D",
                "\u1E0A": "D",
                "\u010E": "D",
                "\u1E0C": "D",
                "\u1E10": "D",
                "\u1E12": "D",
                "\u1E0E": "D",
                "\u0110": "D",
                "\u018B": "D",
                "\u018A": "D",
                "\u0189": "D",
                "\uA779": "D",
                "\u01F1": "DZ",
                "\u01C4": "DZ",
                "\u01F2": "Dz",
                "\u01C5": "Dz",
                "\u24BA": "E",
                "\uFF25": "E",
                "\u00C8": "E",
                "\u00C9": "E",
                "\u00CA": "E",
                "\u1EC0": "E",
                "\u1EBE": "E",
                "\u1EC4": "E",
                "\u1EC2": "E",
                "\u1EBC": "E",
                "\u0112": "E",
                "\u1E14": "E",
                "\u1E16": "E",
                "\u0114": "E",
                "\u0116": "E",
                "\u00CB": "E",
                "\u1EBA": "E",
                "\u011A": "E",
                "\u0204": "E",
                "\u0206": "E",
                "\u1EB8": "E",
                "\u1EC6": "E",
                "\u0228": "E",
                "\u1E1C": "E",
                "\u0118": "E",
                "\u1E18": "E",
                "\u1E1A": "E",
                "\u0190": "E",
                "\u018E": "E",
                "\u24BB": "F",
                "\uFF26": "F",
                "\u1E1E": "F",
                "\u0191": "F",
                "\uA77B": "F",
                "\u24BC": "G",
                "\uFF27": "G",
                "\u01F4": "G",
                "\u011C": "G",
                "\u1E20": "G",
                "\u011E": "G",
                "\u0120": "G",
                "\u01E6": "G",
                "\u0122": "G",
                "\u01E4": "G",
                "\u0193": "G",
                "\uA7A0": "G",
                "\uA77D": "G",
                "\uA77E": "G",
                "\u24BD": "H",
                "\uFF28": "H",
                "\u0124": "H",
                "\u1E22": "H",
                "\u1E26": "H",
                "\u021E": "H",
                "\u1E24": "H",
                "\u1E28": "H",
                "\u1E2A": "H",
                "\u0126": "H",
                "\u2C67": "H",
                "\u2C75": "H",
                "\uA78D": "H",
                "\u24BE": "I",
                "\uFF29": "I",
                "\u00CC": "I",
                "\u00CD": "I",
                "\u00CE": "I",
                "\u0128": "I",
                "\u012A": "I",
                "\u012C": "I",
                "\u0130": "I",
                "\u00CF": "I",
                "\u1E2E": "I",
                "\u1EC8": "I",
                "\u01CF": "I",
                "\u0208": "I",
                "\u020A": "I",
                "\u1ECA": "I",
                "\u012E": "I",
                "\u1E2C": "I",
                "\u0197": "I",
                "\u24BF": "J",
                "\uFF2A": "J",
                "\u0134": "J",
                "\u0248": "J",
                "\u24C0": "K",
                "\uFF2B": "K",
                "\u1E30": "K",
                "\u01E8": "K",
                "\u1E32": "K",
                "\u0136": "K",
                "\u1E34": "K",
                "\u0198": "K",
                "\u2C69": "K",
                "\uA740": "K",
                "\uA742": "K",
                "\uA744": "K",
                "\uA7A2": "K",
                "\u24C1": "L",
                "\uFF2C": "L",
                "\u013F": "L",
                "\u0139": "L",
                "\u013D": "L",
                "\u1E36": "L",
                "\u1E38": "L",
                "\u013B": "L",
                "\u1E3C": "L",
                "\u1E3A": "L",
                "\u0141": "L",
                "\u023D": "L",
                "\u2C62": "L",
                "\u2C60": "L",
                "\uA748": "L",
                "\uA746": "L",
                "\uA780": "L",
                "\u01C7": "LJ",
                "\u01C8": "Lj",
                "\u24C2": "M",
                "\uFF2D": "M",
                "\u1E3E": "M",
                "\u1E40": "M",
                "\u1E42": "M",
                "\u2C6E": "M",
                "\u019C": "M",
                "\u24C3": "N",
                "\uFF2E": "N",
                "\u01F8": "N",
                "\u0143": "N",
                "\u00D1": "N",
                "\u1E44": "N",
                "\u0147": "N",
                "\u1E46": "N",
                "\u0145": "N",
                "\u1E4A": "N",
                "\u1E48": "N",
                "\u0220": "N",
                "\u019D": "N",
                "\uA790": "N",
                "\uA7A4": "N",
                "\u01CA": "NJ",
                "\u01CB": "Nj",
                "\u24C4": "O",
                "\uFF2F": "O",
                "\u00D2": "O",
                "\u00D3": "O",
                "\u00D4": "O",
                "\u1ED2": "O",
                "\u1ED0": "O",
                "\u1ED6": "O",
                "\u1ED4": "O",
                "\u00D5": "O",
                "\u1E4C": "O",
                "\u022C": "O",
                "\u1E4E": "O",
                "\u014C": "O",
                "\u1E50": "O",
                "\u1E52": "O",
                "\u014E": "O",
                "\u022E": "O",
                "\u0230": "O",
                "\u00D6": "O",
                "\u022A": "O",
                "\u1ECE": "O",
                "\u0150": "O",
                "\u01D1": "O",
                "\u020C": "O",
                "\u020E": "O",
                "\u01A0": "O",
                "\u1EDC": "O",
                "\u1EDA": "O",
                "\u1EE0": "O",
                "\u1EDE": "O",
                "\u1EE2": "O",
                "\u1ECC": "O",
                "\u1ED8": "O",
                "\u01EA": "O",
                "\u01EC": "O",
                "\u00D8": "O",
                "\u01FE": "O",
                "\u0186": "O",
                "\u019F": "O",
                "\uA74A": "O",
                "\uA74C": "O",
                "\u01A2": "OI",
                "\uA74E": "OO",
                "\u0222": "OU",
                "\u24C5": "P",
                "\uFF30": "P",
                "\u1E54": "P",
                "\u1E56": "P",
                "\u01A4": "P",
                "\u2C63": "P",
                "\uA750": "P",
                "\uA752": "P",
                "\uA754": "P",
                "\u24C6": "Q",
                "\uFF31": "Q",
                "\uA756": "Q",
                "\uA758": "Q",
                "\u024A": "Q",
                "\u24C7": "R",
                "\uFF32": "R",
                "\u0154": "R",
                "\u1E58": "R",
                "\u0158": "R",
                "\u0210": "R",
                "\u0212": "R",
                "\u1E5A": "R",
                "\u1E5C": "R",
                "\u0156": "R",
                "\u1E5E": "R",
                "\u024C": "R",
                "\u2C64": "R",
                "\uA75A": "R",
                "\uA7A6": "R",
                "\uA782": "R",
                "\u24C8": "S",
                "\uFF33": "S",
                "\u1E9E": "S",
                "\u015A": "S",
                "\u1E64": "S",
                "\u015C": "S",
                "\u1E60": "S",
                "\u0160": "S",
                "\u1E66": "S",
                "\u1E62": "S",
                "\u1E68": "S",
                "\u0218": "S",
                "\u015E": "S",
                "\u2C7E": "S",
                "\uA7A8": "S",
                "\uA784": "S",
                "\u24C9": "T",
                "\uFF34": "T",
                "\u1E6A": "T",
                "\u0164": "T",
                "\u1E6C": "T",
                "\u021A": "T",
                "\u0162": "T",
                "\u1E70": "T",
                "\u1E6E": "T",
                "\u0166": "T",
                "\u01AC": "T",
                "\u01AE": "T",
                "\u023E": "T",
                "\uA786": "T",
                "\uA728": "TZ",
                "\u24CA": "U",
                "\uFF35": "U",
                "\u00D9": "U",
                "\u00DA": "U",
                "\u00DB": "U",
                "\u0168": "U",
                "\u1E78": "U",
                "\u016A": "U",
                "\u1E7A": "U",
                "\u016C": "U",
                "\u00DC": "U",
                "\u01DB": "U",
                "\u01D7": "U",
                "\u01D5": "U",
                "\u01D9": "U",
                "\u1EE6": "U",
                "\u016E": "U",
                "\u0170": "U",
                "\u01D3": "U",
                "\u0214": "U",
                "\u0216": "U",
                "\u01AF": "U",
                "\u1EEA": "U",
                "\u1EE8": "U",
                "\u1EEE": "U",
                "\u1EEC": "U",
                "\u1EF0": "U",
                "\u1EE4": "U",
                "\u1E72": "U",
                "\u0172": "U",
                "\u1E76": "U",
                "\u1E74": "U",
                "\u0244": "U",
                "\u24CB": "V",
                "\uFF36": "V",
                "\u1E7C": "V",
                "\u1E7E": "V",
                "\u01B2": "V",
                "\uA75E": "V",
                "\u0245": "V",
                "\uA760": "VY",
                "\u24CC": "W",
                "\uFF37": "W",
                "\u1E80": "W",
                "\u1E82": "W",
                "\u0174": "W",
                "\u1E86": "W",
                "\u1E84": "W",
                "\u1E88": "W",
                "\u2C72": "W",
                "\u24CD": "X",
                "\uFF38": "X",
                "\u1E8A": "X",
                "\u1E8C": "X",
                "\u24CE": "Y",
                "\uFF39": "Y",
                "\u1EF2": "Y",
                "\u00DD": "Y",
                "\u0176": "Y",
                "\u1EF8": "Y",
                "\u0232": "Y",
                "\u1E8E": "Y",
                "\u0178": "Y",
                "\u1EF6": "Y",
                "\u1EF4": "Y",
                "\u01B3": "Y",
                "\u024E": "Y",
                "\u1EFE": "Y",
                "\u24CF": "Z",
                "\uFF3A": "Z",
                "\u0179": "Z",
                "\u1E90": "Z",
                "\u017B": "Z",
                "\u017D": "Z",
                "\u1E92": "Z",
                "\u1E94": "Z",
                "\u01B5": "Z",
                "\u0224": "Z",
                "\u2C7F": "Z",
                "\u2C6B": "Z",
                "\uA762": "Z",
                "\u24D0": "a",
                "\uFF41": "a",
                "\u1E9A": "a",
                "\u00E0": "a",
                "\u00E1": "a",
                "\u00E2": "a",
                "\u1EA7": "a",
                "\u1EA5": "a",
                "\u1EAB": "a",
                "\u1EA9": "a",
                "\u00E3": "a",
                "\u0101": "a",
                "\u0103": "a",
                "\u1EB1": "a",
                "\u1EAF": "a",
                "\u1EB5": "a",
                "\u1EB3": "a",
                "\u0227": "a",
                "\u01E1": "a",
                "\u00E4": "a",
                "\u01DF": "a",
                "\u1EA3": "a",
                "\u00E5": "a",
                "\u01FB": "a",
                "\u01CE": "a",
                "\u0201": "a",
                "\u0203": "a",
                "\u1EA1": "a",
                "\u1EAD": "a",
                "\u1EB7": "a",
                "\u1E01": "a",
                "\u0105": "a",
                "\u2C65": "a",
                "\u0250": "a",
                "\uA733": "aa",
                "\u00E6": "ae",
                "\u01FD": "ae",
                "\u01E3": "ae",
                "\uA735": "ao",
                "\uA737": "au",
                "\uA739": "av",
                "\uA73B": "av",
                "\uA73D": "ay",
                "\u24D1": "b",
                "\uFF42": "b",
                "\u1E03": "b",
                "\u1E05": "b",
                "\u1E07": "b",
                "\u0180": "b",
                "\u0183": "b",
                "\u0253": "b",
                "\u24D2": "c",
                "\uFF43": "c",
                "\u0107": "c",
                "\u0109": "c",
                "\u010B": "c",
                "\u010D": "c",
                "\u00E7": "c",
                "\u1E09": "c",
                "\u0188": "c",
                "\u023C": "c",
                "\uA73F": "c",
                "\u2184": "c",
                "\u24D3": "d",
                "\uFF44": "d",
                "\u1E0B": "d",
                "\u010F": "d",
                "\u1E0D": "d",
                "\u1E11": "d",
                "\u1E13": "d",
                "\u1E0F": "d",
                "\u0111": "d",
                "\u018C": "d",
                "\u0256": "d",
                "\u0257": "d",
                "\uA77A": "d",
                "\u01F3": "dz",
                "\u01C6": "dz",
                "\u24D4": "e",
                "\uFF45": "e",
                "\u00E8": "e",
                "\u00E9": "e",
                "\u00EA": "e",
                "\u1EC1": "e",
                "\u1EBF": "e",
                "\u1EC5": "e",
                "\u1EC3": "e",
                "\u1EBD": "e",
                "\u0113": "e",
                "\u1E15": "e",
                "\u1E17": "e",
                "\u0115": "e",
                "\u0117": "e",
                "\u00EB": "e",
                "\u1EBB": "e",
                "\u011B": "e",
                "\u0205": "e",
                "\u0207": "e",
                "\u1EB9": "e",
                "\u1EC7": "e",
                "\u0229": "e",
                "\u1E1D": "e",
                "\u0119": "e",
                "\u1E19": "e",
                "\u1E1B": "e",
                "\u0247": "e",
                "\u025B": "e",
                "\u01DD": "e",
                "\u24D5": "f",
                "\uFF46": "f",
                "\u1E1F": "f",
                "\u0192": "f",
                "\uA77C": "f",
                "\u24D6": "g",
                "\uFF47": "g",
                "\u01F5": "g",
                "\u011D": "g",
                "\u1E21": "g",
                "\u011F": "g",
                "\u0121": "g",
                "\u01E7": "g",
                "\u0123": "g",
                "\u01E5": "g",
                "\u0260": "g",
                "\uA7A1": "g",
                "\u1D79": "g",
                "\uA77F": "g",
                "\u24D7": "h",
                "\uFF48": "h",
                "\u0125": "h",
                "\u1E23": "h",
                "\u1E27": "h",
                "\u021F": "h",
                "\u1E25": "h",
                "\u1E29": "h",
                "\u1E2B": "h",
                "\u1E96": "h",
                "\u0127": "h",
                "\u2C68": "h",
                "\u2C76": "h",
                "\u0265": "h",
                "\u0195": "hv",
                "\u24D8": "i",
                "\uFF49": "i",
                "\u00EC": "i",
                "\u00ED": "i",
                "\u00EE": "i",
                "\u0129": "i",
                "\u012B": "i",
                "\u012D": "i",
                "\u00EF": "i",
                "\u1E2F": "i",
                "\u1EC9": "i",
                "\u01D0": "i",
                "\u0209": "i",
                "\u020B": "i",
                "\u1ECB": "i",
                "\u012F": "i",
                "\u1E2D": "i",
                "\u0268": "i",
                "\u0131": "i",
                "\u24D9": "j",
                "\uFF4A": "j",
                "\u0135": "j",
                "\u01F0": "j",
                "\u0249": "j",
                "\u24DA": "k",
                "\uFF4B": "k",
                "\u1E31": "k",
                "\u01E9": "k",
                "\u1E33": "k",
                "\u0137": "k",
                "\u1E35": "k",
                "\u0199": "k",
                "\u2C6A": "k",
                "\uA741": "k",
                "\uA743": "k",
                "\uA745": "k",
                "\uA7A3": "k",
                "\u24DB": "l",
                "\uFF4C": "l",
                "\u0140": "l",
                "\u013A": "l",
                "\u013E": "l",
                "\u1E37": "l",
                "\u1E39": "l",
                "\u013C": "l",
                "\u1E3D": "l",
                "\u1E3B": "l",
                "\u017F": "l",
                "\u0142": "l",
                "\u019A": "l",
                "\u026B": "l",
                "\u2C61": "l",
                "\uA749": "l",
                "\uA781": "l",
                "\uA747": "l",
                "\u01C9": "lj",
                "\u24DC": "m",
                "\uFF4D": "m",
                "\u1E3F": "m",
                "\u1E41": "m",
                "\u1E43": "m",
                "\u0271": "m",
                "\u026F": "m",
                "\u24DD": "n",
                "\uFF4E": "n",
                "\u01F9": "n",
                "\u0144": "n",
                "\u00F1": "n",
                "\u1E45": "n",
                "\u0148": "n",
                "\u1E47": "n",
                "\u0146": "n",
                "\u1E4B": "n",
                "\u1E49": "n",
                "\u019E": "n",
                "\u0272": "n",
                "\u0149": "n",
                "\uA791": "n",
                "\uA7A5": "n",
                "\u01CC": "nj",
                "\u24DE": "o",
                "\uFF4F": "o",
                "\u00F2": "o",
                "\u00F3": "o",
                "\u00F4": "o",
                "\u1ED3": "o",
                "\u1ED1": "o",
                "\u1ED7": "o",
                "\u1ED5": "o",
                "\u00F5": "o",
                "\u1E4D": "o",
                "\u022D": "o",
                "\u1E4F": "o",
                "\u014D": "o",
                "\u1E51": "o",
                "\u1E53": "o",
                "\u014F": "o",
                "\u022F": "o",
                "\u0231": "o",
                "\u00F6": "o",
                "\u022B": "o",
                "\u1ECF": "o",
                "\u0151": "o",
                "\u01D2": "o",
                "\u020D": "o",
                "\u020F": "o",
                "\u01A1": "o",
                "\u1EDD": "o",
                "\u1EDB": "o",
                "\u1EE1": "o",
                "\u1EDF": "o",
                "\u1EE3": "o",
                "\u1ECD": "o",
                "\u1ED9": "o",
                "\u01EB": "o",
                "\u01ED": "o",
                "\u00F8": "o",
                "\u01FF": "o",
                "\u0254": "o",
                "\uA74B": "o",
                "\uA74D": "o",
                "\u0275": "o",
                "\u01A3": "oi",
                "\u0223": "ou",
                "\uA74F": "oo",
                "\u24DF": "p",
                "\uFF50": "p",
                "\u1E55": "p",
                "\u1E57": "p",
                "\u01A5": "p",
                "\u1D7D": "p",
                "\uA751": "p",
                "\uA753": "p",
                "\uA755": "p",
                "\u24E0": "q",
                "\uFF51": "q",
                "\u024B": "q",
                "\uA757": "q",
                "\uA759": "q",
                "\u24E1": "r",
                "\uFF52": "r",
                "\u0155": "r",
                "\u1E59": "r",
                "\u0159": "r",
                "\u0211": "r",
                "\u0213": "r",
                "\u1E5B": "r",
                "\u1E5D": "r",
                "\u0157": "r",
                "\u1E5F": "r",
                "\u024D": "r",
                "\u027D": "r",
                "\uA75B": "r",
                "\uA7A7": "r",
                "\uA783": "r",
                "\u24E2": "s",
                "\uFF53": "s",
                "\u00DF": "s",
                "\u015B": "s",
                "\u1E65": "s",
                "\u015D": "s",
                "\u1E61": "s",
                "\u0161": "s",
                "\u1E67": "s",
                "\u1E63": "s",
                "\u1E69": "s",
                "\u0219": "s",
                "\u015F": "s",
                "\u023F": "s",
                "\uA7A9": "s",
                "\uA785": "s",
                "\u1E9B": "s",
                "\u24E3": "t",
                "\uFF54": "t",
                "\u1E6B": "t",
                "\u1E97": "t",
                "\u0165": "t",
                "\u1E6D": "t",
                "\u021B": "t",
                "\u0163": "t",
                "\u1E71": "t",
                "\u1E6F": "t",
                "\u0167": "t",
                "\u01AD": "t",
                "\u0288": "t",
                "\u2C66": "t",
                "\uA787": "t",
                "\uA729": "tz",
                "\u24E4": "u",
                "\uFF55": "u",
                "\u00F9": "u",
                "\u00FA": "u",
                "\u00FB": "u",
                "\u0169": "u",
                "\u1E79": "u",
                "\u016B": "u",
                "\u1E7B": "u",
                "\u016D": "u",
                "\u00FC": "u",
                "\u01DC": "u",
                "\u01D8": "u",
                "\u01D6": "u",
                "\u01DA": "u",
                "\u1EE7": "u",
                "\u016F": "u",
                "\u0171": "u",
                "\u01D4": "u",
                "\u0215": "u",
                "\u0217": "u",
                "\u01B0": "u",
                "\u1EEB": "u",
                "\u1EE9": "u",
                "\u1EEF": "u",
                "\u1EED": "u",
                "\u1EF1": "u",
                "\u1EE5": "u",
                "\u1E73": "u",
                "\u0173": "u",
                "\u1E77": "u",
                "\u1E75": "u",
                "\u0289": "u",
                "\u24E5": "v",
                "\uFF56": "v",
                "\u1E7D": "v",
                "\u1E7F": "v",
                "\u028B": "v",
                "\uA75F": "v",
                "\u028C": "v",
                "\uA761": "vy",
                "\u24E6": "w",
                "\uFF57": "w",
                "\u1E81": "w",
                "\u1E83": "w",
                "\u0175": "w",
                "\u1E87": "w",
                "\u1E85": "w",
                "\u1E98": "w",
                "\u1E89": "w",
                "\u2C73": "w",
                "\u24E7": "x",
                "\uFF58": "x",
                "\u1E8B": "x",
                "\u1E8D": "x",
                "\u24E8": "y",
                "\uFF59": "y",
                "\u1EF3": "y",
                "\u00FD": "y",
                "\u0177": "y",
                "\u1EF9": "y",
                "\u0233": "y",
                "\u1E8F": "y",
                "\u00FF": "y",
                "\u1EF7": "y",
                "\u1E99": "y",
                "\u1EF5": "y",
                "\u01B4": "y",
                "\u024F": "y",
                "\u1EFF": "y",
                "\u24E9": "z",
                "\uFF5A": "z",
                "\u017A": "z",
                "\u1E91": "z",
                "\u017C": "z",
                "\u017E": "z",
                "\u1E93": "z",
                "\u1E95": "z",
                "\u01B6": "z",
                "\u0225": "z",
                "\u0240": "z",
                "\u2C6C": "z",
                "\uA763": "z",
                "\u0386": "\u0391",
                "\u0388": "\u0395",
                "\u0389": "\u0397",
                "\u038A": "\u0399",
                "\u03AA": "\u0399",
                "\u038C": "\u039F",
                "\u038E": "\u03A5",
                "\u03AB": "\u03A5",
                "\u038F": "\u03A9",
                "\u03AC": "\u03B1",
                "\u03AD": "\u03B5",
                "\u03AE": "\u03B7",
                "\u03AF": "\u03B9",
                "\u03CA": "\u03B9",
                "\u0390": "\u03B9",
                "\u03CC": "\u03BF",
                "\u03CD": "\u03C5",
                "\u03CB": "\u03C5",
                "\u03B0": "\u03C5",
                "\u03C9": "\u03C9",
                "\u03C2": "\u03C3"
            };
            return b
        });
        a.define("select2/data/base", ["../utils"], function (b) {
            function c(l, k) {
                c.__super__.constructor.call(this)
            }

            b.Extend(c, b.Observable);
            c.prototype.current = function (h) {
                throw new Error("The `current` method must be defined in child classes.")
            };
            c.prototype.query = function (l, k) {
                throw new Error("The `query` method must be defined in child classes.")
            };
            c.prototype.bind = function (l, k) {
            };
            c.prototype.destroy = function () {
            };
            c.prototype.generateResultId = function (n, m) {
                var l = n.id + "-result-";
                l += b.generateChars(4);
                if (m.id != null) {
                    l += "-" + m.id.toString()
                } else {
                    l += "-" + b.generateChars(4)
                }
                return l
            };
            return c
        });
        a.define("select2/data/select", ["./base", "../utils", "jquery"], function (l, b, c) {
            function k(h, g) {
                this.$element = h;
                this.options = g;
                k.__super__.constructor.call(this)
            }

            b.Extend(k, l);
            k.prototype.current = function (g) {
                var h = [];
                var n = this;
                this.$element.find(":selected").each(function () {
                    var m = c(this);
                    var p = n.item(m);
                    h.push(p)
                });
                g(h)
            };
            k.prototype.select = function (h) {
                var n = this;
                h.selected = true;
                if (c(h.element).is("option")) {
                    h.element.selected = true;
                    this.$element.trigger("change");
                    return
                }
                if (this.$element.prop("multiple")) {
                    this.current(function (u) {
                        var r = [];
                        h = [h];
                        h.push.apply(h, u);
                        for (var s = 0; s < h.length; s++) {
                            var m = h[s].id;
                            if (c.inArray(m, r) === -1) {
                                r.push(m)
                            }
                        }
                        n.$element.val(r);
                        n.$element.trigger("change")
                    })
                } else {
                    var g = h.id;
                    this.$element.val(g);
                    this.$element.trigger("change")
                }
            };
            k.prototype.unselect = function (g) {
                var h = this;
                if (!this.$element.prop("multiple")) {
                    return
                }
                g.selected = false;
                if (c(g.element).is("option")) {
                    g.element.selected = false;
                    this.$element.trigger("change");
                    return
                }
                this.current(function (q) {
                    var s = [];
                    for (var u = 0; u < q.length; u++) {
                        var r = q[u].id;
                        if (r !== g.id && c.inArray(r, s) === -1) {
                            s.push(r)
                        }
                    }
                    h.$element.val(s);
                    h.$element.trigger("change")
                })
            };
            k.prototype.bind = function (n, g) {
                var h = this;
                this.container = n;
                n.on("select", function (m) {
                    h.select(m.data)
                });
                n.on("unselect", function (m) {
                    h.unselect(m.data)
                })
            };
            k.prototype.destroy = function () {
                this.$element.find("*").each(function () {
                    c.removeData(this, "data")
                })
            };
            k.prototype.query = function (r, q) {
                var g = [];
                var h = this;
                var p = this.$element.children();
                p.each(function () {
                    var m = c(this);
                    if (!m.is("option") && !m.is("optgroup")) {
                        return
                    }
                    var o = h.item(m);
                    var n = h.matches(r, o);
                    if (n !== null) {
                        g.push(n)
                    }
                });
                q({results: g})
            };
            k.prototype.addOptions = function (g) {
                b.appendMany(this.$element, g)
            };
            k.prototype.option = function (h) {
                var o;
                if (h.children) {
                    o = document.createElement("optgroup");
                    o.label = h.text
                } else {
                    o = document.createElement("option");
                    if (o.textContent !== undefined) {
                        o.textContent = h.text
                    } else {
                        o.innerText = h.text
                    }
                }
                if (h.id) {
                    o.value = h.id
                }
                if (h.disabled) {
                    o.disabled = true
                }
                if (h.selected) {
                    o.selected = true
                }
                if (h.title) {
                    o.title = h.title
                }
                var g = c(o);
                var p = this._normalizeItem(h);
                p.element = o;
                c.data(o, "data", p);
                return g
            };
            k.prototype.item = function (v) {
                var w = {};
                w = c.data(v[0], "data");
                if (w != null) {
                    return w
                }
                if (v.is("option")) {
                    w = {
                        id: v.val(),
                        text: v.text(),
                        disabled: v.prop("disabled"),
                        selected: v.prop("selected"),
                        title: v.prop("title")
                    }
                } else {
                    if (v.is("optgroup")) {
                        w = {
                            text: v.prop("label"),
                            children: [],
                            title: v.prop("title")
                        };
                        var r = v.children("option");
                        var h = [];
                        for (var s = 0; s < r.length; s++) {
                            var g = c(r[s]);
                            var u = this.item(g);
                            h.push(u)
                        }
                        w.children = h
                    }
                }
                w = this._normalizeItem(w);
                w.element = v[0];
                c.data(v[0], "data", w);
                return w
            };
            k.prototype._normalizeItem = function (h) {
                if (!c.isPlainObject(h)) {
                    h = {id: h, text: h}
                }
                h = c.extend({}, {text: ""}, h);
                var g = {selected: false, disabled: false};
                if (h.id != null) {
                    h.id = h.id.toString()
                }
                if (h.text != null) {
                    h.text = h.text.toString()
                }
                if (h._resultId == null && h.id && this.container != null) {
                    h._resultId = this.generateResultId(this.container, h)
                }
                return c.extend({}, g, h)
            };
            k.prototype.matches = function (g, n) {
                var h = this.options.get("matcher");
                return h(g, n)
            };
            return k
        });
        a.define("select2/data/array", ["./select", "../utils", "jquery"], function (l, c, k) {
            function b(n, h) {
                var g = h.get("data") || [];
                b.__super__.constructor.call(this, n, h);
                this.addOptions(this.convertToOptions(g))
            }

            c.Extend(b, l);
            b.prototype.select = function (h) {
                var g = this.$element.find("option").filter(function (o, p) {
                    return p.value == h.id.toString()
                });
                if (g.length === 0) {
                    g = this.option(h);
                    this.addOptions(g)
                }
                b.__super__.select.call(this, h)
            };
            b.prototype.convertToOptions = function (D) {
                var H = this;
                var A = this.$element.find("option");
                var E = A.map(function () {
                    return H.item(k(this)).id
                }).get();
                var B = [];

                function K(m) {
                    return function () {
                        return k(this).val() == m.id
                    }
                }

                for (var L = 0; L < D.length; L++) {
                    var I = this._normalizeItem(D[L]);
                    if (k.inArray(I.id, E) >= 0) {
                        var h = A.filter(K(I));
                        var g = this.item(h);
                        var G = k.extend(true, {}, g, I);
                        var C = this.option(g);
                        h.replaceWith(C);
                        continue
                    }
                    var F = this.option(I);
                    if (I.children) {
                        var J = this.convertToOptions(I.children);
                        c.appendMany(F, J)
                    }
                    B.push(F)
                }
                return B
            };
            return b
        });
        a.define("select2/data/ajax", ["./array", "../utils", "jquery"], function (b, c, k) {
            function l(h, g) {
                this.ajaxOptions = this._applyDefaults(g.get("ajax"));
                if (this.ajaxOptions.processResults != null) {
                    this.processResults = this.ajaxOptions.processResults
                }
                b.__super__.constructor.call(this, h, g)
            }

            c.Extend(l, b);
            l.prototype._applyDefaults = function (h) {
                var g = {
                    data: function (n) {
                        return {q: n.term}
                    }, transport: function (r, s, u) {
                        var q = k.ajax(r);
                        q.then(s);
                        q.fail(u);
                        return q
                    }
                };
                return k.extend({}, g, h, true)
            };
            l.prototype.processResults = function (g) {
                return g
            };
            l.prototype.query = function (s, r) {
                var u = [];
                var q = this;
                if (this._request != null) {
                    if (k.isFunction(this._request.abort)) {
                        this._request.abort()
                    }
                    this._request = null
                }
                var h = k.extend({type: "GET"}, this.ajaxOptions);
                if (typeof h.url === "function") {
                    h.url = h.url(s)
                }
                if (typeof h.data === "function") {
                    h.data = h.data(s)
                }
                function g() {
                    var m = h.transport(h, function (n) {
                        var o = q.processResults(n, s);
                        if (q.options.get("debug") && window.console && console.error) {
                            if (!o || !o.results || !k.isArray(o.results)) {
                                console.error("Select2: The AJAX results did not return an array in the `results` key of the response.")
                            }
                        }
                        r(o)
                    }, function () {
                    });
                    q._request = m
                }

                if (this.ajaxOptions.delay && s.term !== "") {
                    if (this._queryTimeout) {
                        window.clearTimeout(this._queryTimeout)
                    }
                    this._queryTimeout = window.setTimeout(g, this.ajaxOptions.delay)
                } else {
                    g()
                }
            };
            return l
        });
        a.define("select2/data/tags", ["jquery"], function (b) {
            function c(A, x, u) {
                var s = u.get("tags");
                var y = u.get("createTag");
                if (y !== undefined) {
                    this.createTag = y
                }
                A.call(this, x, u);
                if (b.isArray(s)) {
                    for (var v = 0; v < s.length; v++) {
                        var r = s[v];
                        var w = this._normalizeItem(r);
                        var B = this.option(w);
                        this.$element.append(B)
                    }
                }
            }

            c.prototype.query = function (q, p, n) {
                var r = this;
                this._removeOldTags();
                if (p.term == null || p.page != null) {
                    q.call(this, p, n);
                    return
                }
                function o(g, l) {
                    var B = g.results;
                    for (var A = 0; A < B.length; A++) {
                        var y = B[A];
                        var k = (y.children != null && !o({results: y.children}, true));
                        var h = y.text === p.term;
                        if (h || k) {
                            if (l) {
                                return false
                            }
                            g.data = B;
                            n(g);
                            return
                        }
                    }
                    if (l) {
                        return true
                    }
                    var x = r.createTag(p);
                    if (x != null) {
                        var m = r.option(x);
                        m.attr("data-select2-tag", true);
                        r.addOptions([m]);
                        r.insertTag(B, x)
                    }
                    g.results = B;
                    n(g)
                }

                q.call(this, p, o)
            };
            c.prototype.createTag = function (m, l) {
                var n = b.trim(l.term);
                if (n === "") {
                    return null
                }
                return {id: n, text: n}
            };
            c.prototype.insertTag = function (m, l, n) {
                l.unshift(n)
            };
            c.prototype._removeOldTags = function (l) {
                var m = this._lastTag;
                var n = this.$element.find("option[data-select2-tag]");
                n.each(function () {
                    if (this.selected) {
                        return
                    }
                    b(this).remove()
                })
            };
            return c
        });
        a.define("select2/data/tokenizer", ["jquery"], function (b) {
            function c(m, p, o) {
                var n = o.get("tokenizer");
                if (n !== undefined) {
                    this.tokenizer = n
                }
                m.call(this, p, o)
            }

            c.prototype.bind = function (m, n, l) {
                m.call(this, n, l);
                this.$search = n.dropdown.$search || n.selection.$search || l.find(".select2-search__field")
            };
            c.prototype.query = function (q, p, u) {
                var r = this;

                function s(g) {
                    r.select(g)
                }

                p.term = p.term || "";
                var o = this.tokenizer(p, this.options, s);
                if (o.term !== p.term) {
                    if (this.$search.length) {
                        this.$search.val(o.term);
                        this.$search.focus()
                    }
                    p.term = o.term
                }
                q.call(this, p, u)
            };
            c.prototype.tokenizer = function (x, D, G, H) {
                var C = G.get("tokenSeparators") || [];
                var E = D.term;
                var A = 0;
                var y = this.createTag || function (g) {
                    return {id: g.term, text: g.term}
                };
                while (A < E.length) {
                    var v = E[A];
                    if (b.inArray(v, C) === -1) {
                        A++;
                        continue
                    }
                    var F = E.substr(0, A);
                    var w = b.extend({}, D, {term: F});
                    var B = y(w);
                    H(B);
                    E = E.substr(A + 1) || "";
                    A = 0
                }
                return {term: E}
            };
            return c
        });
        a.define("select2/data/minimumInputLength", [], function () {
            function b(c, k, l) {
                this.minimumInputLength = l.get("minimumInputLength");
                c.call(this, k, l)
            }

            b.prototype.query = function (l, k, c) {
                k.term = k.term || "";
                if (k.term.length < this.minimumInputLength) {
                    this.trigger("results:message", {
                        message: "inputTooShort",
                        args: {
                            minimum: this.minimumInputLength,
                            input: k.term,
                            params: k
                        }
                    });
                    return
                }
                l.call(this, k, c)
            };
            return b
        });
        a.define("select2/data/maximumInputLength", [], function () {
            function b(c, k, l) {
                this.maximumInputLength = l.get("maximumInputLength");
                c.call(this, k, l)
            }

            b.prototype.query = function (l, k, c) {
                k.term = k.term || "";
                if (this.maximumInputLength > 0 && k.term.length > this.maximumInputLength) {
                    this.trigger("results:message", {
                        message: "inputTooLong",
                        args: {
                            maximum: this.maximumInputLength,
                            input: k.term,
                            params: k
                        }
                    });
                    return
                }
                l.call(this, k, c)
            };
            return b
        });
        a.define("select2/data/maximumSelectionLength", [], function () {
            function b(c, k, l) {
                this.maximumSelectionLength = l.get("maximumSelectionLength");
                c.call(this, k, l)
            }

            b.prototype.query = function (m, l, c) {
                var n = this;
                this.current(function (h) {
                    var g = h != null ? h.length : 0;
                    if (n.maximumSelectionLength > 0 && g >= n.maximumSelectionLength) {
                        n.trigger("results:message", {
                            message: "maximumSelected",
                            args: {maximum: n.maximumSelectionLength}
                        });
                        return
                    }
                    m.call(n, l, c)
                })
            };
            return b
        });
        a.define("select2/dropdown", ["jquery", "./utils"], function (b, c) {
            function h(l, g) {
                this.$element = l;
                this.options = g;
                h.__super__.constructor.call(this)
            }

            c.Extend(h, c.Observable);
            h.prototype.render = function () {
                var g = b('<span class="select2-dropdown"><span class="select2-results"></span></span>');
                g.attr("dir", this.options.get("dir"));
                this.$dropdown = g;
                return g
            };
            h.prototype.position = function (l, g) {
            };
            h.prototype.destroy = function () {
                this.$dropdown.remove()
            };
            return h
        });
        a.define("select2/dropdown/search", ["jquery", "../utils"], function (b, c) {
            function h() {
            }

            h.prototype.render = function (m) {
                var g = m.call(this);
                var n = b('<span class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" role="textbox" /></span>');
                this.$searchContainer = n;
                this.$search = n.find("input");
                g.prepend(n);
                return g
            };
            h.prototype.bind = function (n, p, g) {
                var o = this;
                n.call(this, p, g);
                this.$search.on("keydown", function (k) {
                    o.trigger("keypress", k);
                    o._keyUpPrevented = k.isDefaultPrevented()
                });
                this.$search.on("input", function (k) {
                    b(this).off("keyup")
                });
                this.$search.on("keyup input", function (k) {
                    o.handleSearch(k)
                });
                p.on("open", function () {
                    o.$search.attr("tabindex", 0);
                    o.$search.focus();
                    window.setTimeout(function () {
                        o.$search.focus()
                    }, 0)
                });
                p.on("close", function () {
                    o.$search.attr("tabindex", -1);
                    o.$search.val("")
                });
                p.on("results:all", function (k) {
                    if (k.query.term == null || k.query.term === "") {
                        var l = o.showSearch(k);
                        if (l) {
                            o.$searchContainer.removeClass("select2-search--hide")
                        } else {
                            o.$searchContainer.addClass("select2-search--hide")
                        }
                    }
                })
            };
            h.prototype.handleSearch = function (l) {
                if (!this._keyUpPrevented) {
                    var g = this.$search.val();
                    this.trigger("query", {term: g})
                }
                this._keyUpPrevented = false
            };
            h.prototype.showSearch = function (l, g) {
                return true
            };
            return h
        });
        a.define("select2/dropdown/hidePlaceholder", [], function () {
            function b(l, n, m, c) {
                this.placeholder = this.normalizePlaceholder(m.get("placeholder"));
                l.call(this, n, m, c)
            }

            b.prototype.append = function (c, h) {
                h.results = this.removePlaceholder(h.results);
                c.call(this, h)
            };
            b.prototype.normalizePlaceholder = function (h, c) {
                if (typeof c === "string") {
                    c = {id: "", text: c}
                }
                return c
            };
            b.prototype.removePlaceholder = function (p, m) {
                var n = m.slice(0);
                for (var c = m.length - 1; c >= 0; c--) {
                    var o = m[c];
                    if (this.placeholder.id === o.id) {
                        n.splice(c, 1)
                    }
                }
                return n
            };
            return b
        });
        a.define("select2/dropdown/infiniteScroll", ["jquery"], function (b) {
            function c(n, p, o, m) {
                this.lastParams = {};
                n.call(this, p, o, m);
                this.$loadingMore = this.createLoadingMore();
                this.loading = false
            }

            c.prototype.append = function (k, l) {
                this.$loadingMore.remove();
                this.loading = false;
                k.call(this, l);
                if (this.showLoadingMore(l)) {
                    this.$results.append(this.$loadingMore)
                }
            };
            c.prototype.bind = function (n, p, m) {
                var o = this;
                n.call(this, p, m);
                p.on("query", function (g) {
                    o.lastParams = g;
                    o.loading = true
                });
                p.on("query:append", function (g) {
                    o.lastParams = g;
                    o.loading = true
                });
                this.$results.on("scroll", function () {
                    var h = b.contains(document.documentElement, o.$loadingMore[0]);
                    if (o.loading || !h) {
                        return
                    }
                    var k = o.$results.offset().top + o.$results.outerHeight(false);
                    var g = o.$loadingMore.offset().top + o.$loadingMore.outerHeight(false);
                    if (k + 50 >= g) {
                        o.loadMore()
                    }
                })
            };
            c.prototype.loadMore = function () {
                this.loading = true;
                var h = b.extend({}, {page: 1}, this.lastParams);
                h.page++;
                this.trigger("query:append", h)
            };
            c.prototype.showLoadingMore = function (l, k) {
                return k.pagination && k.pagination.more
            };
            c.prototype.createLoadingMore = function () {
                var k = b('<li class="option load-more" role="treeitem"></li>');
                var l = this.options.get("translations").get("loadingMore");
                k.html(l(this.lastParams));
                return k
            };
            return c
        });
        a.define("select2/dropdown/attachBody", ["jquery", "../utils"], function (b, c) {
            function h(g, n, m) {
                this.$dropdownParent = m.get("dropdownParent") || document.body;
                g.call(this, n, m)
            }

            h.prototype.bind = function (g, q, r) {
                var o = this;
                var p = false;
                g.call(this, q, r);
                q.on("open", function () {
                    o._showDropdown();
                    o._attachPositioningHandler(q);
                    if (!p) {
                        p = true;
                        q.on("results:all", function () {
                            o._positionDropdown();
                            o._resizeDropdown()
                        });
                        q.on("results:append", function () {
                            o._positionDropdown();
                            o._resizeDropdown()
                        })
                    }
                });
                q.on("close", function () {
                    o._hideDropdown();
                    o._detachPositioningHandler(q)
                });
                this.$dropdownContainer.on("mousedown", function (k) {
                    k.stopPropagation()
                })
            };
            h.prototype.position = function (n, m, g) {
                m.attr("class", g.attr("class"));
                m.removeClass("select2");
                m.addClass("select2-container--open");
                m.css({position: "absolute", top: -999999});
                this.$container = g
            };
            h.prototype.render = function (n) {
                var g = b("<span></span>");
                var m = n.call(this);
                g.append(m);
                this.$dropdownContainer = g;
                return g
            };
            h.prototype._hideDropdown = function (g) {
                this.$dropdownContainer.detach()
            };
            h.prototype._attachPositioningHandler = function (r) {
                var q = this;
                var g = "scroll.select2." + r.id;
                var s = "resize.select2." + r.id;
                var u = "orientationchange.select2." + r.id;
                var p = this.$container.parents().filter(c.hasScroll);
                p.each(function () {
                    b(this).data("select2-scroll-position", {
                        x: b(this).scrollLeft(),
                        y: b(this).scrollTop()
                    })
                });
                p.on(g, function (k) {
                    var l = b(this).data("select2-scroll-position");
                    b(this).scrollTop(l.y)
                });
                b(window).on(g + " " + s + " " + u, function (k) {
                    q._positionDropdown();
                    q._resizeDropdown()
                })
            };
            h.prototype._detachPositioningHandler = function (q) {
                var o = "scroll.select2." + q.id;
                var r = "resize.select2." + q.id;
                var g = "orientationchange.select2." + q.id;
                var p = this.$container.parents().filter(c.hasScroll);
                p.off(o);
                b(window).off(o + " " + r + " " + g)
            };
            h.prototype._positionDropdown = function () {
                var C = b(window);
                var F = this.$dropdown.hasClass("select2-dropdown--above");
                var D = this.$dropdown.hasClass("select2-dropdown--below");
                var H = null;
                var A = this.$container.position();
                var B = this.$container.offset();
                B.bottom = B.top + this.$container.outerHeight(false);
                var E = {height: this.$container.outerHeight(false)};
                E.top = B.top;
                E.bottom = B.top + E.height;
                var G = {height: this.$dropdown.outerHeight(false)};
                var w = {
                    top: C.scrollTop(),
                    bottom: C.scrollTop() + C.height()
                };
                var x = w.top < (B.top - G.height);
                var g = w.bottom > (B.bottom + G.height);
                var y = {left: B.left, top: E.bottom};
                if (!F && !D) {
                    H = "below"
                }
                if (!g && x && !F) {
                    H = "above"
                } else {
                    if (!x && g && F) {
                        H = "below"
                    }
                }
                if (H == "above" || (F && H !== "below")) {
                    y.top = E.top - G.height
                }
                if (H != null) {
                    this.$dropdown.removeClass("select2-dropdown--below select2-dropdown--above").addClass("select2-dropdown--" + H);
                    this.$container.removeClass("select2-container--below select2-container--above").addClass("select2-container--" + H)
                }
                this.$dropdownContainer.css(y)
            };
            h.prototype._resizeDropdown = function () {
                this.$dropdownContainer.width();
                var g = {width: this.$container.outerWidth(false) + "px"};
                if (this.options.get("dropdownAutoWidth")) {
                    g.minWidth = g.width;
                    g.width = "auto"
                }
                this.$dropdown.css(g)
            };
            h.prototype._showDropdown = function (g) {
                this.$dropdownContainer.appendTo(this.$dropdownParent);
                this._positionDropdown();
                this._resizeDropdown()
            };
            return h
        });
        a.define("select2/dropdown/minimumResultsForSearch", [], function () {
            function b(n) {
                var o = 0;
                for (var m = 0; m < n.length; m++) {
                    var p = n[m];
                    if (p.children) {
                        o += b(p.children)
                    } else {
                        o++
                    }
                }
                return o
            }

            function c(n, p, o, m) {
                this.minimumResultsForSearch = o.get("minimumResultsForSearch");
                if (this.minimumResultsForSearch < 0) {
                    this.minimumResultsForSearch = Infinity
                }
                n.call(this, p, o, m)
            }

            c.prototype.showSearch = function (l, k) {
                if (b(k.data.results) < this.minimumResultsForSearch) {
                    return false
                }
                return l.call(this, k)
            };
            return c
        });
        a.define("select2/dropdown/selectOnClose", [], function () {
            function b() {
            }

            b.prototype.bind = function (l, n, c) {
                var m = this;
                l.call(this, n, c);
                n.on("close", function () {
                    m._handleSelectOnClose()
                })
            };
            b.prototype._handleSelectOnClose = function () {
                var c = this.getHighlightedResults();
                if (c.length < 1) {
                    return
                }
                this.trigger("select", {data: c.data("data")})
            };
            return b
        });
        a.define("select2/dropdown/closeOnSelect", [], function () {
            function b() {
            }

            b.prototype.bind = function (l, n, c) {
                var m = this;
                l.call(this, n, c);
                n.on("select", function (g) {
                    m._selectTriggered(g)
                });
                n.on("unselect", function (g) {
                    m._selectTriggered(g)
                })
            };
            b.prototype._selectTriggered = function (c, k) {
                var l = k.originalEvent;
                if (l && l.ctrlKey) {
                    return
                }
                this.trigger("close")
            };
            return b
        });
        a.define("select2/i18n/en", [], function () {
            return {
                errorLoading: function () {
                    return "The results could not be loaded."
                }, inputTooLong: function (h) {
                    var b = h.input.length - h.maximum;
                    var c = "Please delete " + b + " character";
                    if (b != 1) {
                        c += "s"
                    }
                    return c
                }, inputTooShort: function (h) {
                    var b = h.minimum - h.input.length;
                    var c = "Please enter " + b + " or more characters";
                    return c
                }, loadingMore: function () {
                    return "Loading more results…"
                }, maximumSelected: function (c) {
                    var b = "You can only select " + c.maximum + " item";
                    if (c.maximum != 1) {
                        b += "s"
                    }
                    return b
                }, noResults: function () {
                    return "No results found"
                }, searching: function () {
                    return "Searching…"
                }
            }
        });
        a.define("select2/defaults", ["jquery", "require", "./results", "./selection/single", "./selection/multiple", "./selection/placeholder", "./selection/allowClear", "./selection/search", "./selection/eventRelay", "./utils", "./translation", "./diacritics", "./data/select", "./data/array", "./data/ajax", "./data/tags", "./data/tokenizer", "./data/minimumInputLength", "./data/maximumInputLength", "./data/maximumSelectionLength", "./dropdown", "./dropdown/search", "./dropdown/hidePlaceholder", "./dropdown/infiniteScroll", "./dropdown/attachBody", "./dropdown/minimumResultsForSearch", "./dropdown/selectOnClose", "./dropdown/closeOnSelect", "./i18n/en"], function (an, aj, Q, ae, T, N, ak, U, P, ap, R, b, X, V, ao, ad, am, S, c, ag, Y, ah, aa, Z, W, O, ai, al, ac) {
            function ab() {
                this.reset()
            }

            ab.prototype.apply = function (x) {
                x = an.extend({}, this.defaults, x);
                if (x.dataAdapter == null) {
                    if (x.ajax != null) {
                        x.dataAdapter = ao
                    } else {
                        if (x.data != null) {
                            x.dataAdapter = V
                        } else {
                            x.dataAdapter = X
                        }
                    }
                    if (x.minimumInputLength > 0) {
                        x.dataAdapter = ap.Decorate(x.dataAdapter, S)
                    }
                    if (x.maximumInputLength > 0) {
                        x.dataAdapter = ap.Decorate(x.dataAdapter, c)
                    }
                    if (x.maximumSelectionLength > 0) {
                        x.dataAdapter = ap.Decorate(x.dataAdapter, ag)
                    }
                    if (x.tags) {
                        x.dataAdapter = ap.Decorate(x.dataAdapter, ad)
                    }
                    if (x.tokenSeparators != null || x.tokenizer != null) {
                        x.dataAdapter = ap.Decorate(x.dataAdapter, am)
                    }
                    if (x.query != null) {
                        var n = aj(x.amdBase + "compat/query");
                        x.dataAdapter = ap.Decorate(x.dataAdapter, n)
                    }
                    if (x.initSelection != null) {
                        var y = aj(x.amdBase + "compat/initSelection");
                        x.dataAdapter = ap.Decorate(x.dataAdapter, y)
                    }
                }
                if (x.resultsAdapter == null) {
                    x.resultsAdapter = Q;
                    if (x.ajax != null) {
                        x.resultsAdapter = ap.Decorate(x.resultsAdapter, Z)
                    }
                    if (x.placeholder != null) {
                        x.resultsAdapter = ap.Decorate(x.resultsAdapter, aa)
                    }
                    if (x.selectOnClose) {
                        x.resultsAdapter = ap.Decorate(x.resultsAdapter, ai)
                    }
                }
                if (x.dropdownAdapter == null) {
                    if (x.multiple) {
                        x.dropdownAdapter = Y
                    } else {
                        var u = ap.Decorate(Y, ah);
                        x.dropdownAdapter = u
                    }
                    if (x.minimumResultsForSearch !== 0) {
                        x.dropdownAdapter = ap.Decorate(x.dropdownAdapter, O)
                    }
                    if (x.closeOnSelect) {
                        x.dropdownAdapter = ap.Decorate(x.dropdownAdapter, al)
                    }
                    if (x.dropdownCssClass != null || x.dropdownCss != null || x.adaptDropdownCssClass != null) {
                        var v = aj(x.amdBase + "compat/dropdownCss");
                        x.dropdownAdapter = ap.Decorate(x.dropdownAdapter, v)
                    }
                    x.dropdownAdapter = ap.Decorate(x.dropdownAdapter, W)
                }
                if (x.selectionAdapter == null) {
                    if (x.multiple) {
                        x.selectionAdapter = T
                    } else {
                        x.selectionAdapter = ae
                    }
                    if (x.placeholder != null) {
                        x.selectionAdapter = ap.Decorate(x.selectionAdapter, N)
                    }
                    if (x.allowClear) {
                        x.selectionAdapter = ap.Decorate(x.selectionAdapter, ak)
                    }
                    if (x.multiple) {
                        x.selectionAdapter = ap.Decorate(x.selectionAdapter, U)
                    }
                    if (x.containerCssClass != null || x.containerCss != null || x.adaptContainerCssClass != null) {
                        var l = aj(x.amdBase + "compat/containerCss");
                        x.selectionAdapter = ap.Decorate(x.selectionAdapter, l)
                    }
                    x.selectionAdapter = ap.Decorate(x.selectionAdapter, P)
                }
                if (typeof x.language === "string") {
                    if (x.language.indexOf("-") > 0) {
                        var q = x.language.split("-");
                        var o = q[0];
                        x.language = [x.language, o]
                    } else {
                        x.language = [x.language]
                    }
                }
                if (an.isArray(x.language)) {
                    var r = new R();
                    x.language.push("en");
                    var g = x.language;
                    for (var s = 0; s < g.length; s++) {
                        var w = g[s];
                        var p = {};
                        try {
                            p = R.loadPath(w)
                        } catch (m) {
                            try {
                                w = this.defaults.amdLanguageBase + w;
                                p = R.loadPath(w)
                            } catch (h) {
                                if (x.debug && window.console && console.warn) {
                                    console.warn('Select2: The language file for "' + w + '" could not be automatically loaded. A fallback will be used instead.')
                                }
                                continue
                            }
                        }
                        r.extend(p)
                    }
                    x.translations = r
                } else {
                    var k = R.loadPath(this.defaults.amdLanguageBase + "en");
                    var A = new R(x.language);
                    A.extend(k);
                    x.translations = A
                }
                return x
            };
            ab.prototype.reset = function () {
                function g(k) {
                    function l(m) {
                        return b[m] || m
                    }

                    return k.replace(/[^\u0000-\u007E]/g, l)
                }

                function h(m, n) {
                    if (an.trim(m.term) === "") {
                        return n
                    }
                    if (n.children && n.children.length > 0) {
                        var r = an.extend(true, {}, n);
                        for (var k = n.children.length - 1; k >= 0; k--) {
                            var l = n.children[k];
                            var o = h(m, l);
                            if (o == null) {
                                r.children.splice(k, 1)
                            }
                        }
                        if (r.children.length > 0) {
                            return r
                        }
                        return h(m, r)
                    }
                    var p = g(n.text).toUpperCase();
                    var q = g(m.term).toUpperCase();
                    if (p.indexOf(q) > -1) {
                        return n
                    }
                    return null
                }

                this.defaults = {
                    amdBase: "./",
                    amdLanguageBase: "./i18n/",
                    closeOnSelect: true,
                    debug: false,
                    dropdownAutoWidth: false,
                    escapeMarkup: ap.escapeMarkup,
                    language: ac,
                    matcher: h,
                    minimumInputLength: 0,
                    maximumInputLength: 0,
                    maximumSelectionLength: 0,
                    minimumResultsForSearch: 0,
                    selectOnClose: false,
                    sorter: function (k) {
                        return k
                    },
                    templateResult: function (k) {
                        return k.text
                    },
                    templateSelection: function (k) {
                        return k.text
                    },
                    theme: "default",
                    width: "resolve"
                }
            };
            ab.prototype.set = function (l, h) {
                var m = an.camelCase(l);
                var k = {};
                k[m] = h;
                var g = ap._convertData(k);
                an.extend(this.defaults, g)
            };
            var af = new ab();
            return af
        });
        a.define("select2/options", ["require", "jquery", "./defaults", "./utils"], function (m, c, b, l) {
            function n(k, h) {
                this.options = k;
                if (h != null) {
                    this.fromElement(h)
                }
                this.options = b.apply(this.options);
                if (h && h.is("input")) {
                    var g = m(this.get("amdBase") + "compat/inputData");
                    this.options.dataAdapter = l.Decorate(this.options.dataAdapter, g)
                }
            }

            n.prototype.fromElement = function (h) {
                var r = ["select2"];
                if (this.options.multiple == null) {
                    this.options.multiple = h.prop("multiple")
                }
                if (this.options.disabled == null) {
                    this.options.disabled = h.prop("disabled")
                }
                if (this.options.language == null) {
                    if (h.prop("lang")) {
                        this.options.language = h.prop("lang").toLowerCase()
                    } else {
                        if (h.closest("[lang]").prop("lang")) {
                            this.options.language = h.closest("[lang]").prop("lang")
                        }
                    }
                }
                if (this.options.dir == null) {
                    if (h.prop("dir")) {
                        this.options.dir = h.prop("dir")
                    } else {
                        if (h.closest("[dir]").prop("dir")) {
                            this.options.dir = h.closest("[dir]").prop("dir")
                        } else {
                            this.options.dir = "ltr"
                        }
                    }
                }
                h.prop("disabled", this.options.disabled);
                h.prop("multiple", this.options.multiple);
                if (h.data("select2Tags")) {
                    if (this.options.debug && window.console && console.warn) {
                        console.warn('Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags="true"` attributes and will be removed in future versions of Select2.')
                    }
                    h.data("data", h.data("select2Tags"));
                    h.data("tags", true)
                }
                if (h.data("ajaxUrl")) {
                    if (this.options.debug && window.console && console.warn) {
                        console.warn("Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2.")
                    }
                    h.attr("ajax--url", h.data("ajaxUrl"));
                    h.data("ajax--url", h.data("ajaxUrl"))
                }
                var k = {};
                if (c.fn.jquery && c.fn.jquery.substr(0, 2) == "1." && h[0].dataset) {
                    k = c.extend(true, {}, h[0].dataset, h.data())
                } else {
                    k = h.data()
                }
                var q = c.extend(true, {}, k);
                q = l._convertData(q);
                for (var g in q) {
                    if (c.inArray(g, r) > -1) {
                        continue
                    }
                    if (c.isPlainObject(this.options[g])) {
                        c.extend(this.options[g], q[g])
                    } else {
                        this.options[g] = q[g]
                    }
                }
                return this
            };
            n.prototype.get = function (g) {
                return this.options[g]
            };
            n.prototype.set = function (h, g) {
                this.options[h] = g
            };
            return n
        });
        a.define("select2/core", ["jquery", "./options", "./utils", "./keys"], function (b, l, c, n) {
            var m = function (h, A) {
                if (h.data("select2") != null) {
                    h.data("select2").destroy()
                }
                this.$element = h;
                this.id = this._generateId(h);
                A = A || {};
                this.options = new l(A, h);
                m.__super__.constructor.call(this);
                var v = h.attr("tabindex") || 0;
                h.data("old-tabindex", v);
                h.attr("tabindex", "-1");
                var w = this.options.get("dataAdapter");
                this.dataAdapter = new w(h, this.options);
                var B = this.render();
                this._placeContainer(B);
                var k = this.options.get("selectionAdapter");
                this.selection = new k(h, this.options);
                this.$selection = this.selection.render();
                this.selection.position(this.$selection, B);
                var y = this.options.get("dropdownAdapter");
                this.dropdown = new y(h, this.options);
                this.$dropdown = this.dropdown.render();
                this.dropdown.position(this.$dropdown, B);
                var x = this.options.get("resultsAdapter");
                this.results = new x(h, this.options, this.dataAdapter);
                this.$results = this.results.render();
                this.results.position(this.$results, this.$dropdown);
                var g = this;
                this._bindAdapters();
                this._registerDomEvents();
                this._registerDataEvents();
                this._registerSelectionEvents();
                this._registerDropdownEvents();
                this._registerResultsEvents();
                this._registerEvents();
                this.dataAdapter.current(function (o) {
                    g.trigger("selection:update", {data: o})
                });
                h.addClass("select2-hidden-accessible");
                h.attr("aria-hidden", "true");
                this._syncAttributes();
                h.data("select2", this)
            };
            c.Extend(m, c.Observable);
            m.prototype._generateId = function (h) {
                var g = "";
                if (h.attr("id") != null) {
                    g = h.attr("id")
                } else {
                    if (h.attr("name") != null) {
                        g = h.attr("name") + "-" + c.generateChars(2)
                    } else {
                        g = c.generateChars(4)
                    }
                }
                g = "select2-" + g;
                return g
            };
            m.prototype._placeContainer = function (g) {
                g.insertAfter(this.$element);
                var h = this._resolveWidth(this.$element, this.options.get("width"));
                if (h != null) {
                    g.css("width", h)
                }
            };
            m.prototype._resolveWidth = function (C, B) {
                var E = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;
                if (B == "resolve") {
                    var k = this._resolveWidth(C, "style");
                    if (k != null) {
                        return k
                    }
                    return this._resolveWidth(C, "element")
                }
                if (B == "element") {
                    var F = C.outerWidth(false);
                    if (F <= 0) {
                        return "auto"
                    }
                    return F + "px"
                }
                if (B == "style") {
                    var A = C.attr("style");
                    if (typeof(A) !== "string") {
                        return null
                    }
                    var D = A.split(";");
                    for (var h = 0, y = D.length; h < y; h = h + 1) {
                        var G = D[h].replace(/\s/g, "");
                        var g = G.match(E);
                        if (g !== null && g.length >= 1) {
                            return g[1]
                        }
                    }
                    return null
                }
                return B
            };
            m.prototype._bindAdapters = function () {
                this.dataAdapter.bind(this, this.$container);
                this.selection.bind(this, this.$container);
                this.dropdown.bind(this, this.$container);
                this.results.bind(this, this.$container)
            };
            m.prototype._registerDomEvents = function () {
                var g = this;
                this.$element.on("change.select2", function () {
                    g.dataAdapter.current(function (k) {
                        g.trigger("selection:update", {data: k})
                    })
                });
                this._sync = c.bind(this._syncAttributes, this);
                if (this.$element[0].attachEvent) {
                    this.$element[0].attachEvent("onpropertychange", this._sync)
                }
                var h = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
                if (h != null) {
                    this._observer = new h(function (k) {
                        b.each(k, g._sync)
                    });
                    this._observer.observe(this.$element[0], {
                        attributes: true,
                        subtree: false
                    })
                } else {
                    if (this.$element[0].addEventListener) {
                        this.$element[0].addEventListener("DOMAttrModified", g._sync, false)
                    }
                }
            };
            m.prototype._registerDataEvents = function () {
                var g = this;
                this.dataAdapter.on("*", function (h, k) {
                    g.trigger(h, k)
                })
            };
            m.prototype._registerSelectionEvents = function () {
                var h = this;
                var g = ["toggle"];
                this.selection.on("toggle", function () {
                    h.toggleDropdown()
                });
                this.selection.on("*", function (p, k) {
                    if (b.inArray(p, g) !== -1) {
                        return
                    }
                    h.trigger(p, k)
                })
            };
            m.prototype._registerDropdownEvents = function () {
                var g = this;
                this.dropdown.on("*", function (h, k) {
                    g.trigger(h, k)
                })
            };
            m.prototype._registerResultsEvents = function () {
                var g = this;
                this.results.on("*", function (h, k) {
                    g.trigger(h, k)
                })
            };
            m.prototype._registerEvents = function () {
                var g = this;
                this.on("open", function () {
                    g.$container.addClass("select2-container--open")
                });
                this.on("close", function () {
                    g.$container.removeClass("select2-container--open")
                });
                this.on("enable", function () {
                    g.$container.removeClass("select2-container--disabled")
                });
                this.on("disable", function () {
                    g.$container.addClass("select2-container--disabled")
                });
                this.on("focus", function () {
                    g.$container.addClass("select2-container--focus")
                });
                this.on("blur", function () {
                    g.$container.removeClass("select2-container--focus")
                });
                this.on("query", function (h) {
                    if (!g.isOpen()) {
                        g.trigger("open")
                    }
                    this.dataAdapter.query(h, function (k) {
                        g.trigger("results:all", {data: k, query: h})
                    })
                });
                this.on("query:append", function (h) {
                    this.dataAdapter.query(h, function (k) {
                        g.trigger("results:append", {data: k, query: h})
                    })
                });
                this.on("keypress", function (h) {
                    var k = h.which;
                    if (g.isOpen()) {
                        if (k === n.ENTER) {
                            g.trigger("results:select");
                            h.preventDefault()
                        } else {
                            if ((k === n.SPACE && h.ctrlKey)) {
                                g.trigger("results:toggle");
                                h.preventDefault()
                            } else {
                                if (k === n.UP) {
                                    g.trigger("results:previous");
                                    h.preventDefault()
                                } else {
                                    if (k === n.DOWN) {
                                        g.trigger("results:next");
                                        h.preventDefault()
                                    } else {
                                        if (k === n.ESC || k === n.TAB) {
                                            g.close();
                                            h.preventDefault()
                                        }
                                    }
                                }
                            }
                        }
                    } else {
                        if (k === n.ENTER || k === n.SPACE || ((k === n.DOWN || k === n.UP) && h.altKey)) {
                            g.open();
                            h.preventDefault()
                        }
                    }
                })
            };
            m.prototype._syncAttributes = function () {
                this.options.set("disabled", this.$element.prop("disabled"));
                if (this.options.get("disabled")) {
                    if (this.isOpen()) {
                        this.close()
                    }
                    this.trigger("disable")
                } else {
                    this.trigger("enable")
                }
            };
            m.prototype.trigger = function (s, u) {
                var r = m.__super__.trigger;
                var k = {
                    open: "opening",
                    close: "closing",
                    select: "selecting",
                    unselect: "unselecting"
                };
                if (s in k) {
                    var g = k[s];
                    var h = {prevented: false, name: s, args: u};
                    r.call(this, g, h);
                    if (h.prevented) {
                        u.prevented = true;
                        return
                    }
                }
                r.call(this, s, u)
            };
            m.prototype.toggleDropdown = function () {
                if (this.options.get("disabled")) {
                    return
                }
                if (this.isOpen()) {
                    this.close()
                } else {
                    this.open()
                }
            };
            m.prototype.open = function () {
                if (this.isOpen()) {
                    return
                }
                this.trigger("query", {});
                this.trigger("open")
            };
            m.prototype.close = function () {
                if (!this.isOpen()) {
                    return
                }
                this.trigger("close")
            };
            m.prototype.isOpen = function () {
                return this.$container.hasClass("select2-container--open")
            };
            m.prototype.enable = function (h) {
                if (this.options.get("debug") && window.console && console.warn) {
                    console.warn('Select2: The `select2("enable")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop("disabled") instead.')
                }
                if (h == null || h.length === 0) {
                    h = [true]
                }
                var g = !h[0];
                this.$element.prop("disabled", g)
            };
            m.prototype.data = function () {
                if (this.options.get("debug") && arguments.length > 0 && window.console && console.warn) {
                    console.warn('Select2: Data can no longer be set using `select2("data")`. You should consider setting the value instead using `$element.val()`.')
                }
                var g = [];
                this.dataAdapter.current(function (h) {
                    g = h
                });
                return g
            };
            m.prototype.val = function (g) {
                if (this.options.get("debug") && window.console && console.warn) {
                    console.warn('Select2: The `select2("val")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.')
                }
                if (g == null || g.length === 0) {
                    return this.$element.val()
                }
                var h = g[0];
                if (b.isArray(h)) {
                    h = b.map(h, function (k) {
                        return k.toString()
                    })
                }
                this.$element.val(h).trigger("change")
            };
            m.prototype.destroy = function () {
                this.$container.remove();
                if (this.$element[0].detachEvent) {
                    this.$element[0].detachEvent("onpropertychange", this._sync)
                }
                if (this._observer != null) {
                    this._observer.disconnect();
                    this._observer = null
                } else {
                    if (this.$element[0].removeEventListener) {
                        this.$element[0].removeEventListener("DOMAttrModified", this._sync, false)
                    }
                }
                this._sync = null;
                this.$element.off(".select2");
                this.$element.attr("tabindex", this.$element.data("old-tabindex"));
                this.$element.removeClass("select2-hidden-accessible");
                this.$element.attr("aria-hidden", "false");
                this.$element.removeData("select2");
                this.dataAdapter.destroy();
                this.selection.destroy();
                this.dropdown.destroy();
                this.results.destroy();
                this.dataAdapter = null;
                this.selection = null;
                this.dropdown = null;
                this.results = null
            };
            m.prototype.render = function () {
                var g = b('<span class="select2 select2-container"><span class="selection"></span><span class="dropdown-wrapper" aria-hidden="true"></span></span>');
                g.attr("dir", this.options.get("dir"));
                this.$container = g;
                this.$container.addClass("select2-container--" + this.options.get("theme"));
                g.data("element", this.$element);
                return g
            };
            return m
        });
        a.define("jquery.select2", ["jquery", "require", "./select2/core", "./select2/defaults"], function (c, l, n, b) {
            l("jquery.mousewheel");
            if (c.fn.select2 == null) {
                var m = ["open", "close", "destroy"];
                c.fn.select2 = function (k) {
                    k = k || {};
                    if (typeof k === "object") {
                        this.each(function () {
                            var o = c.extend({}, k, true);
                            var r = new n(c(this), o)
                        });
                        return this
                    } else {
                        if (typeof k === "string") {
                            var h = this.data("select2");
                            if (h == null && window.console && console.error) {
                                console.error("The select2('" + k + "') method was called on an element that is not using Select2.")
                            }
                            var p = Array.prototype.slice.call(arguments, 1);
                            var g = h[k](p);
                            if (c.inArray(k, m) > -1) {
                                return this
                            }
                            return g
                        } else {
                            throw new Error("Invalid arguments for Select2: " + k)
                        }
                    }
                }
            }
            if (c.fn.select2.defaults == null) {
                c.fn.select2.defaults = b
            }
            return n
        });
        a.define("jquery.mousewheel", ["jquery"], function (b) {
            return b
        });
        return {define: a.define, require: a.require}
    }());
    var e = d.require("jquery.select2");
    f.fn.select2.amd = d;
    return e
}));
ogame.chat = {
    socket: null,
    connected: false,
    connecting: false,
    timeout: null,
    retryInterval: 5000,
    playerId: null,
    associationId: null,
    data: {association: {}},
    playernames: {},
    playerList: null,
    isLoadingPlayerList: false,
    playerListSelector: new Array,
    initConnection: function () {
        console.log('ogame.chat init');
        var c = ogame.chat;
        if (c.connecting || c.connected || c.isMobile) {
            c.socket.disconnect()
        }
        c.connecting = true;
        try {
            c.socket = io.connect("/chat", nodeParams);
            c.socket.on("connect", function () {
                clearTimeout(this.timeout);
                c.socket.emit("authorize", session, function (a) {
                    c.connecting = false;
                    if (a) {
                        c.connected = true
                    } else {
                        c.socket.disconnect()
                    }
                })
            });
            c.socket.on("chat", function (a) {
                c.messageReceived(a)
            });
            c.socket.on("disconnect", function () {
                c.connected = false;
                c.connecting = false
            })
        } catch (d) {
            c.connecting = false
        }
    },
    initialize: function () {
        var b = ogame.chat;
        loadScript(nodeUrl, b.initConnection);
        $(".new_msg_count[data-playerid]").each(function () {
            b.saveMessageCounter($(this).data("new-messages"), $(this).data("playerid"))
        });
        this.updateTotalNewChatCounter();
        $(".js_playerlist").on("click", ".playerlist_item", function () {
            var a = $(this).hasClass("nothingThere");
            if (!a) {
                var d = $(this).data("msgid");
                if (d) {
                    b.loadChatLogWithPlayer(this, d)
                } else {
                    b.loadChatLogWithPlayer(this)
                }
            }
        });
        $(".js_playerlist").on("click", ".openAssociationChat", function () {
            var a = $(this).data("msgid");
            if (a) {
                b.loadChatLogWithAssociation(this, a)
            } else {
                b.loadChatLogWithAssociation(this)
            }
        });
        $("#chatMsgList").on("click", ".msg", function () {
            var e = $(this).data("playerid");
            var a = $(this).data("associationid");
            if (e !== undefined && e > 0) {
                b.saveMessageCounter(0, e);
                ogame.messagemarker.setPartnerId(e);
                ogame.messagemarker.updateNewMarker();
                ogame.chat.updateTotalNewChatCounter();
                var f = $(".playerlist .playerlist_item[data-playerId=" + e + "]").data("msgid");
                if (f) {
                    b.loadChatLogWithPlayer(this, f)
                } else {
                    b.loadChatLogWithPlayer(this)
                }
            } else {
                var f = $(".playerlist .playerlist_item[data-associationId=" + a + "]").data("msgid");
                b.saveMessageCounterAssociation(0, a);
                if (f) {
                    b.loadChatLogWithAssociation(this, f)
                } else {
                    b.loadChatLogWithAssociation(this)
                }
            }
        });
        $(".chat").on("click", ".sys_msg", function (f) {
            var h = $(this).data("foreign-player-id");
            var g = $(this).data("foreign-association-id");
            var a = {playerId: h, associationId: g, ajax: 1};
            console.log('chatLoadMoreMessages()');
            $.ajax({
                url: chatUrlLoadMoreMessages,
                type: "POST",
                dataType: "html",
                data: a,
                success: function (c) {
                    $(".chat").each(function (e, d) {
                        if (h !== undefined && h == $(d).data("foreign-player-id")) {
                            $(d).html(c)
                        } else {
                            if (g !== undefined && g == $(d).data("foreign-association-id")) {
                                $(d).html(c)
                            }
                        }
                    })
                },
                error: function (e, c, d) {
                }
            })
        });
        $("body").on("click", ".js_openChat", function () {
            b.loadChatLogWithPlayer(this)
        });
        if (typeof $.cookie("maximizeId") == "string" || typeof $.cookie("maximizeId") == "number") {
            $('#chatMsgList .msg[data-playerid="' + $.cookie("maximizeId") + '"]').trigger("click");
            $.cookie("maximizeId", null)
        }
    },
    getTotalNewChatCounter: function () {
        return ogame.messagecounter.sumNewChatMessages
    },
    updateTotalNewChatCounter: function () {
        var b = 0;
        if ($(".msg .new_msg_count").length > 0) {
            $(".msg .new_msg_count").each(function () {
                b += Number($(this).data("new-messages"))
            })
        } else {
            if ($("#chatBarPlayerList .new_msg_count").length > 0) {
                $("#chatBarPlayerList .new_msg_count").each(function () {
                    b += Number($(this).data("new-messages"))
                })
            }
        }
        ogame.messagecounter.initialize(ogame.messagecounter.type_chat, ogame.chat.playerId);
        if (ogame.messagecounter.sumNewChatMessages !== b) {
            ogame.messagecounter.initChatCounter(b);
            ogame.messagecounter.sumNewChatMessages = b;
            ogame.messagecounter.update()
        }
        return b
    },
    retryConnection: function () {
        var b = ogame.chat;
        setTimeout(function () {
            b.initConnection()
        }, 5000)
    },
    sendMessage: function (u, r, n, m) {
        var o = ogame.chat;
        if ($.trim(n).length == 0) {
            s("TEXT_EMPTY");
            return
        }
        if (u > 0) {
            var w = {playerId: u, text: n, mode: 1, ajax: 1}
        } else {
            var w = {associationId: r, text: n, mode: 3, ajax: 1}
        }
        if (typeof m !== "undefined" && typeof m.id !== "undefined") {
            w.msg2reply = m.id
        }
        function v() {
            console.log('v()');
            $.ajax({
                url: chatUrl,
                type: "POST",
                dataType: "json",
                data: w,
                success: function (a) {
                    p(a)
                },
                error: function (a, b, c) {
                }
            })
        }

        function q(a) {
            if (typeof a.refAuthor !== "undefined" && typeof a.refContent !== "undefined") {
                $refData = {author: a.refAuthor, text: a.refContent}
            } else {
                $refData = 0
            }
            if (a.targetId !== undefined) {
                o.addChatItem(a.targetId, 0, a.text, a.id, false, $refData, a.date)
            } else {
                o.addChatItem(u, a.targetAssociationId, a.text, a.id, false, $refData, a.date)
            }
        }

        function s(a) {
            if (chatLoca[a] !== undefined) {
                errorBoxNotify(LocalizationStrings.error, chatLoca[a], LocalizationStrings.ok)
            } else {
                errorBoxNotify(LocalizationStrings.error, a, LocalizationStrings.ok)
            }
        }

        function p(a) {
            switch (a.status) {
                case"NOT_AUTHORIZED":
                    v();
                    break;
                case"OK":
                    q(a);
                    ogame.chat.cleanupUrl();
                    break;
                default:
                    s(a.status)
            }
        }

        v()
    },
    messageReceived: function (h) {
        var g = ogame.chat;
        if (typeof h.refAuthor !== "undefined" && typeof h.refText !== "undefined") {
            $refData = {author: h.refAuhtor, text: h.refText}
        } else {
            $refData = 0
        }
        if (h.senderName !== undefined && h.senderId !== undefined) {
            g.playernames[h.senderId] = h.senderName
        }
        if ($(".chat_bar_list").length) {
            if (h.associationId !== undefined && h.associationId > 0) {
                if (g.data.association[h.associationId] === undefined) {
                    g.loadChatLogWithAssociation(h.associationId, null, function () {
                        g.addChatItem(h.senderId, h.associationId, h.text, h.id, true, $refData, h.date)
                    }, false)
                } else {
                    g.addChatItem(h.senderId, h.associationId, h.text, h.id, true, $refData, h.date)
                }
            } else {
                if (g.data[h.senderId] === undefined) {
                    g.loadChatLogWithPlayer(h.senderId, null, function () {
                        g.addChatItem(h.senderId, 0, h.text, h.id, true, $refData, h.date)
                    }, false)
                } else {
                    g.addChatItem(h.senderId, 0, h.text, h.id, true, $refData, h.date)
                }
            }
        }
        if (h.associationId !== undefined && h.associationId > 0) {
            if ($('.chat_bar_list_item.open[data-associationid="' + h.associationId + '"]').length <= 0) {
                var e = $('.new_msg_count[data-associationid="' + h.associationId + '"]').data("new-messages");
                if (isNaN(e)) {
                    e = 0
                }
                e++;
                g.saveMessageCounterAssociation(e, h.associationId);
                g.updateTotalNewChatCounter()
            } else {
                var f = {
                    associationId: h.associationId,
                    mode: 4,
                    ajax: 1,
                    updateUnread: 1
                };
                console.log('chatUrl()');
                $.ajax({
                    url: chatUrl,
                    type: "POST",
                    data: f,
                    success: function (a) {
                    },
                    error: function (c, a, b) {
                    }
                })
            }
        } else {
            if (h.senderId !== undefined && h.senderId > 0) {
                ogame.messagemarker.setPartnerId(h.senderId);
                if (!g.isOpen(h.senderId)) {
                    ogame.messagecounter.initialize(ogame.messagecounter.type_chat, h.senderId);
                    var e = parseInt(ogame.messagecounter.newChats[h.senderId]);
                    if (isNaN(e)) {
                        e = 0
                    }
                    e++;
                    g.saveMessageCounter(e, h.senderId);
                    ogame.messagemarker.updateNewMarker()
                } else {
                    g.saveMessageCounter(0, $(this).data("playerid"));
                    ogame.messagemarker.updateNewMarker()
                }
            }
        }
    },
    cleanupUrl: function () {
        var k = window.location.href;
        var h = k.indexOf("&");
        if (h > 0) {
            var g = k.indexOf("?");
            var l = k.substring(0, g);
            var f = l + "?page=chat";
            window.history.pushState({}, "", f)
        }
    },
    saveMessageCounter: function (c, d) {
        if (isNaN(d) || d === 0) {
            return false
        }
        $('.new_msg_count[data-playerid="' + d + '"]').data("new-messages", c);
        ogame.messagecounter.newChats[d] = c
    },
    saveMessageCounterAssociation: function (c, d) {
        if (isNaN(d) || d === 0) {
            return false
        }
        $('.new_msg_count[data-associationid="' + d + '"]').data("new-messages", c);
        $('.new_msg_count[data-associationid="' + d + '"]').text(c);
        ogame.messagemarker.updateNewMarker()
    },
    isOpen: function (e) {
        var f = false;
        var d = $(".chatContent").data("chatplayerid");
        if (d != "undefined" && d == e) {
            f = true
        } else {
            $(".chat_box").each(function () {
                if ($(this).attr("data-playerid") == e) {
                    if ($(this).css("display") == "block") {
                        f = true
                    }
                }
            })
        }
        return f
    },
    loadChatLogWithPlayer: function (p, n, l, h) {
        var m = ogame.chat;
        var o;
        if (typeof h == "undefined") {
            h = true
        }
        if (typeof p == "number") {
            o = p
        } else {
            o = $(p).attr("data-playerId")
        }
        var k = {playerId: o, mode: 2, ajax: 1, updateUnread: (h ? 1 : 0)};
        if (typeof n == "number") {
            k.msg2reply = n
        }
        console.log('chatUrl POST()');
        $.ajax({
            url: chatUrl, type: "POST", data: k, success: function (a) {
                a = JSON.parse(a);
                m.data[a.playerId] = {
                    playerstatus: a.playerstatus,
                    playerName: a.playerName,
                    playerId: a.playerId,
                    chatItems: a.chatItems,
                    chatItemsByDateAsc: a.chatItemsByDateAsc
                };
                if (typeof l == "function") {
                    l()
                } else {
                    if ($(p).parents("#chatBarPlayerList").length || $("body")[0].id != "chat") {
                        m.showChat(a)
                    } else {
                        m.showChatHistory(a)
                    }
                }
                var b = $(".chat_bar_list").find("[data-playerid='" + a.playerId + "']");
                m.updateCustomScrollbar(b.find(".chat_box_ctn"))
            }, error: function (c, a, b) {
            }
        })
    },
    loadChatLogWithAssociation: function (o, n, l, h) {
        var m = ogame.chat;
        var p;
        if (typeof h == "undefined") {
            h = true
        }
        if (typeof o == "number") {
            p = o
        } else {
            p = $(o).attr("data-associationid")
        }
        var k = {associationId: p, mode: 4, ajax: 1, updateUnread: (h ? 1 : 0)};
        if (typeof n == "number") {
            k.msg2reply = n
        }
        console.log('chaturl POST()');
        $.ajax({
            url: chatUrl, type: "POST", data: k, success: function (a) {
                a = JSON.parse(a);
                m.data.association[a.associationId] = {
                    playerstatus: a.playerstatus,
                    associationName: a.associationName,
                    associationId: a.associationId,
                    chatItems: a.chatItems,
                    chatItemsByDateAsc: a.chatItemsByDateAsc
                };
                if (typeof l == "function") {
                    l()
                } else {
                    if ($(o).parents("#chatBarPlayerList").length || $("body")[0].id != "chat") {
                        m.showChat(a)
                    } else {
                        m.showChatHistory(a)
                    }
                }
                var b = $(".chat_bar_list").find("[data-associationid='" + a.associationId + "']");
                m.updateCustomScrollbar(b.find(".chat_box_ctn"))
            }, error: function (c, a, b) {
            }
        })
    },
    initChat: function (c, d) {
        ogame.chat.playerId = c;
        ogame.chat.isMobile = d;
        ogame.chat.initPlayerlist();
        ogame.chat.initialize();
        ogame.chat.toggleVisibility();
        ogame.chat.setVisibilityState();
        ogame.chat.initMaximize();
        ogame.chat.getInMaxChat()
    },
    getLastChatItemData: function () {
        var l = ogame.chat;
        var h = null;
        $(".chat_box_ctn .mCustomScrollBox .mCSB_container").each(function () {
            var a = $(this).children("ul.chat").children("li:last");
            if (h === null || a.attr("data-chat-id") > h.attr("data-chat-id")) {
                h = a
            }
        });
        if (h === null) {
            $("ul.largeChat").each(function () {
                var a = $(this).children("li:last");
                if (h === null || a.attr("data-chat-id") > h.attr("data-chat-id")) {
                    h = a
                }
            })
        }
        if (h === null) {
            return null
        }
        var k = h.children(".msg_head").find(".msg_date").html();
        var f = h.find(".msg_content").html();
        var g = {date: k, text: f};
        return g
    },
    addChatItem: function (F, x, B, D, v, A, r) {
        var u = ogame.chat;
        var q;
        if (x > 0) {
            q = $(".chat_bar_list").find("[data-associationid='" + x + "']")
        } else {
            q = $(".chat_bar_list").find("[data-playerid='" + F + "']")
        }
        var y = {};
        y.date = r;
        y.newClass = "new";
        if (v) {
            if (u.data[F] !== undefined) {
                y.playerName = u.data[F].playerName
            } else {
                y.playerName = u.playernames[F]
            }
            y.altClass = ""
        } else {
            y.playerName = playerName;
            y.altClass = "odd"
        }
        y.chatID = D;
        y.chatContent = B;
        if (typeof A == "object") {
            y.refData = A
        }
        if (!q.length) {
            var E = u.createChatBarContainer(F);
            u.updateChatBar(E);
            q = $(".chat_bar_list").find("[data-playerid='" + F + "']")
        }
        var w = u.createChatItem(y);
        var s = u.getLastChatItemData();
        if (s !== null && (y.date != s.date || y.chatContent != s.text)) {
            q.find(".chat").append(w);
            u.updateCustomScrollbar(q.find(".chat_box_ctn"));
            var C = $(".js_chatHistory");
            if (C.length && (C.data("chatplayerid") == F || C.data("associationid") == x)) {
                C.find(".chat.clearfix").append(w.clone());
                u.updateCustomScrollbar($(".largeChatContainer"))
            }
        }
    },
    addToMoreBox: function (m) {
        var l = ogame.chat;
        var k = m.length;
        if (k && $(".more_chat_bar_items").length < 1) {
            $(".chat_bar_list").append(l.createMoreBox("more_chat_bar_items"))
        }
        var g = $(".more_chat_bar_items .more_items");
        var h = $(".more_chat_bar_items .chat_box");
        for (var n = 0; n <= k; n++) {
            g.append(m.pop())
        }
        l.updateCustomScrollbar(h)
    },
    createChatBarContainer: function (f) {
        var g = ogame.chat;
        if (!f) {
            return
        }
        var h = g.data[f];
        g.data.playerId = f;
        var e = $('<li class="chat_bar_list_item open" data-playerid="' + f + '"></li>');
        e.append('<span class="playerstatus ' + h.playerstatus + '"></span>');
        e.append('<span class="cb_playername">' + h.playerName + "</span>");
        e.append('<span class="icon icon_close fright"></span>');
        e.prepend(g.createChatBox(f));
        return e
    },
    createChatBarContainerForAssociations: function (f) {
        var g = ogame.chat;
        if (!f) {
            return
        }
        var h = g.data.association[f];
        g.data.associationId = f;
        var e = $('<li class="chat_bar_list_item open" data-associationId="' + f + '"></li>');
        e.append('<span class="playerstatus ' + h.playerstatus + '"></span>');
        e.append('<span class="cb_playername">' + h.associationName + "</span>");
        e.append('<span class="icon icon_close fright"></span>');
        e.prepend(g.createChatBoxForAssociations(f));
        return e
    },
    closeChatBox: function (f, d) {
        var e = $(".chat_bar_list_item");
        $.each(e, function (b, a) {
            if (f !== undefined && $(a).data("playerid") == f) {
                $(a).addClass("outOfChatbar");
                $(a).removeClass("open")
            } else {
                if (d !== undefined && $(a).data("associationid") == d) {
                    $(a).addClass("outOfChatbar");
                    $(a).removeClass("open")
                }
            }
        })
    },
    getVisibleChats: function () {
        if (typeof visibleChats == "undefined") {
            visibleChats = {chatbar: false, players: [], associations: []}
        }
        return visibleChats
    },
    getVisibleChatPlayerIds: function () {
        var k = ogame.chat;
        var l = k.getVisibleChats();
        var h = {};
        var g = 0;
        for (var f = 0; f < l.players.length; f++) {
            if ($.inArray(l.players[f]["partnerId"], h) == -1) {
                h[g] = l.players[f]["partnerId"];
                g++
            }
        }
        return h
    },
    getVisibleChatAssociationIds: function () {
        var h = ogame.chat;
        var k = h.getVisibleChats();
        var l = {};
        var g = 0;
        for (var f = 0; f < k.associations.length; f++) {
            if ($.inArray(k.associations[f]["partnerId"], l) == -1) {
                l[g] = k.associations[f];
                g++
            }
        }
        return l
    },
    setVisibilityState: function () {
        var n = ogame.chat;
        var s = n.getVisibleChatPlayerIds();
        var m = n.getVisibleChatAssociationIds();
        var o = $("#chatBar .chat_bar_list .chat_bar_list_item");
        for (var q = 0; q < o.length; q++) {
            var l = o.get(q);
            var u = $(l).data("playerid");
            var r = $(l).data("associationid");
            if (u !== undefined && !n.isInJson(u, s)) {
                n.closeChatBox(u, 0)
            } else {
                if (r !== undefined && !n.isInJson(r, m)) {
                    n.closeChatBox(0, r)
                } else {
                    l.style.display = "inline";
                    if ($(l).hasClass("open")) {
                        var p = $(l).find("div.chat_box")[0];
                        p.style.display = "inline";
                        n.updateCustomScrollbar($(l).find(".chat_box_ctn"), 1)
                    }
                }
            }
        }
    },
    isInJson: function (f, d) {
        var e = null;
        if ($.isEmptyObject(d)) {
            e = false
        }
        if (e !== false) {
            $.each(d, function (a, b) {
                if (b == f) {
                    e = true
                }
            });
            if (e !== true) {
                false
            }
        }
        return e
    },
    toggleVisibility: function () {
        $(".chat_bar_list_item .icon_close").on("click", function (f) {
            var e = $(this).parent().data("playerid");
            var d = $(this).closest(".chat_box");
            if (!d.length) {
                d = $(this).parent()[0];
                d.style.display = "none"
            }
            if (e > 0) {
                console.log('toggleVisibilityChat()');
                $.ajax({
                    type: "POST",
                    url: "/game/index.php?page=ajaxChatToggleVisibility",
                    data: {from: playerId, to: e, showState: 0},
                    success: function (a) {
                    },
                    error: function (c, a, b) {
                    }
                })
            }
        });
        $(".cb_playerlist_box .playerlist_item").on("click", function () {
            var b = $(this).data("playerid");
            if (b) {
                console.log('cb_playerlist_box()');
                $.ajax({
                    type: "POST",
                    url: "/game/index.php?page=ajaxChatToggleVisibility",
                    data: {from: playerId, to: b, showState: 1},
                    success: function (a) {
                    },
                    error: function (a, e, f) {
                    }
                })
            }
        })
    },
    initMaximize: function () {
        $(".chat_bar_list").on("click.chatBar", ".chat_box .chat_box_title .icon_maximize", function () {
            var c = $(this).parent();
            var d = $(c).parent().data("playerid");
            $.cookie("maximizeId", d);
            $(".chat_bar_list_item.open .chat_box_title .icon_close").trigger("click");
            window.location = bigChatLink + "&playerId=" + d
        })
    },
    getInMaxChat: function () {
        var b = location.href;
        if (typeof bigChatLink == "undefined") {
            bigChatLink = ""
        }
        if (bigChatLink == b) {
            if ($.cookie("maximizeId") !== null) {
                $("#chatMsgList .msg[data-playerId=" + $.cookie("maximizeId") + "]").trigger("click")
            }
        }
        $.cookie("maximizeId", null)
    },
    createChatBox: function (l) {
        var n = ogame.chat;
        if (!l) {
            return
        }
        var p = n.data[l];
        var r = $('<div class="chat_box_title"></div>');
        r.append('<span class="icon icon_close fright"></span>');
        r.append('<span class="icon icon_maximize fright"></span>');
        var m = $('<div class="chat_box_ctn"><ul class="chat clearfix"></ul></div>');
        var k = {};
        for (var q = 0; q < p.chatItemsByDateAsc.length; q++) {
            k = p.chatItems[p.chatItemsByDateAsc[q]];
            m.find(".chat").append(n.createChatItem(k))
        }
        var o = $('<div class="chat_box" data-playerid="' + l + '"></div>');
        o.append(r);
        o.append(m);
        o.append('<textarea name="text" class="chat_box_textarea"></textarea>');
        return o
    },
    createChatBoxForAssociations: function (r) {
        var n = ogame.chat;
        if (!r) {
            return
        }
        var p = n.data.association[r];
        var k = $('<div class="chat_box_title"></div>');
        k.append('<span class="icon icon_close fright"></span>');
        k.append('<span class="icon icon_maximize fright"></span>');
        var m = $('<div class="chat_box_ctn"><ul class="chat clearfix"></ul></div>');
        var l = {};
        for (var q = 0; q < p.chatItemsByDateAsc.length; q++) {
            l = p.chatItems[p.chatItemsByDateAsc[q]];
            m.find(".chat").append(n.createChatItem(l))
        }
        var o = $('<div class="chat_box" data-associationId="' + r + '"></div>');
        o.append(k);
        o.append(m);
        o.append('<textarea name="text" class="chat_box_textarea"></textarea>');
        return o
    },
    createChatItem: function (m) {
        if (!m) {
            console.warn("no chatItem given");
            return
        }
        var g = $('<div class="msg_head"></div>');
        g.append('<span class="msg_date fright">' + getFormatedDate(m.date, "[d].[m].[Y] <span>[H]:[i]:[s]</span>") + "</span>");
        g.append('<span class="msg_title blue_txt ' + m.newClass + '">' + m.playerName + "</span>");
        var h = $('<li class="chat_msg ' + m.altClass + '" data-chat-id="' + m.chatID + '"></li>');
        h.append(g);
        if (typeof m.refData !== "undefined") {
            var k = $('<div class="referenceMsg"></div>');
            var n = '<div class="refAuthor">' + m.refData.author + "</div>";
            var l = '<div class="refText new">' + m.refData.text + "</div>";
            k.append(n);
            k.append(l);
            h.append(k)
        }
        h.append('<span class="msg_content">' + m.chatContent + "</span>");
        h.append('<div class="speechbubble_arrow"></div>');
        return h
    },
    createMoreBox: function (d) {
        var c = $('<li class="chat_bar_list_item ' + d + '">' + chatLoca.MORE_USERS + '<span class="icon icon_close fright"></span></li>');
        c.prepend($('<div class="chat_box"><ul class="more_items clearfix"></ul></div>'));
        return c
    },
    filterPlayerlist: function () {
        var l = [];
        var h;
        var k = $("#playerlistFilters").find('input[type="checkbox"]');
        k.each(function () {
            l.push($(this).attr("id"))
        });
        $(".playerlist_item").show();
        h = false;
        k.each(function () {
            if ($(this).prop("checked")) {
                h = true
            }
        });
        if (!h) {
            return
        }
        var f;
        var g;
        $(".playerlist_item").filter(function () {
            f = false;
            g = $(this);
            $.each(l, function (b, a) {
                if (g.data(a) === "off" && $("#" + a).prop("checked")) {
                    f = true
                }
            });
            (f === true) ? g.hide() : g.show()
        })
    },
    initChatBar: function (d) {
        var c = ogame.chat;
        ogame.chat.playerId = d;
        $("html").off(".chatBar");
        $(window).resize(function () {
            c.updateChatBar()
        });
        $(".chat_bar_list").on("click.chatBar", "#chatBarPlayerList", function (a) {
            if ($(a.target).attr("id") !== "chatBarPlayerList" && !$(a.target).hasClass("onlineCount")) {
                return
            }
            $(".cb_playerlist_box").toggle();
            c.updateCustomScrollbar($(".scrollContainer"), true);
            console.log('initChatBar()');
            $.ajax({
                url: chatUrl,
                type: "POST",
                dataType: "json",
                data: {action: "toggleChatBar"},
                success: function (b) {
                },
                error: function (h, b, g) {
                }
            })
        }).on("click.chatBar", ".chat_bar_list_item", function (a) {
            a.stopPropagation();
            if (!isNaN($(this).data("playerid"))) {
                ogame.messagemarker.toggle(ogame.messagemarker.action_remove, ogame.messagemarker.type_chattab, $(this).data("playerid"));
                ogame.messagemarker.toggle(ogame.messagemarker.action_remove, ogame.messagemarker.type_chatbar, $(this).data("playerid"));
                c.saveMessageCounter(0, $(this).data("playerid"));
                ogame.messagemarker.setPartnerId($(this).data("playerid"));
                ogame.messagemarker.updateNewMarker();
                ogame.chat.updateTotalNewChatCounter()
            } else {
                if (!isNaN($(this).data("associationid") > 0)) {
                    c.saveMessageCounterAssociation(0, $(this).data("associationid"))
                }
            }
            console.log('chatUrl POST chatBarListRead()');
            $.ajax({
                url: chatUrl,
                type: "POST",
                dataType: "json",
                data: {
                    playerId: $(this).data("playerid"),
                    action: "chatBarListRead"
                },
                success: function (b) {
                },
                error: function (h, b, g) {
                }
            });
            if ($(this).closest(".more_items").length) {
                c.swapChatBarItem($(this))
            } else {
                c.toggleChatBox($(a.target), $(this))
            }
            c.updateVisibleState()
        }).on("click.chatBar", ".chat_bar_list_item > .icon_close", function (a) {
            a.stopPropagation();
            var b = $(this).closest(".chat_bar_list_item");
            ogame.chat.closeChatBox(b.attr("data-playerid"), b.attr("data-associationid"));
            b.remove("open");
            c.updateChatBar()
        }).on("keyup.chatBar", ".chat_box_textarea", function (a) {
            if ((a.ctrlKey || a.keyCode == 10) && a.keyCode == 13) {
                a.preventDefault();
                var b = $(this).val();
                $(this).val(b + "\n")
            } else {
                if ($.trim($(this).val().length > 0)) {
                    a.preventDefault();
                    c.submitChatBarMsg($(a.currentTarget), a.which, a.shiftKey, a.delegateTarget.scrollHeight)
                }
            }
        }).on("click.chatBar", ".chat_box_textarea", function (a) {
            ogame.messagemarker.toggle(ogame.messagemarker.action_remove, ogame.messagemarker.type_chattab, $(this).parent().parent().parent().data("playerid"));
            ogame.messagemarker.toggle(ogame.messagemarker.action_remove, ogame.messagemarker.type_chatbar, $(this).parent().parent().parent().data("playerid"));
            if ($(this).data("playerid") > 0) {
                c.saveMessageCounter(0, $(this).data("playerid"))
            } else {
                if ($(this).data("associationid") > 0) {
                    c.saveMessageCounterAssociation(0, $(this).data("associationid"))
                }
            }
        })
    },
    initPlayerlist: function () {
        var c = ogame.chat;
        var d = ogame.tools;
        $(".js_accordion").accordion({
            collapsible: true,
            heightStyle: "content"
        });
        $(".playerlist_item:odd").addClass("odd");
        d.addHover(".playerlist_item, .msg, .playerlist_top_box .playerlist");
        $(".js_playerlist").on("click.playerList", ".pl_filter_set", function () {
            c.filterPlayerlist()
        });
        c.filterPlayerlist()
    },
    showChat: function (h) {
        var e = false;
        var g = ogame.chat;
        $(".chat_bar_list_item").each(function () {
            var a = $(this);
            if ((h.playerId !== undefined && a.data("playerid") === h.playerId) || (h.associationId !== undefined && a.data("associationid") === h.associationId)) {
                e = true;
                if (a.hasClass("outOfChatbar")) {
                    a.removeClass("outOfChatbar")
                }
                if (!a.hasClass("open")) {
                    a.click();
                    a[0].style.display = "inline"
                } else {
                    a.fadeTo("400", 0.3).fadeTo("400", 1)
                }
                a.find("textarea").focus()
            }
        });
        if (!e) {
            var f;
            if (h.playerId !== undefined) {
                f = g.createChatBarContainer(h.playerId)
            } else {
                f = g.createChatBarContainerForAssociations(h.associationId)
            }
            g.updateChatBar(f)
        }
    },
    showChatHistory: function (e) {
        var d = $(".js_chatHistory");
        var f = e.data;
        if (d.length) {
            d.remove()
        }
        $("#chatList").remove();
        $(f).insertAfter("#planet");
        $("li.playerlist_item").removeClass("active");
        $("li.playerlist_item[data-playerid='" + e.playerId + "']").addClass("active");
        initBBCodeEditor(locaKeys, itemNames, false, ".new_msg_textarea", 2000, true)
    },
    submitChatBarMsg: function (p, l, h, m) {
        var o = ogame.chat;
        var n = parseInt($(".chat_box_textarea").css("max-height"));
        var k = parseInt($(".chat_box_textarea").css("padding-top")) + parseInt($(".chat_box_textarea").css("padding-bottom"));
        if (l === 13 && h) {
            if (m <= (n + k)) {
                p.css("height", m - k)
            }
            return
        }
        if (l === 13) {
            if (p.parent(".chat_box").data("playerid") !== undefined) {
                o.sendMessage(p.parent(".chat_box").data("playerid"), 0, p.val())
            } else {
                if (p.parent(".chat_box").data("associationid") !== undefined) {
                    o.sendMessage(0, p.parent(".chat_box").data("associationid"), p.val())
                }
            }
            p.val("")
        }
    },
    swapChatBarItem: function (d) {
        var f = ogame.chat;
        var e = $(".more_chat_bar_items").prev();
        e.removeClass("open").find(".icon_close").hide().end().find(".chat_box").hide();
        e.remove();
        d.addClass("open").find(".icon_close").show().end().find(".chat_box").show().end().insertBefore(".more_chat_bar_items");
        f.addToMoreBox([e]);
        f.updateChatBar();
        f.updateCustomScrollbar(d.find(".chat_box_ctn"))
    },
    toggleChatBox: function (f, l) {
        var h = ogame.chat;
        if (f.parents(".chat_box").length && !f.hasClass("icon_close")) {
            return
        }
        var k = l.children(".chat_box");
        if (k.is(":visible")) {
            k.hide();
            l.removeClass("open")
        } else {
            if (!l.hasClass("more_chat_bar_items")) {
                l.addClass("open");
                h.updateChatBar()
            }
            k.show();
            var g = k.find(".chat_box_ctn");
            if (l.hasClass("more_chat_bar_items")) {
                g = k
            }
            h.updateCustomScrollbar(g);
            k.find("textarea").focus()
        }
        ogame.messagecounter.resetCounterByType(ogame.messagecounter.type_chat)
    },
    handleTooMuchWindows: function (o, l, u, s, p, r) {
        var q = ogame.chat;
        var n = true;
        var m = [];
        $($(".chat_bar_list > .chat_bar_list_item").get().reverse()).each(function () {
            var a = $(this);
            if (n) {
                if (a.hasClass("more_chat_bar_items") || a.attr("id") === "chatBarPlayerList") {
                    return
                }
                if (a.hasClass("open")) {
                    o--
                } else {
                    l--
                }
                a.removeClass("open").find(".icon_close").hide().end().find(".chat_box").hide();
                m.push(a);
                a.remove();
                widthTotal = s * l + u * o + p;
                n = (widthTotal >= r) ? true : false
            }
        });
        q.addToMoreBox(m)
    },
    getItemFromMorelist2Chatbar: function () {
        var c = $(".more_items .chat_bar_list_item").first().remove();
        var d = ogame.chat;
        c.addClass("open").find(".icon_close").show().end().find(".chat_box").show().end().insertBefore(".more_chat_bar_items");
        if ($(".more_items .chat_bar_list_item").length <= 0) {
            $(".more_chat_bar_items").remove()
        }
        d.updateCustomScrollbar($(".more_chat_bar_items>.chat_box"));
        d.updateCustomScrollbar(c.find(".chat_box_ctn"))
    },
    updateChatBar: function (n) {
        var r = ogame.chat;
        var o = $(".chat_bar_list > .chat_bar_list_item.open").length;
        var v = $(".more_chat_bar_items").length;
        var m = $(".chat_bar_list").children().length - o - v;
        var u = 190;
        var w = 270;
        var q = 190;
        var s = $("body").innerWidth();
        if (n) {
            o++
        }
        var p = u * m + w * o + q * v;
        if (p >= s) {
            r.handleTooMuchWindows(o, m, w, u, q, s)
        } else {
            if ((p + w) <= s && $(".more_chat_bar_items").length > 0) {
                r.getItemFromMorelist2Chatbar()
            }
        }
        if (n) {
            n.insertAfter("#chatBarPlayerList");
            r.updateCustomScrollbar(n.find(".chat_box_ctn"))
        }
    },
    updateCustomScrollbar: function (c, d) {
        if (!c || c.length == 0) {
            return
        }
        if (c.hasClass("mCustomScrollbar")) {
            c.mCustomScrollbar("update")
        } else {
            c.mCustomScrollbar({theme: "ogame"})
        }
        if (d !== true) {
            c.mCustomScrollbar("scrollTo", "bottom", {scrollInertia: 0})
        }
        c.each(function () {
            if ($(this).height() + "px" == $(this).css("max-height")) {
                $(this).addClass("scrollbarPresent")
            }
        })
    },
    updateVisibleState: function () {
        var b = {chatbar: false, players: [], associations: []};
        $(".chat_bar_list>.chat_bar_list_item").each(function () {
            var a = $(this);
            if (a.attr("id") === "chatBarPlayerList" && a.children(".cb_playerlist_box").is(":visible")) {
                b.chatbar = true
            } else {
                if (a.data("playerid") && a.children(".chat_box").is(":visible")) {
                    b.players.push(a.data("playerid"))
                } else {
                    if (a.data("associationid") && a.children(".chat_box").is(":visible")) {
                        b.associations.push(a.data("associationid"))
                    }
                }
            }
        });
        $.cookie("visibleChats", JSON.stringify(b), {expires: 7})
    },
    showPlayerList: function (d) {
        // TODO: this code is part of "0 Contact(s) online." chat system.
        // TODO: re-enable this code when working on this feature. For now its disabled.
        return;
        var c = ogame.chat;
        if ($.inArray(d, c.playerListSelector) === -1) {
            c.playerListSelector.push(d)
        }
        if (c.isLoadingPlayerList === false && c.playerList === null) {
            c.isLoadingPlayerList = true;
            console.log('showPlayerList()');
            $.ajax({
                url: chatUrl,
                type: "POST",
                dataType: "json",
                data: {action: "showPlayerList"},
                success: function (a) {
                    c.playerList = a.content;
                    c.isLoadingPlayerList = false;
                    c._showPlayerList()
                },
                error: function (f, a, b) {
                    c.isLoadingPlayerList = false
                }
            })
        } else {
            c._showPlayerList()
        }
    },
    _showPlayerList: function () {
        var b = ogame.chat;
        $.each(b.playerListSelector, function (a, d) {
            $(d).html(b.playerList)
        })
    }
};
inventoryObj = {
    currentPage: null,
    currentItems: null,
    currentItem: null,
    currentCategory: null,
    initalizeSlider: function (R, N, P, U, O, al, ac, ai, S) {
        if (inventoryObj.currentItems == R && typeof(al) == "undefined" || al == false) {
            return
        }
        inventoryObj.currentItems = R;
        O = O || "slideIn";
        ac = ac || "tooltipHTML js_hideTipOnMobile";
        if (typeof(ai) == "undefined") {
            ai = true
        }
        if (typeof(S) == "undefined") {
            S = true
        }
        $("#" + N + "Box").remove(".anythingSlider");
        var ag = [];
        var af = 0;
        for (var M in R) {
            var W = R[M];
            if (typeof(W.hide) != "undefined" && W.hide) {
                continue
            }
            if (inventoryObj.currentPage == "shop" || inventoryObj.currentPage == "inventory") {
                var T = af % inventoryObj.itemsPerSlide;
                ag[af + (2 * (T % 3)) - 2 * Math.floor(T / 3)] = W
            } else {
                ag[af] = W
            }
            af++
        }
        var Q = 0, I = 0, L = $('<ul id="' + N + '" />');
        for (var ak = ag.length; I < ak; I++) {
            if (typeof(ag[I]) == "undefined") {
                K.append('<div class="item_img"><div class="empty border5px"></div></div>');
                continue
            }
            var W = ag[I];
            if (I % inventoryObj.itemsPerSlide == 0) {
                var K = $('<li class="slide_' + Q + '" />').appendTo(L);
                Q++
            }
            var aj, V, Z;
            if (inventoryObj.currentPage == "shop") {
                aj = getNumberFormatShort(W.costs, null) + " " + loca.currency[W.currency];
                V = "price"
            } else {
                aj = getNumberFormatShort(W.amount);
                V = "amount"
            }
            var Y;
            if (ai) {
                Y = W.imageLarge + "-75x.png"
            } else {
                Y = W.imageLarge + "-100x.png"
            }
            var X;
            if (W.canBeActivated || W.canBeBoughtAndActivated) {
                X = "enabled"
            } else {
                X = "disabled"
            }
            if (W.isReduced) {
                Z = '<div class="sale_badge ' + X + '"></div>'
            } else {
                Z = ""
            }
            var ad = (W.timeLeft != null) ? " js_is_active " : "";
            var ae = "";
            var aa = W.title;
            if (N.indexOf("js_activeItemSlider") != -1) {
                aa = "";
                ae = (W.timeLeft != null) ? '<span class="js_duration undermark" data-total-duration="' + W.totalTime + '">' + W.timeLeft + "</span>" : ""
            }
            var ab = "";
            if (W.timeLeft != null && N.indexOf("js_activeItemSlider") != -1) {
                ab = '<div class="pusher"></div>'
            }
            var ah = "";
            if ($.inArray(birthdayCategory, W.category) != -1) {
                ah = '<div class="event_active_hint"></div>'
            }
            K.append('<div class="item_img r_' + W.rarity + '" style="background-image: url(/img/icons/items/' + Y + ');"><div class="item_img_box">' + ah + '<div class="activation ' + X + ad + '"></div><a href="javascript:void(0);" tabindex="1" title="' + aa + '" class="detail_button ' + ac + " " + O + '" ref="' + W.ref + '">' + Z + '<span class="ecke"><span class="level ' + V + '">' + aj + "</span></span></a></div>" + ae + ab + "</div>")
        }
        $("#" + N + "Box").prepend(L);
        if (I % inventoryObj.itemsPerSlide != 0) {
            for (var J = I % inventoryObj.itemsPerSlide; J < inventoryObj.itemsPerSlide; J++) {
                $("#" + N + " li:last").append('<div class="item_img"><div class="empty border5px"></div></div>')
            }
        }
        return mySlider = $("#" + N).anythingSlider({
            startStopped: true,
            buildStartStop: false,
            expand: true,
            resizeContents: false,
            theme: "default",
            infiniteSlides: false,
            autoPlay: false,
            easing: "swing",
            resizeContents: true,
            stopAtEnd: true,
            playRtl: isRTLEnabled,
            hashTags: true,
            buildNavigation: S,
            onInitialized: function (e, k) {
                if (isMobile) {
                    var h = 1000, f = 50, d = 0, b = 0, g = "ontouchend" in document, a = (g) ? "touchstart" : "mousedown", c = (g) ? "touchmove" : "mousemove", l = (g) ? "touchend" : "mouseup";
                    k.$window.bind(a, function (m) {
                        b = (new Date()).getTime();
                        d = m.originalEvent.touches ? m.originalEvent.touches[0].pageX : m.pageX
                    }).bind(l, function (m) {
                        b = 0;
                        d = 0
                    }).bind(c, function (n) {
                        var m = n.originalEvent.touches ? n.originalEvent.touches[0].pageX : n.pageX, o = (d === 0) ? 0 : Math.abs(m - d), p = (new Date()).getTime();
                        if (b !== 0 && p - b < h && o > f) {
                            if (m < d) {
                                k.goForward()
                            }
                            if (m > d) {
                                k.goBack()
                            }
                            b = 0;
                            d = 0
                        }
                    })
                }
            }
        })
    },
    initShop: function () {
        var b = this;
        $(window).unbind(".shop");
        $(document).undelegate(".slideIn", "click.shop").delegate(".slideIn", "click.shop", function () {
            if (b.currentItem == $(this).attr("ref")) {
                b.currentItem = null;
                $.bbq.pushState({item: ""})
            } else {
                b.currentItem = $(this).attr("ref");
                $.bbq.pushState({item: $(this).attr("ref")})
            }
        });
        $("button.to_shop").bind("click.shop", function () {
            $.bbq.pushState({page: "shop"})
        });
        $("button.to_inventory").bind("click.shop", function () {
            $.bbq.pushState({page: "inventory"})
        });
        $("button.buyResourcesLink").bind("click", function () {
            reload_page($(this).data("link"))
        });
        $(".to_shop, .to_inventory").hover(function () {
            $(this).addClass("hover")
        }, function () {
            $(this).removeClass("hover")
        });
        $(".categoryFilter li a").bind("click.shop", function () {
            $.bbq.pushState({category: $(this).attr("rel")})
        });
        $(window).unbind("hashchange.shop").bind("hashchange.shop", function (a) {
            b.onHashChange($.deparam.fragment(a.fragment))
        });
        b.onHashChange($.deparam.fragment());
        inventoryObj.refreshResources()
    },
    onHashChange: function (l) {
        if (typeof(l.page) == "undefined") {
            var h = {
                page: "shop",
                category: $(".categoryFilter a:first").attr("rel")
            };
            if (typeof(l.item) != "undefined" && l.item != "") {
                var k = inventoryObj.items_shop[l.item];
                if (k.category.length > 0) {
                    h.category = k.category[k.category.length - 1]
                }
            }
            $.bbq.pushState(h);
            return
        }
        var f = this.currentPage != l.page;
        if (f) {
            if (l.page == "inventory") {
                this.openInventory();
                $(".planetlink, .moonlink").fragment({page: l.inventory})
            } else {
                this.openShop();
                $(".planetlink, .moonlink").fragment({page: l.shop})
            }
            this.updateCategoryAmount()
        }
        if (typeof(l.category) == "undefined") {
            $.bbq.pushState({category: $(".categoryFilter a:first").attr("rel")});
            return
        } else {
            if (l.category != this.currentCategory || f) {
                this.changeCategory(l.category)
            }
        }
        if (typeof(l.item) == "undefined" || l.item == "" && this.currentItem != null) {
            $("#itemDetails a.close_details").click();
            $(".planetlink, .moonlink").fragment({item: ""})
        } else {
            if (this.currentItem != l.item) {
                var g = $(".slideIn[ref='" + l.item + "']");
                if (g.length) {
                    g.click()
                } else {
                    gfSlider.slideIn(getElementByIdWithCache("detail"), l.item)
                }
                $(".planetlink, .moonlink").fragment({item: l.item})
            }
        }
    },
    initShopDetails: function () {
        var c = this;
        var d = $.deparam.querystring().page;
        $(document).undelegate("#itemDetails .close_details", "click").delegate("#itemDetails .close_details", "click", function () {
            $("a.slideIn[ref=" + $(this).attr("ref") + "]:first").click()
        }).undelegate("#itemDetails a.item.build-it", "click").delegate("#itemDetails a.item.build-it", "click", function () {
            $.ajax({
                url: $(this).attr("rel"),
                data: {ajax: 1, token: buyToken},
                type: "POST",
                dataType: "json",
                error: function () {
                    fadeBox(translation.buyError, true)
                },
                success: function (a) {
                    buyToken = a.newToken;
                    if (a.error) {
                        fadeBox(a.message, true)
                    } else {
                        fadeBox(a.message, false);
                        inventoryObj.refreshResources();
                        inventoryObj.refreshItemData(a.item)
                    }
                }
            });
            return false
        }).undelegate("#itemDetails a.item.build-it_disabled.dm", "click").delegate("#itemDetails a.item.build-it_disabled.dm", "click", function () {
            errorBoxDecision(LocalizationStrings.error, loca.buyDMDecision, LocalizationStrings.yes, LocalizationStrings.no, function () {
                if ($("a.dm_button").length > 0) {
                    $("a.dm_button").click()
                } else {
                    window.location.href = $("#darkmatter_box a").attr("href")
                }
            })
        }).undelegate("#itemDetails a.activateItem.build-it", "click").delegate("#itemDetails a.activateItem.build-it", "click", function () {
            var a = $(this);

            function b() {
                $.ajax({
                    url: a.attr("rel"),
                    data: {ajax: 1, token: activateToken, referrerPage: d},
                    type: "POST",
                    dataType: "json",
                    error: function () {
                        fadeBox(translation.buyError, true);
                        $("#itemDetails a.activateItem").removeClass("build-it").addClass("build-it_disabled")
                    },
                    success: function (f) {
                        activateToken = f.newToken;
                        if (f.error) {
                            fadeBox(f.message, true);
                            $("#itemDetails a.activateItem").removeClass("build-it").addClass("build-it_disabled")
                        } else {
                            if (f.message.reload) {
                                location.href = getRedirectLink();
                                return
                            }
                            f = f.message;
                            fadeBox(f.message, false);
                            inventoryObj.refreshResources();
                            inventoryObj.refreshItemData(f.item)
                        }
                    }
                })
            }

            if (a.hasClass("isUpgrade")) {
                errorBoxDecision(LocalizationStrings.activateItem.upgradeItemQuestionHeader, LocalizationStrings.activateItem.upgradeItemQuestion, LocalizationStrings.yes, LocalizationStrings.no, b)
            } else {
                b()
            }
            return false
        }).undelegate("#itemDetails a.buyAndActivate.build-it", "click").delegate("#itemDetails a.buyAndActivate.build-it", "click", function () {
            var a = $(this);

            function b() {
                $.ajax({
                    url: a.attr("rel"),
                    data: {ajax: 1, token: activateToken, referrerPage: d},
                    type: "POST",
                    dataType: "json",
                    error: function () {
                        fadeBox(translation.buyError, true);
                        $("#itemDetails a.activateItem").removeClass("build-it").addClass("build-it_disabled")
                    },
                    success: function (f) {
                        activateToken = f.newToken;
                        if (f.error) {
                            fadeBox(f.message, true);
                            $("#itemDetails a.activateItem").removeClass("build-it").addClass("build-it_disabled")
                        } else {
                            if (f.message.reload) {
                                location.href = getRedirectLink();
                                return
                            }
                            f = f.message;
                            fadeBox(f.message, false);
                            inventoryObj.refreshResources();
                            inventoryObj.refreshItemData(f.item)
                        }
                    }
                })
            }

            if (a.hasClass("isUpgrade")) {
                errorBoxDecision(LocalizationStrings.activateItem.upgradeItemQuestionHeader, LocalizationStrings.activateItem.upgradeItemQuestion, LocalizationStrings.yes, LocalizationStrings.no, b)
            } else {
                b()
            }
            return false
        })
    },
    refreshResources: function () {
        getAjaxResourcebox(function (b) {
            $(".to_dark_matter .level").text(b.darkmatter.resources["actualFormat"])
        })
    },
    refreshItemData: function (e) {
        var d = e.ref;
        changeTooltip($(".detail_button[ref='" + d + "']"), e.title);
        $(".detail_button[ref='" + d + "'] span.amount, #itemDetails[data-uuid='" + d + "'] span.amount").html(tsdpkt(e.amount));
        if (typeof(inventoryObj.items_inventory) != "undefined") {
            if (inventoryObj.items_inventory.length == 0) {
                inventoryObj.items_inventory = {}
            } else {
                if (e.amount <= 0) {
                    delete inventoryObj.items_inventory[d]
                } else {
                    inventoryObj.items_inventory[d] = e
                }
            }
        }
        if (typeof(inventoryObj.items_shop) != "undefined") {
            if (inventoryObj.items_shop.length == 0) {
                inventoryObj.items_shop = {}
            }
            inventoryObj.items_shop[d] = e
        }
        changeTooltip($('#itemDetails[data-uuid="' + d + '"] a.activateItem, #itemDetails[data-uuid="' + d + '"] a.buyAndActivate'), e.activationTitle);
        if (e.hasEnoughCurrency) {
            $('#itemDetails[data-uuid="' + d + '"] a.item').addClass("build-it").removeClass("build-it_disabled")
        } else {
            $('#itemDetails[data-uuid="' + d + '"] a.item').removeClass("build-it").addClass("build-it_disabled")
        }
        if (e.amount > 0) {
            $('#itemDetails[data-uuid="' + d + '"] a.activateItem').show();
            $('#itemDetails[data-uuid="' + d + '"] a.buyAndActivate').hide();
            if (e.canBeActivated) {
                $('#itemDetails[data-uuid="' + d + '"] a.activateItem').removeClass("build-it_disabled").addClass("build-it")
            } else {
                $('#itemDetails[data-uuid="' + d + '"] a.activateItem').addClass("build-it_disabled").removeClass("build-it")
            }
        } else {
            $('#itemDetails[data-uuid="' + d + '"] a.activateItem').hide();
            $('#itemDetails[data-uuid="' + d + '"] a.buyAndActivate').show();
            if (e.canBeBoughtAndActivated && e.hasEnoughCurrency) {
                $('#itemDetails[data-uuid="' + d + '"] a.buyAndActivate').removeClass("build-it_disabled").addClass("build-it")
            } else {
                $('#itemDetails[data-uuid="' + d + '"] a.buyAndActivate').addClass("build-it_disabled").removeClass("build-it")
            }
        }
        if (isMobile) {
            var f = "";
            if ($('#itemDetails[data-uuid="' + d + '"] a.activateItem:visible,#itemDetails[data-uuid="' + d + '"] a.buyAndActivate:visible').hasClass("build-it_disabled")) {
                f += e.activationTitle
            }
            if (e.buyTitle.length && e.buyTitle != e.activationTitle) {
                f += e.buyTitle
            }
            $('#itemDetails[data-uuid="' + d + '"] .info_txt').text(f)
        }
        if (e.timeLeft > 0 && e.extendable) {
            $('#itemDetails[data-uuid="' + d + '"] a.activateItem span').html(loca.extend);
            $('#itemDetails[data-uuid="' + d + '"] a.buyAndActivate span').html(loca.buyAndExtend)
        } else {
            $('#itemDetails[data-uuid="' + d + '"] a.activateItem span').html(loca.activate);
            $('#itemDetails[data-uuid="' + d + '"] a.buyAndActivate span').html(loca.buyAndActivate)
        }
        if (e.isAnUpgrade) {
            $('#itemDetails[data-uuid="' + d + '"] a.activateItem, #itemDetails[data-uuid="' + d + '"] a.buyAndActivate').addClass("isUpgrade")
        } else {
            $('#itemDetails[data-uuid="' + d + '"] a.activateItem, #itemDetails[data-uuid="' + d + '"] a.buyAndActivate').removeClass("isUpgrade")
        }
        if (this.inShop === true) {
            this.changeCategory($(".categoryFilter a.active").attr("rel"))
        }
        this.updateCategoryAmount()
    },
    boughtItemHint: function () {
        $(".to_inventory .bought_item_notice").show().fadeOut(1000)
    },
    openShop: function () {
        this.currentPage = "shop";
        $("#js_inventorySliderBox").hide();
        $("#js_shopSliderBox").show();
        $(".to_inventory").removeClass("active");
        $(".to_shop").addClass("active");
        $("#buttonz h2").text(loca.LOCA_PREMIUM_SHOP);
        if (isMobile) {
            $(".js_shopCurrentPage").html(loca.shopText)
        }
    },
    openInventory: function () {
        this.currentPage = "inventory";
        $("#js_shopSliderBox").hide();
        $("#js_inventorySliderBox").show();
        $(".to_shop").removeClass("active");
        $(".to_inventory").addClass("active");
        $("#buttonz h2").text(loca.LOCA_PREMIUM_INVENTORY);
        if (isMobile) {
            $(".js_shopCurrentPage").html(loca.inventoryText)
        }
    },
    changeCategory: function (c) {
        inventoryObj.currentCategory = c;
        $(".planetlink, .moonlink").fragment({category: c});
        $(".categoryFilter li, .categoryFilter li a").removeClass("active");
        $('.categoryFilter li a[rel="' + c + '"]').addClass("active").parent().addClass("active");
        $(".anythingSlider").remove();
        var d = function (m, a) {
            var n = [];
            var l = [];
            var b = 0;
            $.each(m, function (f) {
                if (this.category != null) {
                    var e = "$" + this.category.join("$") + "$";
                    if (e.toLowerCase().indexOf("$" + c + "$") != -1) {
                        n[inventoryObj.item_orders[c][this.ref]] = this;
                        if (inventoryObj.item_orders[c][this.ref] > b) {
                            b = inventoryObj.item_orders[c][this.ref]
                        }
                    }
                }
            });
            for (var k = 0; k <= b; ++k) {
                if (n[k]) {
                    l[k] = n[k]
                }
            }
            inventoryObj.initalizeSlider(l, a, 340, 340, null, null, null, false)
        };
        if (inventoryObj.currentPage == "shop") {
            d(inventoryObj.items_shop, "js_shopSlider")
        } else {
            if (inventoryObj.currentPage == "inventory") {
                d(inventoryObj.items_inventory, "js_inventorySlider")
            }
        }
    },
    updateCategoryAmount: function () {
        var d;
        if (inventoryObj.currentPage == "shop") {
            d = inventoryObj.items_shop
        } else {
            if (inventoryObj.currentPage == "inventory") {
                d = inventoryObj.items_inventory
            } else {
                return
            }
        }
        var c = $(".categoryFilter");
        c.find(".amount").text(0);
        $.each(d, function (l) {
            if (this.category != null) {
                for (var a in this.category) {
                    var b = this.category[a];
                    var h = c.find('a[rel="' + b + '"] .amount');
                    var k;
                    if (inventoryObj.currentPage == "shop") {
                        k = 1
                    } else {
                        if (inventoryObj.currentPage == "inventory") {
                            k = this.amount
                        }
                    }
                    h.text(tsdpkt(getValue(h.text()) + k))
                }
            }
        });
        $.each(c.find("li"), function (b) {
            var a = inventoryObj.currentPage.slice(0, 1).toUpperCase() + inventoryObj.currentPage.slice(1);
            if ($(this).hasClass("in" + a)) {
                $(this).show()
            } else {
                $(this).hide();
                if (!c.find("li:visible .active").length) {
                    c.find("li:visible:first a").click()
                }
            }
        })
    }
};
/*
 * Spinners 3.0.0
 * (c) 2010-2012 Nick Stakenburg - http://www.nickstakenburg.com
 *
 * Spinners is freely distributable under the terms of an MIT-style license.
 *
 * GitHub: http://github.com/staaky/spinners
 */
var Spinners = {version: "3.0.0"};
(function (b) {
    function c(k) {
        return k * Math.PI / 180
    }

    function d(k) {
        this.element = k
    }

    function e(k, l) {
        k && (this.element = k, a.remove(k), a.removeDetached(), this._position = 0, this._state = "stopped", this.setOptions(b.extend({
            color: "#000",
            dashes: 12,
            radius: 5,
            height: 5,
            width: 1.8,
            opacity: 1,
            padding: 3,
            rotation: 700
        }, l || {})), this.drawPosition(0), a.add(this))
    }

    var f = {
        scroll: function (l, m) {
            if (!m) {
                return l
            }
            var k = l.slice(0, m);
            return l.slice(m, l.length).concat(k)
        }, isElement: function (k) {
            return k && 1 == k.nodeType
        }, element: {
            isAttached: function () {
                return function (k) {
                    for (; k && k.parentNode;) {
                        k = k.parentNode
                    }
                    return !!k && !!k.body
                }
            }()
        }
    }, g = {
        drawRoundedRectangle: function (l, n) {
            var o = b.extend({
                top: 0,
                left: 0,
                width: 0,
                height: 0,
                radius: 0
            }, n || {}), p = o.left, q = o.top, k = o.width, m = o.height, o = o.radius;
            l.beginPath(), l.moveTo(p + o, q), l.arc(p + k - o, q + o, o, c(-90), c(0), !1), l.arc(p + k - o, q + m - o, o, c(0), c(90), !1), l.arc(p + o, q + m - o, o, c(90), c(180), !1), l.arc(p + o, q + o, o, c(-180), c(-90), !1), l.closePath(), l.fill()
        }
    }, h = function () {
        function l(n) {
            var o = [];
            0 == n.indexOf("#") && (n = n.substring(1)), n = n.toLowerCase();
            if ("" != n.replace(m, "")) {
                return null
            }
            3 == n.length ? (o[0] = n.charAt(0) + n.charAt(0), o[1] = n.charAt(1) + n.charAt(1), o[2] = n.charAt(2) + n.charAt(2)) : (o[0] = n.substring(0, 2), o[1] = n.substring(2, 4), o[2] = n.substring(4));
            for (n = 0; n < o.length; n++) {
                o[n] = parseInt(o[n], 16)
            }
            return o.red = o[0], o.green = o[1], o.blue = o[2], o
        }

        var m = RegExp("[0123456789abcdef]", "g"), k = function () {
            function n(p, q, o) {
                return p = p.toString(o || 10), Array(q - p.length).join("0") + p
            }

            return function (o, p, q) {
                return "#" + n(o, 2, 16) + n(p, 2, 16) + n(q, 2, 16)
            }
        }();
        return {
            hex2rgb: l, hex2fill: function (n, p) {
                "undefined" == typeof p && (p = 1);
                var o = p, q = l(n);
                return q[3] = o, q.opacity = o, "rgba(" + q.join() + ")"
            }, rgb2hex: k
        }
    }();
    b.extend(Spinners, {
        enabled: !1, support: {
            canvas: function () {
                var k = b("<canvas>")[0];
                return !!k.getContext && !!k.getContext("2d")
            }()
        }, init: function () {
            if (this.support.canvas || window.G_vmlCanvasManager && window.attachEvent && -1 === navigator.userAgent.indexOf("Opera")) {
                window.G_vmlCanvasManager && window.G_vmlCanvasManager.init_(document), this.enabled = !0
            }
        }, create: function (k, l) {
            return d.create(k, l), this.get(k)
        }, get: function (k) {
            return new d(k)
        }, play: function (k) {
            return this.get(k).play(), this
        }, pause: function (k) {
            return this.get(k).pause(), this
        }, toggle: function (k) {
            return this.get(k).toggle(), this
        }, stop: function (k) {
            return this.get(k).stop(), this
        }, remove: function (k) {
            return this.get(k).remove(), this
        }, removeDetached: function () {
            return a.removeDetached(), this
        }, center: function (k) {
            return this.get(k).center(), this
        }, setOptions: function (k, l) {
            return this.get(k).setOptions(l), this
        }, getDimensions: function (k) {
            return k = 2 * a.get(k)[0].getLayout().workspace.radius, {
                width: k,
                height: k
            }
        }
    });
    var a = {
        spinners: [], get: function (k) {
            if (k) {
                var l = [];
                return b.each(this.spinners, function (n, m) {
                    m && (f.isElement(k) ? m.element == k : b(m.element).is(k)) && l.push(m)
                }), l
            }
        }, add: function (k) {
            this.spinners.push(k)
        }, remove: function (k) {
            b(b.map(this.spinners, function (l) {
                if (f.isElement(k) ? l.element == k : b(l.element).is(k)) {
                    return l.element
                }
            })).each(b.proxy(function (l, m) {
                this.removeByElement(m)
            }, this))
        }, removeByElement: function (k) {
            var l = this.get(k)[0];
            l && (l.remove(), this.spinners = b.grep(this.spinners, function (m) {
                return m.element != k
            }))
        }, removeDetached: function () {
            b.each(this.spinners, b.proxy(function (k, l) {
                l && l.element && !f.element.isAttached(l.element) && this.remove(l.element)
            }, this))
        }
    };
    b.extend(d, {
        create: function (k, l) {
            if (k) {
                var m = l || {}, n = [];
                return f.isElement(k) ? n.push(new e(k, m)) : b(k).each(function (o, p) {
                    n.push(new e(p, m))
                }), n
            }
        }
    }), b.extend(d.prototype, {
        items: function () {
            return a.get(this.element)
        }, play: function () {
            return b.each(this.items(), function (k, l) {
                l.play()
            }), this
        }, stop: function () {
            return b.each(this.items(), function (k, l) {
                l.stop()
            }), this
        }, pause: function () {
            return b.each(this.items(), function (k, l) {
                l.pause()
            }), this
        }, toggle: function () {
            return b.each(this.items(), function (k, l) {
                l.toggle()
            }), this
        }, center: function () {
            return b.each(this.items(), function (k, l) {
                l.center()
            }), this
        }, setOptions: function (k) {
            return b.each(this.items(), function (l, m) {
                m.setOptions(k)
            }), this
        }, remove: function () {
            return a.remove(this.element), this
        }
    }), b.extend(e.prototype, {
        setOptions: function (k) {
            this.options = b.extend({}, this.options, k || {}), this.options.radii && (k = this.options.radii, this.options.radius = Math.min(k[0], k[1]), this.options.height = Math.max(k[0], k[1]) - this.options.radius), this.options.dashWidth && (this.options.width = this.options.dashWidth), this.options.speed && (this.options.duration = 1000 * this.options.speed);
            var k = this._state, l = this._position;
            this._layout = null, this.build(), l && l >= this.options.dashes - 1 && (this._position = this.options.dashes - 1);
            switch (k) {
                case"playing":
                    this.play();
                    break;
                case"paused":
                case"stopped":
                    this.drawPosition(this._position)
            }
            this._centered && this.center()
        }, remove: function () {
            this.canvas && (this.pause(), b(this.canvas).remove(), this.ctx = this.canvas = null)
        }, build: function () {
            this.remove();
            var k = this.getLayout().workspace.radius;
            return b(document.body).append(this.canvas = b("<canvas>").attr({
                width: 2 * k,
                height: 2 * k
            }).css({zoom: 1})), window.G_vmlCanvasManager && G_vmlCanvasManager.initElement(this.canvas[0]), this.ctx = this.canvas[0].getContext("2d"), this.ctx.globalAlpha = this.options.opacity, b(this.element).append(this.canvas), this.ctx.translate(k, k), this
        }, drawPosition: function (k) {
            var l = this.getLayout().workspace, k = f.scroll(l.opacities, -1 * k), m = l.radius, l = this.options.dashes, n = c(360 / l);
            this.ctx.clearRect(-1 * m, -1 * m, 2 * m, 2 * m);
            for (m = 0; m < l; m++) {
                this.drawDash(k[m], this.options.color), this.ctx.rotate(n)
            }
        }, drawDash: function (n, o) {
            this.ctx.fillStyle = h.hex2fill(o, n);
            var k = this.getLayout(), m = k.workspace.radius, l = k.dash.position, k = k.dash.dimensions;
            g.drawRoundedRectangle(this.ctx, {
                top: l.top - m,
                left: l.left - m,
                width: k.width,
                height: k.height,
                radius: Math.min(k.height, k.width) / 2
            })
        }, _nextPosition: function () {
            var k = this.options.rotation / this.options.dashes;
            this.nextPosition(), this._playTimer = window.setTimeout(b.proxy(this._nextPosition, this), k)
        }, nextPosition: function () {
            this._position == this.options.dashes - 1 && (this._position = -1), this._position++, this.drawPosition(this._position)
        }, play: function () {
            if ("playing" != this._state) {
                this._state = "playing";
                var k = this.options.rotation / this.options.dashes;
                return this._playTimer = window.setTimeout(b.proxy(this._nextPosition, this), k), this
            }
        }, pause: function () {
            if ("paused" != this._state) {
                return this._pause(), this._state = "paused", this
            }
        }, _pause: function () {
            this._playTimer && (window.clearTimeout(this._playTimer), this._playTimer = null)
        }, stop: function () {
            if ("stopped" != this._state) {
                return this._pause(), this._position = 0, this.drawPosition(0), this._state = "stopped", this
            }
        }, toggle: function () {
            return this["playing" == this._state ? "pause" : "play"](), this
        }, getLayout: function () {
            if (this._layout) {
                return this._layout
            }
            for (var k = this.options, l = k.dashes, m = k.width, n = k.radius, o = k.radius + k.height, p = Math.max(m, o), p = Math.ceil(Math.max(p, Math.sqrt(o * o + m / 2 * (m / 2)))), k = p += k.padding, q = 1 / l, r = [], D = 0; D < l; D++) {
                r.push((D + 1) * q)
            }
            return this._layout = l = {
                workspace: {radius: k, opacities: r},
                dash: {
                    position: {top: p - o, left: p - m / 2},
                    dimensions: {width: m, height: o - n}
                }
            }
        }, center: function () {
            var k = 2 * this.getLayout().workspace.radius;
            b(this.element.parentNode).css({position: "relative"}), b(this.element).css({
                position: "absolute",
                height: k + "px",
                width: k + "px",
                top: "50%",
                left: "50%",
                marginLeft: -0.5 * k + "px",
                marginTop: -0.5 * k + "px"
            }), this._centered = !0
        }
    }), Spinners.init(), Spinners.enabled || (d.create = function () {
        return []
    })
})(jQuery);


/*
 * Tipped - The jQuery Tooltip - v3.1.8
 * (c) 2010-2013 Nick Stakenburg
 *
 * http://projects.nickstakenburg.com/tipped
 *
 * License: http://projects.nickstakenburg.com/tipped/license
 */
var Tipped = {version: "3.1.8"};
Tipped.Skins = {
    base: {
        afterUpdate: false,
        ajax: {cache: true, type: "get"},
        background: {color: "#f2f2f2", opacity: 1},
        border: {size: 1, color: "#000", opacity: 1},
        closeButtonSkin: "default",
        containment: {selector: "viewport"},
        fadeIn: 180,
        fadeOut: 220,
        showDelay: 75,
        hideDelay: 25,
        radius: {size: 5, position: "background"},
        hideAfter: false,
        hideOn: {element: "self", event: "mouseleave"},
        hideOthers: false,
        hook: "topleft",
        inline: false,
        offset: {x: 0, y: 0},
        onHide: false,
        onShow: false,
        shadow: {blur: 2, color: "#000", offset: {x: 0, y: 0}, opacity: 0.12},
        showOn: "mousemove",
        spinner: true,
        stem: {height: 9, width: 18, offset: {x: 9, y: 9}, spacing: 2},
        target: "self"
    },
    reset: {
        ajax: false,
        closeButton: false,
        hideOn: [{element: "self", event: "mouseleave"}, {
            element: "tooltip",
            event: "mouseleave"
        }],
        hook: "topmiddle",
        stem: true
    },
    dark: {
        background: {color: "#282828"},
        border: {color: "#9b9b9b", opacity: 0.4, size: 1},
        shadow: {opacity: 0.02},
        spinner: {color: "#fff"}
    },
    light: {
        background: {color: "#fff"},
        border: {color: "#646464", opacity: 0.4, size: 1},
        shadow: {opacity: 0.04}
    },
    gray: {
        background: {
            color: [{position: 0, color: "#8f8f8f"}, {
                position: 1,
                color: "#808080"
            }]
        }, border: {color: "#131313", size: 1, opacity: 0.6}
    },
    tiny: {
        background: {color: "#161616"},
        border: {color: "#969696", opacity: 0.35, size: 1},
        fadeIn: 0,
        fadeOut: 0,
        radius: 4,
        stem: {width: 11, height: 6, offset: {x: 6, y: 6}},
        shadow: false,
        spinner: {color: "#fff"}
    },
    yellow: {
        background: "#ffffaa",
        border: {size: 1, color: "#6d5208", opacity: 0.4}
    },
    red: {
        background: {
            color: [{position: 0, color: "#e13c37"}, {
                position: 1,
                color: "#e13c37"
            }]
        },
        border: {size: 1, color: "#150201", opacity: 0.6},
        spinner: {color: "#fff"}
    },
    green: {
        background: {
            color: [{position: 0, color: "#4bb638"}, {
                position: 1,
                color: "#4aab3a"
            }]
        },
        border: {size: 1, color: "#122703", opacity: 0.6},
        spinner: {color: "#fff"}
    },
    blue: {
        background: {
            color: [{position: 0, color: "#4588c8"}, {
                position: 1,
                color: "#3d7cb9"
            }]
        }, border: {color: "#020b17", opacity: 0.6}, spinner: {color: "#fff"}
    }
};
(function (b) {
    b.extend(Tipped.Skins, {
        black: b.extend(true, {}, Tipped.Skins.dark, {radius: 0}),
        white: b.extend(true, {}, Tipped.Skins.light, {radius: 0})
    })
})(jQuery);
Tipped.Skins.CloseButtons = {
    base: {
        diameter: 17,
        border: 2,
        x: {diameter: 10, size: 2, opacity: 1},
        states: {
            "default": {
                background: {
                    color: [{
                        position: 0,
                        color: "#1a1a1a"
                    }, {position: 0.46, color: "#171717"}, {
                        position: 0.53,
                        color: "#121212"
                    }, {position: 0.54, color: "#101010"}, {
                        position: 1,
                        color: "#000"
                    }], opacity: 1
                },
                x: {color: "#fafafa", opacity: 1},
                border: {color: "#fff", opacity: 1}
            },
            hover: {
                background: {color: "#333", opacity: 1},
                x: {color: "#e6e6e6", opacity: 1},
                border: {color: "#fff", opacity: 1}
            }
        },
        shadow: {blur: 1, color: "#000", offset: {x: 0, y: 0}, opacity: 0.5}
    },
    reset: {},
    "default": {},
    light: {
        diameter: 17,
        border: 2,
        x: {diameter: 10, size: 2, opacity: 1},
        states: {
            "default": {
                background: {
                    color: [{
                        position: 0,
                        color: "#797979"
                    }, {position: 0.48, color: "#717171"}, {
                        position: 0.52,
                        color: "#666"
                    }, {position: 1, color: "#666"}], opacity: 1
                },
                x: {color: "#fff", opacity: 0.95},
                border: {color: "#676767", opacity: 1}
            },
            hover: {
                background: {
                    color: [{
                        position: 0,
                        color: "#868686"
                    }, {position: 0.48, color: "#7f7f7f"}, {
                        position: 0.52,
                        color: "#757575"
                    }, {position: 1, color: "#757575"}], opacity: 1
                },
                x: {color: "#fff", opacity: 1},
                border: {color: "#767676", opacity: 1}
            }
        }
    }
};
eval(function (e, a, c, n, k, m) {
    k = function (b) {
        return (b < a ? "" : k(parseInt(b / a))) + ((b = b % a) > 35 ? String.fromCharCode(b + 29) : b.toString(36))
    };
    if (!"".replace(/^/, String)) {
        while (c--) {
            m[k(c)] = n[c] || k(c)
        }
        n = [function (b) {
            return m[b]
        }];
        k = function () {
            return "\\w+"
        };
        c = 1
    }
    while (c--) {
        if (n[c]) {
            e = e.replace(new RegExp("\\b" + k(c) + "\\b", "g"), n[c])
        }
    }
    return e
}('(12(a){12 c(a,b){13 c=[a,b];1a c.15=a,c.17=b,c}12 f(a){1N.5v&&5v[5v.6z?"6z":"8c"](a)}12 j(a){11.1g=a}12 k(a){13 b={};28(13 c 5w a)b[c]=a[c]+"2w";1a b}12 l(a,b){1a 1b.8d(a*a+b*b)}12 m(a){1a 2E*a/1b.2Z}12 n(a){1a a*1b.2Z/2E}12 o(a){1a 1/1b.4A(a)}12 v(b){1f(b){11.1g=b,u.1z(b);13 c=11.2e();11.19=a.1k({},c.19),11.2x=1,11.1o={},11.1V=a(b).1X("2p-1V"),u.30(11),11.29=11.19.1u.1D,11.6A=11.19.1l&&11.29,11.3a={x:0,y:0},11.3l={17:0,15:0},11.1P()}}12 x(b,c){11.1g=b,11.1g&&c&&(11.19=a.1k({31:3,1A:{x:0,y:0},1Q:"#4B",1K:.5,2L:1},20[2]||{}),11.2x=11.19.2L,11.1o={},11.1V=a(b).1X("2p-1V"),w.30(11),11.1P())}12 z(b){11.1g=b,11.1g&&(11.19=a.1k({31:5,1A:{x:0,y:0},1Q:"#4B",1K:.5,2L:1},20[1]||{}),11.2x=11.19.2L,11.1V=a(b).1X("2p-1V"),y.30(11),11.1P())}12 A(b,c){28(13 d 5w c)c[d]&&c[d].3D&&c[d].3D===5x?(b[d]=a.1k({},b[d])||{},A(b[d],c[d])):b[d]=c[d];1a b}12 C(b,c){1f(11.1g=b,11.1g){13 e=a(b).1X("2p-1V");e&&B.1z(b),e=h(),a(b).1X("2p-1V",e),11.1V=e;13 f;"8e"!=a.1p(c)||d.2j(c)?f=20[2]||{}:(f=c,c=1r),11.19=B.6B(f);13 g=b.6C("5y");1f(!c){13 i=b.6C("1X-2p");i?c=i:g&&(c=g)}g&&(a(b).1X("5z",g),b.8f("5y","")),11.2F=c,11.2k=11.19.2k||+B.19.4C,11.1o={2G:{14:1,18:1},5A:[],3b:[],2q:{4D:!1,2l:!1,1L:!1,3c:!1,1P:!1,4E:!1,5B:!1,3E:!1},5C:""};13 j=11.19.1C;11.1C="2M"==j?"2M":"4F"!=j&&j?d.2j(j)?j:j&&1x.6D(j)||11.1g:11.1g,11.6E(),B.30(11)}}13 b=6F.3F.8g,d={8h:12(c,d){13 e=c;1a 12(){13 c=[a.1v(e,11)].6G(b.5D(20));1a d.5E(11,c)}},2j:12(a){1a a&&1==a.8i},4G:12(a,c){13 d=b.5D(20,2);1a 8j(12(){1a a.5E(a,d)},c)},44:12(a){1a d.4G.5E(11,[a,1].6G(b.5D(20,1)))},5F:12(a){1a{x:a.5G,y:a.6H}},1g:{4H:12(a){13 b=0,d=0;8k b+=a.4I||0,d+=a.4J||0,a=a.4K;8l(a);1a c(d,b)},4L:12(b){13 e=a(b).1A(),f=d.1g.4H(b),g={17:a(1N).4I(),15:a(1N).4J()};1a e.15+=f.15-g.15,e.17+=f.17-g.17,c(e.15,e.17)},5H:12(){12 a(a){28(13 b=a;b&&b.4K;)b=b.4K;1a b}1a 12(b){13 c=a(b);1a!(!c||!c.3d)}}()}},e=12(a){12 b(b){13 c=5I(b+"([\\\\d.]+)").8m(a);1a c?5J(c[1]):!0}1a{3m:!(!1N.8n||-1!==a.3n("5K"))&&b("8o "),5K:a.3n("5K")>-1&&(!!1N.5L&&5L.6I&&5J(5L.6I())||7.55),5M:a.3n("6J/")>-1&&b("6J/"),4M:a.3n("4M")>-1&&-1===a.3n("8p")&&b("8q:"),6K:!!a.3e(/8r.*8s.*8t/),4N:a.3n("4N")>-1&&b("4N/")}}(8u.8v),g={32:{46:{5N:"1.4.4",5O:1N.46&&46.8w.8x}},6L:12(){12 b(b){28(13 c=b.3e(a),d=c&&c[1]&&c[1].2N(".")||[],e=0,f=0,g=d.2a;g>f;f++)e+=2O(d[f]*1b.6M(10,6-2*f));1a c&&c[3]?e-1:e}13 a=/^(\\d+(\\.?\\d+){0,3})([A-6N-8y-]+[A-6N-8z-9]+)?/;1a 12(a){11.32[a].6O||(11.32[a].6O=!0,(!11.32[a].5O||b(11.32[a].5O)<b(11.32[a].5N)&&!11.32[a].6P)&&(11.32[a].6P=!0,f("1S 8A "+a+" >= "+11.32[a].5N)))}}()},h=12(){13 a=0,b="8B";1a 12(c){28(c=c||b,a++;1x.6D(c+a);)a++;1a c+a}}(),i=12(){13 b=[];1a{1t:12(c){28(13 d=1r,e=0;b.2a>e;e++)b[e]&&b[e].47==c.47&&b[e].1p.6Q()==c.1p.6Q()&&a.6R(b[e].1X||{})==a.6R(c.1X||{})&&(d=b[e].4O);1a d},4P:12(c,d){11.1z(c.47),b.2n(a.1k({},c,{4O:d}))},1z:12(a){28(13 c=0;b.2a>c;c++)b[c]&&b[c].47==a&&3G b[c]},6S:12(){b=[]}}}();a.1k(1S,12(){1a{2H:{3f:12(){13 a=1x.22("3f");1a!(!a.3o||!a.3o("2d"))}(),3H:12(){6T{1a!!("8C"5w 1N||1N.6U&&1x 8D 6U)}6V(a){1a!1}}(),48:12(){13 b=["8E","8F","8G"],c=!1;1a a.1w(b,12(a,b){6T{1x.8H(b),c=!0}6V(d){}}),c}()},3p:12(){(11.2H.3f||e.3m)&&(g.6L("46"),a(1x).6W(12(){B.6X()}))},4Q:12(a,b,c){1a j.4Q(a,b,c),11.1t(a)},1t:12(a){1a 3q j(a)},5P:12(a){1a B.5P(a)},1W:12(a){1a 11.1t(a).1W(),11},1I:12(a){1a 11.1t(a).1I(),11},33:12(a){1a 11.1t(a).33(),11},2P:12(a){1a 11.1t(a).2P(),11},1z:12(a){1a 11.1t(a).1z(),11},4R:12(){1a B.4R(),11},5Q:12(a){1a B.5Q(a),11},5R:12(a){1a B.5R(a),11},1L:12(b){1f(d.2j(b))1a B.5S(b);1f("5T"!=a.1p(b)){13 c=a(b),e=0;1a a.1w(c,12(a,b){B.5S(b)&&e++}),e}1a B.3I().2a},5U:12(){1a B.5U(),11}}}()),a.1k(j,{4Q:12(b,c){1f(b){13 e=20[2]||{},f=[];1a B.6Y(),d.2j(b)?f.2n(3q C(b,c,e)):a(b).1w(12(a,b){f.2n(3q C(b,c,e))}),f}}}),a.1k(j.3F,{49:12(){1a B.2r.4S={x:0,y:0},B.1t(11.1g)},1W:12(){1a a.1w(11.49(),12(a,b){b.1W()}),11},1I:12(){1a a.1w(11.49(),12(a,b){b.1I()}),11},33:12(){1a a.1w(11.49(),12(a,b){b.33()}),11},2P:12(){1a a.1w(11.49(),12(a,b){b.2P()}),11},1z:12(){1a B.1z(11.1g),11}});13 p={4T:12(){13 b;1a b=e.6K?{14:1N.5V,18:1N.5W}:{18:a(1N).18(),14:a(1N).14()}}},q={3r:1b.1E(1b.4U(1N.3r?5J(1N.3r)||1:1,2)),3p:12(){12 a(a){13 b=a.3o("2d");b.8I(q.3r,q.3r)}1a 1N.4V&&!1S.2H.3f&&e.3m?12(b){4V.8J(b),a(b)}:12(b){a(b)}}(),3J:12(b,c){a(b).3g({14:c.14*11.3r,18:c.18*11.3r}).1q(k(c))},6Z:12(b){13 c=a.1k({17:0,15:0,14:0,18:0,1n:0},20[1]||{}),d=c,e=d.15,f=d.17,g=d.14,h=d.18,i=d.1n;1a i?(b.2f(),b.3s(e+i,f),b.26(e+g-i,f+i,i,n(-90),n(0),!1),b.26(e+g-i,f+h-i,i,n(0),n(90),!1),b.26(e+i,f+h-i,i,n(90),n(2E),!1),b.26(e+i,f+i,i,n(-2E),n(-90),!1),b.2g(),b.34(),3t 0):(b.70(e,f,g,h),3t 0)},8K:12(b,c){28(13 d=a.1k({x:0,y:0,1Q:"#4B"},20[2]||{}),e=0,f=c.2a;f>e;e++)28(13 g=0,h=c[e].2a;h>g;g++){13 i=2O(c[e].3u(g))*(1/9);b.2Q=t.2R(d.1Q,i),i&&b.70(d.x+g,d.y+e,1,1)}},4a:12(b,c){13 d;1f("2s"==a.1p(c))d=t.2R(c);1G 1f("2s"==a.1p(c.1Q))d=t.2R(c.1Q,"2y"==a.1p(c.1K)?c.1K:1);1G 1f(a.71(c.1Q)){13 e=a.1k({3K:0,3L:0,3M:0,3N:0},20[2]||{});d=q.72.73(b.8L(e.3K,e.3L,e.3M,e.3N),c.1Q,c.1K)}1a d}};q.72={73:12(b,c){28(13 d="2y"==a.1p(20[2])?20[2]:1,e=0,f=c.2a;f>e;e++){13 g=c[e];("5T"==a.1p(g.1K)||"2y"!=a.1p(g.1K))&&(g.1K=1),b.8M(g.1e,t.2R(g.1Q,g.1K*d))}1a b}};13 r={74:["3O","4b","3P","3Q","4c","4d","4e","4f","4g","4h","4i","3R"],4j:{75:/^(17|15|1R|1O)(17|15|1R|1O|2t|2S)$/,1J:/^(17|1R)/,35:/(2t|2S)/,76:/^(17|1R|15|1O)/},77:12(){13 a={17:"18",15:"14",1R:"18",1O:"14"};1a 12(b){1a a[b]}}(),35:12(a){1a!!a.3v().3e(11.4j.35)},78:12(a){1a!11.35(a)},2I:12(a){1a a.3v().3e(11.4j.1J)?"1J":"2b"},5X:12(a){13 b=1r,c=a.3v().3e(11.4j.76);1a c&&c[1]&&(b=c[1]),b},2N:12(a){1a a.3v().3e(11.4j.75)}},s={5Y:12(a){13 b=a.19.1l;1a{14:b.14,18:b.18}},4k:12(b,c){13 d=a.1k({3S:"1E"},20[2]||{}),e=b.19.1l,f=e.14,g=e.18,h=11.4W(f,g,c);1a d.3S&&(h.14=1b[d.3S](h.14),h.18=1b[d.3S](h.18)),{14:h.14,18:h.18}},4W:12(a,b,c){13 d=m(1b.79(.5*(b/a))),e=2E-d,f=1b.4A(n(e-90))*c,g=a+2*f,h=g*b/a;1a{14:g,18:h}},3T:12(a,b){13 c=11.4k(a,b),d=11.5Y(a),f=(r.35(a.29),1b.1E(c.18+b));1a a.19.1l.1A||0,a.19.1n&&a.19.1n.2u||0,{2z:{1c:{14:1b.1E(c.14),18:1b.1E(f)}},1i:{1c:c},1l:{1c:{14:d.14,18:d.18}}}},5Z:12(b,c,d){13 f=b.19,g={17:0,15:0},h={17:0,15:0},i=a.1k({},c),j=b.1i,k=k||11.3T(b,b.1i),l=k.2z.1c;d&&(l.18=d,j=0);13 m=r.2N(b.29),n=r.2I(b.29);1f(b.19.1l){13 o=r.5X(b.29);1f("17"==o?g.17=l.18-j:"15"==o&&(g.15=l.18-j),"1J"==n){1T(m[2]){1h"2t":1h"2S":h.15=.5*i.14;1B;1h"1O":h.15=i.14}"1R"==m[1]&&(h.17=i.18-j+l.18)}1G{1T(m[2]){1h"2t":1h"2S":h.17=.5*i.18;1B;1h"1R":h.17=i.18}"1O"==m[1]&&(h.15=i.14-j+l.18)}i[r.77(o)]+=l.18-j}1G 1f("1J"==n){1T(m[2]){1h"2t":1h"2S":h.15=.5*i.14;1B;1h"1O":h.15=i.14}"1R"==m[1]&&(h.17=i.18)}1G{1T(m[2]){1h"2t":1h"2S":h.17=.5*i.18;1B;1h"1R":h.17=i.18}"1O"==m[1]&&(h.15=i.14)}13 p=f.1n&&f.1n.2u||0,q=f.1i&&f.1i.2u||0;1f(b.19.1l){13 t=p&&"1m"==f.1n.1e?p:0,u=p&&"1i"==f.1n.1e?p:p+q,v=q+t+.5*k.1l.1c.14-.5*k.1i.1c.14,w=u>v?u-v:0,x=1b.1E(q+t+.5*k.1l.1c.14+w);1f("1J"==n)1T(m[2]){1h"15":h.15+=x;1B;1h"1O":h.15-=x}1G 1T(m[2]){1h"17":h.17+=x;1B;1h"1R":h.17-=x}}13 y;1f(f.1l&&(y=f.1l.1A)){13 z=s.60(y,b.6A,c,k.1i.1c,q,p);1f(y=z.1A,z.4l,"1J"==n)1T(m[2]){1h"15":h.15+=y.x;1B;1h"1O":h.15-=y.x}1G 1T(m[2]){1h"17":h.17+=y.y;1B;1h"1R":h.17-=y.y}}13 B;1f(f.1l&&(B=f.1l.8N))1f("1J"==n)1T(m[1]){1h"17":h.17-=B;1B;1h"1R":h.17+=B}1G 1T(m[1]){1h"15":h.15-=B;1B;1h"1O":h.15+=B}1a{1c:i,1e:{17:0,15:0},1m:{1e:g,1c:c},1l:{1c:l},2J:h}},60:12(b,c,d,e,f,g){13 h=r.2I(c),i=a.1k({},b),j={x:0,y:0},k=0;1a"1J"==h&&(k=d.14-e.14-2*f-2*g)<2*b.x&&(j.x=i.x,/(1O)$/.3h(c)&&(j.x*=-1),i.x=0),"2b"==h&&(k=d.18-e.18-2*f-2*g)<2*b.y&&(j.y=i.y,/(1R)$/.3h(c)&&(j.y*=-1),i.y=0),{1A:i,4l:j}}},t=12(){12 d(a){13 b=a;1a b.7a=a[0],b.7b=a[1],b.7c=a[2],b}12 e(a){1a 2O(a,16)}12 f(a){13 b=6F(3);1f(0==a.3n("#")&&(a=a.4X(1)),a=a.3v(),""!=a.61(c,""))1a 1r;3==a.2a?(b[0]=a.3u(0)+a.3u(0),b[1]=a.3u(1)+a.3u(1),b[2]=a.3u(2)+a.3u(2)):(b[0]=a.4X(0,2),b[1]=a.4X(2,4),b[2]=a.4X(4));28(13 f=0;b.2a>f;f++)b[f]=e(b[f]);1a d(b)}12 g(a,b){13 c=f(a);1a c[3]=b,c.1K=b,c}12 h(b,c){1a"5T"==a.1p(c)&&(c=1),"8O("+g(b,c).8P()+")"}12 i(a){1a"#"+(j(a)[2]>50?"4B":"8Q")}12 j(a){1a k(f(a))}12 k(a){13 f,g,h,a=d(a),b=a.7a,c=a.7b,e=a.7c,i=b>c?b:c;e>i&&(i=e);13 j=c>b?b:c;1f(j>e&&(j=e),h=i/8R,g=0!=i?(i-j)/i:0,0==g)f=0;1G{13 k=(i-b)/(i-j),l=(i-c)/(i-j),m=(i-e)/(i-j);f=b==i?m-l:c==i?2+k-m:4+l-k,f/=6,0>f&&(f+=1)}f=1b.23(7d*f),g=1b.23(62*g),h=1b.23(62*h);13 n=[];1a n[0]=f,n[1]=g,n[2]=h,n.8S=f,n.8T=g,n.8U=h,n}13 b="8V",c=5I("["+b+"]","g");1a{8W:f,2R:h,8X:i}}(),u={4Y:{},1t:12(b){1f(!b)1a 1r;13 c=1r,d=a(b).1X("2p-1V");1a d&&(c=11.4Y[d]),c},30:12(a){11.4Y[a.1V]=a},1z:12(a){13 b=11.1t(a);b&&(3G 11.4Y[b.1V],b.1z())}};a.1k(v.3F,12(){12 b(){11.1o.1u={};13 b=11.29;a.1w(r.74,a.1v(12(b,c){13 d,e=11.1o.1u[c]={};11.29=c;13 f=11.2o();d=f,e.2J=d.2J;13 g=d.1H.1c,h={17:d.1H.1e.17,15:d.1H.1e.15};1f(e.1H={1c:g,1e:h},e.1D={1c:d.21.1c},11.1s){13 i=11.1s.2o(),j=i.21.1e,k=e.1H.1e;a.1k(!0,e,{2J:i.2J,1H:{1e:{17:k.17+j.17,15:k.15+j.15}},1D:{1c:i.1D.1c}})}},11)),11.29=b}12 c(){11.36(),11.19.1s&&(w.1z(11.1g),11.19.1y&&11.19.1y.1s&&y.1z(11.1g)),11.2T&&(11.2T.1z(),11.2T=1r),11.1j&&(a(11.1j).1z(),11.1j=1r)}12 d(){11.1H&&(11.1y&&(a(11.1y).1z(),11.1y=1r,11.63=1r,11.64=1r),a(11.1H).1z(),11.1l=1r,11.1m=1r,11.1H=1r,11.1o={})}12 f(){13 a=11.2e();11.2G=a.1o.2G;13 b=a.19;11.1n=b.1n&&b.1n.2u||0,11.1i=b.1i&&b.1i.2u||0,11.2m=b.2m;13 c=1b.4U(11.2G.18,11.2G.14);11.1n>c/2&&(11.1n=1b.65(c/2)),"1i"==11.19.1n.1e&&11.1n>11.1i&&(11.1i=11.1n),11.1o={19:{1n:11.1n,1i:11.1i,2m:11.2m}}}12 g(){11.36(),1N.4V&&1N.4V.8Y(1x);13 b=11.2e(),c=11.19;11.1H=a("<2h>").1Y("8Z")[0],a(b.4Z).1Z(11.1H),11.51(),11.7e(b),c.1y&&(11.7f(b),c.1y.1s&&(11.2U?(11.2U.19=c.1y.1s,11.2U.1P()):11.2U=3q z(11.1g,a.1k({2L:11.2x},c.1y.1s)))),e.3m&&7>e.3m&&a(b.1j).66(11.2T=a("<91>").1Y("92").3g({93:0,4m:"94:\'\';"})),11.52(),c.1s&&(11.1s?(11.1s.19=c.1s,11.1s.1P()):11.1s=3q x(11.1g,11,a.1k({2L:11.2x},c.1s))),11.7g()}12 h(){13 b=11.2e(),c=a(b.1j),d=a(b.1j).67(".7h").7i()[0];1f(d){a(d).1q({14:"68",18:"68"});13 e=2O(c.1q("17")),f=2O(c.1q("15")),g=2O(c.1q("14"));c.1q({15:"-7j",17:"-7j",14:"95",18:"68"}),b.1F("1L")||a(b.1j).1W();13 h=B.53.69(d);b.19.3i&&"2y"==a.1p(b.19.3i)&&h.14>b.19.3i&&(a(d).1q({14:b.19.3i+"2w"}),h=B.53.69(d)),b.1F("1L")||a(b.1j).1I(),b.1o.2G=h,c.1q({15:f+"2w",17:e+"2w",14:g+"2w"}),11.1P()}}12 i(a,b,c){13 d=!1;11.4n(a)&&(d=!0),11.7k(b)&&(d=!0),c&&11.7l(c)&&(d=!0),d&&11.1P()}12 j(a){13 b=!1;1a(11.3l.15!=a.15||11.3l.17!=a.17)&&(b=!0,11.3l=a),b}12 l(a){13 b=!1;1a(11.3a.x!=a.x||11.3a.y!=a.y)&&(b=!0,11.3a=a),b}12 m(a){13 c=!1;1a 11.29!=a&&(c=!0,11.29=a),c}12 o(){1a B.1t(11.1g)[0]}12 p(){1a s.3T(11,11.1i)}12 u(){13 b=11.2e().19.1y,c=b.3w+2*b.1i;a(11.63).1q({15:-1*c+"2w"}),a(11.64).1q({15:0})}12 v(){13 b=11.2e().19.1y,c=b.3w+2*b.1i;a(11.63).1q({15:0}),a(11.64).1q({15:c+"2w"})}12 A(b){13 c=b.19.1y,d={14:c.3w+2*c.1i,18:c.3w+2*c.1i};a(b.1j).1Z(a(11.1y=1x.22("2h")).1Y("7m").1q(k(d)).1Z(a(11.7n=1x.22("2h")).1Y("96").1q(k(d)))),11.6a(b,"6b"),11.6a(b,"6c"),1S.2H.3H||e.4N||a(11.1y).3U("4o",a.1v(11.7o,11)).3U("54",a.1v(11.7p,11))}12 C(b,c){13 d=b.19.1y,e=d.3w,f=d.1i||0,g=d.x.3w,h=d.x.2u,j=(d.x.97,d.2q[c||"6b"]),l={14:e+2*f,18:e+2*f};g>=e&&(g=e-2);13 m;a(11.7n).1Z(a(11[c+"7q"]=1x.22("2h")).1Y("98").1q(a.1k(k(l),{15:("6c"==c?l.14:0)+"2w"}))),a(1x.3d).1Z(a(m=1x.22("3f"))),q.3J(m,l),q.3p(m);13 o=m.3o("2d");o.2L=11.2x,a(11[c+"7q"]).1Z(m),o.99(l.14/2,l.18/2),o.2Q=q.4a(o,j.1m,{3K:0,3L:0-e/2,3M:0,3N:0+e/2}),o.2f(),o.26(0,0,e/2,0,2*1b.2Z,!0),o.2g(),o.34(),f&&(o.2Q=q.4a(o,j.1i,{3K:0,3L:0-e/2-f,3M:0,3N:0+e/2+f}),o.2f(),o.26(0,0,e/2,1b.2Z,0,!1),o.1d((e+f)/2,0),o.26(0,0,e/2+f,0,1b.2Z,!0),o.26(0,0,e/2+f,1b.2Z,0,!0),o.1d(e/2,0),o.26(0,0,e/2,0,1b.2Z,!1),o.2g(),o.34());13 p=g/2,r=h/2;1f(r>p){13 s=r;r=p,p=s}o.2Q=t.2R(j.x.1Q||j.x,j.x.1K||1),o.56(n(45)),o.2f(),o.3s(0,0),o.1d(0,p);28(13 u=0;4>u;u++)o.1d(0,p),o.1d(r,p),o.1d(r,p-(p-r)),o.1d(p,r),o.1d(p,0),o.56(n(90));o.2g(),o.34()}12 D(b){13 l,m,o,p,q,c=a.1k({1l:!1,3x:1r,9a:1r,2f:!1,2g:!1,3y:1r,3z:1r,1n:0,1i:0,57:0,37:{x:0,y:0}},20[1]||{}),d=c.3y,e=c.3z,f=c.37,g=c.1i,h=c.1n,i=c.3x,j=d.1m.1e,k=d.1m.1c,t={x:1b.2V(11.3a.x),y:1b.2V(11.3a.y)},u={x:0,y:0},v={x:0,y:0};1f(e){l=e.1l.1c,m=e.2z.1e,o=e.2z.1c,p=o.14-l.14;13 w=c.57,x=g+h+.5*l.14-.5*e.1i.1c.14;q=1b.1E(w>x?w-x:0);13 y=s.60(f,i,k,e.1i.1c,g,h);f=y.1A,v=y.4l,u={x:1b.1U(k.14-2*1b.1U(q,f.x||0)-e.1i.1c.14-(2*h||0),0),y:1b.1U(k.18-2*1b.1U(q,f.y||0)-e.1i.1c.18-(2*h||0),0)},r.35(i)&&(u.x*=.5,u.y*=.5),t.x=1b.4U(t.x,u.x),t.y=1b.4U(t.y,u.y),r.35(i)&&(0>11.3a.x&&t.x>0&&(t.x*=-1),0>11.3a.y&&t.y>0&&(t.y*=-1)),11.3l&&11.3l.3A&&a.1w(11.3l.3A,12(b,c){a.1w("17 1O 1R 15".2N(" "),12(a,b){c==b&&5I("("+b+")$").3h(i)&&(t[/^(15|1O)$/.3h(b)?"x":"y"]=0)})})}13 z,A;1f(h?(z=j.15+g+h,A=j.17+g):(z=j.15+g,A=j.17+g),f&&f.x&&/^(3O|3R)$/.3h(i)&&(z+=f.x),c.2f&&b.2f(),b.3s(z,A),c.1l)1T(i){1h"3O":z=j.15+g,h&&(z+=h),z+=1b.1U(q,f.x||0),z+=t.x,b.1d(z,A),A-=l.18,z+=.5*l.14,b.1d(z,A),A+=l.18,z+=.5*l.14,b.1d(z,A);1B;1h"4b":1h"58":z=j.15+.5*k.14-.5*l.14,z+=t.x,b.1d(z,A),A-=l.18,z+=.5*l.14,b.1d(z,A),A+=l.18,z+=.5*l.14,b.1d(z,A),z=j.15+.5*k.14-.5*o.14,b.1d(z,A);1B;1h"3P":z=j.15+k.14-g-l.14,h&&(z-=h),z-=1b.1U(q,f.x||0),z-=t.x,b.1d(z,A),A-=l.18,z+=.5*l.14,b.1d(z,A),A+=l.18,z+=.5*l.14,b.1d(z,A)}1f(h?h&&(b.26(j.15+k.14-g-h,j.17+g+h,h,n(-90),n(0),!1),z=j.15+k.14-g,A=j.17+g+h):(z=j.15+k.14-g,A=j.17+g,b.1d(z,A)),c.1l)1T(i){1h"3Q":A=j.17+g,h&&(A+=h),A+=1b.1U(q,f.y||0),A+=t.y,b.1d(z,A),z+=l.18,A+=.5*l.14,b.1d(z,A),z-=l.18,A+=.5*l.14,b.1d(z,A);1B;1h"4c":1h"59":A=j.17+.5*k.18-.5*l.14,A+=t.y,b.1d(z,A),z+=l.18,A+=.5*l.14,b.1d(z,A),z-=l.18,A+=.5*l.14,b.1d(z,A);1B;1h"4d":A=j.17+k.18-g,h&&(A-=h),A-=l.14,A-=1b.1U(q,f.y||0),A-=t.y,b.1d(z,A),z+=l.18,A+=.5*l.14,b.1d(z,A),z-=l.18,A+=.5*l.14,b.1d(z,A)}1f(h?h&&(b.26(j.15+k.14-g-h,j.17+k.18-g-h,h,n(0),n(90),!1),z=j.15+k.14-g-h,A=j.17+k.18-g):(z=j.15+k.14-g,A=j.17+k.18-g,b.1d(z,A)),c.1l)1T(i){1h"4e":z=j.15+k.14-g,h&&(z-=h),z-=1b.1U(q,f.x||0),z-=t.x,b.1d(z,A),z-=.5*l.14,A+=l.18,b.1d(z,A),z-=.5*l.14,A-=l.18,b.1d(z,A);1B;1h"4f":1h"5a":z=j.15+.5*k.14+.5*l.14,z+=t.x,b.1d(z,A),z-=.5*l.14,A+=l.18,b.1d(z,A),z-=.5*l.14,A-=l.18,b.1d(z,A);1B;1h"4g":z=j.15+g+l.14,h&&(z+=h),z+=1b.1U(q,f.x||0),z+=t.x,b.1d(z,A),z-=.5*l.14,A+=l.18,b.1d(z,A),z-=.5*l.14,A-=l.18,b.1d(z,A)}1f(h?h&&(b.26(j.15+g+h,j.17+k.18-g-h,h,n(90),n(2E),!1),z=j.15+g,A=j.17+k.18-g-h):(z=j.15+g,A=j.17+k.18-g,b.1d(z,A)),c.1l)1T(i){1h"4h":A=j.17+k.18-g,h&&(A-=h),A-=1b.1U(q,f.y||0),A-=t.y,b.1d(z,A),z-=l.18,A-=.5*l.14,b.1d(z,A),z+=l.18,A-=.5*l.14,b.1d(z,A);1B;1h"4i":1h"5b":A=j.17+.5*k.18+.5*l.14,A+=t.y,b.1d(z,A),z-=l.18,A-=.5*l.14,b.1d(z,A),z+=l.18,A-=.5*l.14,b.1d(z,A);1B;1h"3R":A=j.17+g+l.14,h&&(A+=h),A+=1b.1U(q,f.y||0),A+=t.y,b.1d(z,A),z-=l.18,A-=.5*l.14,b.1d(z,A),z+=l.18,A-=.5*l.14,b.1d(z,A)}1a h?h&&(b.26(j.15+g+h,j.17+g+h,h,n(-2E),n(-90),!1),z=j.15+g+h,A=j.17+g,z+=1,b.1d(z,A)):(z=j.15+g,A=j.17+g,b.1d(z,A)),c.2g&&b.2g(),{x:z,y:A,1l:t,5c:v,37:f}}12 E(b){13 o,p,q,r,s,t,c=a.1k({1l:!1,3x:1r,2f:!1,2g:!1,3y:1r,3z:1r,1n:0,1i:0,7r:0,37:{x:0,y:0},5d:1r},20[1]||{}),d=c.3y,e=c.3z,g=(c.7r,c.37),h=c.1i,i=c.1n&&c.1n.2u||0,j=c.7s,k=c.3x,l=d.1m.1e,m=d.1m.1c,u=c.5d&&c.5d.1l||{x:0,y:0};1f(e){o=e.1l.1c,p=e.2z.1e,q=e.2z.1c,r=e.1i.1c,s=q.14-o.14;13 v=h+j+.5*o.14-.5*r.14;t=1b.1E(i>v?i-v:0)}13 w=l.15+h+j,x=l.17+h;j&&(w+=1),a.1k({},{x:w,y:x}),c.2f&&b.2f();13 z=a.1k({},{x:w,y:x});1f(x-=h,b.1d(w,x),i?i&&(b.26(l.15+i,l.17+i,i,n(-90),n(-2E),!0),w=l.15,x=l.17+i):(w=l.15,x=l.17,b.1d(w,x)),c.1l)1T(k){1h"3R":x=l.17+h,j&&(x+=j),x-=.5*r.14,x+=.5*o.14,x+=1b.1U(t,g.y||0),x+=u.y,b.1d(w,x),w-=r.18,x+=.5*r.14,b.1d(w,x),w+=r.18,x+=.5*r.14,b.1d(w,x);1B;1h"4i":1h"5b":x=l.17+.5*m.18-.5*r.14,x+=u.y,b.1d(w,x),w-=r.18,x+=.5*r.14,b.1d(w,x),w+=r.18,x+=.5*r.14,b.1d(w,x);1B;1h"4h":x=l.17+m.18-h-r.14,j&&(x-=j),x+=.5*r.14,x-=.5*o.14,x-=1b.1U(t,g.y||0),x-=u.y,b.1d(w,x),w-=r.18,x+=.5*r.14,b.1d(w,x),w+=r.18,x+=.5*r.14,b.1d(w,x)}1f(i?i&&(b.26(l.15+i,l.17+m.18-i,i,n(-2E),n(-9b),!0),w=l.15+i,x=l.17+m.18):(w=l.15,x=l.17+m.18,b.1d(w,x)),c.1l)1T(k){1h"4g":w=l.15+h,j&&(w+=j),w-=.5*r.14,w+=.5*o.14,w+=1b.1U(t,g.x||0),w+=u.x,b.1d(w,x),x+=r.18,w+=.5*r.14,b.1d(w,x),x-=r.18,w+=.5*r.14,b.1d(w,x);1B;1h"4f":1h"5a":w=l.15+.5*m.14-.5*r.14,w+=u.x,b.1d(w,x),x+=r.18,w+=.5*r.14,b.1d(w,x),x-=r.18,w+=.5*r.14,b.1d(w,x),w=l.15+.5*m.14+r.14,b.1d(w,x);1B;1h"4e":w=l.15+m.14-h-r.14,j&&(w-=j),w+=.5*r.14,w-=.5*o.14,w-=1b.1U(t,g.x||0),w-=u.x,b.1d(w,x),x+=r.18,w+=.5*r.14,b.1d(w,x),x-=r.18,w+=.5*r.14,b.1d(w,x)}1f(i?i&&(b.26(l.15+m.14-i,l.17+m.18-i,i,n(90),n(0),!0),w=l.15+m.14,x=l.17+m.14+i):(w=l.15+m.14,x=l.17+m.18,b.1d(w,x)),c.1l)1T(k){1h"4d":x=l.17+m.18-h,x+=.5*r.14,x-=.5*o.14,j&&(x-=j),x-=1b.1U(t,g.y||0),x-=u.y,b.1d(w,x),w+=r.18,x-=.5*r.14,b.1d(w,x),w-=r.18,x-=.5*r.14,b.1d(w,x);1B;1h"4c":1h"59":x=l.17+.5*m.18+.5*r.14,x+=u.y,b.1d(w,x),w+=r.18,x-=.5*r.14,b.1d(w,x),w-=r.18,x-=.5*r.14,b.1d(w,x);1B;1h"3Q":x=l.17+h,j&&(x+=j),x+=r.14,x-=.5*r.14-.5*o.14,x+=1b.1U(t,g.y||0),x+=u.y,b.1d(w,x),w+=r.18,x-=.5*r.14,b.1d(w,x),w-=r.18,x-=.5*r.14,b.1d(w,x)}1f(i?i&&(b.26(l.15+m.14-i,l.17+i,i,n(0),n(-90),!0),w=l.15+m.14-i,x=l.17):(w=l.15+m.14,x=l.17,b.1d(w,x)),c.1l)1T(k){1h"3P":w=l.15+m.14-h,w+=.5*r.14-.5*o.14,j&&(w-=j),w-=1b.1U(t,g.x||0),w-=u.x,b.1d(w,x),x-=r.18,w-=.5*r.14,b.1d(w,x),x+=r.18,w-=.5*r.14,b.1d(w,x);1B;1h"4b":1h"58":w=l.15+.5*m.14+.5*r.14,w+=u.x,b.1d(w,x),x-=r.18,w-=.5*r.14,b.1d(w,x),x+=r.18,w-=.5*r.14,b.1d(w,x),w=l.15+.5*m.14-r.14,b.1d(w,x),b.1d(w,x);1B;1h"3O":w=l.15+h+r.14,w-=.5*r.14,w+=.5*o.14,j&&(w+=j),w+=1b.1U(t,g.x||0),w+=u.x,b.1d(w,x),x-=r.18,w-=.5*r.14,b.1d(w,x),x+=r.18,w-=.5*r.14,b.1d(w,x)}b.1d(z.x,z.y-h),b.1d(z.x,z.y),c.2g&&b.2g()}12 F(b){13 c=11.2o(),d=11.19.1l&&11.4p(),e=11.29&&11.29.3v(),f=11.1n,h=11.1i,i=11.2m,k=({14:2*h+2*i+11.2G.14,18:2*h+2*i+11.2G.18},b.19.1l&&b.19.1l.1A||{x:0,y:0}),l=0,m=0;f&&(l="1m"==11.19.1n.1e?f:0,m="1i"==11.19.1n.1e?f:l+h),a(1x.3d).1Z(11.2W=1x.22("3f")),q.3J(11.2W,c.1H.1c),q.3p(11.2W);13 n=11.2W.3o("2d");n.2L=11.2x,a(11.1H).1Z(11.2W),n.2Q=q.4a(n,11.19.1m,{3K:0,3L:c.1m.1e.17+h,3M:0,3N:c.1m.1e.17+c.1m.1c.18-h}),n.9c=0;13 o;1f(o=11.6d(n,{2f:!0,2g:!0,1i:h,1n:l,57:m,3y:c,3z:d,1l:11.19.1l,3x:e,37:k}),n.34(),h){13 p=q.4a(n,11.19.1i,{3K:0,3L:c.1m.1e.17,3M:0,3N:c.1m.1e.17+c.1m.1c.18});n.2Q=p,o=11.6d(n,{2f:!0,2g:!1,1i:h,1n:l,57:m,3y:c,3z:d,1l:11.19.1l,3x:e,37:k}),11.7t(n,{2f:!1,2g:!0,1i:h,7s:l,1n:{2u:m,1e:11.19.1n.1e},3y:c,3z:d,1l:11.19.1l,3x:e,37:o.37,5d:o}),n.34()}11.3B=o}12 G(){13 i,a=11.2e(),b=11.2G,c=a.19,d=11.1n,f=11.1i,g=11.2m,h={14:2*f+2*g+b.14,18:2*f+2*g+b.18};1f(11.19.1l){13 j=11.4p();i=j.2z.1c}13 k=s.5Z(11,h),l=k.1c,m=k.1e,h=k.1m.1c,o=k.1m.1e;k.1l.1c;13 r,t,u,q={17:0,15:0},v={14:l.14,18:l.18};1f(c.1y){13 w=d;"1m"==c.1n.1e&&(w+=f);13 x=w-1b.9d(n(45))*w,y="1O";11.29.3v().3e(/^(3P|3Q)$/)&&(y="15");13 z=c.1y.3w+2*c.1y.1i,r={14:z,18:z};1f(q.15=o.15-z/2+("15"==y?x:h.14-x),q.17=o.17-z/2+x,"15"==y){1f(0>q.15){13 A=1b.2V(q.15);v.14+=A,m.15+=A,q.15=0}}1G{13 B=q.15+z-v.14;B>0&&(v.14+=B)}1f(0>q.17){13 C=1b.2V(q.17);v.18+=C,m.17+=C,q.17=0}1f(11.19.1y.1s){13 D=11.19.1y.1s,E=D.31,F=D.1A;1f(t={14:r.14+2*E,18:r.18+2*E},u={17:q.17-E+F.y,15:q.15-E+F.x},"15"==y){1f(0>u.15){13 A=1b.2V(u.15);v.14+=A,m.15+=A,q.15+=A,u.15=0}}1G{13 B=u.15+t.14-v.14;B>0&&(v.14+=B)}1f(0>u.17){13 C=1b.2V(u.17);v.18+=C,m.17+=C,q.17+=C,u.17=0}}}13 G=k.2J;G.17+=m.17,G.15+=m.15;13 H={15:1b.1E(m.15+o.15+11.1i+11.19.2m),17:1b.1E(m.17+o.17+11.1i+11.19.2m)},I={1D:{1c:{14:1b.1E(v.14),18:1b.1E(v.18)}},21:{1c:{14:1b.1E(v.14),18:1b.1E(v.18)}},1H:{1c:l,1e:{17:1b.23(m.17),15:1b.23(m.15)}},1m:{1c:{14:1b.1E(h.14),18:1b.1E(h.18)},1e:{17:1b.23(o.17),15:1b.23(o.15)}},2J:{17:1b.23(G.17),15:1b.23(G.15)},2F:{1e:H}};1a 11.19.1y&&(I.1y={1c:{14:1b.1E(r.14),18:1b.1E(r.18)},1e:{17:1b.23(q.17),15:1b.23(q.15)}},11.19.1y.1s&&(I.2U={1c:{14:1b.1E(t.14),18:1b.1E(t.18)},1e:{17:1b.23(u.17),15:1b.23(u.15)}})),I}12 H(){13 b=11.2o(),c=11.2e();a(c.1j).1q(k(b.1D.1c)),a(c.4Z).1q(k(b.21.1c)),11.2T&&11.2T.1q(k(b.1D.1c)),a(11.1H).1q(a.1k(k(b.1H.1c),k(b.1H.1e))),11.1y&&(a(11.1y).1q(k(b.1y.1e)),b.2U&&a(11.2U.1j).1q(k(b.2U.1e))),a(c.38).1q(k(b.2F.1e))}12 I(a){11.2x=a||0,11.1s&&(11.1s.2x=11.2x)}12 J(a){11.7u(a),11.1P()}1a{51:f,7g:b,1P:g,1z:c,36:d,2e:o,2P:h,5e:i,7l:j,7k:l,4n:m,7f:A,6a:C,7e:F,6d:D,7t:E,7o:u,7p:v,4p:p,2o:G,52:H,7u:I,9e:J}}());13 w={3j:{},1t:12(b){1f(!b)1a 1r;13 c=1r,d=a(b).1X("2p-1V");1a d&&(c=11.3j[d]),c},30:12(a){11.3j[a.1V]=a},1z:12(a){13 b=11.1t(a);b&&(3G 11.3j[b.1V],b.1z())},4q:12(a){1a 1b.2Z/2-1b.6M(a,1b.4A(a)*1b.2Z)}};w.4r={4k:12(a,b){13 c=u.1t(a.1g),d=c.4p().1i.1c,e=11.4W(d.14,d.18,b,{3S:!1});1a{14:e.14,18:e.18}},9f:12(a,b,c){13 d=.5*a,e=m(1b.9g(d/l(d,b))),f=2E-e-90,g=o(n(f))*c,h=2*(d+g),i=h/a*b;1a{14:h,18:i}},4W:12(a,b,c){13 d=m(1b.79(.5*(b/a))),e=2E-d,f=1b.4A(n(e-90))*c,g=a+2*f,h=g*b/a;1a{14:g,18:h}},3T:12(b){13 c=u.1t(b.1g),d=b.19.31,e=r.78(c.29),g=(r.2I(c.29),w.4r.4k(b,d)),h={2z:{1c:{14:1b.1E(g.14),18:1b.1E(g.18)},1e:{17:0,15:0}}};1f(d){h.2X=[];28(13 i=0;d>=i;i++){13 j=w.4r.4k(b,i,{3S:!1}),k={1e:{17:h.2z.1c.18-j.18,15:e?d-i:(h.2z.1c.14-j.14)/2},1c:j};h.2X.2n(k)}}1G h.2X=[a.1k({},h.2z)];1a h},56:12(a,b,c){s.56(a,b.3k(),c)}},a.1k(x.3F,12(){12 b(){1a B.1t(11.1g)[0]}12 c(){1a u.1t(11.1g)}12 d(){11.36()}12 e(){11.1j&&(a(11.1j).1z(),11.1l=1r,11.1m=1r,11.1H=1r,11.1j=1r,11.1o={})}12 f(){}12 g(){11.36(),11.51();13 b=11.2e(),c=11.3k();11.1j=a("<2h>").1Y("9h")[0],a(b.1j).66(11.1j),c.2T&&a(b.1j).66(c.2T),c.2o(),a(11.1j).1q({17:0,15:0}),11.7v(),11.52()}12 h(){1a 11.19.1K/(11.19.31+1)}12 i(){13 b=11.3k(),c=b.2o(),d=11.2e(),e=11.2o(),f=11.19.31,g=w.4r.3T(11),h=b.29,i=r.5X(h),j={17:f,15:f};1f(d.19.1l){13 l=g.2X[g.2X.2a-1];"15"==i&&(j.15+=1b.1E(l.1c.18)),"17"==i&&(j.17+=1b.1E(l.1c.18))}13 m=b.1o.19,n=m.1n,o=m.1i;"1m"==d.19.1n.1e&&n&&(n+=o);13 p=e.1H.1c;a(11.1j).1Z(a(11.1H=1x.22("2h")).1Y("9i").1q(k(p))).1q(k(p)),a(1x.3d).1Z(a(11.2W=1x.22("3f"))),q.3J(11.2W,e.1H.1c),q.3p(11.2W);13 s=11.2W.3o("2d");s.2L=11.2x,a(11.1H).1Z(11.2W);28(13 u=f+1,v=0;f>=v;v++)s.2Q=t.2R(11.19.1Q,w.4q(v*(1/u))*(11.19.1K/u)),q.6Z(s,{14:c.1m.1c.14+2*v,18:c.1m.1c.18+2*v,17:j.17-v,15:j.15-v,1n:n+v});1f(b.19.1l){13 x={x:j.15,y:j.17},y=g.2X[0].1c,z=b.19.1l,A=o;A+=.5*z.14;13 B=b.19.1n&&"1m"==b.19.1n.1e?b.19.1n.2u||0:0;B&&(A+=B);13 C=o+B+.5*z.14-.5*y.14,D=1b.1E(n>C?n-C:0),E=b.3B&&b.3B.1l||{x:0,y:0},F=b.3B&&b.3B.5c||{x:0,y:0};1f(A+=1b.1U(D,b.19.1l.1A&&b.19.1l.1A[i&&/^(15|1O)$/.3h(i)?"y":"x"]||0),"17"==i||"1R"==i){1T(h){1h"3O":1h"4g":x.x+=A+E.x-F.x;1B;1h"4b":1h"58":1h"4f":1h"5a":x.x+=.5*c.1m.1c.14+E.x;1B;1h"3P":1h"4e":x.x+=c.1m.1c.14-(A-E.x+F.x)}"1R"==i&&(x.y+=c.1m.1c.18);28(13 v=0,G=g.2X.2a;G>v;v++){s.2Q=t.2R(11.19.1Q,w.4q(v*(1/u))*(11.19.1K/u));13 f=g.2X[v];s.2f(),"17"==i?(s.3s(x.x,x.y-v),s.1d(x.x-.5*f.1c.14,x.y-v),s.1d(x.x,x.y-v-f.1c.18),s.1d(x.x+.5*f.1c.14,x.y-v)):(s.3s(x.x,x.y+v),s.1d(x.x-.5*f.1c.14,x.y+v),s.1d(x.x,x.y+v+f.1c.18),s.1d(x.x+.5*f.1c.14,x.y+v)),s.2g(),s.34()}}1G{1T(h){1h"3R":1h"3Q":x.y+=A+E.y-F.y;1B;1h"4i":1h"5b":1h"4c":1h"59":x.y+=.5*c.1m.1c.18+E.y;1B;1h"4h":1h"4d":x.y+=c.1m.1c.18-(A-E.y+F.y)}"1O"==i&&(x.x+=c.1m.1c.14);28(13 v=0,G=g.2X.2a;G>v;v++){s.2Q=t.2R(11.19.1Q,w.4q(v*(1/u))*(11.19.1K/u));13 f=g.2X[v];s.2f(),"15"==i?(s.3s(x.x-v,x.y),s.1d(x.x-v,x.y-.5*f.1c.14),s.1d(x.x-v-f.1c.18,x.y),s.1d(x.x-v,x.y+.5*f.1c.14)):(s.3s(x.x+v,x.y),s.1d(x.x+v,x.y-.5*f.1c.14),s.1d(x.x+v+f.1c.18,x.y),s.1d(x.x+v,x.y+.5*f.1c.14)),s.2g(),s.34()}}}}12 j(){13 b=11.3k();b.2G,b.1n;13 e=b.2o(),g=(11.2e(),11.19.31),h=a.1k({},e.1m.1c);h.14+=2*g,h.18+=2*g;13 i,k;1f(b.19.1l){13 l=w.4r.3T(11);i=l.2z.1c,k=i.18}13 m=s.5Z(b,h,k),n=m.1c,o=m.1e,h=m.1m.1c,p=m.1m.1e,r=e.1H.1e,t=e.1m.1e,u={17:r.17+t.17-(p.17+g)+11.19.1A.y,15:r.15+t.15-(p.15+g)+11.19.1A.x},v=e.2J,x=e.21.1c,y={17:0,15:0};1f(0>u.17){13 z=1b.2V(u.17);y.17+=z,u.17=0,v.17+=z}1f(0>u.15){13 A=1b.2V(u.15);y.15+=A,u.15=0,v.15+=A}13 B={18:1b.1U(n.18+u.17,x.18+y.17),14:1b.1U(n.14+u.15,x.14+y.15)},C={15:1b.1E(y.15+e.1H.1e.15+e.1m.1e.15+b.1i+b.2m),17:1b.1E(y.17+e.1H.1e.17+e.1m.1e.17+b.1i+b.2m)},D={1D:{1c:B},21:{1c:x,1e:y},1j:{1c:n,1e:u},1H:{1c:n,1e:{17:1b.23(o.17),15:1b.23(o.15)}},1m:{1c:{14:1b.1E(h.14),18:1b.1E(h.18)},1e:{17:1b.23(p.17),15:1b.23(p.15)}},2J:v,2F:{1e:C}};1a D}12 l(){13 b=11.2o(),c=11.3k(),d=11.2e();1f(a(d.1j).1q(k(b.1D.1c)),a(d.4Z).1q(a.1k(k(b.21.1e),k(b.21.1c))),c.2T&&c.2T.1q(k(b.1D.1c)),d.19.1y){13 e=c.2o(),f=b.21.1e,g=e.1y.1e;1f(a(c.1y).1q(k({17:f.17+g.17,15:f.15+g.15})),d.19.1y.1s){13 h=e.2U.1e;a(c.2U.1j).1q(k({17:f.17+h.17,15:f.15+h.15}))}}a(11.1j).1q(a.1k(k(b.1j.1c),k(b.1j.1e))),a(11.1H).1q(k(b.1H.1c)),a(d.38).1q(k(b.2F.1e))}1a{51:f,1z:d,36:e,1P:g,2e:b,3k:c,2o:j,7w:h,7v:i,52:l}}());13 y={3j:{},1t:12(b){1f(!b)1a 1r;13 c=a(b).1X("2p-1V");1a c?11.3j[c]:1r},30:12(a){11.3j[a.1V]=a},1z:12(a){13 b=11.1t(a);b&&(3G 11.3j[b.1V],b.1z())}};a.1k(z.3F,12(){12 b(){1a B.1t(11.1g)[0]}12 c(){1a u.1t(11.1g)}12 d(){1a 11.19.1K/(11.19.31+1)}12 e(){11.36()}12 f(){11.1j&&(a(11.1j).1z(),11.1j=1r)}12 g(){11.36();13 c=(11.2e(),11.3k()),d=c.2o().1y.1c,e=a.1k({},d),f=11.19.31;e.14+=2*f,e.18+=2*f,a(c.1y).6e(a(11.1j=1x.22("2h")).1Y("9j")),a(1x.3d).1Z(a(11.4s=1x.22("3f"))),q.3J(11.4s,e),q.3p(11.4s);13 g=11.4s.3o("2d");g.2L=11.2x,a(11.1j).1Z(11.4s);28(13 h=e.14/2,i=e.18/2,j=d.18/2,k=f+1,l=0;f>=l;l++)g.2Q=t.2R(11.19.1Q,w.4q(l*(1/k))*(11.19.1K/k)),g.2f(),g.26(h,i,j+l,n(0),n(7d),!0),g.2g(),g.34()}1a{1P:g,1z:e,36:f,2e:b,3k:c,7w:d}}());13 B={2A:{},19:{3V:"6f",4C:9k},6X:12(){12 b(){13 b=["2B"];1S.2H.3H&&(b.2n("9l"),a(1x.3d).3U("2B",12(){1a 3t 0})),a.1w(b,12(b,c){a(1x.7x).9m(".3C .7m, .3C .9n-1D",c,12(b){b.9o(),b.9p(),B.6g(a(b.1C).5f(".3C")[0]).1I()})}),a(1N).3U("3J",a.1v(11.7y,11))}1a b}(),7y:12(){11.5g&&(1N.6h(11.5g),11.5g=1r),11.5g=d.4G(a.1v(12(){13 b=11.3I();a.1w(b,12(a,b){b.1e()})},11),9q)},5h:12(b){13 d,c=a(b).1X("2p-1V");1f(!c){13 e=11.6g(a(b).5f(".3C")[0]);e&&e.1g&&(c=a(e.1g).1X("2p-1V"))}1a c&&(d=11.2A[c])?d:3t 0},5P:12(a){13 b;1a d.2j(a)&&(b=11.5h(a)),b&&b.1g},1t:12(b){13 c=[];1f(d.2j(b)){13 e=11.5h(b);e&&(c=[e])}1G a.1w(11.2A,12(d,e){e.1g&&a(e.1g).7z(b)&&c.2n(e)});1a c},6g:12(b){1f(!b)1a 1r;13 c=1r;1a a.1w(11.2A,12(a,d){d.1F("1P")&&d.1j===b&&(c=d)}),c},9r:12(b){13 c=[];1a a.1w(11.2A,12(d,e){e.1g&&a(e.1g).7z(b)&&c.2n(e)}),c},1W:12(b){1f(d.2j(b)){13 c=b,e=11.1t(c)[0];e&&e.1W()}1G a(b).1w(a.1v(12(a,b){13 c=11.1t(b)[0];c&&c.1W()},11))},1I:12(b){1f(d.2j(b)){13 c=11.1t(b)[0];c&&c.1I()}1G a(b).1w(a.1v(12(a,b){13 c=11.1t(b)[0];c&&c.1I()},11))},33:12(b){1f(d.2j(b)){13 c=b,e=11.1t(c)[0];e&&e.33()}1G a(b).1w(a.1v(12(a,b){13 c=11.1t(b)[0];c&&c.33()},11))},4R:12(){a.1w(11.3I(),12(a,b){b.1I()})},2P:12(b){1f(d.2j(b)){13 c=b,e=11.1t(c)[0];e&&e.2P()}1G a(b).1w(a.1v(12(a,b){13 c=11.1t(b)[0];c&&c.2P()},11))},3I:12(){13 b=[];1a a.1w(11.2A,12(a,c){c.1L()&&b.2n(c)}),b},5S:12(b){13 c=!1;1a d.2j(b)&&a.1w(11.3I()||[],12(a,d){1a d.1g==b?(c=!0,!1):3t 0}),c},7A:12(){13 c,b=0;1a a.1w(11.2A,12(a,d){d.2k>b&&(b=d.2k,c=d)}),c},7B:12(){1>=11.3I().2a&&a.1w(11.2A,12(b,c){c.1F("1P")&&!c.19.2k&&a(c.1j).1q({2k:c.2k=+B.19.4C})})},30:12(a){11.2A[a.1V]=a},5i:12(b){13 c=11.5h(b);1f(c){13 d=a(c.1g).1X("2p-1V");3G 11.2A[d],c.1I(),c.1z()}},1z:12(b){d.2j(b)?11.5i(b):a(b).1w(a.1v(12(a,b){11.5i(b)},11))},6Y:12(){a.1w(11.2A,a.1v(12(a,b){b.1g&&!d.1g.5H(b.1g)&&11.5i(b.1g)},11))},5Q:12(a){11.19.3V=a||"6f"},5R:12(a){11.19.4C=a||0},5U:12(){a.1w(11.2A,a.1v(12(a,b){b.1o&&b.1o.2l&&(b.1o.2l.6i(),b.1o.2l=1r),b.27("3c",!1)},11)),i.6S()},6B:12(){12 f(d){13 e;1a e="2s"==a.1p(d)?{1g:c.25&&c.25.1g||b.25.1g,2v:d}:A(a.1k({},b.25),d)}12 g(f){1a b=1S.2C.7C,c=A(a.1k({},b),1S.2C.6j),d=1S.2C.6k.7C,e=A(a.1k({},d),1S.2C.6k.6j),g=h,h(f)}12 h(g){g.21=g.21&&1S.2C[g.21]?g.21:1S.2C[B.19.3V]?B.19.3V:"6f";13 h=g.21?a.1k({},1S.2C[g.21]||1S.2C[B.19.3V]):{},i=A(a.1k({},c),h),j=A(a.1k({},i),g);1f(j.2c){13 k=c.2c||{},l=b.2c;"4t"==a.1p(j.2c)&&(j.2c={3W:k.3W||l.3W,1p:k.1p||l.1p}),j.2c=A(a.1k({},l),j.2c)}1f(j.1m&&"2s"==a.1p(j.1m)&&(j.1m={1Q:j.1m,1K:1}),j.1i){13 m,n=c.1i||{},o=b.1i;m="2y"==a.1p(j.1i)?{2u:j.1i,1Q:n.1Q||o.1Q,1K:n.1K||o.1K}:A(a.1k({},o),j.1i),j.1i=0===m.2u?!1:m}1f(j.1n){13 p;p="2y"==a.1p(j.1n)?{2u:j.1n,1e:c.1n&&c.1n.1e||b.1n.1e}:A(a.1k({},b.1n),j.1n),j.1n=0===p.2u?!1:p}13 q,s=s=j.1u&&j.1u.1C||"2s"==a.1p(j.1u)&&j.1u||c.1u&&c.1u.1C||"2s"==a.1p(c.1u)&&c.1u||b.1u&&b.1u.1C||b.1u,t=j.1u&&j.1u.1D||c.1u&&c.1u.1D||b.1u&&b.1u.1D||B.2r.6l(s);1f(j.1u?"2s"==a.1p(j.1u)?q={1C:j.1u,1D:B.2r.7D(j.1u)}:(q={1D:t,1C:s},j.1u.1D&&(q.1D=j.1u.1D),j.1u.1C&&(q.1C=j.1u.1C)):q={1D:t,1C:s},"2M"==j.1C){13 u=r.2I(q.1C);q.1C="1J"==u?q.1C.61(/(15|1O)/,"2t"):q.1C.61(/(17|1R)/,"2t")}j.1u=q;13 v;1f("2M"==j.1C?(v=a.1k({},b.1A),a.1k(v,1S.2C.6j.1A||{}),g.21&&a.1k(v,(1S.2C[g.21]||1S.2C[B.19.3V]).1A||{}),v=B.2r.7E(b.1A,b.1u,q.1C,!0),g.1A&&(v=a.1k(v,g.1A||{})),j.3X=0):v={x:j.1A.x,y:j.1A.y},j.1A=v,j.1y&&j.7F){13 w=a.1k({},1S.2C.6k[j.7F]),x=A(a.1k({},e),w);1f(x.2q&&a.1w(["6b","6c"],12(b,c){13 f=x.2q[c],g=e.2q&&e.2q[c];1f(f.1m){13 h=g&&g.1m;1f("2y"==a.1p(f.1m))f.1m={1Q:h&&h.1Q||d.2q[c].1m.1Q,1K:f.1m};1G 1f("2s"==a.1p(f.1m)){13 i=h&&"2y"==a.1p(h.1K)&&h.1K||d.2q[c].1m.1K;f.1m={1Q:f.1m,1K:i}}1G f.1m=A(a.1k({},d.2q[c].1m),f.1m)}1f(f.1i){13 j=g&&g.1i;f.1i="2y"==a.1p(f.1i)?{1Q:j&&j.1Q||d.2q[c].1i.1Q,1K:f.1i}:A(a.1k({},d.2q[c].1i),f.1i)}}),x.1s){13 z=e.1s&&e.1s.3D&&e.1s.3D==5x?e.1s:d.1s;x.1s.3D&&x.1s.3D==5x&&(z=A(z,x.1s)),x.1s=z}j.1y=x}1f(j.1s){13 C;C="4t"==a.1p(j.1s)?c.1s&&"4t"==a.1p(c.1s)?b.1s:c.1s?c.1s:b.1s:A(a.1k({},b.1s),j.1s||{}),"2y"==a.1p(C.1A)&&(C.1A={x:C.1A,y:C.1A}),j.1s=C}1f(j.1l){13 D={};D="4t"==a.1p(j.1l)?A({},b.1l):A(A({},b.1l),a.1k({},j.1l)),"2y"==a.1p(D.1A)&&(D.1A={x:D.1A,y:D.1A}),j.1l=D}1f(j.2Y&&("2s"==a.1p(j.2Y)?j.2Y={5j:j.2Y,7G:!0}:"4t"==a.1p(j.2Y)&&(j.2Y=j.2Y?{5j:"4T",7G:!0}:!1)),j.25&&"2B-9s"==j.25&&(j.7H=!0,j.25=!1),j.25)1f(a.71(j.25)){13 E=[];a.1w(j.25,12(a,b){E.2n(f(b))}),j.25=E}1G j.25=[f(j.25)];1a j.2K&&"2s"==a.1p(j.2K)&&(j.2K=[""+j.2K]),j.2m=0,j.1M&&(1N.6m||(j.1M=!1)),j}13 b,c,d,e;1a g}()};B.2r=12(){12 c(c){13 d=r.2N(c),e=d[1],f=d[2],g=r.2I(c),h=a.1k({1J:!0,2b:!0},20[1]||{});1a"1J"==g?(h.2b&&(e=b[e]),h.1J&&(f=b[f])):(h.2b&&(f=b[f]),h.1J&&(e=b[e])),e+f}12 f(a){13 d=r.2N(a);1a c(d[1]+b[d[2]])}12 h(b,c){a(b.1j).1q({17:c.17+"2w",15:c.15+"2w"})}12 j(a,b,d,e){13 g=y(a,b,d,e),h=d&&"2s"==7I d.1p?d.1p:"";1f(/9t$/.3h(h),1===g.3Y.3Z)1a l(a,g),g;13 m=b,n=e,o={1J:!g.3Y.1J,2b:!g.3Y.2b},p={1J:!1,2b:!1},q=r.2I(b);1a((p.2b="1J"==q&&o.2b)||(p.1J="2b"==q&&o.1J))&&(m=c(b,p),n=c(e,p),g=y(a,m,d,n),1===g.3Y.3Z)?(l(a,g),g):(g=k(g,a),l(a,g),g)}12 k(a,b){13 c=z(b),d=c.1c,e=c.1e,f=u.1t(b.1g).1o.1u[a.1u.1D].1D.1c,g=a.1e,h={17:0,15:0,3A:[]};1a e.15>g.15&&(h.15=e.15-g.15,h.3A.2n("15"),a.1e.15=e.15),e.17>g.17&&(h.17=g.17-e.17,h.3A.2n("17"),a.1e.17=e.17),e.15+d.14<g.15+f.14&&(h.15=e.15+d.14-(g.15+f.14),h.3A.2n("1O"),a.1e.15=e.15+d.14-f.14),e.17+d.18<g.17+f.18&&(h.17=e.17+d.18-(g.17+f.18),h.3A.2n("1R"),a.1e.17=e.17+d.18-f.18),a.7J=h,a}12 l(a,b){a.5e(b.1u.1D,b.3Y.4l,b.7J),h(a,b.1e)}12 m(a){1a a&&(/^2M|2B|3H$/.3h("2s"==7I a.1p&&a.1p||"")||a.5G>=0)}12 n(a,b,c){1a a>=b&&c>=a}12 o(a,b,c,d){13 e=n(a,c,d),f=n(b,c,d);1f(e&&f)1a b-a;1f(e&&!f)1a d-a;1f(!e&&f)1a b-c;13 g=n(c,a,b),h=n(d,a,b);1a g&&h?d-c:g&&!h?b-c:!g&&h?d-a:0}12 q(a,b){1a o(a.1e.15,a.1e.15+a.1c.14,b.1e.15,b.1e.15+b.1c.14)*o(a.1e.17,a.1e.17+a.1c.18,b.1e.17,b.1e.17+b.1c.18)}12 s(a,b){13 c=a.1c.14*a.1c.18;1a c?q(a,b)/c:0}12 t(a,b){13 c=r.2N(b),d=r.2I(b),e={15:0,17:0};1f("1J"==d){1T(c[2]){1h"2t":1h"2S":e.15=.5*a.14;1B;1h"1O":e.15=a.14}"1R"==c[1]&&(e.17=a.18)}1G{1T(c[2]){1h"2t":1h"2S":e.17=.5*a.18;1B;1h"1R":e.17=a.18}"1O"==c[1]&&(e.15=a.14)}1a e}12 v(b){13 c=d.1g.4L(b),e=d.1g.4H(b),f={17:a(1N).4I(),15:a(1N).4J()};1a c.15+=-1*(e.15-f.15),c.17+=-1*(e.17-f.17),c}12 y(b,e,f,g){13 h,i,j,k=u.1t(b.1g),l=k.19,n=l.1A,o=m(f);1f(o||!f){1f(j={14:24,18:24},o){13 p=d.5F(f);h={17:p.y-.5*j.18+6,15:p.x-.5*j.14+6}}1G{13 q=b.1o.2v;h={17:(q?q.y:0)-.5*j.18+6,15:(q?q.x:0)-.5*j.14+6}}b.1o.2v={x:h.15,y:h.17}}1G h=v(f),j={14:a(f).7K(),18:a(f).7L()};1f(l.1l&&"2M"!=l.1C){13 y=r.2N(g),A=r.2N(e),C=r.2I(g),D=k.1o.19,E=k.4p().1i.1c,F=D.1n,G=D.1i,H=F&&"1m"==l.1n.1e?F:0,I=F&&"1i"==l.1n.1e?F:F+G,J=G+H+.5*l.1l.14-.5*E.14,K=I>J?I-J:0;4u=1b.1E(G+H+.5*l.1l.14+K+l.1l.1A["1J"==C?"x":"y"]),"1J"==C&&"15"==y[2]&&"15"==A[2]||"1O"==y[2]&&"1O"==A[2]?(j.14-=2*4u,h.15+=4u):("2b"==C&&"17"==y[2]&&"17"==A[2]||"1R"==y[2]&&"1R"==A[2])&&(j.18-=2*4u,h.17+=4u)}i=a.1k({},h);13 L=o?c(l.1u.1D):l.1u.1C,M=t(j,L),N=t(j,g);({17:h.17+M.17+n.y,15:h.15+M.15+n.x}),h={15:h.15+N.15,17:h.17+N.17};13 P=a.1k({},n);P=x(P,L,g,"2M"==k.19.1C),h.17+=P.y,h.15+=P.x;13 k=u.1t(b.1g),Q=k.1o.1u,R=a.1k({},Q[e]),S={x:0,y:0},y=r.2N(g);1f("2t"!=y[2]){13 C=C=r.2I(g),T=B.2r.6l(g,"2b"==C?{1J:!0,2b:!1}:{1J:!1,2b:!0});e==T&&(S.y=k.3B.5c.y,S.x=k.3B.5c.x)}13 U={17:h.17-R.2J.17-S.y,15:h.15-R.2J.15-S.x};R.1D.1e=U;13 V={1J:!0,2b:!0},W={x:0,y:0};1f(b.19.2Y){13 X=z(b),Y=b.19.1s?w.1t(b.1g):k,Z=Y.2o().1D.1c;V.3Z=s({1c:Z,1e:U},X),1>V.3Z&&((U.15<X.1e.15||U.15+Z.14>X.1e.15+X.1c.14)&&(V.1J=!1,W.x=U.15<X.1e.15?U.15-X.1e.15:U.15+Z.14-(X.1e.15+X.1c.14)),(U.17<X.1e.17||U.17+Z.18>X.1e.17+X.1c.18)&&(V.2b=!1,W.y=U.17<X.1e.17?U.17-X.1e.17:U.17+Z.18-(X.1e.17+X.1c.18)))}1G V.3Z=1;V.4l=W;13 $=Q[e].1H,7M=s({1c:j,1e:i},{1c:$.1c,1e:{17:U.17+$.1e.17,15:U.15+$.1e.15}});1a{1e:U,3Z:{1C:7M},3Y:V,1u:{1D:e,1C:g}}}12 z(b){13 c={17:a(1N).4I(),15:a(1N).4J()},e=b.19,f=e.1C;("2M"==f||"4F"==f)&&(f=b.1g);13 g=a(f).5f(e.2Y.5j).7i()[0];1f(!g||"4T"==e.2Y.5j)1a{1c:p.4T(),1e:c};13 h=d.1g.4L(g),i=d.1g.4H(g);1a h.15+=-1*(i.15-c.15),h.17+=-1*(i.17-c.17),{1c:{14:a(g).5V(),18:a(g).5W()},1e:h}}13 b={15:"1O",1O:"15",17:"1R",1R:"17",2t:"2t",2S:"2S"};e.3m&&9>e.3m||e.4M&&2>e.4M||e.5M&&9u>e.5M;13 x=12(){13 a=[[-1,-1],[0,-1],[1,-1],[-1,0],[0,0],[1,0],[-1,1],[0,1],[1,1]],b={3R:0,3O:0,4b:1,58:1,3P:2,3Q:2,4c:5,59:5,4d:8,4e:8,4f:7,5a:7,4g:6,4h:6,4i:3,5b:3};1a 12(c,d,e,f){13 g=a[b[d]],h=a[b[e]],i=[1b.65(.5*1b.2V(g[0]-h[0]))?-1:1,1b.65(.5*1b.2V(g[1]-h[1]))?-1:1];1a r.35(d)||!r.35(e)||f||("1J"==r.2I(e)?i[0]=0:i[1]=0),{x:i[0]*c.x,y:i[1]*c.y}}}();1a{1t:y,4P:j,6l:c,7D:f,7N:v,7E:x,6n:m}}(),B.2r.4S={x:0,y:0},a(1x).6W(12(){13 b=B.2r;a(1x).3U("5k",12(a){b.4S={x:a.5G,y:a.6H}})}),B.53=12(){12 b(){a(1x.3d).1Z(a(1x.22("2h")).1Y("9v").1Z(a(1x.22("2h")).1Y("3C").1Z(a(11.1j=1x.22("2h")).1Y("7O"))))}12 c(b){1a{14:a(b).5V(),18:a(b).5W()}}12 e(b){13 d=c(b),e=b.4K;1a e&&a(e).1q({14:d.14+"2w"})&&c(b).18>d.18&&d.14++,a(e).1q({14:"62%"}),d}12 f(b,c,e){11.1j||11.1P();13 f=b.19,g=a.1k({1M:!1},20[3]||{});!f.7P&&!d.2j(c)||a(c).1X("7Q")||(f.7P&&"2s"==a.1p(c)&&(b.39=a("#"+c)[0],c=b.39),!b.40&&c&&d.1g.5H(c)&&(a(b.39).1X("7R",a(b.39).1q("7S")),b.40=1x.22("2h"),a(b.39).6e(a(b.40).1I())));13 h=1x.22("2h");a(11.1j).1Z(a(h).1Y("7h 9w").1Z(c)),d.2j(c)&&a(c).1W(),f.21&&a(h).1Y("9x"+b.19.21);13 i=a(h).67("7T[4m]").9y(12(){1a!(a(11).3g("18")&&a(11).3g("14"))});1f(i.2a>0&&!b.1F("3E")){b.27("3E",!0),f.1M&&(g.1M||b.1M||(b.1M=b.6o(f.1M)),b.1F("1L")&&(b.1e(),a(b.1j).1W()),b.1M.6p());13 j=0,k=1b.1U(9z,9A*(i.2a||0));b.2i("3E"),b.41("3E",a.1v(12(){i.1w(12(){11.6q=12(){}}),j>=i.2a||(11.5l(b,h),e&&e())},11),k),a.1w(i,a.1v(12(c,d){13 f=3q 9B;f.6q=a.1v(12(){f.6q=12(){};13 c=f.14,g=f.18,k=a(d).3g("14"),l=a(d).3g("18");k&&l||(!k&&l?(c=1b.23(l*c/g),g=l):!l&&k&&(g=1b.23(k*g/c),c=k),a(d).3g({14:c,18:g}),j++),j==i.2a&&(b.2i("3E"),b.1M&&(b.1M.1z(),b.1M=1r),b.1F("1L")&&a(b.1j).1I(),11.5l(b,h),e&&e())},11),f.4m=d.4m},11))}1G 11.5l(b,h),e&&e()}12 g(b,c){13 d=e(c),f={14:d.14-(2O(a(c).1q("2m-15"))||0)-(2O(a(c).1q("2m-1O"))||0),18:d.18-(2O(a(c).1q("2m-17"))||0)-(2O(a(c).1q("2m-1R"))||0)};b.19.3i&&"2y"==a.1p(b.19.3i)&&f.14>b.19.3i&&(a(c).1q({14:b.19.3i+"2w"}),d=e(c)),b.1o.2G=d,a(b.38).7U(c)}1a{1P:b,42:f,5l:g,69:e}}(),a.1k(C.3F,12(){12 b(a,b,c){11.1o.3b[a]=d.4G(b,c)}12 c(a){1a 11.1o.3b[a]}12 e(a){11.1o.3b[a]&&(1N.6h(11.1o.3b[a]),3G 11.1o.3b[a])}12 f(){a.1w(11.1o.3b,12(a,b){1N.6h(b)}),11.1o.3b=[]}12 g(b,c,d,e){c=c;13 f=a.1v(d,e||11);11.1o.5A.2n({1g:b,7V:c,7W:f}),a(b).3U(c,f)}12 h(){a.1w(11.1o.5A,12(b,c){a(c.1g).7X(c.7V,c.7W)})}12 j(a,b){11.1o.2q[a]=b}12 l(a){1a 11.1o.2q[a]}12 m(){11.2D(11.1g,"4o",11.5m),11.2D(11.1g,"54",a.1v(12(a){11.6r(a)},11)),11.19.2K&&a.1w(11.19.2K,a.1v(12(b,c){13 d=!1;"2B"==c&&(11.19.25&&a.1w(11.19.25,12(a,b){1a"4F"==b.1g&&"2B"==b.2v?(d=!0,!1):3t 0}),11.27("5B",d)),11.2D(11.1g,c,"2B"==c?d?11.33:11.1W:a.1v(12(){11.7Y()},11))},11)),11.19.25?a.1w(11.19.25,a.1v(12(b,c){13 d;1T(c.1g){1h"4F":1f(11.1F("5B")&&"2B"==c.2v)1a;d=11.1g;1B;1h"1C":d=11.1C}d&&11.2D(d,c.2v,"2B"==c.2v?11.1I:a.1v(12(){11.6s()},11))},11)):11.19.7Z&&11.19.2K&&!a.6t("2B",11.19.2K)>-1&&11.2D(11.1g,"54",a.1v(12(){11.2i("1W")},11));13 b=!1;!11.19.9C&&11.19.2K&&((b=a.6t("5k",11.19.2K)>-1)||a.6t("5n",11.19.2K)>-1)&&"2M"==11.1C&&11.2D(11.1g,b?"5k":"5n",12(a){11.1F("4E")&&11.1e(a)})}12 n(){11.2D(11.1j,1S.2H.3H?"5n":"4o",11.5m),11.2D(11.1j,"54",11.6r),11.2D(11.1j,1S.2H.3H?"5n":"4o",a.1v(12(){11.5o("4v")||11.1W()},11)),11.19.25&&a.1w(11.19.25,a.1v(12(b,c){13 d;1T(c.1g){1h"1D":d=11.1j}d&&11.2D(d,c.2v,c.2v.3e(/^(2B|5k|4o)$/)?11.1I:a.1v(12(){11.6s()},11))},11))}12 o(a,b,c){13 d=u.1t(11.1g);d&&d.5e(a,b,c)}12 p(a){13 b=u.1t(11.1g);b&&b.4n(a)}12 q(){11.4n(11.19.1u.1D)}12 r(){a(11.1j=1x.22("2h")).1Y("3C"),11.80()}12 s(){11.1P();13 a=u.1t(11.1g);a?a.1P():(3q v(11.1g),11.27("4E",!0))}12 t(){11.1F("1P")||(a(1x.3d).1Z(a(11.1j).1q({15:"-5p",17:"-5p",2k:11.2k}).1Z(a(11.4Z=1x.22("2h")).1Y("9D")).1Z(a(11.38=1x.22("2h")).1Y("7O"))),a(11.1j).1Y("9E"+11.19.21),11.19.7H&&(a(11.1g).1Y("81"),11.2D(1x.7x,"2B",a.1v(12(b){1f(11.1L()){13 c=a(b.1C).5f(".3C, .81")[0];(!c||c&&c!=11.1j&&c!=11.1g)&&11.1I()}},11))),1S.2H.48&&(11.19.4w||11.19.3X)&&(11.5q(11.19.4w),a(11.1j).1Y("6u")),11.82(),11.27("1P",!0),B.30(11))}12 w(){13 c;11.2F,11.40&&11.39&&((c=a(11.39).1X("7R"))&&a(11.39).1q({7S:c}),a(11.40).6e(11.39).1z(),11.40=1r)}12 x(){d.44(a.1v(12(){11.83()},11)),11.84(),11.6v(),d.44(a.1v(12(){a(11.1j).67("7T[4m]").7X("9F")},11)),u.1z(11.1g),11.1F("1P")&&11.1j&&(a(11.1j).1z(),11.1j=1r);13 c,b="5z";(c=a(11.1g).1X(b))&&a(11.1g).3g("5y",c).85("5z"),a(11.1g).85("2p-1V")}12 y(b){13 c=a.1k({4x:11.19.4x,1M:!1},20[1]||{});11.1P(),11.1F("1L")&&a(11.1j).1I(),B.53.42(11,b,a.1v(12(){13 b=11.1F("1L");b||11.27("1L",!0),11.86(),b||11.27("1L",!1),11.1F("1L")&&(a(11.1j).1I(),11.1e(),11.5r(),a(11.1j).1W()),11.27("3c",!0),c.4x&&c.4x(11.38.4y,11.1g),c.4z&&c.4z()},11),{1M:c.1M})}12 z(b){13 c,d={47:11.2F,1p:11.19.2c.1p,1X:11.19.2c.1X||{},87:11.19.2c.87||"7U"};1f(!(11.1F("2l")||11.19.2c.3W&&11.1F("3c"))){1f(11.19.2c.3W&&(c=i.1t(d)))1a 11.6w(c,{4z:a.1v(12(){11.1F("1L")&&11.19.43&&11.19.43(11.38.4y,11.1g)},11)}),3t 0;11.27("2l",!0),11.19.1M&&(11.1M?11.1M.6p():(11.1M=11.6o(11.19.1M),11.27("3c",!1)),11.1e(b)),11.1o.2l&&(11.1o.2l.6i(),11.1o.2l=1r),11.1o.2l=a.2c(a.1k({},d,{9G:a.1v(12(b,c,e){0!==e.9H&&(i.4P(d,e.4O),11.6w(e.4O,{4z:a.1v(12(){11.27("2l",!1),11.1F("1L")&&11.19.43&&11.19.43(11.38.4y,11.1g),11.1M&&(11.1M.1z(),11.1M=1r)},11)}))},11)}))}}12 A(b){13 c=a.1k({1M:11.19.1M&&11.1M},20[1]||{});11.42(b,c)}12 C(){13 b=1x.22("2h");a(b).1X("7Q",!0);13 c=6m.4Q(b,a.1k({},20[0]||{})),d=6m.5Y(b);1a a(b).1q(k(d)),11.42(b,{4x:!1,4z:12(){c.6p()}}),c}12 E(){1f(11.1F("1P")&&!11.19.2k){13 b=B.7A();b&&b!=11&&11.2k<=b.2k&&a(11.1j).1q({2k:11.2k=b.2k+1})}}12 F(){13 a=u.1t(11.1g);a&&(a.2P(),11.1L()&&11.1e())}12 G(a){1f(1S.2H.48){a=a||0;13 b=11.1j.9I;b.9J=a+"5s",b.9K=a+"5s",b.9L=a+"5s",b.9M=a+"5s"}}12 H(b){11.2i("1I"),11.2i("4v"),11.1F("1L")||11.5o("1W")||11.41("1W",a.1v(12(){11.2i("1W"),11.1W(b)},11),11.19.7Z||1)}12 I(b){1f(11.2i("1I"),11.2i("4v"),!11.1L()){1f("12"==a.1p(11.2F)||"12"==a.1p(11.1o.5t)){"12"!=a.1p(11.1o.5t)&&(11.1o.5t=11.2F);13 c=11.1o.5t(11.1g)||!1;1f(c!=11.1o.5C&&(11.1o.5C=c,11.27("3c",!1),11.6v()),11.2F=c,!c)1a}11.19.9N&&B.4R(),11.27("1L",!0),11.19.2c?11.88(b):11.1F("3c")||11.42(11.2F),11.1F("4E")&&11.1e(b),11.5r(),11.19.5u&&d.44(a.1v(12(){11.5m()},11)),"12"==a.1p(11.19.43)&&(!11.19.2c||11.19.2c&&11.19.2c.3W&&11.1F("3c"))&&11.19.43(11.38.4y,11.1g),1S.2H.48&&(11.19.4w||11.19.3X)&&(11.5q(11.19.4w),a(11.1j).1Y("89").8a("6u")),a(11.1j).1W()}}12 J(){11.2i("1W"),11.1F("1L")&&(11.27("1L",!1),1S.2H.48&&(11.19.4w||11.19.3X)?(11.5q(11.19.3X),a(11.1j).8a("89").1Y("6u"),11.41("4v",a.1v(11.6x,11),11.19.3X)):11.6x(),11.1o.2l&&(11.1o.2l.6i(),11.1o.2l=1r,11.27("2l",!1)))}12 K(){11.1F("1P")&&(a(11.1j).1q({15:"-5p",17:"-5p"}),B.7B(),"12"!=a.1p(11.19.8b)||11.1M||11.19.8b(11.38.4y,11.1g))}12 L(){11.2i("1W"),!11.5o("1I")&&11.1F("1L")&&11.41("1I",a.1v(12(){11.2i("1I"),11.2i("4v"),11.1I()},11),11.19.9O||1)}12 M(a){11[11.1L()?"1I":"1W"](a)}12 N(){1a 11.1F("1L")}12 O(){11.27("4D",!0),11.1F("1L")&&11.5r(),11.19.5u&&11.2i("6y")}12 P(){11.27("4D",!1),11.19.5u&&11.41("6y",a.1v(12(){11.2i("6y"),11.1F("4D")||11.1I()},11),11.19.5u)}13 D=12(b){1f(11.1L()){13 c;1f("2M"==11.19.1C){13 e=B.2r.6n(b),f=B.2r.4S;1f(e)f.x||f.y?(11.1o.2v={x:f.x,y:f.y},c=1r):c=b;1G{1f(f.x||f.y)11.1o.2v={x:f.x,y:f.y};1G 1f(!11.1o.2v){13 g=B.2r.7N(11.1g);11.1o.2v={x:g.15,y:g.17}}c=1r}}1G c=11.1C;1f(B.2r.4P(11,11.19.1u.1D,c,11.19.1u.1C),b&&B.2r.6n(b)){13 h={14:a(11.1j).7K(),18:a(11.1j).7L()},i=d.5F(b),g=d.1g.4L(11.1j);i.x>=g.15&&i.x<=g.15+h.14&&i.y>=g.17&&i.y<=g.17+h.18&&d.44(a.1v(12(){11.2i("1I")},11))}}};1a{1P:t,6E:r,86:s,80:m,82:n,1W:I,1I:J,6x:K,33:M,1L:N,7Y:H,6s:L,5q:G,27:j,1F:l,5m:O,6r:P,5o:c,41:b,2i:e,84:f,2D:g,83:h,5e:o,4n:p,9P:q,2P:F,42:y,88:z,6w:A,6o:C,1e:D,5r:E,6v:w,1z:x}}()),1S.3p()})(46);', 62, 610, "|||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||this|function|var|width|left||top|height|options|return|Math|dimensions|lineTo|position|if|element|case|border|container|extend|stem|background|radius|_cache|type|css|null|shadow|get|hook|proxy|each|document|closeButton|remove|offset|break|target|tooltip|ceil|getState|else|bubble|hide|horizontal|opacity|visible|spinner|window|right|build|color|bottom|Tipped|switch|max|uid|show|data|addClass|append|arguments|skin|createElement|round||hideOn|arc|setState|for|_hookPosition|length|vertical|ajax||getTooltip|beginPath|closePath|div|clearTimer|isElement|zIndex|xhr|padding|push|getOrderLayout|tipped|states|Position|string|middle|size|event|px|_globalAlpha|number|box|tooltips|click|Skins|setEvent|180|content|contentDimensions|support|getOrientation|anchor|showOn|globalAlpha|mouse|split|parseInt|refresh|fillStyle|hex2fill|center|iframeShim|closeButtonShadow|abs|bubbleCanvas|blurs|containment|PI|add|blur|scripts|toggle|fill|isCenter|cleanup|cornerOffset|contentElement|inlineContent|_stemCorrection|timers|updated|body|match|canvas|attr|test|maxWidth|shadows|getSkin|_adjustment|IE|indexOf|getContext|init|new|devicePixelRatio|moveTo|void|charAt|toLowerCase|diameter|hookPosition|layout|stemLayout|sides|_corrections|t_Tooltip|constructor|preloading_images|prototype|delete|touch|getVisible|resize|x1|y1|x2|y2|topleft|topright|righttop|lefttop|math|getLayout|bind|defaultSkin|cache|fadeOut|contained|overlap|inlineMarker|setTimer|update|onShow|defer||jQuery|url|cssTransitions|items|createFillStyle|topmiddle|rightmiddle|rightbottom|bottomright|bottommiddle|bottomleft|leftbottom|leftmiddle|regex|getBorderDimensions|correction|src|setHookPosition|mouseenter|getStemLayout|transition|Stem|closeButtonCanvas|boolean|sideOffset|fadeTransition|fadeIn|afterUpdate|firstChild|callback|cos|000|startingZIndex|active|skinned|self|delay|cumulativeScrollOffset|scrollTop|scrollLeft|parentNode|cumulativeOffset|Gecko|Chrome|responseText|set|create|hideAll|mouseBuffer|viewport|min|G_vmlCanvasManager|getCenterBorderDimensions|substring|skins|skinElement||prepare|order|UpdateQueue|mouseleave||rotate|borderRadius|topcenter|rightcenter|bottomcenter|leftcenter|corner|corrections|setHookPositionAndStemCorrection|closest|_resizeTimer|_getTooltip|_remove|selector|mousemove|_updateTooltip|setActive|touchmove|getTimer|10000px|setFadeDuration|raise|ms|contentFunction|hideAfter|console|in|Object|title|tipped_restore_title|events|toggles|fnCallContent|call|apply|pointer|pageX|isAttached|RegExp|parseFloat|Opera|opera|WebKit|required|available|findElement|setDefaultSkin|setStartingZIndex|isVisibleByElement|undefined|clearAjaxCache|innerWidth|innerHeight|getSide|getDimensions|getBubbleLayout|nullifyCornerOffset|replace|100|defaultCloseButton|hoverCloseButton|floor|prepend|find|auto|getMeasureElementDimensions|drawCloseButtonState|default|hover|_drawBackgroundPath|before|dark|getByTooltipElement|clearTimeout|abort|reset|CloseButtons|getInversedPosition|Spinners|isPointerEvent|insertSpinner|play|onload|setIdle|hideDelayed|inArray|t_hidden|_restoreInlineContent|afterAjaxUpdate|_hide|idle|warn|_stemPosition|createOptions|getAttribute|getElementById|_preBuild|Array|concat|pageY|version|AppleWebKit|MobileSafari|check|pow|Za|checked|notified|toUpperCase|param|clear|try|DocumentTouch|catch|ready|startDelegating|removeDetached|drawRoundedRectangle|fillRect|isArray|Gradient|addColorStops|positions|toOrientation|side|toDimension|isCorner|atan|red|green|blue|360|drawBubble|drawCloseButton|createHookCache|t_ContentContainer|first|25000px|setStemCorrection|setAdjustment|t_Close|closeButtonShift|closeButtonMouseover|closeButtonMouseout|CloseButton|stemOffset|backgroundRadius|_drawBorderPath|setGlobalAlpha|drawBackground|getBlurOpacity|documentElement|onWindowResize|is|getHighestTooltip|resetZ|base|getTooltipPositionFromTarget|adjustOffsetBasedOnHooks|closeButtonSkin|flip|hideOnClickOutside|typeof|adjustment|outerWidth|outerHeight|_|getAbsoluteOffset|t_Content|inline|isSpinner|tipped_restore_inline_display|display|img|html|eventName|handler|unbind|showDelayed|showDelay|createPreBuildObservers|t_hideOnClickOutside|createPostBuildObservers|clearEvents|clearTimers|removeData|_buildSkin|dataType|ajaxUpdate|t_visible|removeClass|onHide|log|sqrt|object|setAttribute|slice|wrap|nodeType|setTimeout|do|while|exec|attachEvent|MSIE|KHTML|rv|Apple|Mobile|Safari|navigator|userAgent|fn|jquery|z_|z0|requires|_t_uid_|ontouchstart|instanceof|WebKitTransitionEvent|TransitionEvent|OTransitionEvent|createEvent|scale|initElement|drawPixelArray|createLinearGradient|addColorStop|spacing|rgba|join|fff|255|hue|saturation|brightness|0123456789abcdef|hex2rgb|getSaturatedBW|init_|t_Bubble||iframe|t_iframeShim|frameBorder|javascript|15000px|t_CloseButtonShift|lineCap|t_CloseState|translate|stemCorrection|270|lineWidth|sin|setOpacity|getCenterBorderDimensions2|acos|t_Shadow|t_ShadowBubble|t_CloseButtonShadow|999999|touchstart|delegate|close|preventDefault|stopPropagation|200|getBySelector|outside|move|530|t_UpdateQueue|t_clearfix|t_Content_|filter|8e3|750|Image|fixed|t_Skin|t_Tooltip_|load|success|status|style|MozTransitionDuration|webkitTransitionDuration|OTransitionDuration|transitionDuration|hideOthers|hideDelay|resetHookPosition".split("|"), 0, {}));

ogame.messagecounter = {
    countData: {chat: 0, messages: 0, buddy: 0},
    newChats: Array(),
    type_chat: 10,
    type_message: 11,
    type_buddy: 12,
    currentLinkSelector: null,
    currentType: 0,
    currentPlayer: null,
    sumNewChatMessages: 0,
    initialize: function (d, e) {
        var f = ogame.messagecounter;
        if (typeof e == "undefined" && d !== f.type_chat) {
            f.currentPlayer = 0
        }
        if (typeof e == "undefined" && d == f.type_chat) {
            return false
        }
        if (typeof e !== "undefined") {
            f.currentPlayer = e
        }
        f.currentType = d;
        switch (d) {
            case f.type_chat:
                f.currentLinkSelector = $("a.comm_menu.chat");
                break;
            case f.type_message:
                f.currentLinkSelector = $("a.comm_menu.messages");
                break;
            case f.type_buddy:
                f.currentLinkSelector = $("a.comm_menu.buddies");
                break;
            default:
                return false
        }
        f.update()
    },
    initChatCounter: function (d) {
        var c = ogame.messagecounter;
        c.currentLinkSelector = $("a.comm_menu.chat");
        c.currentType = c.type_chat;
        c.setCount(d);
        c.update()
    },
    update: function (f) {
        var d = ogame.messagecounter;
        var e;
        if (f === undefined) {
            e = chatLoca.X_NEW_CHATS
        } else {
            e = f
        }
        changeTooltip(d.currentLinkSelector, e.replace("#+#", d.getCount()))
    },
    resetCounterByType: function (l, h) {
        var k = ogame.messagecounter;
        var g = k.getIconSelectorByType(l);
        var f;
        if (h === undefined) {
            f = chatLoca.X_NEW_CHATS
        } else {
            f = h
        }
        changeTooltip(g, f.replace("#+#", 0))
    },
    getCountSelectorByType: function (e) {
        var f = ogame.messagecounter;
        var d = "";
        switch (e) {
            case f.type_chat:
                d = $("a.comm_menu.chat .new_msg_count");
                break;
            case f.type_message:
                d = $("a.comm_menu.messages .new_msg_count");
                break;
            case f.type_buddy:
                d = $("a.comm_menu.buddies .new_msg_count")
        }
        return d
    },
    getIconSelectorByType: function (d) {
        var f = ogame.messagecounter;
        var e = "";
        switch (d) {
            case f.type_chat:
                e = $("a.comm_menu.chat");
                break;
            case f.type_message:
                e = $("a.comm_menu.messages");
                break;
            case f.type_buddy:
                e = $("a.comm_menu.buddies")
        }
        return e
    },
    getCounterHtml: function (c) {
        var d = '<span class="new_msg_count">' + c + "</span>";
        return d
    },
    getCount: function () {
        var b = ogame.messagecounter;
        switch (b.currentType) {
            case b.type_chat:
                return b.countData.chat;
            case b.type_message:
                return b.countData.messages;
            case b.type_buddy:
                return b.countData.buddy
        }
    },
    setCount: function (d) {
        var c = ogame.messagecounter;
        switch (c.currentType) {
            case c.type_chat:
                c.countData.chat = d;
                break;
            case c.type_message:
                c.countData.messages = d;
                break;
            case c.type_buddy:
                c.countData.buddy = d;
                break
        }
    },
    updateCountData: function () {
        var f = ogame.messagecounter;
        if (f.isOpen()) {
            f.setCount(0)
        } else {
            if (f.shouldAddCounter()) {
                var d = 1
            } else {
                var e = f.getCountSelectorByType(f.currentType);
                var d = e.html();
                d = parseInt(d) + 1
            }
            f.setCount(d)
        }
    },
    shouldAddCounter: function () {
        var g = ogame.messagecounter;
        var e = g.getCountSelectorByType(g.currentType);
        var f = e.html();
        var h = false;
        if (typeof f == "undefined") {
            h = true
        }
        return h
    },
    setNewCounter: function (d, c) {
        d.html(c)
    },
    isOpen: function () {
        var c = ogame.messagecounter;
        var d = false;
        switch (c.currentType) {
            case c.type_chat:
                d = ogame.chat.isOpen(c.currentPlayer);
                break;
            case c.type_message:
                d = (location.href.indexOf("page=messages") > -1);
                break;
            case c.type_buddy:
                d = (location.href.indexOf("page=buddies") > -1);
                break
        }
        return d
    }
};
ogame.messagemarker = {
    type_chatbar: 10,
    type_chattab: 11,
    action_remove: 20,
    action_add: 21,
    currentCount: "",
    currentSelector: "",
    currentPlayernameObject: "",
    currentListPlayernameObject: "",
    currentPartnerId: "",
    currentListItemSelector: "",
    totalNewMessages: 0,
    playerlist: new Array(),
    newsInitialized: false,
    effect: "none",
    initialize: function () {
        $(".new_msg_count[data-playerid]").each(function () {
            var c = ogame.messagemarker;
            var d = $(this).data("playerid");
            if (d && $.inArray(d, c.playerlist) === -1) {
                c.playerlist.push(d);
                c.setPartnerId(d);
                c.updateNewMarker()
            }
        });
        ogame.messagemarker.effect = "highlight"
    },
    initMarker: function (e) {
        var d = ogame.messagemarker;
        var f = 0;
        $.each(e, function (b, a) {
            d.setPartnerId(a);
            var c = $('.new_msg_count[data-playerid="' + a + '"]').data("new-messages");
            if (c != null && c > 0) {
                d.setSelectorByType(d.type_chatbar);
                d.mark(d.currentSelector, d.currentPlayernameObject, c);
                d.mark(d.currentListItemSelector, d.currentListPlayernameObject, c);
                d.setSelectorByType(d.type_chattab);
                d.mark(d.currentSelector, d.currentPlayernameObject, c)
            }
            f = f + 1
        });
        return f
    },
    setCounter: function (c, d) {
        this.setPartnerId(c);
        $('.new_msg_count[data-playerid="' + this.currentPartnerId + '"]').data("new-messages", d);
        this.updateNewMarker()
    },
    toggle: function (h, e, g, f) {
        this.setPartnerId(g);
        this.currentCount = parseInt($('.new_msg_count[data-playerid="' + this.currentPartnerId + '"]').data("new-messages"));
        if (h === this.action_add) {
            this.updateNewMarker()
        }
        if (h === this.action_remove) {
            this.removeNewMarker()
        }
    },
    mark: function (e, d, f) {
        $('.playerlist_item[data-playerid="' + this.currentPartnerId + '"] .playername').css("font-weight", "bold");
        $('.cb_playername[data-playerid="' + this.currentPartnerId + '"]').css("font-weight", "bold")
    },
    addNewMarker: function () {
        var b = false;
        if (!$(this.currentSelector).find(".newMsgMarker").length) {
            this.mark(this.currentSelector, this.currentPlayernameObject, this.currentCount);
            b = true
        }
        if (!$(this.currentListItemSelector).find(".newMsgMarker").length) {
            this.mark(this.currentListItemSelector, this.currentListPlayernameObject, this.currentCount);
            b = true
        }
        if (!b) {
            this.updateNewMarker()
        }
    },
    removeNewMarker: function () {
        $('.playerlist_item[data-playerid="' + this.currentPartnerId + '"] .playername').css("font-weight", "normal");
        $('.cb_playername[data-playerid="' + this.currentPartnerId + '"]').css("font-weight", "normal")
    },
    updateNewMarker: function () {
        var d = parseInt($('.new_msg_count[data-playerid="' + this.currentPartnerId + '"]').data("new-messages"));
        var e = $(".new_msg_count.totalChatMessages").text();
        var f = ogame.chat.updateTotalNewChatCounter();
        if (d === 0) {
            if (isNaN(this.currentPartnerId)) {
                $(".new_msg_count.totalMessages.news").text(d).addClass("noMessage")
            } else {
                $('.new_msg_count[data-playerid="' + this.currentPartnerId + '"]').text(d).addClass("noMessage");
                if (f === 0) {
                    $(".new_msg_count.totalChatMessages").text(f).addClass("noMessage")
                } else {
                    if (e != f) {
                        $(".new_msg_count.totalChatMessages").text(f).removeClass("noMessage").effect(ogame.messagemarker.effect, {}, 500)
                    }
                }
            }
        } else {
            if (isNaN(this.currentPartnerId)) {
                if (isNaN(d)) {
                    $(".new_msg_count.totalMessages.news").text(0).addClass("noMessage")
                } else {
                    $(".new_msg_count.totalMessages.news").text(d).removeClass("noMessage").effect(ogame.messagemarker.effect, {}, 500)
                }
            } else {
                $('.msg[data-playerid="' + this.currentPartnerId + '"]').addClass("msg_new");
                $('.new_msg_count[data-playerid="' + this.currentPartnerId + '"]').text(d).removeClass("noMessage").effect(ogame.messagemarker.effect, {}, 500);
                if (e != f) {
                    $(".new_msg_count.totalChatMessages").text(f).removeClass("noMessage").effect(ogame.messagemarker.effect, {}, 500)
                }
            }
        }
    },
    setSelectorByType: function (b) {
        selector = "";
        if (b == this.type_chatbar) {
            selector = 'ul.chat_bar_list li.chat_bar_list_item[data-playerid="' + this.currentPartnerId + '"]'
        }
        if (b == this.type_chattab) {
            selector = 'ul#chatMsgList li.msg[data-playerid="' + this.currentPartnerId + '"]'
        }
        this.currentListItemSelector = '.js_playerlist ul.playerlist li.playerlist_item[data-playerid="' + this.currentPartnerId + '"]';
        this.currentSelector = selector;
        this.currentPlayernameObject = $(selector).find(".cb_playername");
        this.currentListPlayernameObject = $(this.currentListItemSelector).find(".playername")
    },
    setPartnerId: function (b) {
        this.currentPartnerId = b
    }
};
ogame.messages = {
    data: {
        initActions: {
            "tabs-nfFleets": "initTabFleets",
            "tabs-nfCommunication": "initTabCommunication",
            "subtabs-nfCommunicationMessages": "initSubTabMessages"
        }
    }, addMessage: function (l, f, g) {
        if (g !== false) {
            g = true
        }
        if (l.attr("aria-selected") !== "true") {
            console.warn("addMessage: not correct Tab, aria-selected = ", l.attr("aria-selected"), l);
            return
        }
        if (!f) {
            console.warn("addMessage: msgData is ", f);
            return
        }
        var h = $("#" + l.attr("aria-controls")).find(".tab_inner");
        var k = false;
        if (g) {
            k = true
        }
        ogame.messages.createMessageItem(f, h, k)
    }, createMessageItem: function (o, l, m) {
        var p = {};
        for (var k in o) {
            var n = o[k];
            p[k] = n.msgID
        }
        var h = JSON.stringify(p);
        $.ajax({
            url: "?page=messages",
            type: "POST",
            dataType: "html",
            data: {
                messageId: h,
                tabid: this.getCurrentMessageTab(),
                action: 121,
                ajax: 1
            },
            success: function (a) {
                if (m) {
                    l.prepend(a)
                } else {
                    var b = l.find(".favoriteCount");
                    if (b.length > 0) {
                        $(a).insertBefore(b)
                    } else {
                        l.append(a)
                    }
                }
            },
            error: function (c, a, b) {
            }
        })
    }, createBroadcastMsgItem: function (f) {
        if (!f) {
            console.warn("createMessageItem: msgData is missing!");
            return undefined
        }
        var g = $('<div class="msg_head"></div>');
        g.append('<span class="msg_title blue_txt">' + f.title + "</span>");
        g.append('<span class="msg_date fright">' + f.date + "</span><br>");
        g.append('<span class="msg_sender_label">' + loca.LOCA_WRITE_MSG_FROM + ": </span>");
        g.append('<span class="msg_sender">' + f.senderName + "</span>");
        var h = $('<div class="msg_actions clearfix"></div>');
        h.append('<a class="fright txt_link overlay" href="' + f.detailURL + '" data-overlay-title="' + loca.broadcasts + '">' + loca.details + "</a>");
        h.append('<a class="fright txt_link comments_link overlay" href="' + f.commentsURL + '" data-overlay-title="' + loca.broadcasts + '">' + f.commentsCount + ' <span class="comments"></span></a></a>');
        var e = $('<li class="msg ' + f.newClass + '" data-msg-id="' + f.msgID + '"></li>');
        e.append('<div class="msg_status"></div>');
        e.append(g);
        e.append('<span class="msg_content">' + f.msgContent + "</span>");
        e.append(h);
        return e
    }, createRecipient: function (m, g, n) {
        var h, k;
        $(".input_replacement").each(function () {
            k = new RegExp($(this).data("recipient-cat"));
            if (k.test(g)) {
                h = $(this)
            }
        });
        if (h === undefined) {
            return
        }
        var l = h.children(".recipient_txt").filter(function () {
            return ($(this).data("recipient-id") === m)
        });
        if (l.length === 0) {
            if (!h.hasClass("focus")) {
                h.addClass("focus")
            }
            h.append('<div class="recipient_txt" data-recipient-id="' + m + '" data-recipient-cat="' + g + '">' + n + '<a role="button" class="remove_recipient"></a></div>')
        }
    }, doInitAction: function (b) {
        if (typeof ogame.messages[ogame.messages.data.initActions[b]] === "function") {
            return ogame.messages[ogame.messages.data.initActions[b]]()
        } else {
            return console.warn("These is no function defined for action: ", b)
        }
    }, initCombatReportDetails: function () {
        if ($("select").length > 0) {
            $("select").ogameDropDown()
        }
    }, initDetailMessages: function (c) {
        $(".detail_list_el:nth-of-type(4n + 3), .detail_list_el:nth-of-type(4n + 4)").addClass("odd");
        var d = $(window).height() - 200;
        $(".detail_msg_ctn").css("height", d);
        $(".detail_msg_ctn").mCustomScrollbar({theme: "ogame"});
        if (c) {
            $("#scrollToComments").on("click", function () {
                $(".detail_msg_ctn").mCustomScrollbar("scrollTo", "bottom")
            });
            initBBCodeEditor(locaKeys, itemNames, false, ".comment_textarea", 2000)
        }
        $("#messages ul.pagination").on("click", "li.p_li a", function () {
            var a = $(this).data("tabid");
            var b = $(this).data("messageid");
            console.log('initDetailMessages()');
            $.post("?page=messages", {
                tabid: a,
                messageId: b,
                ajax: 1
            }, function (h) {
                var g = $(h).find("#messages .ui-dialog");
                $(".overlayDiv").html(h)
            })
        })
    }, initMessages: function () {
        $(".js_tabs .tabs_btn_img").each(function () {
            if ($(this).attr("rel")) {
                $(this).attr("href", $(this).attr("rel"))
            }
        });
        ogame.messages.initTabs($(".js_tabs"));
        var b = ogame.messages.getCurrentMessageTab();
        $("#contentWrapper #buttonz div.js_tabs.tabs_wrap.ui-tabs").on("click", "ul li.list_item", function () {
            var a = ogame.messages.getCurrentMessageTab()
        });
        $("body").on("click", ".msg_actions .icon_not_favorited", function (d) {
            var a = $(this).parents("li.msg").data("msg-id") || $(this).parents("div.detail_msg").data("msg-id");
            $.ajax({
                type: "POST",
                url: "?page=messages",
                dataType: "json",
                data: {tabid: b, messageId: a, action: 101, ajax: 1},
                success: function (f) {
                    if (f[a]["result"] == true) {
                        $(d.target).removeClass("icon_not_favorited").addClass("icon_favorited");
                        changeTooltip($(d.target), loca.DELETE_FAV);
                        var c = $(".favoriteTabFreeSlotCount");
                        c.html(parseInt(c.html()) - 1)
                    } else {
                        if (f[a]["reason"] !== "undefined") {
                            fadeBox(f[a]["reason"], 1)
                        } else {
                            fadeBox(loca.LOCA_GALAXY_ERROR_OCCURED, 1)
                        }
                    }
                },
                error: function () {
                }
            })
        }).on("click", ".msg_actions .icon_favorited", function (d) {
            var a = $(this).parents("li.msg").data("msg-id") || $(this).parents("div.detail_msg").data("msg-id");
            $.ajax({
                type: "POST",
                url: "?page=messages",
                dataType: "json",
                data: {tabid: b, messageId: a, action: 102, ajax: 1},
                success: function (f) {
                    if (f[a]["result"] == true) {
                        $(d.target).removeClass("icon_favorited").addClass("icon_not_favorited");
                        changeTooltip($(d.target), loca.ADD_FAV);
                        var c = $(".favoriteTabFreeSlotCount");
                        c.html(parseInt(c.html()) + 1)
                    } else {
                        if (f[a]["reason"] !== "undefined") {
                            fadeBox(f[a]["reason"], 1)
                        } else {
                            fadeBox(loca.LOCA_GALAXY_ERROR_OCCURED, 1)
                        }
                    }
                },
                error: function () {
                }
            })
        }).on("click", ".js_actionKill", function (d) {
            var a = $(this).parents("li.msg").data("msg-id");
            console.log(a);
            console.log('this is the message id');
            $.ajax({
                type: "POST",
                url: "", // Self
                dataType: "json",
                data: {messageId: a, action: 103, ajax: 1},
                success: function (c) {
                    if (c[a] == true) {
                        $(d.target).parents("li.msg").remove()
                    } else {
                        fadeBox(loca.LOCA_GALAXY_ERROR_OCCURED, 1)
                    }
                },
                error: function () {
                }
            })
        }).on("click", ".js_actionKillAll", function (a) {
            console.log(ogame.messages.getCurrentMessageTab());
            return;
            $.ajax({
                type: "POST",
                url: "", // Self
                dataType: "json",
                data: {
                    tabid: ogame.messages.getCurrentMessageTab(),
                    messageId: -1,
                    action: 103,
                    ajax: 1
                },
                success: function (d) {
                    if (d.result == true) {
                        location.reload()
                    } else {
                        fadeBox(loca.LOCA_GALAXY_ERROR_OCCURED, 1)
                    }
                },
                error: function () {
                }
            })
        }).on("click", ".js_actionKillDetail", function (d) {
            var a = $(".overlayDiv .detail_msg").data("msg-id");
            $.ajax({
                type: "POST",
                url: "?page=messages",
                dataType: "json",
                data: {messageId: a, action: 103, ajax: 1},
                success: function (c) {
                    if (c[a] == true) {
                        location.reload()
                    } else {
                        fadeBox(loca.LOCA_GALAXY_ERROR_OCCURED, 1)
                    }
                },
                error: function () {
                }
            })
        }).on("click", ".js_actionRevive", function (d) {
            var a = $(this).parents("li.msg").data("msg-id");
            if (a === undefined) {
                a = $(this).parents("div.detail_msg").data("msg-id")
            }
            $.ajax({
                type: "POST",
                url: "?page=messages",
                dataType: "json",
                data: {tabid: b, messageId: a, action: 104, ajax: 1},
                success: function (c) {
                    if (c[a] == true) {
                        $(d.target).parents("li.msg").remove();
                        $(d.target).parents("div.ui-dialog").remove();
                        $("li.msg[data-msg-id=" + a + "]").remove()
                    } else {
                        fadeBox(loca.LOCA_GALAXY_ERROR_OCCURED, 1)
                    }
                },
                error: function () {
                }
            })
        }).on("click", ".js_actionReviveAll", function (a) {
            $.ajax({
                type: "POST",
                url: "?page=messages",
                dataType: "json",
                data: {
                    tabid: ogame.messages.getCurrentMessageTab(),
                    messageId: -1,
                    action: 104,
                    ajax: 1
                },
                success: function (d) {
                    if (d.result == true) {
                        location.reload()
                    } else {
                        fadeBox(loca.LOCA_GALAXY_ERROR_OCCURED, 1)
                    }
                },
                error: function () {
                }
            })
        }).on("click", ".js_actionDelete", function (d) {
            var a = $(this).parents("li.msg").data("msg-id");
            $.ajax({
                type: "POST",
                url: "?page=messages",
                dataType: "json",
                data: {tabid: b, messageId: a, action: 105, ajax: 1},
                success: function (c) {
                    if (c[a] == true) {
                        $(d.target).parents("li.msg").remove()
                    } else {
                        fadeBox(loca.LOCA_GALAXY_ERROR_OCCURED, 1)
                    }
                },
                error: function () {
                }
            })
        }).on("click", ".js_actionDeleteAll", function (d) {
            var a = $(this).parents("li.msg").data("msg-id");
            $.ajax({
                type: "POST",
                url: "?page=messages",
                dataType: "json",
                data: {
                    tabid: ogame.messages.getCurrentMessageTab(),
                    messageId: -1,
                    action: 105,
                    ajax: 1
                },
                success: function (c) {
                    if (c.result == true) {
                        location.reload()
                    } else {
                        fadeBox(loca.LOCA_GALAXY_ERROR_OCCURED, 1)
                    }
                },
                error: function () {
                }
            })
        }).on("click", ".paginator", function (h) {
            var f = $(this).data("tab");
            var g = $(this).data("page");
            var a = $(this).closest('div[class^="ui-tabs-panel"]');
            $.ajax({
                type: "POST",
                url: "?page=messages",
                dataType: "html",
                data: {
                    messageId: -1,
                    tabid: f,
                    action: 107,
                    pagination: g,
                    ajax: 1
                },
                success: function (c) {
                    a.html(c)
                },
                error: function () {
                }
            })
        }).on("click", ".jumpToAllianceApplications", function (a) {
            location.href = "index.php?page=alliance&tab=applications"
        })
    }, selectCurrentMessageTab: function () {
        var b = $(".subtabs .ui-state-active:visible");
        if (!b.length) {
            b = $(".js_tabs .ui-state-active:visible")
        }
        return b
    }, getCurrentMessageTab: function () {
        var b = $(".subtabs .ui-state-active:visible").attr("data-tabid");
        if (!b) {
            b = $(".js_tabs .ui-state-active:visible").attr("data-tabid")
        }
        return b
    }, getCurrentEarliestMessage: function () {
        return $(".ui-tabs-panel .tab_inner .msg:visible").last().attr("data-msg-id")
    }, initCommentForm: function () {
        ogame.messages.initWriteNewMsgBox($("#newCommentForm"));
        $("#newCommentForm").on("click", ".js_send_comment", function (d) {
            d.preventDefault();
            var f = $(this).closest("form");
            var e = f.find("input[name=messageId]").val();
            $.ajax({
                type: "POST",
                url: f.attr("action"),
                dataType: "json",
                data: {
                    messageId: e,
                    ajax: 1,
                    action: 108,
                    text: f.find("textarea[name=text]").val()
                },
                success: function (a) {
                    fadeBox(a.message, a.error);
                    f.find("textarea[name=text]").val("");
                    f.parent().after('<li class="msg"><div class="msg_status"></div><div class="msg_head">' + a.commentheader + '</div><div class="msg_content">' + a.commentcontent + "</div></li>");
                    $("#scrollToComments").text(a.commentcount)
                },
                error: function (a) {
                }
            })
        })
    }, initShareReportOverlay: function () {
        ogame.messages.initWriteNewMsgBox($("#newSharedReportForm"));
        $("#newSharedReportForm").on("click", ".js_send_msg_share", function (e) {
            e.preventDefault();
            var l = $(this).closest("form");
            var g = l.find("input[name=messageId]").val();
            var h = l.find("li.select2-selection__choice");
            var k = [];
            h.each(function () {
                k.push($(this).attr("title"))
            });
            $.ajax({
                type: "POST",
                url: l.attr("action"),
                dataType: "json",
                data: {
                    messageId: g,
                    empfaenger: k,
                    ajax: 1,
                    action: 106,
                    text: l.find("textarea[name=text]").val()
                },
                success: function (a) {
                    fadeBox(a.message, a.error);
                    l.closest('div[class^="overlayDiv"').remove()
                },
                error: function (a) {
                }
            })
        })
    }, initSubTabMessages: function () {
        $(".js_accordion").accordion({
            collapsible: true,
            heightStyle: "content",
            active: false
        });
        ogame.messages.initWriteNewMsgBox($("#newMsgForm"));
        $("html").off(".subtabmessages");
        $("#newMsgForm").on("click.subtabmessages", ".js_send_msg", function (e) {
            e.preventDefault();
            var f = $(this).parents("form");
            var d = {};
            $(".input_replacement").children().each(function () {
                if (typeof d[$(this).data("recipient-cat")] == "undefined") {
                    d[$(this).data("recipient-cat")] = []
                }
                d[$(this).data("recipient-cat")].push($(this).data("recipient-id"))
            });
            $.ajax({
                type: "POST",
                url: f.attr("action"),
                dataType: "json",
                data: {empfaenger: d, text: f.find(".new_msg_textarea").val()},
                success: function (a) {
                    fadeBox(a.message, a.error);
                    if (!a.error) {
                        ogame.messages.sendSubtabMsg($(".new_msg_textarea").val(), d)
                    }
                },
                error: function () {
                }
            })
        })
    }, initTabCommunication: function () {
        console.info("-------------initTabCommunication");
        ogame.messages.initTabs($(".js_subtabs_communication"))
    }, initTabFleets: function () {
        console.info("-------------initTabFleets");
        ogame.messages.initTabs($(".js_subtabs_fleets"), ogame.messages.initTrash)
    }, initTabs: function (c, d) {
        c.tabs({
            beforeLoad: function () {
                $(".ajax_load_shadow").show()
            }, load: function (a, b) {
                console.info("load", b.tab.attr("id"));
                ogame.messages.doInitAction(b.tab.attr("id"));
                $(".ajax_load_shadow").hide();
                if (typeof d === "function") {
                    d(b.tab)
                }
            }, create: function (a, b) {
                ogame.messages.doInitAction(b.tab.attr("id"))
            }
        })
    }, initTrash: function (b) {
        if (!b) {
            return
        }
        $(".js_active_tab").html(b.data("subtabname"));
        if (b.attr("id") === "subtabs-nfFleetTrash") {
            $(".trash_box").addClass("trash_open");
            $(".in_trash").show();
            $(".not_in_trash").hide()
        } else {
            $(".trash_box").removeClass("trash_open");
            $(".in_trash").hide();
            $(".not_in_trash").show()
        }
    }, initWriteNewMsgBox: function (b) {
        initBBCodeEditor(locaKeys, itemNames, false, ".new_msg_textarea", 2000);
        $("html").off(".writeNewMsgBox");
        $("html").on("click.writeNewMsgBox", function (a) {
            if ($(".new_msg_label").hasClass("open") && $(a.target).parents(".recipient_select_box").length < 1) {
                $(".input_replacement").removeClass("focus");
                $(".new_msg_label").removeClass("open");
                $(".new_msg_label").siblings(".recipient_select_box").hide()
            }
        });
        b.on("click.writeNewMsgBox", ".input_replacement", function (a) {
            a.stopPropagation();
            ogame.messages.toggleRecipientSelectBox($(a.target).data("recipient-cat"))
        }).on("click.writeNewMsgBox", ".new_msg_label", function (a) {
            a.stopPropagation();
            ogame.messages.toggleRecipientSelectBox($(a.currentTarget).data("recipient-cat"))
        }).on("click.writeNewMsgBox", ".recipient_select_box .ally_rank", function () {
            ogame.messages.toggleRecipientSelection($(this))
        }).on("click.writeNewMsgBox", ".remove_recipient", function () {
            ogame.messages.removeRecipient($(this).closest(".recipient_txt").data("recipient-id"))
        })
    }, removeRecipient: function (b) {
        $(".ally_rank").filter(function () {
            if ($(this).data("recipient-id") === b) {
                $(this).removeClass("selected")
            }
        });
        $(".recipient_txt").filter(function () {
            if ($(this).data("recipient-id") === b) {
                $(this).remove()
            }
        })
    }, sendSubtabMsg: function (g, h) {
        if (!g) {
            console.warn("sendSubtabMsg: msg was empty");
            return
        }
        if (!h) {
            console.warn("sendSubtabMsg: msg had no recipients");
            return
        }
        var f = {};
        f.date = getFormatedDate(serverTime.getTime(), "[d].[m].[Y] <span>[H]:[i]:[s]</span>");
        f.newClass = "msg_new";
        f.title = h;
        f.senderName = "100011";
        f.msgID = "111";
        f.msgContent = g;
        f.commentsURL = "";
        f.detailURL = "";
        f.commentsCount = 0;
        var e = array(f);
        ogame.messages.addMessage($("#subtabs-nfCommunicationMessages"), e)
    }, toggleRecipientSelectBox: function (b) {
        $(".input_replacement").filter(function () {
            if ($(this).data("recipient-cat") === b && !$(this).hasClass("focus")) {
                $(this).addClass("focus")
            }
        });
        $(".new_msg_label").filter(function () {
            var e = $(this);
            if (e.data("recipient-cat") === b) {
                if (e.hasClass("open")) {
                    e.removeClass("open").siblings(".recipient_select_box").hide()
                } else {
                    var a = e.siblings(".recipient_select_box"), f = a.find(".scroll_box");
                    $(".new_msg_label").removeClass("open").siblings(".recipient_select_box").hide();
                    e.addClass("open");
                    a.show();
                    (f.hasClass("mCustomScrollbar")) ? f.mCustomScrollbar("update") : f.mCustomScrollbar()
                }
            }
        })
    }, toggleRecipientSelection: function (d) {
        var e = d.data("recipient-cat"), f = d.data("recipient-id");
        if (d.hasClass("always_selected")) {
            return
        }
        if (d.hasClass("complete_ally")) {
            ogame.messages.toggleSelectAllRecipients(e);
            return
        }
        if (!d.hasClass("selected")) {
            ogame.messages.createRecipient(f, e, d.html());
            d.addClass("selected")
        } else {
            ogame.messages.removeRecipient(f)
        }
    }, toggleSelectAllRecipients: function (h) {
        var g = $(".complete_ally").hasClass("selected"), e = (g) ? "255" : "1", f = (g) ? "loca.founder" : "loca.completeAlliance";
        $(".input_replacement").children().remove();
        ogame.messages.createRecipient(e, h, f);
        $(".recipient_list").filter(function () {
            if ($(this).data("recipient-cat") === h) {
                $(this).find(".ally_rank").each(function () {
                    if (!$(this).hasClass("always_selected")) {
                        (g) ? $(this).removeClass("selected") : $(this).addClass("selected")
                    }
                })
            }
        })
    }
};
function initShowMessage() {
    var b = $('.overlayDiv[data-page="showmessage"]');
    $(".answerHeadline", b).click(function () {
        $(this).toggleClass("open");
        if ($(this).hasClass("open")) {
            $(".answerForm", b).show();
            $(".textWrapper", b).addClass("textWrapperSmall");
            $(".textWrapper", b).removeClass("textWrapper")
        } else {
            $(".answerForm", b).hide();
            $(".textWrapperSmall", b).addClass("textWrapper");
            $(".textWrapperSmall", b).removeClass("textWrapperSmall")
        }
    });
    $(".note > div:first-child", b).addClass("newMessage");
    $(".info:odd", b).css("margin-left", "40px");
    $("div.note p:first").after('<span class="seperator">');
    $(".answerHeadline", b).hover(function () {
        $(this).addClass("pushable")
    }, function () {
        $(this).removeClass("pushable")
    });
    $(".melden", b).click(function () {
        manageErrorbox($(this).attr("rel"), 1)
    })
}
function initNetworkAjax() {
    var e = $(".reiter");
    if (!$.isFunction(f)) {
        var f = function () {
            e.removeClass("active");
            $(this).addClass("active");
            ajaxLoad($(this).attr("id"), 1)
        }
    }
    e.off("click");
    e.click(f);
    $("#checkAll").off("click").click(function () {
        $(".checker").prop("checked", $(this).is(":checked"))
    });
    function d(a) {
        $("#TR" + a).hide()
    }

    $(".overlay").click(function () {
        var a = $(this).attr("id");
        markAsRead(a)
    });
    $("#messageContent select").change(function () {
        if (typeof($("select option:selected").attr("id")) == "undefined") {
            $(".buttonOK").hide();
            mod = ""
        } else {
            $(".buttonOK").show();
            mod = $("select option:selected").attr("id")
        }
    });
    $(".del").click(function () {
        mod = $(this).attr("id")
    });
    $(".underlined").click(function () {
        $(".buttonOK").hide()
    });
    reduceMsgCount(aktCat)
}
function MessageSlider(d) {
    var f = this;
    f.htmlobject = d;
    var e = document.documentElement.clientHeight - 160;
    this.open = function () {
        if (!this.inAction) {
            f.startTime = new Date().getTime();
            f.inAction = true;
            f.slideInStep()
        }
    }, this.slideInStep = function () {
        time = new Date().getTime();
        height = parseInt(f.currHeight * ((time - f.startTime) / 500));
        if (height < f.currHeight) {
            f.htmlobject.style.height = height + "px";
            window.setTimeout(f.slideInStep, 10)
        } else {
            f.htmlobject.style.height = f.currHeight + "px";
            f.inAction = false
        }
    }, this.close = function () {
        if (!f.inAction) {
            f.startTime = new Date().getTime();
            f.inAction = true;
            f.htmlobject.style.height = "0px";
            f.inAction = false
        }
    }, f.inAction = false;
    if (document.getElementById("messages")) {
        f.currHeight = Math.min(document.getElementById("messages").offsetHeight, e)
    } else {
        f.currHeight = e
    }
}
ogame.messages.combatreport = {
    data: [{combatReportId: $(".detailReport").attr("data-combatreportid")}],
    loca: [{weapon: "", shield: "", cover: ""}],
    getCombatValueByCombatMember: function () {
        var h = ogame.messages.combatreport;
        var g = h.data.activeMember;
        var f = {armorPercentage: 0, weaponPercentage: 0, shieldPercentage: 0};
        var e = 0;
        $.each(h.data.combatArray, function (b, a) {
            if (h.check(true, g, {values: {is: {0: "all"}}})) {
                f.armorPercentage += a.armorPercentage;
                f.weaponPercentage += a.weaponPercentage;
                f.shieldPercentage += a.shieldPercentage;
                e++
            } else {
                if (a.ownerName == g) {
                    f.armorPercentage = a.armorPercentage;
                    f.weaponPercentage = a.weaponPercentage;
                    f.shieldPercentage = a.shieldPercentage;
                    e = 1
                }
            }
        });
        f.armorPercentage = Math.round(f.armorPercentage / e);
        f.weaponPercentage = Math.round(f.weaponPercentage / e);
        f.shieldPercentage = Math.round(f.shieldPercentage / e);
        return f
    },
    setCombatValue: function () {
        var c = ogame.messages.combatreport;
        var d = c.getCombatValueByCombatMember();
        $("." + c.data.combatside + "Weapon").text(c.loca.weapon + " " + d.weaponPercentage + "%");
        $("." + c.data.combatside + "Shield").text(c.loca.shield + " " + d.shieldPercentage + "%");
        $("." + c.data.combatside + "Cover").text(c.loca.cover + " " + d.armorPercentage + "%")
    },
    setCombatLoca: function (f, e, g) {
        var h = ogame.messages.combatreport;
        h.loca.weapon = f;
        h.loca.shield = e;
        h.loca.cover = g
    },
    isActive: function (g, e) {
        var h = ogame.messages.combatreport;
        for (var f in e) {
            if (f == "length") {
                continue
            }
            if (h.check(true, e[f][g])) {
                return "on"
            }
        }
        if (h.check(true, e[g])) {
            return "on"
        }
        return "off"
    },
    setActiveFlag4Fleet: function (f, h) {
        var e = ogame.messages.combatreport;
        var g = e.getAllShipClasses(f);
        $.each(g, function (d, a) {
            var p = e.getShipIdByClass(a);
            var r = e.isActive(p, h);
            var q = e.getShipSelectors(p);
            e.changeShipState(r, q.ship);
            if (r == "off") {
                var b = q.shipCount;
                var c = q.loss;
                var o = {ships: {}, losses: {}};
                o.ships[b] = 0;
                o.losses[c] = "";
                e.setShipCount(o)
            }
            e.toggleShipShowState(q.ship)
        })
    },
    search4Class: function (e, g) {
        for (var f in e) {
            if ($("." + e[f] + g)[0]) {
                var h = e[f] + g;
                return h
            }
        }
        return false
    },
    getShipSelectors: function (k) {
        var m = ogame.messages.combatreport;
        var r = ["military", "civil", "defense"];
        var n = m.search4Class(r, k);
        var p = "." + m.data.combatside + " ." + n;
        var o = "." + m.data.combatside + " ." + n + " .ecke";
        var q = "." + m.data.combatside + " ." + n + " .lost_ships";
        var l = {ship: p, shipCount: o, loss: q};
        return l
    },
    getShipIdByClass: function (f) {
        var e = f.length;
        var d = f.substr(e - 3);
        return d
    },
    changeShipState: function (c, d) {
        if ($(d).hasClass("off") && c != "off") {
            $(d).removeClass("off")
        }
        if ($(d).hasClass("on") && c != "on") {
            $(d).removeClass("on")
        }
        if (!$(d).hasClass(c)) {
            $(d).addClass(c)
        }
    },
    toggleShipShowState: function (b) {
        if ($(b).hasClass("off")) {
            $(b).parent().hide()
        }
        if ($(b).hasClass("on")) {
            $(b).parent().show()
        }
    },
    getShipsByMembers: function (f) {
        var d = ogame.messages.combatreport;
        var e = [];
        if (!d.check(true, d.data.combatArray.shipDetails)) {
            $.each(d.data.combatArray, function (b, a) {
                if (typeof a == "object" && typeof a.shipDetails != "undefined") {
                    if (typeof e[a.ownerName] != "undefined") {
                        $.extend(e[a.ownerName], a.shipDetails)
                    } else {
                        e[a.ownerName] = a.shipDetails
                    }
                } else {
                    if (typeof e[a.ownerName] == "undefined") {
                        e[a.ownerName] = {}
                    }
                }
            })
        } else {
            if (typeof e[d.data.combatArray.ownerName] != "undefined") {
                $.extend(e[d.data.combatArray.ownerName], d.data.combatArray.shipDetails)
            } else {
                e[d.data.combatArray.ownerName] = d.data.combatArray.shipDetails
            }
        }
        if (f == "all") {
            return e
        } else {
            return e[f]
        }
    },
    getShipsByMembersAndCoords: function (h, l, f) {
        var k = ogame.messages.combatreport;
        var g = [];
        if (!k.check(true, k.data.combatArray.shipDetails)) {
            $.each(k.data.combatArray, function (b, a) {
                if (l !== 0) {
                    if (typeof a == "object" && typeof a.shipDetails != "undefined") {
                        if (a.ownerCoordinates === l && a.ownerName == h && a.ownerPlanetType == f) {
                            if (typeof g[a.ownerName] != "undefined") {
                                $.extend(g[a.ownerName], a.shipDetails)
                            } else {
                                g[a.ownerName] = a.shipDetails
                            }
                        }
                    }
                } else {
                    if (typeof a == "object" && typeof a.shipDetails != "undefined") {
                        if (typeof g[a.ownerName] != "undefined") {
                            $.extend(g[a.ownerName], a.shipDetails)
                        } else {
                            g[a.ownerName] = a.shipDetails
                        }
                    }
                }
            })
        } else {
            if (typeof g[k.data.combatArray.ownerName] != "undefined") {
                $.extend(g[k.data.combatArray.ownerName], k.data.combatArray.shipDetails)
            } else {
                g[k.data.combatArray.ownerName] = k.data.combatArray.shipDetails
            }
        }
        if (h == "all") {
            return g
        } else {
            return g[h]
        }
    },
    getShipCountArray: function (o, u) {
        var q = ogame.messages.combatreport;
        var y = q.check(true, u, {types: {0: "isEmpty"}}) ? false : true;
        var p = {};
        var r = {};
        for (var n in o) {
            var v = q.getShipSelectors(n);
            var w = v.shipCount;
            p[w] = parseInt(o[n]);
            if (!y) {
                var s = v.loss;
                if (q.check(true, u[n])) {
                    r[s] = parseInt(u[n])
                }
            }
        }
        var x = {ships: p, losses: r};
        return x
    },
    setShipCount4All: function (u) {
        var w = ogame.messages.combatreport;
        var v = u.ships;
        var A = w.check(true, u.losses) ? u.losses : {};
        var H = {};
        for (var y in v) {
            var F = v[y];
            var s = (w.check(true, A, {types: {0: "isEmpty"}}) && w.check(true, A[y])) ? A[y] : {};
            H[y] = w.getShipCountArray(F, s)
        }
        var B = {};
        var E = {};
        for (var x in H) {
            var G = H[x]["ships"];
            var C = H[x]["losses"];
            for (var D in G) {
                if (w.check(true, B[D])) {
                    B[D] = B[D] + G[D]
                } else {
                    B[D] = G[D]
                }
            }
            for (var D in C) {
                if (w.check(true, E[D])) {
                    E[D] = E[D] + C[D]
                } else {
                    E[D] = C[D]
                }
            }
        }
        var r = {ships: B, losses: E};
        w.setShipCount(r)
    },
    setShipCountByActiveMember: function (s, w, B, u, q) {
        u = u || 0;
        q = q || 1;
        var v = ogame.messages.combatreport;
        var E = {};
        var F = {};
        for (var D in w) {
            var r = w[D]["ownerName"];
            var C = w[D]["ownerCoordinates"];
            var A = w[D]["ownerPlanetType"];
            if (r == B) {
                for (var x in s.ships[D]) {
                    if (u !== 0) {
                        if (u == C && q == A) {
                            if (!(E.hasOwnProperty(x))) {
                                E[x] = s.ships[D][x]
                            } else {
                                E[x] = E[x] + s.ships[D][x]
                            }
                        }
                    } else {
                        if (!(E.hasOwnProperty(x))) {
                            E[x] = s.ships[D][x]
                        } else {
                            E[x] = E[x] + s.ships[D][x]
                        }
                    }
                }
                if (v.check(true, s.losses)) {
                    for (var x in s.losses[D]) {
                        if (u !== 0) {
                            if (u == C && q == A) {
                                if (!(F.hasOwnProperty(x))) {
                                    F[x] = parseInt(s.losses[D][x])
                                } else {
                                    F[x] = F[x] + parseInt(s.losses[D][x])
                                }
                            }
                        } else {
                            if (!(F.hasOwnProperty(x))) {
                                F[x] = parseInt(s.losses[D][x])
                            } else {
                                F[x] = F[x] + parseInt(s.losses[D][x])
                            }
                        }
                    }
                }
            }
        }
        if (v.check(true, E, {types: {0: "isEmpty"}})) {
            var y = v.getShipCountArray(E, F);
            v.setShipCount(y)
        }
    },
    setShipCount: function (k) {
        var h = ogame.messages.combatreport.data.combatside;
        var f = k.ships;
        var l = k.losses;
        if (!$.isEmptyObject(f)) {
            for (var g in f) {
                $(g).text(f[g].toString().replace(/\B(?=(\d{3})+(?!\d))/g, "."))
            }
        } else {
            $("." + h + " .ecke").text("0")
        }
        if (!$.isEmptyObject(l)) {
            for (var g in l) {
                $(g).text("-" + l[g].toString().replace(/\B(?=(\d{3})+(?!\d))/g, "."))
            }
        } else {
            $("." + h + " .lost_ships").text("-")
        }
    },
    getAllShipClasses: function (e) {
        var f = e.map(function () {
            var a = $(this).attr("class");
            return a
        }).get().join();
        var d = [];
        $.each(f.split(","), function (b, a) {
            var c = a.split(" ");
            d.push(c[1])
        });
        return d
    },
    displayShipData: function (k, l, m, p, o, h) {
        o = typeof o !== "undefined" ? o : 0;
        var n = ogame.messages.combatreport;
        if (n.check(true, k, {values: {isNot: {0: "all"}}})) {
            n.setShipCountByActiveMember(m, p, k, o, h)
        } else {
            n.setShipCount4All(n.data.combatRounds[l][n.data.combatRounds[l].length - 1])
        }
    },
    initCombatText: function (f) {
        var d = ogame.messages.combatreport;
        var e = f.combatRounds.length - 1;
        $(".combat_round_list .round_id").find("a").removeClass("active");
        $(".combat_round_list .round_id[data-round=" + e + "]").find("a").addClass("active");
        d.loadDataBySelectedRound(f.attackerJSON, f.defenderJSON, e)
    },
    setCombatText: function (v, G, s) {
        var x = ogame.messages.combatreport;
        var A = ".statistic_attacker";
        var u = ".statistic_defender";
        var C = ".hits";
        var I = ".strength";
        var E = ".absorbed";
        var J = 0;
        var B = 0;
        var H = 0;
        var F = 0;
        var w = 0;
        var D = 0;
        if (x.check(true, v, {length: s})) {
            for (var y in v) {
                J = J + parseInt(v[y]["statistic"]["hits"]);
                B = B + parseInt(v[y]["statistic"]["absorbedDamage"]);
                H = H + parseInt(v[y]["statistic"]["fullStrength"]);
                F = F + parseInt(G[y]["statistic"]["hits"]);
                w = w + parseInt(G[y]["statistic"]["absorbedDamage"]);
                D = D + parseInt(G[y]["statistic"]["fullStrength"])
            }
        } else {
            J = parseInt(v[s]["statistic"]["hits"]);
            B = parseInt(v[s]["statistic"]["absorbedDamage"]);
            H = parseInt(v[s]["statistic"]["fullStrength"]);
            F = parseInt(G[s]["statistic"]["hits"]);
            w = parseInt(G[s]["statistic"]["absorbedDamage"]);
            D = parseInt(G[s]["statistic"]["fullStrength"])
        }
        $(A + C).text(J.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "."));
        $(A + E).text(B.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "."));
        $(A + I).text(H.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "."));
        $(u + C).text(F.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "."));
        $(u + E).text(w.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "."));
        $(u + I).text(D.toString().replace(/\B(?=(\d{3})+(?!\d))/g, "."))
    },
    setCombatArray: function (f, g) {
        var e = jQuery.extend(true, {}, f);
        var h = ogame.messages.combatreport;
        h.data.combatside = g;
        h.data.memberSelection = false;
        if ($("#" + h.data.combatside + "_select_combatreport").find(":selected").length > 0) {
            h.data.memberSelection = true
        }
        if (h.data.memberSelection) {
            h.data.activeMember = "" + $("#" + h.data.combatside + "_select_combatreport").find(":selected").val()
        } else {
            h.data.activeMember = "" + $("#" + h.data.combatside + "_select_combatreport").data("memberName")
        }
        h.data.activeMember = h.data.activeMember.split("|", 1)[0];
        h.data.combatArray = e.member;
        h.data.combatRounds = [];
        h.data.combatRounds[g] = e.combatRounds
    },
    setCombatside: function (c) {
        var d = ogame.messages.combatreport;
        d.data.combatside = c
    },
    check: function (M, N, P) {
        var P = (P != null && typeof P != "undefined" && typeof P == "object") ? P : false;
        var F = false;
        var D = 0;
        var B = 0;
        var I = 0;
        var J = 0;
        var C = false;
        if (P != false) {
            var K = P.values != null && typeof P.values != "undefined" && typeof P.values == "object" ? P.values : {};
            var y = P.types != null && typeof P.types != "undefined" && typeof P.types == "object" ? P.types : {};
            var x = P.length != null && typeof P.length != "undefined" ? P.length : false;
            if (!jQuery.isEmptyObject(K)) {
                for (G in K) {
                    var O = K[G];
                    if (G == "is" && !jQuery.isEmptyObject(O)) {
                        for (var A in O) {
                            if (N != O[A]) {
                                D = D + 1
                            }
                        }
                    }
                    if (G == "isNot" && !jQuery.isEmptyObject(O)) {
                        for (var H in O) {
                            if (N == O[H]) {
                                D = D + 1
                            }
                        }
                    }
                }
            }
            if (!jQuery.isEmptyObject(y)) {
                if (y.isEmpty) {
                    if (jQuery.isEmptyObject(N)) {
                        B = B + 1
                    }
                }
                for (var G in y) {
                    if (typeof N == y[G]) {
                        B = B + 1
                    }
                }
            }
            if (typeof N == "object") {
                for (var G in N) {
                    if (typeof N[G] != "undefined") {
                        J = J + 1
                    }
                }
            } else {
                var L = N + "";
                J = L.length
            }
            if (x !== false && typeof x == "number" && typeof J == "number") {
                if (J != x) {
                    I = I + 1
                }
                C = true
            }
        }
        if (typeof N == "undefined" || N == null) {
            B = B + 1
        }
        var w = D + B;
        if (C != false) {
            w = w + I
        }
        if (w == 0) {
            F = true
        }
        var E = {
            success: F,
            allErrors: w,
            valueErrors: D,
            typeErrors: B,
            type: typeof N,
            length: J,
            lengthChecked: C,
            lengthError: I
        };
        if (M) {
            return F
        } else {
            return E
        }
    },
    loadData: function (e, f) {
        var d = ogame.messages.combatreport;
        d.setCombatArray(e, f);
        d.loadDataBySelectedCombatMember(e, f);
        d.setCombatValue()
    },
    loadDataBySelectedRound: function (E, F, B) {
        var A = ogame.messages.combatreport;
        var D = parseInt(B);
        var K = $(".attacker .participant_select option:selected").val();
        var G = $(".defender .participant_select option:selected").val();
        var J = $(".attacker .participant_select option:selected").data("coords");
        var L = $(".defender .participant_select option:selected").data("coords");
        var I = [];
        var H = [];
        if (typeof J != "undefined") {
            ids = K.split("|")[1].split(":");
            I.push(ids);
            K = K.split("|")[0]
        } else {
            if (K != "all" && typeof K != "undefined") {
                J = 0;
                $(".attacker .participant_select option").each(function () {
                    if (K == $(this).val().split("|")[0] && typeof $(this).val().split("|")[1] != "undefined") {
                        I.push($(this).val().split("|")[1].split(":"))
                    }
                })
            } else {
                I = []
            }
        }
        if (typeof L != "undefined") {
            ids = G.split("|")[1].split(":");
            H.push(ids);
            G = G.split("|")[0]
        } else {
            if (G != "all" && typeof G != "undefined") {
                L = 0;
                $(".defender .participant_select option").each(function () {
                    if (G == $(this).val().split("|")[0] && typeof $(this).val().split("|")[1] != "undefined") {
                        H.push($(this).val().split("|")[1].split(":"))
                    }
                })
            } else {
                H = []
            }
        }
        if (I.length > 0) {
            for (var x in E) {
                if (x == "combatRounds") {
                    for (var y in E[x][D]) {
                        if (y == "ships") {
                            for (var u in E[x][D][y]) {
                                var C = $.inArray(u, I[0]);
                                if (C == -1) {
                                    delete E[x][D][y][u]
                                }
                            }
                        }
                    }
                }
            }
        }
        if (H.length > 0) {
            for (var x in F) {
                if (x == "combatRounds") {
                    for (var y in F[x][D]) {
                        if (y == "ships") {
                            for (var u in F[x][D][y]) {
                                var C = $.inArray(u, H[0]);
                                if (C == -1) {
                                    delete F[x][D][y][u]
                                }
                            }
                        }
                    }
                }
            }
        }
        var w = E.combatRounds;
        var v = F.combatRounds;
        if (A.check(true, w, {length: B})) {
            D = D - 1
        }
        D = D + "";
        A.setCombatside("attacker");
        A.setShipCount4All(w[D]);
        A.setCombatside("defender");
        A.setShipCount4All(v[D]);
        if (A.data.memberSelection) {
        }
        A.setCombatText(w, v, B)
    },
    resetDropDowns: function () {
        $("#attacker_select_combatreport").val("all").ogameDropDown("refresh");
        $("#defender_select_combatreport").val("all").ogameDropDown("refresh")
    },
    loadDataBySelectedCombatMember: function (u, q, n, l) {
        var m = jQuery.extend(true, {}, u);
        n = n || 0;
        l = l || 1;
        var p = ogame.messages.combatreport;
        p.setCombatArray(m, q);
        var o = $("." + p.data.combatside + " .buildingimg");
        var r = $("." + p.data.combatside + " .defenseimg");
        o = $.merge(o, r);
        var s = p.getShipsByMembersAndCoords(p.data.activeMember, n, l);
        p.setActiveFlag4Fleet(o, s);
        p.displayShipData(p.data.activeMember, p.data.combatside, m.combatRounds[m.combatRounds.length - 1], m.member, n, l);
        p.setCombatValue()
    }
};
function closeDetails(f, d) {
    var e = $("#fleet" + f);
    e.children(".openDetails").children().children().attr("src", "/img/icons/de1e5f629d9e47d283488eee0c0ede.gif");
    e.children(".quantity").show();
    e.removeClass("detailsOpened");
    e.addClass("detailsClosed");
    currentMovementTabExtensionStates[f] = [0, d];
    updateCookieStatus(currentMovementTabExtensionStates)
}
function openDetails(f, d) {
    var e = $("#fleet" + f);
    e.children(".openDetails").children().children().attr("src", "/img/icons/577565fadab7780b0997a76d0dca9b.gif");
    e.children(".quantity").hide();
    e.removeClass("detailsClosed");
    e.addClass("detailsOpened");
    currentMovementTabExtensionStates[f] = [1, d];
    updateCookieStatus(currentMovementTabExtensionStates)
}
function updateCookieStatus(d) {
    var e = JSON.stringify(d);
    var f = JSON.stringify({expires: Math.round(new Date().getTime() / 1000) + 7 * 86400});
    $.cookie("tabBoxFleets", e, f)
}
function openCloseDetails(c, d) {
    if ($("#fleet" + c).attr("class") == "fleetDetails detailsOpened") {
        closeDetails(c, d)
    } else {
        openDetails(c, d)
    }
}
function hideTipsOnTabChange() {
    $("select").ogameDropDown("hide");
    Tipped.hideAll()
}
function changeTooltip(e, f) {
    var d = $(e);
    if (d.length == 0) {
        return
    }
    removeTooltip(d);
    d.attr("title", f);
    initTooltips(d)
}
function removeTooltip(d) {
    var c = $(d);
    c.each(function () {
        if ($(this).data("tooltipLoaded")) {
            $(this).data("tooltipLoaded", false);
            Tipped.remove($(this)[0])
        }
    })
}
function getTooltipOptions(d) {
    var f = $(d);
    var e = {
        skin: "cloud",
        maxWidth: 400,
        closeButton: false,
        hideOn: [{element: "self", event: "mouseleave"}, {
            element: "tooltip",
            event: "mouseenter"
        }]
    };
    if (window.location.href.indexOf("galaxy") !== -1) {
        e.maxWidth = 400
    }
    if (f.hasClass("tooltipPremium")) {
        e.skin = "premium"
    }
    if (f.hasClass("tooltipLeft")) {
        e.hook = {target: "leftmiddle", tooltip: "righttop"}
    } else {
        if (f.hasClass("tooltipRight")) {
            e.hook = {target: "rightmiddle", tooltip: "lefttop"}
        } else {
            if (f.hasClass("tooltipBottom")) {
                e.hook = {target: "bottommiddle", tooltip: "topmiddle"}
            }
        }
    }
    if (f.data("tooltip-width")) {
        e.maxWidth = f.data("tooltip-width")
    }
    if (isMobile || f.hasClass("tooltipClose")) {
        e.hideOthers = true;
        e.hideOn = false
    }
    e.afterUpdate = function (a, c) {
        if (isMobile && f.data("tooltip-button")) {
            var h = $(document.createElement("div")).addClass("tooltipButton");
            $(document.createElement("a")).addClass("btn_blue").attr("href", "javascript:void(0);").html(f.data("tooltip-button")).bind("click", function (g) {
                if ($(c).not("a") && $(c).find("a").length) {
                    c = $(c).find("a")[0]
                }
                var l = document.createEvent("MouseEvents");
                l.initMouseEvent("click", true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);
                c.dispatchEvent(l)
            }).appendTo(h);
            $(a).append(h)
        }
        if (isMobile || f.hasClass("tooltipClose")) {
            var b = $(document.createElement("div")).addClass("close-tooltip");
            $(a).prepend(b)
        }
        Tipped.refresh(c)
    };
    return e
}
function getTooltipSelector(e) {
    var f = ".tooltipPremium, .tooltip, .tooltipRight, .tooltipLeft, .tooltipBottom, .tooltipClose, .tooltipHTML, .tooltipRel, .tooltipAJAX, .tooltipCustom, .markItUpButton a";
    if (typeof(e) == "undefined") {
        e = f
    } else {
        if (typeof(e) == "string" && !e.match(/\.tooltip/)) {
            var g = f.split(", ");
            var h = e;
            for (i in g) {
                e += ", " + h + " " + g[i]
            }
        }
    }
    return e
}
function sanitizeTooltip(b) {
    return b.replace(/<\s*script/g, "&lt;script")
}
function initTooltips(d) {
    initTooltipSkins();
    d = getTooltipSelector(d);
    function f(b) {
        var o = {};
        var a = b.split("|");
        var c = $(document.createElement("h1")).html(a[0]);
        var n = $(document.createElement("div")).addClass("splitLine");
        if (typeof a[2] !== "undefined" && typeof a[3] !== "undefined") {
            var m = $(document.createElement("h1")).html(a[2]);
            var p = $(document.createElement("div")).addClass("splitLine");
            o = $(document.createElement("div")).css("display", "none").addClass("htmlTooltip").append(c).append(n).append(a[1] + "</br>").append(m).append(p).append(a[3])
        } else {
            o = $(document.createElement("div")).css("display", "none").addClass("htmlTooltip").append(c).append(n).append(a[1])
        }
        return o[0]
    }

    removeTooltip(d);
    function e(b) {
        var a = $(b);
        if (a.data("tooltipLoaded")) {
            return
        }
        a.data("tooltipLoaded", true);
        if (isMobile && a.hasClass("js_hideTipOnMobile")) {
            a.attr("title", "");
            return
        }
        var c = getTooltipOptions(a);
        if (a.hasClass("tooltipCustom")) {
            if (c.hideOn != false) {
                c.hideOn = [{
                    element: "self",
                    event: "mouseleave"
                }, {element: "tooltip", event: "mouseleave"}]
            }
            c.afterUpdate = function (h) {
                $(h).find(".tooltipCustom").each(function (g, m) {
                    var n = getTooltipOptions(a);
                    if ($(this).hasClass("tooltipHTML")) {
                        n.inline = true;
                        n.hideOthers = false;
                        Tipped.create(this, f(sanitizeTooltip($(this).attr("title"))), n)
                    } else {
                        n.hideOthers = false;
                        Tipped.create(this, sanitizeTooltip($(this).attr("title")), n)
                    }
                })
            }
        }
        if (a.hasClass("tooltipHTML")) {
            if (typeof(a.attr("title")) == "undefined" || a.attr("title").trim().length == 0) {
                return
            }
            Tipped.create(a[0], f(sanitizeTooltip(a.attr("title"))), c);
            return
        }
        if (a.hasClass("tooltipRel")) {
            c.inline = true;
            Tipped.create(a[0], a.attr("rel"), c);
            return
        }
        if (a.hasClass("tooltipAJAX")) {
            $.get(a.attr("rel"), {}, function (h) {
                Tipped.create(a[0], h, c)
            });
            return
        }
        if (typeof(a.attr("title")) == "undefined" || a.attr("title").trim().length == 0) {
            return
        }
        Tipped.create(a[0], sanitizeTooltip(a.attr("title")), c)
    }

    $(document).undelegate(d, "touchstart.tooltipClick").delegate(d, "touchstart.tooltipClick", function (a) {
        if (Tipped.visible(this)) {
            var b = document.createEvent("MouseEvents");
            b.initMouseEvent("click", true, true, window, 1, 0, 0, 0, 0, false, false, false, false, 0, null);
            this.dispatchEvent(b);
            a.preventDefault();
            a.stopPropagation()
        }
    });
    if (typeof(d) == "string") {
        $(document).undelegate(d, "mouseenter.tooltipLoad touchstart.tooltipLoad").delegate(d, "mouseenter.tooltipLoad touchstart.tooltipLoad", function (a) {
            e(this)
        })
    } else {
        $(d).each(function () {
            e(this)
        })
    }
}
$(function () {
    initTooltips()
});
function initTooltipSkins() {
    jQuery.extend(Tipped.Skins, {
        cloud: {
            border: {
                size: 1,
                color: [{position: 0, color: "#44576b"}, {
                    position: 1,
                    color: "#2f3b47"
                }]
            },
            background: {
                color: [{position: 0, color: "#303a46"}, {
                    position: 0.49,
                    color: "#242d38"
                }, {position: 0.81, color: "#10181f"}, {
                    position: 1,
                    color: "#0d1014"
                }]
            },
            offset: {x: 0, y: -1, mouse: {x: -12, y: -12}},
            stem: {height: 6, width: 11, offset: {x: 5, y: 5}, spacing: 0}
        },
        premium: {
            border: {
                size: 1,
                color: [{position: 0, color: "#000"}, {
                    position: 1,
                    color: "#000"
                }]
            },
            background: {
                color: [{
                    position: 0,
                    color: "#a3e4f0"
                }, {position: 0.15, color: "#1cbad7"}, {
                    position: 1,
                    color: "#0f78b1"
                }]
            },
            offset: {x: 0, y: -1, mouse: {x: -12, y: -12}},
            stem: {height: 6, width: 11, offset: {x: 5, y: 5}, spacing: 0}
        }
    })
}
function initTrader() {
    var d = false;
    var e = $.deparam.fragment();
    if (typeof(e.animation) != "undefined") {
        if (e.animation == "false") {
            d = true
        }
    }
    var f = {
        $link: null, $panel: null, close: function () {
            this.$panel.hide()
        }, setPanel: function () {
            this.$panel = $("#js_togglePanel" + traderObj.traderId.replace(/#div_trader/, ""))
        }, init: function (k) {
            var c = $(k + " .selectWrapper");
            k = k.replace(/#div_trader/, "");
            if (!c) {
                return
            }
            this.$link = $("#js_toggleLink" + k);
            this.$panel = $("#js_togglePanel" + k);
            var a = this.$panel;
            a.hide();
            this.$link.unbind("click.selectLink").bind("click.selectLink", function (g) {
                k = traderObj.traderId.replace(/#div_trader/, "");
                if ($(this).hasClass("honor")) {
                    return false
                }
                if (a.find("ul.active").has("li").length) {
                    a.toggle()
                }
                return false
            });
            $(".selectWrapper .source").unbind("click.selectPlanetOrMoon").bind("click.selectPlanetOrMoon", function (g) {
                f.selectPlanetOrMoon(this)
            });
            $("#" + a.attr("id")).find("li").unbind("click.selectSource").bind("click.selectSource", function (g) {
                traderObj.selectSource(this);
                return false
            });
            f.outerClick(c, a);
            var b = null, l = 8000;
            c.unbind("mouseout.closeSelect").bind("mouseout.closeSelect", function (g) {
                g = g || window.event;
                var h = (g.relatedTarget) ? g.relatedTarget : g.toElement;
                if (h == c || f.isChildOf(h, c)) {
                    return
                }
                b = setTimeout(function () {
                    a.hide()
                }, l)
            }).unbind("mouseover.clearTimeout").bind("mouseover.clearTimeout", function () {
                if (b) {
                    clearTimeout(b)
                }
            })
        }, isChildOf: function (a, b) {
            b = b[0];
            while (a && a != b) {
                a = a.parentNode
            }
            return a == b
        }, outerClick: function (b, a) {
            $("body").bind("click.outerClick", function (c) {
                if (!c) {
                    c = window.event
                }
                if (!($(c.target).closest(".selectWrapper") == b) && a.is(":visible") != false) {
                    a.toggle()
                }
            })
        }, selectPlanetOrMoon: function (b) {
            var o;
            if ($(b).hasClass("selected")) {
                return false
            }
            var p = "", a = null;
            if ($(b).hasClass("js_honor")) {
                $(traderObj.traderId + " .selectWrapper .source").removeClass("selected");
                $(traderObj.traderId + " .js_honor").addClass("selected");
                $(traderObj.traderId + " .toggleLink").addClass("honor");
                var p = '<img height="18" src="/img/icons/f35675179214f8f6f0f8d75740d7db.png" alt="' + loca.honorPoints + '"/><span class="option_source">' + loca.honorPoints + "</span>";
                $(traderObj.traderId + " .js_valSourcePlanet").html(p);
                $(traderObj.traderId + " .normalResource").hide();
                $(traderObj.traderId + " .honorResource").show();
                return false
            }
            var q = $(traderObj.traderId + " .togglePanel");
            var c = "planet";
            if ($(b).hasClass("js_moon")) {
                var n = 0;
                c = "moon";
                for (o in traderObj.planets) {
                    if (traderObj.planets[o].isMoon) {
                        n++
                    }
                }
                if (n == 0) {
                    return false
                }
            }
            var r = traderObj.planets[traderObj.current.planet];
            q.find("ul").hide().removeClass("active");
            q.find("ul." + c).show().addClass("active");
            $(traderObj.traderId + " .toggleLink").removeClass("honor");
            $(traderObj.traderId + " .selectWrapper .source").removeClass("selected");
            $(traderObj.traderId + " .js_" + c).addClass("selected");
            if ($(b).hasClass("js_moon") ? r.isMoon : !r.isMoon) {
                a = traderObj.current.planet
            } else {
                if (r.otherPlanet != null && typeof(traderObj.planets[r.otherPlanet]) != "undefined") {
                    a = r.otherPlanet
                } else {
                    a = q.find("ul." + c + " li:first").attr("id")
                }
            }
            $(traderObj.traderId + " .normalResource").show();
            $(traderObj.traderId + " .honorResource").hide();
            q.find("ul li#" + a).click();
            return false
        }, setToggleLink: function (b) {
            var c = traderObj.traderId.replace(/#div_trader/, ""), h = $(b).find("span"), a = traderObj.planets[$(b).attr("id")].name;
            if (a != h.text()) {
                h.attr("title", a.replace(/\|/g, "&#124;"))
            }
            this.$link = $("#js_toggleLink" + c);
            this.$link.html($(b).html())
        }
    };
    traderObj = {
        traderBGPos: {
            "#div_traderResources": "0px 0px",
            "#div_traderAuctioneer": "-546px 0px",
            "#div_traderScrap": "0px -220px",
            "#div_traderImportExport": "-546px -220px"
        },
        timer: 500,
        planets: {},
        honorOutput: 0,
        price: 0,
        deficit: 0,
        priceImportExport: 0,
        sumResources: 0,
        traderId: null,
        resources: ["Metal", "Crystal", "Deuterium"],
        current: {planet: currentPlanetId, resource: "", sliderValue: ""},
        barXPos: -180,
        barYPos: 0,
        percentPaid: 0,
        switchingTrader: false,
        checkOverbidden: function () {
            if (playerBid == false || playerBid >= getValue($(".detail_value.currentSum").html())) {
                $(".overbid_text").hide()
            } else {
                $(".overbid_text").show()
            }
        },
        refresh: function () {
            var c = traderObj.traderId;
            if ("#" + $(this).closest(".div_trader").attr("id") !== c) {
                return
            }
            var b = $(this).attr("class");
            var a = new RegExp(/\b(js_slider\w*)\b/);
            b = (a.test(b)) ? RegExp.$1 : false;
            if (!b) {
                return
            }
            traderObj.current.sliderValue = $(this).slider("value");
            traderObj.current.resource = b.replace("js_slider", "").toLowerCase();
            if (traderObj.current.resource == "honor") {
                traderObj.honorOutput = traderObj.current.sliderValue
            } else {
                traderObj.planets[traderObj.current.planet].output[traderObj.current.resource] = traderObj.current.sliderValue
            }
            formatNumber($(c + " .js_amount.js_" + traderObj.current.resource), traderObj.current.sliderValue);
            if (c == "#div_traderAuctioneer") {
                traderObj.price = getValue($(c + " .js_price").html());
                traderObj.sumAuctioneer();
                traderObj.checkOverbidden()
            } else {
                if (c == "#div_traderImportExport") {
                    traderObj.sumImportExport()
                }
            }
        },
        resetValues: function (b, c) {
            b = b || traderObj.traderId;
            c = c || false;
            for (var h in traderObj.planets) {
                for (var a in traderObj.planets[h].output) {
                    traderObj.planets[h].output[a] = 0
                }
            }
            traderObj.honorOutput = 0;
            $(".js_amount").val(0);
            if (traderObj.traderId == "#div_traderAuctioneer") {
                traderObj.sumAuctioneer()
            } else {
                if (traderObj.traderId == "#div_traderImportExport") {
                    traderObj.sumImportExport()
                }
            }
            if (c) {
                b = b.replace(/#div_trader/, "");
                $("#js_togglePanel" + b).find("li#" + currentPlanetId).click()
            }
            f.close()
        },
        resetMaxAmount: function (c, r) {
            var b = traderObj.traderId;
            var s = traderObj.resources;
            for (var o in traderObj.planets) {
                for (var p = 0; p < s.length; p++) {
                    var a = s[p].toLowerCase();
                    traderObj.planets[o].input[a] = c[o][a]
                }
            }
            for (var q = 0; q < s.length; q++) {
                a = s[q].toLowerCase();
                var u = traderObj.planets[traderObj.current.planet].input[a];
                $(b + " .max_planet_" + a).html(number_format(u, 0))
            }
            honorScore = r;
            $(b + " .max_planet_honor").html(number_format(Math.max(0, r), 0));
            f.close()
        },
        selectSource: function (a) {
            traderObj.current.planet = $(a).attr("id");
            f.close();
            f.setToggleLink($(a));
            var o = traderObj.traderId;
            var r = traderObj.current.planet;
            var s = traderObj.resources;
            for (var q = 0; q < s.length; q++) {
                var b = s[q].toLowerCase();
                var u = traderObj.planets[r].input[b];
                if (o == "#div_traderImportExport") {
                    var c = (traderObj.priceImportExport / multiplier[b]) - traderObj.sumResources + traderObj.planets[r].output[b];
                    var p = Math.min(u, c)
                }
                $(o + " .max_planet_" + b).html(number_format(u, 0));
                $(o + " .js_amount.js_" + b).val(number_format(traderObj.planets[r].output[b], 0))
            }
        },
        selectTrader: function (o, a, m) {
            a = a || traderObj.timer;
            $.bbq.pushState({page: o, animation: "false"});
            $(".planetlink, .moonlink").fragment({page: o, animation: "false"});
            traderObj.traderId = "#div_" + o;
            var n = traderObj.traderId, p = $(".back_to_overview");
            var c = function () {
                if (n == "#div_traderAuctioneer" || n == "#div_traderImportExport") {
                    traderObj.resetValues(null, true)
                }
                var g = function () {
                    $("#traderOverview").find(".c-left, .c-right").addClass("c-small");
                    p.show();
                    if (n == "#div_traderAuctioneer" || n == "#div_traderImportExport") {
                        p.addClass("left");
                        p.removeClass("right")
                    } else {
                        if (n == "#div_traderResources" || n == "#div_traderScrap") {
                            p.addClass("right");
                            p.removeClass("left")
                        }
                    }
                    $("#planet #header_text h2").html(loca[o]).parent().show()
                };
                if (animation && !d) {
                    $("#traderOverview").find(".c-left, .c-right").hide();
                    $("#planet").animate({
                        backgroundPosition: traderObj.traderBGPos[n],
                        height: "250px"
                    }, a, function () {
                        $("#planet").addClass("detail");
                        $("#traderOverview").find(".c-left, .c-right").show();
                        g();
                        if (n == "#div_traderResources") {
                            showTradeNowButton()
                        }
                    })
                } else {
                    d = false;
                    $("#planet").css("background-position", traderObj.traderBGPos[n]).css("height", "250px");
                    g();
                    if (n == "#div_traderResources") {
                        showTradeNowButton()
                    }
                }
                f.setPanel();
                $("#planet").addClass("detail");
                $(".js_trader").hide();
                $(n).show();
                if (n == "#div_traderResources" && typeof(m) != "undefined") {
                    $(n + " .ui-tabs").tabs("option", "active", m)
                }
                traderObj.switchingTrader = false
            };
            if ($(traderObj.traderId).length == 0) {
                var b = o.toLowerCase().replace(/^trader/, "");
                $.ajax({
                    url: traderUrl,
                    type: "POST",
                    data: {show: b, ajax: 1},
                    beforeSend: function () {
                        $("#loadingOverlay").addClass(b).show()
                    },
                    success: function (g) {
                        $("#inhalt").append(g);
                        $("#loadingOverlay").hide().removeClass(b);
                        c()
                    },
                    error: function () {
                        fadeBox(loca.error, true);
                        $("#loadingOverlay").hide().removeClass(b)
                    }
                })
            } else {
                c()
            }
        },
        submitAuction: function () {
            var c = traderObj.traderId;
            var b = getValue($(c + " .js_auctioneerSum").html());
            if (!$(c + " .right_box .pay").hasClass("disabled") && traderObj.price > 0 && traderObj.deficit <= 0) {
                $(c + " .right_box .pay").addClass("disabled");
                var h = {planets: {}, honor: traderObj.honorOutput};
                for (var a in traderObj.planets) {
                    h.planets[a] = traderObj.planets[a].output
                }
                $.ajax({
                    url: auctionUrl,
                    type: "POST",
                    data: {bid: h, token: auctioneerToken, ajax: 1},
                    dataType: "json",
                    success: function (g) {
                        auctioneerToken = g.newToken;
                        fadeBox(g.message, g.error);
                        if (!g.error) {
                            traderObj.resetValues(c, false);
                            traderObj.resetMaxAmount(g.planetResources, g.honor);
                            traderObj.reloadResources()
                        }
                    },
                    error: function () {
                        fadeBox(loca.error, true)
                    }
                })
            }
            return false
        },
        submitImportExport: function () {
            if (!$(traderObj.traderId + " .right_box .pay").hasClass("disabled")) {
                $(traderObj.traderId + " .right_box .pay").addClass("disabled");
                var a = {planets: {}, honor: traderObj.honorOutput};
                for (planetId in traderObj.planets) {
                    a.planets[planetId] = traderObj.planets[planetId].output
                }
                $.ajax({
                    url: importUrl,
                    type: "POST",
                    data: {
                        action: "trade",
                        bid: a,
                        token: importToken,
                        ajax: 1
                    },
                    dataType: "json",
                    success: function (b) {
                        importToken = b.newToken;
                        fadeBox(b.message, b.error);
                        if (!b.error) {
                            for (planetId in traderObj.planets) {
                                traderObj.planets[planetId].output = {
                                    metal: 0,
                                    crystal: 0,
                                    deuterium: 0
                                }
                            }
                            $(traderObj.traderId + " .bargain_overlay").show();
                            $(traderObj.traderId + " .payment").hide();
                            $(traderObj.traderId + " .image_140px a").addClass("slideIn");
                            traderObj.reloadResources();
                            traderObj.updateImportItem(b.item);
                            traderObj.refresh()
                        }
                    },
                    error: function () {
                        fadeBox(loca.error, true)
                    }
                })
            }
            return false
        },
        reloadResources: function (a) {
            getAjaxResourcebox(a)
        },
        changeImportItem: function () {
            if ($(traderObj.traderId + " .import_bargain.change").hasClass("disabled")) {
                if (darkMatter < importChangeCost) {
                    errorBoxDecision(LocalizationStrings.error, loca.errorNotEnoughDM, LocalizationStrings.yes, LocalizationStrings.no, redirectPremium)
                }
            } else {
                $(traderObj.traderId + " .import_bargain.change").addClass("disabled");
                $.ajax({
                    url: importUrl,
                    type: "POST",
                    data: {action: "bargain", token: importToken, ajax: 1},
                    dataType: "json",
                    success: function (a) {
                        importToken = a.newToken;
                        fadeBox(a.message, a.error);
                        if (!a.error) {
                            traderObj.updateImportItem(a.item);
                            traderObj.reloadResources(function () {
                                if (a.item.offersLeft > 0 && darkMatter >= importChangeCost) {
                                    $(traderObj.traderId + " .import_bargain.change").removeClass("disabled")
                                } else {
                                    $(traderObj.traderId + " .import_bargain.change").addClass("disabled")
                                }
                            });
                            traderObj.refresh()
                        }
                    },
                    error: function () {
                        fadeBox(loca.error, true)
                    }
                })
            }
            return false
        },
        updateImportItem: function (a) {
            $(traderObj.traderId + " .got_item_text").html(a.itemText);
            $(traderObj.traderId + " .bargain_text").html(a.bargainText);
            $(traderObj.traderId + " .bargain_cost").html(a.bargainCostText);
            importChangeCost = a.bargainCost;
            $(traderObj.traderId + " .image_140px img").attr("src", "/img/icons/items/" + a.image + "-140x.png");
            removeTooltip($(traderObj.traderId + " .image_140px a"));
            $(traderObj.traderId + " .image_140px a").attr("ref", a.uuid).removeClass("tooltip").addClass("tooltipHTML").attr("title", a.tooltip);
            initTooltips($(traderObj.traderId + " .image_140px a"));
            $(traderObj.traderId + " .detail_button .amount").text(a.amount)
        },
        takeImportItem: function () {
            if (!$(traderObj.traderId + " .import_bargain.take").hasClass("disabled")) {
                $(traderObj.traderId + " .import_bargain.change").addClass("disabled");
                $(traderObj.traderId + " .import_bargain.take").addClass("disabled");
                $(traderObj.traderId + " .import_bargain.change").addClass("hidden");
                $(traderObj.traderId + " .import_bargain.take").addClass("hidden");
                $(traderObj.traderId + " .bargain_cost").addClass("hidden");
                $.ajax({
                    url: importUrl,
                    type: "POST",
                    data: {action: "takeItem", token: importToken, ajax: 1},
                    dataType: "json",
                    success: function (a) {
                        importToken = a.newToken;
                        fadeBox(a.message, a.error);
                        if (!a.error) {
                            var b = a.item.ref;
                            changeTooltip($(".detail_button[ref='" + b + "']"), a.item.title);
                            $(".detail_button[ref='" + b + "'] span.amount, #itemDetails[data-uuid='" + b + "'] span.amount").html(tsdpkt(a.item.amount));
                            if (a.item.canBeActivated) {
                                $('#itemDetails[data-uuid="' + b + '"] a.activateItem').removeClass("build-it_disabled").addClass("build-it")
                            } else {
                                $('#itemDetails[data-uuid="' + b + '"] a.activateItem').addClass("build-it_disabled").removeClass("build-it")
                            }
                            if (a.item.newOffer == false) {
                                $(traderObj.traderId + " .bargain_text").html(a.item.noOfferMessage)
                            } else {
                                traderObj.resetImport(a.item.newOffer)
                            }
                        }
                    },
                    error: function () {
                        fadeBox(loca.error, true)
                    }
                })
            }
            return false
        },
        resetImport: function (a) {
            importChangeCost = a.bargainCost;
            if (darkMatter >= importChangeCost) {
                $(traderObj.traderId + " .import_bargain.change").removeClass("disabled")
            } else {
                $(traderObj.traderId + " .import_bargain.change").addClass("disabled")
            }
            $(traderObj.traderId + " .import_bargain.take").removeClass("disabled");
            $(traderObj.traderId + " .import_bargain.change").removeClass("hidden");
            $(traderObj.traderId + " .import_bargain.take").removeClass("hidden");
            $(traderObj.traderId + " .bargain_cost").removeClass("hidden");
            $(traderObj.traderId + " .bargain_overlay").hide();
            $(traderObj.traderId + " .payment").show();
            $(traderObj.traderId + " .image_140px img").attr("src", "/cdn/img/trader/container_" + a.rarity + ".jpg");
            $(traderObj.traderId + " .image_140px a").removeClass("slideIn").attr("ref", "").removeClass("tooltipHTML").addClass("tooltip").removeClass("r_common_140px").removeClass("r_uncommon_140px").removeClass("r_rare_140px").removeClass("r_epic_140px").removeClass("r_buddy_140px").addClass("r_" + a.rarity + "_140px");
            changeTooltip($(traderObj.traderId + " .image_140px a"), a.tooltip);
            $(traderObj.traderId + " .js_import_price").removeClass("green_text").text(number_format(a.price, 0));
            $(traderObj.traderId + " .image_140px .amount").text("?");
            traderObj.priceImportExport = getValue($(".js_import_price").html());
            traderObj.resetValues(null, true);
            traderObj.init()
        },
        sumAuctioneer: function () {
            var k = traderObj.traderId;
            var a = traderObj.price;
            if (a == 0) {
                $("#div_traderAuctioneer .js_amount").attr("disabled", "disabled")
            } else {
                $("#div_traderAuctioneer .js_amount").removeAttr("disabled")
            }
            var c = 0;
            for (var b in traderObj.planets) {
                var l = traderObj.planets[b].output;
                c += parseInt(l.metal) * multiplier.metal + parseInt(l.crystal) * multiplier.crystal + parseInt(l.deuterium) * multiplier.deuterium
            }
            c += parseInt(traderObj.honorOutput) * multiplier.honor;
            c = Math.floor(c);
            traderObj.deficit = (Number(auctioneer.calculateDeficit()) - Number(c));
            if (traderObj.deficit > 0) {
                $(" .js_deficit").html(number_format(traderObj.deficit, 0))
            } else {
                $(" .js_deficit").html(number_format(0, 0))
            }
            if (c > 0) {
                $("#div_traderAuctioneer .js_auctioneerSum").html("+ " + number_format(c, 0))
            } else {
                $("#div_traderAuctioneer .js_auctioneerSum").html("")
            }
            $("#div_traderAuctioneer .js_alreadyBidden").html(number_format(Math.floor(playerBid + c), 0));
            if (a > 0 && traderObj.deficit <= 0) {
                $("#div_traderAuctioneer .right_box .pay").removeClass("disabled")
            } else {
                $("#div_traderAuctioneer .right_box .pay").addClass("disabled")
            }
        },
        sumImportExport: function () {
            var n = traderObj.traderId;
            var m = 0;
            var a = 0;
            var b = 0;
            traderObj.sumResources = 0;
            for (var c in traderObj.planets) {
                var o = traderObj.planets[c].output;
                m += parseInt(o.metal) * multiplier.metal;
                a += parseInt(o.crystal) * multiplier.crystal;
                b += parseInt(o.deuterium) * multiplier.deuterium
            }
            var p = traderObj.honorOutput * multiplier.honor;
            traderObj.sumResources += m + a + b + p;
            if (traderObj.sumResources >= traderObj.priceImportExport) {
                traderObj.sumResources = traderObj.priceImportExport
            }
            $(n + " .js_sum_price").html(number_format(Math.floor(traderObj.sumResources), 0));
            if (traderObj.sumResources >= traderObj.priceImportExport) {
                $(n + " .js_import_price").addClass("green_text");
                $(n + " .right_box .pay").removeClass("disabled")
            } else {
                $(n + " .js_import_price").removeClass("green_text");
                $(n + " .right_box .pay").addClass("disabled")
            }
        },
        updateValues: function (w) {
            var c = traderObj.traderId;
            if (c !== "#" + w.closest(".div_trader").attr("id")) {
                return
            }
            var r = w.attr("class");
            var a = new RegExp(/\b(js_slider\w*)\b/);
            r = (a.test(r)) ? RegExp.$1 : false;
            if (!r) {
                return
            }
            var s = traderObj.current.planet;
            var p, b, v;
            if (r.indexOf("More") != -1) {
                v = r.replace("More", "");
                p = "More"
            } else {
                if (r.indexOf("Max") != -1) {
                    v = r.replace("Max", "");
                    p = "Max"
                }
            }
            traderObj.current.resource = v.replace("js_slider", "").toLowerCase() || null;
            var u = traderObj.current.resource;
            var q = 0;
            if (u == "honor") {
                q = Math.max(0, honorScore)
            } else {
                q = traderObj.planets[s].input[u]
            }
            b = getValue($(c + " ." + v + "Input").val());
            if (p == "More") {
                if (c == "#div_traderImportExport") {
                    if (traderObj.sumResources <= traderObj.priceImportExport - 1000 * multiplier[u]) {
                        b += 1000
                    } else {
                        if (traderObj.sumResources < traderObj.priceImportExport) {
                            b += Math.ceil((traderObj.priceImportExport - traderObj.sumResources) / multiplier[u])
                        }
                    }
                } else {
                    if (c == "#div_traderAuctioneer" && traderObj.price > 0) {
                        b += 1000
                    }
                }
                if (b >= q) {
                    b = Math.max(0, q)
                }
            } else {
                if (p == "Max") {
                    if (c == "#div_traderImportExport") {
                        if (traderObj.sumResources == 0) {
                            b = Math.min(q, Math.ceil(traderObj.priceImportExport / multiplier[u]))
                        } else {
                            if (traderObj.sumResources.isBetween(0, traderObj.priceImportExport - 1)) {
                                b = Math.min(q, b + Math.ceil((traderObj.priceImportExport - traderObj.sumResources) / multiplier[u]));
                                b = Math.max(0, b)
                            }
                        }
                    } else {
                        if (c == "#div_traderAuctioneer" && traderObj.price > 0) {
                            b = Math.min(q, Math.ceil(getValue($(c + " .js_deficit").html()) / multiplier[u] + b))
                        }
                    }
                    if (u == "honor" && b < 0) {
                        b = 0
                    }
                }
            }
            $(c + " .js_amount." + v + "Input").val(number_format(b, 0));
            if (u == "honor") {
                traderObj.honorOutput = b
            } else {
                traderObj.planets[s].output[u] = b
            }
            if (c == "#div_traderImportExport") {
                traderObj.sumImportExport()
            } else {
                if (c == "#div_traderAuctioneer" && traderObj.price > 0) {
                    traderObj.sumAuctioneer();
                    traderObj.checkOverbidden()
                }
            }
        },
        updateValuesInputCanged: function (B) {
            var c = traderObj.traderId;
            if (c !== "#" + B.closest(".div_trader").attr("id")) {
                return
            }
            var v = B.attr("class");
            var a = new RegExp(/\b(js_slider\w*)\b/);
            v = (a.test(v)) ? RegExp.$1 : false;
            if (!v) {
                return
            }
            var A = v.replace("Input", "");
            var x = A.replace("js_slider", "").toLowerCase();
            var w = traderObj.current.planet;
            var u = 0;
            if (x == "honor") {
                u = Math.max(0, honorScore)
            } else {
                u = parseInt(traderObj.planets[w].input[x])
            }
            var b = 0;
            if (c == "#div_traderImportExport") {
                var s = 0;
                for (var r in traderObj.planets) {
                    var y = traderObj.planets[r].output;
                    if (x != "metal") {
                        s += Math.floor(parseInt(y.metal) * multiplier.metal)
                    }
                    if (x != "crystal") {
                        s += Math.floor(parseInt(y.crystal) * multiplier.crystal)
                    }
                    if (x != "deuterium") {
                        s += Math.floor(parseInt(y.deuterium) * multiplier.deuterium)
                    }
                }
                b = Math.min(getValue(B.val()), Math.ceil((traderObj.priceImportExport - s) / multiplier[x]))
            } else {
                if (c == "#div_traderAuctioneer") {
                    b = getValue(B.val())
                }
            }
            b = Math.min(b, u);
            traderObj.planets[w].output[x] = b;
            if (x == "honor") {
                traderObj.honorOutput = b
            } else {
                traderObj.planets[w].output[x] = b
            }
            if (c == "#div_traderImportExport") {
                traderObj.sumImportExport()
            } else {
                if (c == "#div_traderAuctioneer") {
                    traderObj.sumAuctioneer();
                    traderObj.checkOverbidden()
                }
            }
            formatNumber(c + " .js_amount." + A + "Input", b)
        },
        init: function () {
            $(".honorResource").hide();
            $("#menuTable a.trader").unbind("click.gotoTrader").bind("click.gotoTrader", function (a) {
                a.preventDefault();
                traderObj.switchTrader("traderResources")
            });
            $(window).unbind("hashchange.switchTrader").bind("hashchange.switchTrader", function (a) {
                var b = $.deparam.fragment(a.fragment);
                if (typeof(b.page) == "undefined" || b.page == "" && traderObj.traderId != null) {
                    traderObj.returnToOverview()
                } else {
                    traderObj.switchTrader(b.page)
                }
            });
            $(".small_back_to_overview").unbind("mouseenter").unbind("mouseout").bind("mouseenter", function () {
                $("#header_text").css("background-position", "0 -250px")
            }).bind("mouseout", function () {
                $("#header_text").css("background-position", "0 0")
            })
        },
        initSliderTrader: function (a) {
            $(a + " .js_valButton").unbind("click.valControl");
            $(a + " .js_amount").unbind("keyup.inputVal");
            f.init(a);
            $(a + " .js_valButton").bind("click.valControl", function (b) {
                traderObj.updateValues($(this));
                b.stopPropagation()
            });
            $(a + " .js_amount").bind("keyup.inputVal", function (b) {
                traderObj.updateValuesInputCanged($(this));
                b.stopPropagation()
            })
        },
        initImportExport: function () {
            traderObj.planets = planetResources;
            traderObj.priceImportExport = getValue($(".js_import_price").html());
            traderObj.initSliderTrader("#div_traderImportExport");
            $("#div_traderImportExport .right_box .pay").bind("click", function () {
                traderObj.submitImportExport()
            });
            $("#div_traderImportExport .import_bargain.change").bind("click", function () {
                traderObj.changeImportItem()
            });
            $("#div_traderImportExport .import_bargain.take").bind("click", function () {
                traderObj.takeImportItem()
            })
        },
        switchTrader: function (a) {
            if (traderObj.switchingTrader) {
                return
            }
            traderObj.switchingTrader = true;
            Tipped.hideAll();
            $("#planet .close_details:visible").click();
            if ("#div_" + a == traderObj.traderId) {
                return
            }
            if (traderObj.traderId != null || a == "" || a == null) {
                traderObj.returnToOverview();
                if (animation && !d) {
                    setTimeout(function () {
                        traderObj.selectTrader(a)
                    }, 500)
                } else {
                    traderObj.selectTrader(a)
                }
            } else {
                traderObj.selectTrader(a)
            }
        },
        returnToOverview: function () {
            Tipped.hideAll();
            $("#planet #header_text h2").empty().parent().hide();
            $("#traderOverview").find(".c-left, .c-right").hide();
            var a = traderObj.traderId;
            if (!a) {
                return
            }
            $(a).hide();
            $("#callTrader").hide();
            if (animation && !d) {
                $("#planet h2").hide();
                $("#planet").animate({
                    backgroundPosition: "-273px 0px",
                    height: "470px"
                }, 500, function () {
                    $("#planet h2").show();
                    $("#planet").removeClass("detail");
                    $("#traderOverview").find(".c-left, .c-right").show();
                    $(".js_trader").show()
                })
            } else {
                $("#planet").removeClass("detail").css("background-position", "-273px 0px").css("height", "470px");
                $(".js_trader").show()
            }
            $("#planet a").show();
            $("#planet .back_to_overview").hide();
            removeTooltip($("#planet .back_to_overview"));
            $("#traderOverview").find(".c-left, .c-right").removeClass("c-small");
            traderObj.traderId = null;
            traderObj.switchingTrader = false
        }
    };
    breakerObj = {
        costs: null,
        offer: null,
        ships: {},
        locked: false,
        lastTechId: null,
        initialize: function () {
            this.offer = parseInt($(".scrap_offer_amount").html());
            this.costs = breakerCosts;
            var a = this;
            $("#js_anythingSliderShips, #js_anythingSliderDefense").anythingSlider({
                startStopped: true,
                buildStartStop: false,
                expand: true,
                resizeContents: false,
                theme: "default",
                infiniteSlides: false,
                autoPlay: false,
                easing: "swing",
                resizeContents: true,
                stopAtEnd: true,
                playRtl: isRTLEnabled,
                buildNavigation: false,
                onInitialized: function (u, y) {
                    if (isMobile) {
                        var x = 1000, v = 50, s = 0, c = 0, w = "ontouchend" in document, b = (w) ? "touchstart" : "mousedown", r = (w) ? "touchmove" : "mousemove", A = (w) ? "touchend" : "mouseup";
                        y.$window.bind(b, function (g) {
                            c = (new Date()).getTime();
                            s = g.originalEvent.touches ? g.originalEvent.touches[0].pageX : g.pageX
                        }).bind(A, function (g) {
                            c = 0;
                            s = 0
                        }).bind(r, function (h) {
                            h.preventDefault();
                            var g = h.originalEvent.touches ? h.originalEvent.touches[0].pageX : h.pageX, k = (s === 0) ? 0 : Math.abs(g - s), l = (new Date()).getTime();
                            if (c !== 0 && l - c < x && k > v) {
                                if (g < s) {
                                    y.goForward()
                                }
                                if (g > s) {
                                    y.goBack()
                                }
                                c = 0;
                                s = 0
                            }
                        })
                    }
                }
            });
            $("#js_anythingSliderDefense").parent().parent().hide();
            $(".scrap_defense").bind("click.tabDefense", function () {
                $(".scrap_ships").removeClass("selected");
                $(this).addClass("selected");
                $("#js_anythingSliderShips").parent().parent().hide();
                $("#js_anythingSliderDefense").parent().parent().show()
            });
            $(".scrap_ships").bind("click.tabShips", function () {
                $(".scrap_defense").removeClass("selected");
                $(this).addClass("selected");
                $("#js_anythingSliderDefense").parent().parent().hide();
                $("#js_anythingSliderShips").parent().parent().show()
            });
            $(".buildingimg a").each(function () {
                var h = $(this).attr("ref").substr(6, 3);
                var b = $(this).find(".level");
                var c = b.contents().filter(function () {
                    return this.nodeType == 3
                });
                a.ships[h] = c.text().replace(/^\s+|\s+$/g, "");
                c.remove();
                b.append(tsdpkt(a.ships[h]))
            });
            $("#js_scrapBargain").unbind("click").bind("click", function () {
                if (!$(this).hasClass("disabled")) {
                    a.bargain(a)
                }
                return false
            });
            $("#js_scrapScrapIT").unbind("click").bind("click", function () {
                if (!$(this).hasClass("disabled")) {
                    a.trade(a)
                }
                return false
            });
            $("input.ship_amount").unbind("focus").bind("focus", function () {
                a.lastTechId = $(this).attr("name").substr(2, 3);
                $(this).val("")
            });
            $("input.ship_amount").unbind("keyup change").bind("keyup change", function (c) {
                a.lastTechId = $(this).attr("name").substr(2, 3);
                formatNumber(this, $(this).val());
                var b = $(this);
                clearTimeout(b.data("timer"));
                b.data("timer", setTimeout(function () {
                    b.removeData("timer");
                    a.updateResources(a)
                }, 300))
            });
            $(".buildingimg a").unbind("click").bind("click", function () {
                return false
            });
            $(".js_maxShips").unbind("click").bind("click", function () {
                if (!isMobile) {
                    $($(this).attr("ref")).focus()
                }
                var b = a.ships[$(this).attr("ref").substr(6, 3)];
                $($(this).attr("ref")).val(tsdpkt(b)).trigger("change");
                a.updateResources(a);
                return false
            });
            $(".sendAll").unbind("click").bind("click", function () {
                $(".anythingSlider ul:visible input").each(function () {
                    a.lastTechId = $(this).attr("name").substr(2, 3);
                    var b = a.ships[a.lastTechId];
                    $(this).val(tsdpkt(b))
                });
                a.updateResources(a, function (b) {
                    if (b.error) {
                        $(".anythingSlider ul:visible input").val("");
                        $("#div_traderScrap .resource_amount").text(0);
                        a.checkShips(a)
                    }
                })
            });
            $(".sendNone").unbind("click").bind("click", function () {
                $(".anythingSlider ul:visible input").each(function () {
                    a.lastTechId = $(this).attr("name").substr(2, 3);
                    $(this).val("")
                });
                a.updateResources(a)
            });
            $("#js_bargainCost").text(tsdpkt(this.costs));
            this.checkMoney(this);
            this.checkShips(this);
            this.updateBargain(this)
        },
        bargain: function (a) {
            $("#js_scrapBargain").addClass("disabled");
            $.ajax({
                url: breakerCallLink,
                type: "POST",
                dataType: "json",
                data: {bargain: 1, token: breakerToken},
                beforeSend: function () {
                    a.lock(a)
                },
                success: function (b) {
                    a.unlock(a);
                    breakerToken = b.newToken;
                    fadeBox(b.message, b.error);
                    if (!b.error) {
                        a.costs = b.bargainPrice;
                        a.offer = b.percentage;
                        darkMatter = b.resources.dm;
                        a.updateBargain(a);
                        a.updateResources(a);
                        traderObj.reloadResources(function () {
                            a.checkMoney(a);
                            Tipped.show($("#js_scrapBargain")[0])
                        })
                    }
                    $(".scrap_trader_quote").text(b.quote)
                },
                error: function () {
                    a.unlock(a)
                }
            })
        },
        trade: function (a) {
            a.lock(a);
            var b = a.getTradeArray();
            var c = function c() {
                var k = loca.breakerQuestion + '<br/><br/><div style="text-align: left; margin-left: 30px">';
                var l = 0;
                $.each(b, function (g) {
                    k += this + "x " + loca.shipNames[g] + ", ";
                    l++;
                    if (l % 2 == 0) {
                        k += "<br/>"
                    }
                });
                k = k.replace(/, (<br\/>)?$/, "");
                k += "</div>";
                return k
            };
            errorBoxDecision(loca.breaker, c(), LocalizationStrings.yes, LocalizationStrings.no, function () {
                $.ajax({
                    url: breakerCallLink,
                    type: "POST",
                    dataType: "json",
                    data: {
                        lastTechId: a.lastTechId,
                        finishTrade: 1,
                        trade: b,
                        token: breakerToken
                    },
                    success: function (h) {
                        a.unlock(a);
                        breakerToken = h.newToken;
                        if (h.error) {
                            fadeBox(h.message, true)
                        } else {
                            fadeBox(h.message, false);
                            a.offer = h.percentage;
                            a.costs = h.bargainPrice;
                            a.resetForm();
                            a.updateBargain(a);
                            $("#js_scrapAmountMetal").html(0);
                            $("#js_scrapAmountCrystal").html(0);
                            $("#js_scrapAmountDeuterium").html(0);
                            traderObj.reloadResources(function () {
                                a.updateShips(a)
                            })
                        }
                        $(".scrap_trader_quote").text(h.quote)
                    },
                    error: function () {
                        a.unlock(a);
                        fadeBox(loca.error, true)
                    }
                })
            }, function () {
                a.unlock(a)
            })
        },
        updateResources: function (b, a) {
            if (b.locked) {
                return
            }
            $.ajax({
                url: breakerCallLink,
                type: "POST",
                dataType: "json",
                data: {
                    lastTechId: b.lastTechId,
                    trade: b.getTradeArray(),
                    token: breakerToken
                },
                beforeSend: function () {
                    b.lock(b)
                },
                success: function (c) {
                    breakerToken = c.newToken;
                    if (c.error) {
                        fadeBox(c.message, true)
                    }
                    b.locked = false;
                    var k = false;
                    for (var l in c.techAmount) {
                        $("#ship_" + l).val(tsdpkt(c.techAmount[l]));
                        if (!k && $("#ship_" + l).val() != b.ships[l]) {
                            k = true
                        }
                    }
                    $("#js_scrapAmountMetal").html(tsdpkt(c.resources.metal));
                    $("#js_scrapAmountCrystal").html(tsdpkt(c.resources.crystal));
                    $("#js_scrapAmountDeuterium").html(tsdpkt(c.resources.deuterium));
                    if (!b.notFirstOffer) {
                        $(".scrap_trader_quote").text(loca.breakerFirstOffer);
                        b.notFirstOffer = true
                    }
                    if (k) {
                        b.updateShips(b)
                    } else {
                        b.unlock(b)
                    }
                    if (typeof(a) == "function") {
                        a(c)
                    }
                },
                error: function () {
                    b.unlock(b)
                }
            })
        },
        updateShips: function (a) {
            $.ajax({
                url: techUrl,
                type: "POST",
                dataType: "json",
                beforeSend: function () {
                    a.lock(a)
                },
                success: function (b) {
                    $("#div_traderScrap .item").each(function () {
                        var n = $(this).attr("id").substr(6, 3);
                        if (typeof(b[n]) != "undefined") {
                            var m = 0;
                            if (b[n] != null) {
                                m = getValue(b[n])
                            }
                            a.ships[n] = m;
                            var c = $(this).find(".level");
                            c.contents().filter(function () {
                                return this.nodeType == 3
                            }).remove();
                            c.append(tsdpkt(m));
                            if (b[n] != null) {
                                var l = $("#button" + n);
                                l.removeClass("on").removeClass("off");
                                if (m > 0) {
                                    l.addClass("on")
                                } else {
                                    l.addClass("off")
                                }
                            }
                        }
                    });
                    a.unlock(a)
                },
                error: function () {
                    a.unlock(a)
                }
            })
        },
        getTradeArray: function () {
            var a = {};
            $("input.ship_amount").each(function () {
                var b = $(this).attr("name").substr(2, 3);
                if (getValue($(this).val()) != 0) {
                    a[b] = getValue($(this).val())
                }
            });
            return a
        },
        resetForm: function () {
            $("input.ship_amount").each(function () {
                $(this).val("0")
            });
            removeTooltip($("#js_scrapBargain"));
            $("#js_scrapBargain").removeClass("tooltip").removeAttr("title")
        },
        checkMoney: function (a) {
            if (darkMatter < a.costs) {
                $("#js_scrapBargain").addClass("disabled")
            } else {
                if (breakerMaximumPercent <= a.offer) {
                    $("#js_scrapBargain").addClass("disabled").addClass("tooltip").attr("title", loca.infoMaxBargain);
                    initTooltips($("#js_scrapBargain"))
                } else {
                    $("#js_scrapBargain").removeClass("disabled")
                }
            }
        },
        checkShips: function (a) {
            var b = false;
            $("input.ship_amount").each(function () {
                if ($(this).val().length > 0 && getValue($(this).val()) > 0) {
                    b = true
                }
            });
            if (!b) {
                $("#js_scrapScrapIT").addClass("disabled")
            } else {
                $("#js_scrapScrapIT").removeClass("disabled")
            }
        },
        updateBargain: function (a) {
            $(".scrap_offer_amount").css("height", a.offer / 100 * $(".scrap_offer_amount").parent().css("height").replace("px", ""));
            $(".scrap_offer_amount").html(a.offer + "%");
            $(".js_bargainCost").text(tsdpkt(a.costs))
        },
        lock: function (a) {
            $("#js_scrapBargain").addClass("disabled");
            $("#js_scrapScrapIT").addClass("disabled");
            a.locked = true
        },
        unlock: function (a) {
            a.locked = false;
            a.checkShips(a);
            a.checkMoney(a)
        }
    };
    auctioneer = {
        socket: null,
        connected: false,
        timeout: null,
        retryInterval: 5000,
        historyShown: false,
        initConnection: function () {
            try {
                var a = auctioneer;
                this.socket = new io.connect("/auctioneer", nodeParams);
                console.log('auctioneer ioConnect()');
                this.socket.on("connect", function () {
                    a.connected = true;
                    clearTimeout(this.timeout)
                });
                this.socket.on("disconnect", function () {
                    a.connected = false;
                    a.retryConnection()
                });
                this.socket.on("new auction", function (n) {
                    auctionId = n.auctionId;
                    var o = $("#div_traderAuctioneer .detail_value.currentPlayer").html();
                    if (n.oldAuction.player == null) {
                        o = loca.auctionNotSold
                    } else {
                        o = '<a href="' + n.oldAuction.player.link + '">' + n.oldAuction.player.name + "</a>"
                    }
                    removeTooltip($("#div_traderAuctioneer .image_140px .detail_button"));
                    var c = $("#div_traderAuctioneer .image_140px .detail_button").attr("title");
                    var p = $(".auction_history li:first").hasClass("even") ? "odd" : "even";
                    var q = '                        <li class="' + p + '" style="display: none">                            <a href="javascript:void(0);"                               class="slideIn"                               ref="' + n.oldAuction.item.uuid + '">                                <img height="30" width="30"                                     src="/img/icons/items/' + n.oldAuction.item.imageSmall + '-small.png"                                     alt="" title="' + c + '"                                     class="item_img tooltipHTML tooltipLeft r_' + n.oldAuction.item.rarity + '"/>                            </a>                            <span class="detail sum">' + number_format(n.oldAuction.sum, 0) + '</span>                            <span class="detail player">' + o + '</span>                            <span class="detail date_time">' + n.oldAuction.time + "</span>                        </li>";
                    $(".auction_history .history_content ul").prepend(q);
                    $(".auction_history .history_content li:first").slideDown("slow");
                    var r = $("#div_traderAuctioneer .auction_history li").length;
                    if (r > 3) {
                        $(".auction_history .history_content li:last").slideUp("slow", function () {
                            $(".auction_history .history_content li:eq(21)").remove();
                            var g = $(".auction_history .history_content li:eq(3)");
                            g.addClass("more_auctions_li");
                            if (auctioneer.historyShown) {
                                g.show()
                            }
                        });
                        $("#div_traderAuctioneer .auction_history .more").show()
                    }
                    $("#div_traderAuctioneer .image_140px .detail_button").attr("ref", n.item.uuid).attr("title", "").removeClass("r_common_140px").removeClass("r_uncommon_140px").removeClass("r_rare_140px").removeClass("r_epic_140px").addClass("r_" + n.item.rarity + "_140px");
                    $("#div_traderAuctioneer .image_140px img").attr("src", "/img/icons/items/" + n.item.image + "-140x.png");
                    $("#div_traderAuctioneer .left_header h2").html(loca.auctionRunning);
                    a.setItemTooltip($("#div_traderAuctioneer .image_140px .detail_button"));
                    a.setData({
                        price: 1000,
                        sum: 0,
                        player: null,
                        bids: 0,
                        info: n.info
                    });
                    $("#div_traderAuctioneer .js_alreadyBidden").html(number_format(0, 0));
                    $(".noAuctionOverlay").hide();
                    traderObj.resetValues("#div_traderAuctioneer", false);
                    traderObj.checkOverbidden()
                });
                this.socket.on("new bid", function (c) {
                    if (c.player.id == playerId) {
                        playerBid = c.sum;
                        AuctionIdOflastPlayerBid = c.auctionId;
                        $("#div_traderAuctioneer .js_alreadyBidden").html(number_format(Math.floor(playerBid), 0))
                    }
                    a.setData({
                        price: c.price,
                        sum: c.sum,
                        player: c.player,
                        bids: c.bids
                    });
                    traderObj.checkOverbidden()
                });
                this.socket.on("auction finished", function (c) {
                    a.setData({
                        price: 0,
                        player: c.player,
                        bids: c.bids,
                        info: c.info
                    });
                    traderObj.resetValues("#div_traderAuctioneer", false);
                    $("#div_traderAuctioneer .js_alreadyBidden").html(number_format(0, 0));
                    $("#div_traderAuctioneer .js_auctioneerSum").html("");
                    $("#div_traderAuctioneer .left_header h2").html(loca.auctionFinished);
                    if (c.player != null) {
                        if (c.player.id == playerId) {
                            a.setItemTooltip($("#div_traderAuctioneer .image_140px .detail_button"))
                        }
                    }
                    $(".noAuctionOverlay").show();
                    traderObj.checkOverbidden()
                });
                this.socket.on("timeLeft", function (c) {
                    a.setData({info: c})
                })
            } catch (b) {
            }
        },
        setItemTooltip: function (a) {
            $.ajax({
                url: detailUrl,
                data: {getDetails: 1, type: $(a).attr("ref"), ajax: 1},
                dataType: "json",
                success: function (b) {
                    changeTooltip(a, b.title);
                    $("#itemDetails[data-uuid='" + $(a).attr("ref") + "'] .amount,a.detail_button[ref='" + $(a).attr("ref") + "'] .amount").html(tsdpkt(b.amount))
                },
                error: function () {
                    fadeBox(loca.error, true)
                }
            })
        },
        initialize: function () {
            traderObj.initSliderTrader("#div_traderAuctioneer");
            traderObj.planets = planetResources;
            traderObj.price = getValue($(".js_price").html());
            $("#div_traderAuctioneer .right_box .pay").bind("click", function () {
                traderObj.submitAuction()
            });
            $("#div_traderAuctioneer .auction_history .more").bind("click", function () {
                if (auctioneer.historyShown) {
                    $(this).text("[" + loca.auctionShowMore + "]")
                } else {
                    $(this).text("[" + loca.auctionShowLess + "]")
                }
                auctioneer.historyShown = !auctioneer.historyShown;
                $("#div_traderAuctioneer .auction_history .more_auctions_li").slideToggle("slow")
            });
            traderObj.sumAuctioneer();
            traderObj.checkOverbidden();
            this.initCountdown();
            loadScript(nodeUrl, this.initConnection)
        },
        retryConnection: function () {
            var a = this;
            setTimeout(function () {
                a.initConnection()
            }, 5000)
        },
        setData: function (a) {
            var b = false;
            if (typeof(a.player) != "undefined") {
                if (a.player == null) {
                    $("#div_traderAuctioneer .detail_value.currentPlayer").text("");
                    $("#div_traderAuctioneer .detail_value.currentPlayer").attr("href", "")
                } else {
                    $("#div_traderAuctioneer .detail_value.currentPlayer").text(a.player.name);
                    $("#div_traderAuctioneer .detail_value.currentPlayer").attr("href", a.player.link);
                    $("#div_traderAuctioneer .detail_value.currentPlayer").attr("data-player-id", a.player.id);
                    $("#div_traderAuctioneer .detail_value.currentPlayer").data("playerId", a.player.id)
                }
                b = true
            }
            if (typeof(a.price) !== "undefined") {
                traderObj.price = a.price;
                $("#div_traderAuctioneer .js_price").html(number_format(Math.floor(a.price), 0));
                b = true
            }
            if (typeof(a.sum) !== "undefined") {
                $("#div_traderAuctioneer .detail_value.currentSum").html(number_format(Math.floor(a.sum), 0));
                b = true
            }
            if (typeof(a.bids) !== "undefined") {
                $("#div_traderAuctioneer .detail_value.numberOfBids").html(number_format(a.bids, 0));
                b = true
            }
            if (typeof(a.info) !== "undefined" && $.trim($("#div_traderAuctioneer .auction_info").html()) != a.info) {
                $("#div_traderAuctioneer .auction_info").html(a.info);
                this.initCountdown();
                b = true
            }
            if (b) {
                this.flash();
                traderObj.sumAuctioneer()
            }
        },
        initCountdown: function () {
            if (typeof(this.nextAuctionTimer) == "object") {
                timerHandler.removeCallback(this.nextAuctionTimer.timer)
            }
            if ($(".nextAuction").length > 0) {
                this.nextAuctionTimer = new simpleCountdown($(".nextAuction").get(0), $(".nextAuction").text())
            }
        },
        flash: function () {
            if (traderObj.traderId == "#div_traderAuctioneer") {
                $("#div_traderAuctioneer .overlay").fadeIn("normal", function () {
                    $(this).fadeOut("normal")
                })
            }
        },
        calculateDeficit: function () {
            var a = 0;
            if (Math.floor(traderObj.price) == 0) {
                a = 0
            } else {
                if (auctionId != AuctionIdOflastPlayerBid) {
                    a = Math.floor(traderObj.price)
                } else {
                    a = Math.floor(traderObj.price) - Math.floor(playerBid)
                }
            }
            return Math.floor(a)
        }
    };
    $(".js_trader").hover(function () {
        var a = $(this).attr("id").replace("js_trader", "").toLowerCase();
        $(this).addClass(a + "_link_hover")
    }, function () {
        var a = $(this).attr("id").replace("js_trader", "").toLowerCase();
        $(".trader_link").each(function (c, b) {
            $(this).removeClass(a + "_link_hover")
        })
    });
    $(".right_box .pay, .value-control, .ui-slider-handle, .bargain, .scrap_it, .source").hover(function () {
        $(this).addClass("hover")
    }, function () {
        $(this).removeClass("hover")
    });
    traderObj.init();
    $(document).undelegate(".js_trader", "click").delegate(".js_trader", "click", function () {
        var a = $(this).attr("id").replace("js_", "");
        traderObj.switchTrader(a)
    }).undelegate("#planet .js_backToOverview", "click").delegate("#planet .js_backToOverview", "click", function () {
        $.bbq.pushState({page: "", animation: ""});
        $(".planetlink, .moonlink").fragment({page: "", animation: ""})
    });
    var e = $.deparam.fragment();
    if (typeof(e.page) != "undefined" && e.page != "") {
        traderObj.selectTrader(e.page, undefined, e.tab)
    }
};
function PercentageBar(elem) {
    this.elem = $(elem);
    this.elem.data('percentageBarInstance', this);
    this.elem.disableSelection();
    this.value = parseFloat(this.elem.attr('value') || 10 * 2);
    this.minValue = parseInt(this.elem.attr('minValue') || 1 / 2);
    this.steps = parseInt(this.elem.attr('steps') || 10 * 2);
    this.stepSize = parseInt(this.elem.attr('stepSize') || 10 * 2);
    this.useHalfStep = this.elem.attr('useHalfStep') === 'true' || false;
    this.barFactor = 1;
    this.valueOnEnter = null;
    this.isDragging = false;
    this.init();
    this.updateBar();
}

PercentageBar.prototype.init = function () {
    if (this.useHalfStep) {
        this.barFactor = 2;
    }

    this.initBar();
    this.initSteps();

    if (document.createTouch === undefined) {
        this.elem.on('mouseup', this.onMouseUp.bind(this));
        this.elem.on('mousemove', this.onMouseMove.bind(this));
        this.elem.on('mouseenter', this.onMouseEnter.bind(this));
        this.elem.on('mouseleave', this.onMouseLeave.bind(this));
    } else {
        this.elem.on('touchstart', this.onTouchStart.bind(this));
        this.elem.on('touchmove', this.onTouchMove.bind(this));
        this.elem.on('touchend', this.onTouchEnd.bind(this));
    }
};

PercentageBar.prototype.initSteps = function () {
    let html = '<div class="steps">';

    for (let i = 0; i < this.steps; ++i) {
        let label = (i + 1) * this.stepSize;
        html += '<div class="step' + (this.stepSize === 10 ? ' step2' : '') + '"  style="cursor: pointer" onclick="" data-step="' + (i + 1) / this.barFactor + '">' + label + '</div>';
    }

    this.elem.append(html);
};

PercentageBar.prototype.initBar = function () {
    let html = '<div class="bar"></bar>';
    this.elem.append(html);
};

PercentageBar.prototype.updateDrag = function (e) {
    let xMin = this.elem.offset().left;
    let xMax = xMin + this.elem.outerWidth();
    let xCurrent = e.pageX;
    let value = this.calcValue(xCurrent, xMin, xMax);
    this.setValue(value);
};

PercentageBar.prototype.onMouseUp = function (e) {
    if (this.valueOnEnter) {
        this.valueOnEnter = this.getValue();
        this.setValue(this.valueOnEnter);
    }

    this.updateDrag(e);
};

PercentageBar.prototype.onMouseMove = function (e) {
    this.updateDrag(e);
};

PercentageBar.prototype.onMouseEnter = function (e) {
    this.valueOnEnter = this.getValue();
};

PercentageBar.prototype.onMouseLeave = function (e) {
    if (this.valueOnEnter > 0) {
        this.setValue(this.valueOnEnter);
    }
};
/**
 * TOUCH EVENTS
 */


PercentageBar.prototype.onTouchStart = function (e) {
    this.startDrag();
};

PercentageBar.prototype.onTouchMove = function (e) {};

PercentageBar.prototype.onTouchEnd = function (e) {
    if (this.valueOnEnter) {
        this.valueOnEnter = this.getValue();
        this.setValue(this.valueOnEnter);
    }

    this.updateDragTouch(e);
    this.stopDrag();
};

PercentageBar.prototype.startDrag = function () {
    this.isDragging = true;
    this.valueOnEnter = this.getValue();
};

PercentageBar.prototype.stopDrag = function () {
    this.isDragging = false;
};

PercentageBar.prototype.updateDragTouch = function (e) {
    if (this.isDragging === true) {
        let xMin = this.elem.offset().left;
        let xMax = xMin + this.elem.outerWidth();
        let xCurrent = e.originalEvent.pageX;

        if (xCurrent === 0) {
            xCurrent = e.originalEvent.changedTouches[0].pageX;
        }

        let value = this.calcValue(xCurrent, xMin, xMax);
        this.setValue(value);
    }
};

PercentageBar.prototype.calcValue = function (xCurrent, xMin, xMax) {
    let x = clampInt(xCurrent, xMin, xMax);
    let percent = (x - xMin) / (xMax - xMin);
    let valueMin = Math.floor(percent * this.steps);
    let valueMax = Math.ceil(percent * this.steps);
    let value = Math.round((valueMax + valueMin) / 2) / this.barFactor;
    return value;
};

PercentageBar.prototype.setValue = function (valueNew) {
    let valueOld = this.value;
    this.value = clampFloat(valueNew, this.minValue, this.steps);

    if (valueOld !== valueNew) {
        this.elem.trigger($.Event('change', {
            value: this.value
        }));
    }

    this.updateBar();
};

PercentageBar.prototype.getValue = function () {
    return this.value;
};

PercentageBar.prototype.updateBar = function () {
    let xMin = this.elem.offset().left;
    let xMax = xMin + this.elem.outerWidth();
    let width = parseInt(this.value / this.steps * (xMax - xMin) * this.barFactor);
    this.elem.find('.bar').width(width);
    this.elem.find('.step').toggleClass('selected', false);
    this.elem.find('.step[data-step="' + this.value + '"]').toggleClass('selected', true);
};

function addPercentageBarPlugin() {
    (function (jQ) {
        jQ.fn.percentageBar = function (options) {
            let percentageBarInstance = new PercentageBar(this, options);
            return this;
        };
    })(jQuery);
}
$(function () {
    $(".percentSelector").each(function () {
        PercentSelector.initBar(this);
    });
});
var PercentSelector = {};
PercentSelector.fallbackMode = false; //($.browser.msie && $.browser.version < 9);
//This will init a bar (calling this directly is useful for re-doing a bar's sizes in the event it's been resized).

PercentSelector.initBar = function (bar) {
    if (!bar) return;
    var $bar = $(bar);
    var height = $bar.innerHeight();
    $bar.children(".PBcolorGrad").remove();
    $bar.children(".PBoverlay").remove();
    var opcAttr = $bar.attr("onpercentchange");

    if (opcAttr) {
        if (typeof opcAttr == "function") {
            $bar.get(0).onpercentchange = opcAttr;
        } else if (typeof opcAttr == "string") {
            if (/^function/.test(opcAttr)) {
                eval("$bar.get(0).onpercentchange = " + opcAttr);
            } else {
                eval("$bar.get(0).onpercentchange = function() {" + opcAttr + "}");
            }
        }
    }

    if (!PercentSelector.fallbackMode) {
        $bar.append($("<canvas class='PBoverlay'></canvas>").css("height", height).css("width", $bar.innerWidth()));
        $bar.append($("<div class='PBcolorGrad'></div>").css("height", height * 20).css("top", -(2 * height)));
        PercentSelector.createOverlay($bar);
    } else {
        $bar.addClass("fallback");
        $bar.append($("<div class='PBfallbackColor'></div>").css("height", height).css("width", $bar.innerWidth())); //$bar.append($("<div class='PBfallbackOverlay'></div>").css("height", height).css("width", $bar.innerWidth()).css("margin-top", -$bar.innerHeight()));
    }

    if ($bar.attr("percent") != null) {
        //ok, I know this is odd. It's because setPercent ignores the change if it's changing to the percent
        // the bar is already at. It remembers what percent it's at using the percent attribute. So trying to
        // initialize it to the percent attribute causes problems. So I just "reset" the attribute to 100% and then
        // re-initialize to the percent given.
        var percent = parseInt($bar.attr("percent"));
        $bar.attr("percent", 100);
        PercentSelector.setPercent($bar, percent, true);
    }

    if (!bar.isBound) {
        if (!($bar.attr("enabled") && $bar.attr("enabled").toLowerCase() == "false")) {
            var $bindBar = $bar;

            if (document.createTouch == undefined) {
                $bindBar.bind("mousedown", PercentSelector.handlers.mouseDown);
                $bindBar.bind("mousemove", PercentSelector.handlers.mouseMove);
                $bindBar.bind("mouseup", PercentSelector.handlers.mouseUp);
                $bindBar.bind("mouseout", PercentSelector.handlers.mouseOut);
            } else {
                $bindBar.bind("touchstart", PercentSelector.handlers.touchStart);
                $bindBar.bind("touchmove", PercentSelector.handlers.touchMove);
                $bindBar.bind("touchend", PercentSelector.handlers.touchEnd);
            }
        }

        bar.isBound = true; //to prevent multi-binding!
    }
};

PercentSelector.setPercent = function (bar, newPercent, animate) {
    var $bar = $(bar);
    var step = $bar.attr("step");
    if (!step) step = 1;else step = parseInt(step);
    newPercent = Math.round(newPercent / step) * step; //short circuit if the percent is not changing!

    if (newPercent == parseInt($bar.attr("percent"))) return;
    $bar.attr("percent", newPercent);

    if (PercentSelector.fallbackMode) {
        $bar.children(".PBfallbackColor").css("width", $bar.innerWidth() * newPercent / 100.0); //console.log("setting percent to: " + newPercent);
    } else {
        if (animate) {
            $bar.children(".PBcolorGrad").css("-webkit-transition", "-webkit-transform 0.6s ease-in");
            $bar.children(".PBcolorGrad").css("-moz-transition", "-moz-transform 0.6s ease-in");
        } else {
            $bar.children(".PBcolorGrad").css("-webkit-transition", "-webkit-transform 0.1s ease-in"); //turn off the animation in case it's on!

            $bar.children(".PBcolorGrad").css("-moz-transition", "-moz-transform 0.1s ease-in"); //turn off the animation in case it's on!
        }

        var yTrans = Math.round($bar.children(".PBcolorGrad").outerHeight() * .90 * (100 - newPercent) / 100.0);
        var xTrans = Math.round($bar.children(".PBcolorGrad").innerWidth() * ((100 - newPercent) / 100.0));

        if (animate) {
            setTimeout(function () {
                $bar.children(".PBcolorGrad").css("-webkit-transform", "translate(-" + xTrans + "px, -" + yTrans + "px)");
                $bar.children(".PBcolorGrad").css("-moz-transform", "translate(-" + xTrans + "px, -" + yTrans + "px)");
                $bar.children(".PBcolorGrad").css("-ms-transform", "translate(-" + xTrans + "px, -" + yTrans + "px)");
            }, 1);
        } else {
            $bar.children(".PBcolorGrad").css("-webkit-transform", "translate(-" + xTrans + "px, -" + yTrans + "px)");
            $bar.children(".PBcolorGrad").css("-moz-transform", "translate(-" + xTrans + "px, -" + yTrans + "px)");
            $bar.children(".PBcolorGrad").css("-ms-transform", "translate(-" + xTrans + "px, -" + yTrans + "px)");
        }
    }
};

PercentSelector.setPercentFromPageX = function (bar, page_x, animate) {
    var $bar = $(bar);
    var x = page_x - $bar.offset().left;
    var width = $bar.outerWidth();
    var percent = 100 * x / width;
    if (percent > 100) percent = 100;
    if (percent < 10) percent = 10;
    percent = Math.round(percent);
    PercentSelector.setPercent(bar, percent, animate);
};

PercentSelector.createOverlay = function (bar) {
    var $bar = $(bar);
    $overlay = $bar.children(".PBoverlay");
    var width = $overlay.innerWidth();
    var height = $overlay.innerHeight();
    var canvas = $overlay.get(0);
    canvas.width = width;
    canvas.height = height;
    var ctx = canvas.getContext("2d"); //Create the plastic overlay

    var lingrad = ctx.createLinearGradient(0, 0, 0, height);
    lingrad.addColorStop(0, 'rgba(0,0,0,0.05)');
    lingrad.addColorStop(1, 'rgba(0,0,0,0.3)');
    ctx.fillStyle = lingrad;
    ctx.fillRect(0, 0, width, height);
    ctx.clearRect(3, 3, width - 6, height - 6);
    lingrad = ctx.createLinearGradient(0, 0, 0, height);
    lingrad.addColorStop(0, 'rgba(0,0,0,0.2)');
    lingrad.addColorStop(1, 'rgba(0,0,0,0.05)');
    ctx.fillStyle = lingrad;
    ctx.fillRect(3, 3, width - 6, height - 6); //create the steps

    var step = $bar.attr("step");
    if (!step) step = 100;
    ctx.lineWidth = 1;
    var maxWidth = width / step;
    var stepWith = width / step;

    for (var curStep = 0; curStep * step < 100; curStep += 1) {
        var x = Math.floor(curStep * step * width / 100) - .5;
        ctx.beginPath();
        ctx.font = "12px serif";
        ctx.fillStyle = 'white';
        ctx.strokeStyle = 'black';
        ctx.textAlign = "center";
        ctx.textBaseline = "middle";
        ctx.fillText(((curStep + 1) * 10).toString(), x + stepWith / 2, height / 2, maxWidth); // ctx.strokeText(((curStep + 1) * 10).toString(), x + stepWith/2, height * 1, maxWidth);

        ctx.moveTo(x, height);
        ctx.lineTo(x, height * .75);
        ctx.closePath();
        ctx.stroke();
    }
};

PercentSelector.handlers = {};
/**** touch handling ****/

PercentSelector.handlers.touchDragging = false;

PercentSelector.handlers.touchStart = function (event) {
    var touches = event.originalEvent.touches;
    if (touches.length > 1) return;
    event.preventDefault();
    PercentSelector.handlers.touchDragging = false;
};

PercentSelector.handlers.touchEnd = function (event) {
    touches = event.originalEvent.touches;
    if (touches.length == 0) touches = event.originalEvent.changedTouches;
    if (touches.length > 1) return;
    var bar = touches[0].target.parentNode;
    PercentSelector.setPercentFromPageX(bar, touches[0].pageX, true);

    if (bar.onpercentchange != undefined) {
        bar.onpercentchange($(bar).attr("percent"));
    }

    event.preventDefault();
};

PercentSelector.handlers.touchMove = function (event) {
    PercentSelector.handlers.touchDragging = true;
    var touches = event.originalEvent.touches;
    if (touches.length > 1) return;
    event.preventDefault();
    PercentSelector.setPercentFromPageX(touches[0].target.parentNode, touches[0].pageX);
};
/*** mouse handling ***/


PercentSelector.handlers.mouseDragging = false;

PercentSelector.handlers.mouseDown = function (event) {
    PercentSelector.handlers.mouseDragging = true;
};

PercentSelector.handlers.mouseOut = function (event) {
    if (PercentSelector.handlers.mouseDragging) {
        var bar = PercentSelector.fallbackMode ? event.currentTarget : event.originalEvent.target.parentNode; //         if (bar.onpercentchange != undefined) {
        //             var x = eval(bar.onpercentchange);
        // console.debug(x);
        //             if (typeof x == 'function') {
        //                 x($(bar).attr("percent"));
        //             }
        //             // bar.onpercentchange($(bar).attr("percent"));
        //         }
    }

    PercentSelector.handlers.mouseDragging = false;
};

PercentSelector.handlers.mouseUp = function (event) {
    PercentSelector.handlers.mouseDragging = false;
    var bar = PercentSelector.fallbackMode ? event.currentTarget : event.originalEvent.target.parentNode;
    PercentSelector.setPercentFromPageX(bar, event.pageX, true); // if (bar.onpercentchange != undefined) {
    //     var x = eval(bar.onpercentchange);
    //
    //     if (typeof x == 'function') {
    //         x($(bar).attr("percent"));
    //     }
    //     // bar.onpercentchange($(bar).attr("percent"));
    // }
    // if(bar.onpercentchange != undefined) {
    //     bar.onpercentchange($(bar).attr("percent"));
    // }
};

PercentSelector.handlers.mouseMove = function (event) {
    if (PercentSelector.handlers.mouseDragging) {
        event.preventDefault();
        var bar = PercentSelector.fallbackMode ? event.currentTarget : event.originalEvent.target.parentNode;
        PercentSelector.setPercentFromPageX(bar, event.pageX);
    }
};
const FLEET_DISPATCH_PAGE1 = 'fleet1';
const FLEET_DISPATCH_PAGE2 = 'fleet2';

function FleetDispatcher(cfg) {
    this.fleetHelper = new FleetHelper(cfg);
    this.loading = false;
    this.lifeformEnabled = cfg.lifeformEnabled;
    this.checkTargetUrl = cfg.checkTargetUrl;
    this.sendFleetUrl = cfg.sendFleetUrl;
    this.saveSettingsUrl = cfg.saveSettingsUrl;
    this.fleetBoxOrder = cfg.fleetBoxOrder || {};
    this.token = cfg.token || null;
    this.currentPlanet = cfg.currentPlanet;
    this.targetPlanet = cfg.targetPlanet || null;
    this.targetInhabited = cfg.targetInhabited || false;
    this.targetPlayerId = cfg.targetPlayerId || this.fleetHelper.PLAYER_ID_SPACE;
    this.targetPlayerName = cfg.targetPlayerName || '';
    this.targetPlayerColorClass = cfg.targetPlayerColorClass || '';
    this.targetPlayerRankIcon = cfg.targetPlayerRankIcon || '';
    this.cargoCapacity = cfg.cargoCapacity;
    this.fuelCapacity = cfg.fuelCapacity;
    this.currentPage = FLEET_DISPATCH_PAGE1;
    this.shipsOnPlanet = cfg.shipsOnPlanet || [];
    this.shipsToSend = cfg.shipsToSend || [];
    this.useHalfSteps = cfg.useHalfSteps || false;
    this.planets = cfg.planets || [];
    this.standardFleets = cfg.standardFleets || [];
    this.unions = cfg.unions || [];
    this.orders = [];
    this.orderNames = cfg.orderNames || [];
    this.orderDescriptions = cfg.orderDescriptions || [];
    this.mission = cfg.mission || this.fleetHelper.MISSION_NONE;
    this.union = 0;
    this.targetIsStrong = false;
    this.targetIsOutlaw = false;
    this.targetIsBuddyOrAllyMember = false;
    this.playerIsOutlaw = false;
    this.retreatAfterDefenderRetreat = false;
    this.lootFoodOnAttack = cfg.lootFoodOnAttack;
    this.holdingTime = cfg.holdingTime;
    this.expeditionTime = cfg.expeditionTime;
    this.speedPercent = 10;
    this.cargoMetal = 0;
    this.cargoCrystal = 0;
    this.cargoDeuterium = 0;
    this.cargoFood = 0;
    this.prioMetal = cfg.LOOT_PRIO_METAL;
    this.prioCrystal = cfg.LOOT_PRIO_CRYSTAL;
    this.prioDeuterium = cfg.LOOT_PRIO_DEUTERIUM;
    this.prioFood = cfg.LOOT_PRIO_FOOD;
    this.metalOnPlanet = cfg.metalOnPlanet;
    this.crystalOnPlanet = cfg.crystalOnPlanet;
    this.deuteriumOnPlanet = cfg.deuteriumOnPlanet;
    this.foodOnPlanet = 0;

    if (this.lifeformEnabled) {
        this.foodOnPlanet = cfg.foodOnPlanet;
    }

    this.fleetCount = cfg.fleetCount;
    this.maxFleetCount = cfg.maxFleetCount;
    this.expeditionCount = cfg.expeditionCount;
    this.maxExpeditionCount = cfg.maxExpeditionCount;
    this.warningsEnabled = cfg.warningsEnabled;
    this.playerId = cfg.playerId;
    this.hasAdmiral = cfg.hasAdmiral;
    this.hasCommander = cfg.hasCommander;
    this.isOnVacation = cfg.isOnVacation;
    this.moveInProgress = cfg.moveInProgress;
    this.planetCount = cfg.planetCount;
    this.explorationCount = cfg.explorationCount;
    this.apiDataJson = cfg.apiDataJson;
    this.apiCommonData = cfg.apiCommonData;
    this.apiTechData = cfg.apiTechData;
    this.apiDefenseData = cfg.apiDefenseData;
    this.apiShipBaseData = cfg.apiShipBaseData;
    this.loca = cfg.loca;
    this.locadyn = cfg.locadyn;
    this.errorCodeMap = cfg.errorCodeMap;
    this.urlFleetCheck = cfg.urlFleetCheck;
    this.additionalFlightSpeed = 0;
    this.timerTimes = null;
    this.fetchTargetPlayerDataTimeout = null;
    this.deferred = [];
    this.emptySystems = cfg.emptySystems;
    this.inactiveSystems = cfg.inactiveSystems;
}

FleetDispatcher.prototype.init = function () {
    this.initFleet1();
    this.initFleet2();
    let that = this;
    $(function () {
        $(".sortable").sortable({
            handle: ".move-box",
            tolerance: "pointer",
            revert: true,
            update: function (event, ui) {
                a = $("#fleet2 #buttonz > div");
                param = {};
                that.appendTokenParams(param);

                for (let i = 0; i < a.length; i++) {
                    param[a[i].id] = i;
                }

                $.post(that.saveSettingsUrl, param, function (data) {
                    data = JSON.parse(data);
                    that.updateToken(data.newAjaxToken);
                    token = data.newAjaxToken;
                });
            }
        });
        $(".sortable").disableSelection();
    });
    $('#fleetdispatchcomponent').on('keypress', async function (e) {
        if (getKeyCode(e) === 13) {
            e.preventDefault();
            e.stopPropagation();

            if ($('#fleet1').is(':visible')) {
                await new Promise((resolve, reject) => setTimeout(() => resolve(), 250));
                that.trySubmitFleet1();
            } else if ($('#fleet2').is(':visible')) {
                // we have to wait to the update of a token because it already started communication with backend
                // should not trigger really but just as a safety measure
                if (!that.fetchTargetPlayerDataTimeout) {
                    await new Promise((resolve, reject) => setTimeout(() => resolve(), 250));
                    that.trySubmitFleet2();
                }
            }

            return false;
        }
    });
};

FleetDispatcher.prototype.displayErrors = function (errors) {
    // only display the first error
    let error = errors[0] || undefined;

    if (error) {
        fadeBox(error.message, true);
    }
};

FleetDispatcher.prototype.refresh = function () {
    switch (this.currentPage) {
        case FLEET_DISPATCH_PAGE1:
            this.refreshFleet1();
            break;

        case FLEET_DISPATCH_PAGE2:
            this.refreshFleet2();
            break;
    }
};

FleetDispatcher.prototype.switchToPage = function (page) {
    let that = this;

    if (page === this.currentPage) {
        return;
    }

    if (page === FLEET_DISPATCH_PAGE1) {
        this.currentPage = page;
        $('#' + FLEET_DISPATCH_PAGE1).show();
        $('#' + FLEET_DISPATCH_PAGE2).hide();
        that.focusSubmitFleet1();
    }

    if (page === FLEET_DISPATCH_PAGE2) {
        this.currentPage = page;
        $('#' + FLEET_DISPATCH_PAGE1).hide();
        $('#' + FLEET_DISPATCH_PAGE2).show();
        this.setTargetType(this.targetPlanet.type);
        that.focusSendFleet();
    }

    if (this.currentPage === FLEET_DISPATCH_PAGE1 && this.timerTimes !== null) {
        clearInterval(this.timerTimes);
        this.timerTimes = null;
    } // create timer to refresh fleet arrival and return times


    if (this.currentPage === FLEET_DISPATCH_PAGE2) {
        if (this.timerTimes === null) {
            this.timerTimes = setInterval(function () {
                that.refreshFleetTimes();
            }, 1000);
        }
    }

    this.refresh();
};

FleetDispatcher.prototype.startLoading = function () {
    this.loading = true;
    $('#fleetdispatchcomponent .ajax_loading').show();
};

FleetDispatcher.prototype.stopLoading = function () {
    this.loading = false;
    $('#fleetdispatchcomponent .ajax_loading').hide();
};

FleetDispatcher.prototype.updateToken = function (tokenNew) {
    token = tokenNew;
};

FleetDispatcher.prototype.appendTokenParams = function (params) {
    params.token = token;
};

FleetDispatcher.prototype.updateEmptySystems = function (newData) {
    this.emptySystems = newData;
};

FleetDispatcher.prototype.updateInactiveSystems = function (newData) {
    this.inactiveSystems = newData;
};

FleetDispatcher.prototype.appendShipParams = function (params) {
    this.shipsToSend.forEach(function (ship) {
        params['am' + ship.id] = ship.number;
    });
};

FleetDispatcher.prototype.appendTargetParams = function (params) {
    params.galaxy = this.targetPlanet.galaxy;
    params.system = this.targetPlanet.system;
    params.position = this.targetPlanet.position;
    params.type = this.targetPlanet.type;
};

FleetDispatcher.prototype.appendCargoParams = function (params) {
    params.metal = this.cargoMetal;
    params.crystal = this.cargoCrystal;
    params.deuterium = this.cargoDeuterium;

    if (this.lifeformEnabled) {
        params.food = this.cargoFood;
    }
};

FleetDispatcher.prototype.appendPrioParams = function (params) {
    params.prioMetal = this.prioMetal;
    params.prioCrystal = this.prioCrystal;
    params.prioDeuterium = this.prioDeuterium;

    if (this.lifeformEnabled) {
        params.prioFood = this.prioFood;
    }
};
/**
 * FLEET 1
 */


FleetDispatcher.prototype.initFleet1 = function () {
    initToggleHeader('fleet1');
    let that = this;
    let elem = $('#fleet1');
    elem.find('select.combatunits').ogameDropDown();
    that.refresh();
    elem.on('click', '#continueToFleet2', async function (e) {
        e.preventDefault();
        await new Promise((resolve, reject) => setTimeout(() => resolve(), 250));
        that.trySubmitFleet1();
    });
    elem.on('keyup', '#technologies li input', function (e) {
        e.preventDefault();
        let shipId = parseInt($(e.currentTarget).closest('li').data('technology'));
        let number = getValue($(e.currentTarget).val());
        that.selectShip(shipId, number);
    });
    elem.on('focusout', '#technologies li input', function (e) {
        e.preventDefault();
        let shipId = parseInt($(e.currentTarget).closest('li').data('technology'));
        let number = getValue($(e.currentTarget).val());
        that.selectShip(shipId, number);
        that.refresh();
    });
    elem.on('click', '#technologies li .icon', function (e) {
        e.preventDefault();
        let shipId = parseInt($(e.currentTarget).closest('li').data('technology'));

        if (that.getNumberOfShipsSelected(shipId) < that.getNumberOfShipsOnPlanet(shipId)) {
            that.selectMaxShips(shipId);
        } else {
            that.selectShip(shipId, 0);
        }

        that.refresh();
        that.focusSubmitFleet1();
    });
    elem.on('click', '#sendall', function (e) {
        e.preventDefault();
        that.selectAllShips();
        that.refresh();
        that.focusSubmitFleet1();
    });
    elem.on('click', '#resetall', function (e) {
        e.preventDefault();
        that.resetShips();
        that.refresh();
        that.focusSubmitFleet1();
    });
    elem.on('click', '#combatunits', function (e) {
        e.preventDefault();
        initStandardFleet();
    });
    elem.on('change', '#standardfleet', function (e) {
        let standardFleetId = getValue($('select.combatunits').val());
        that.selectStandardFleet(standardFleetId);
        that.refresh();
    });
};

FleetDispatcher.prototype.focusSubmitFleet1 = function () {
    $('#continueToFleet2').focus();
};

FleetDispatcher.prototype.hasShipsSelected = function () {
    return this.getTotalNumberOfShipsSelected() > 0;
};

FleetDispatcher.prototype.hasFreeSlots = function () {
    return this.maxFleetCount - this.fleetCount > 0;
};

FleetDispatcher.prototype.hasEnoughFuel = function () {
    return this.deuteriumOnPlanet >= this.getConsumption();
};

FleetDispatcher.prototype.validateFleet1 = function (onError, onSuccess) {
    if (!this.hasShipsSelected()) {
        this.displayErrors([{
            message: this.loca.LOCA_FLEET_NO_SELECTION
        }]);
        return false;
    }

    if (!this.hasFreeSlots()) {
        this.displayErrors([{
            message: this.loca.LOCA_FLEET_NO_FREE_SLOTS
        }]);
        return false;
    }

    return true;
};

FleetDispatcher.prototype.trySubmitFleet1 = function () {
    if (this.validateFleet1() === false) {
        return;
    }

    this.switchToPage(FLEET_DISPATCH_PAGE2);
};

FleetDispatcher.prototype.refreshFleet1 = function () {
    this.refreshNavigationFleet1();
    this.refreshShips();
    this.refreshAPIData();
    this.refreshStatusBarFleet();
};

FleetDispatcher.prototype.refreshNavigationFleet1 = function () {
    let invalidInfo = '';

    if (!this.hasShipsSelected()) {
        $('#continueToFleet2').attr('class', 'continue off');
        invalidInfo = this.loca.LOCA_FLEET_NO_SELECTION;
    } else if (!this.hasFreeSlots()) {
        $('#continueToFleet2').attr('class', 'continue off');
        invalidInfo = this.loca.LOCA_FLEET_NO_FREE_SLOTS;
    } else {
        $('#continueToFleet2').attr('class', 'continue on');
    }

    $('#allornone .info').html(invalidInfo);
};

FleetDispatcher.prototype.refreshShips = function () {
    let that = this;
    $('#fleet1 #technologies li').each(function (i, elem) {
        const shipId = $(elem).data('technology');
        const ship = that.findShip(shipId);
        const inputElem = $(elem).find('input');
        const oldValue = inputElem.val() === '' ? '' : parseInt(inputElem.val());
        const number = ship?.number ?? '';

        if (oldValue !== number) {
            inputElem.val(number);
            const event = new Event('change');
            inputElem.get(0).dispatchEvent(event);
        }
    });
};

FleetDispatcher.prototype.refreshAPIData = function () {
    let apiShipData = this.shipsToSend.map(function (ship) {
        return [ship.id, ship.number];
    });

    if (apiShipData.length < 1) {
        apiShipData = this.apiShipBaseData;
    }

    let apiDataOld = [].concat(this.apiCommonData).concat(this.apiTechData).concat(apiShipData).concat(this.apiDefenseData).map(function (item) {
        return item.join(';');
    }).join('|');
    let apiData = JSON.parse(JSON.stringify(this.apiDataJson));

    if (this.shipsToSend.length > 0) {
        Object.keys(apiData.ships).forEach(key => apiData.ships[key]['amount'] = 0);
        this.shipsToSend.forEach(ship => {
            apiData.ships[ship.id] = this.apiDataJson.ships[ship.id];
            apiData.ships[ship.id].amount = ship.number;
        });
    }

    let content = JSON.stringify(apiData);
    let tooltip = document.createElement('div');
    tooltip.textContent = this.loca.LOCA_API_FLEET_DATA;
    tooltip.append(document.createElement('br'));
    tooltip.append(document.createTextNode('API 1:'));
    let oldInput = document.createElement('input');
    oldInput.setAttribute('id', 'FLEETAPI');
    oldInput.setAttribute('readonly', '1');
    oldInput.setAttribute('onclick', 'select()');
    oldInput.setAttribute('value', apiDataOld ?? '');
    oldInput.value = apiDataOld ?? '';
    tooltip.appendChild(oldInput);
    tooltip.append(document.createElement('br'));
    tooltip.append(document.createTextNode('API 2:'));
    let jsonInput = document.createElement('input');
    jsonInput.setAttribute('id', 'FLEETAPI_JSON');
    jsonInput.setAttribute('readonly', '1');
    jsonInput.setAttribute('onclick', 'select()');
    jsonInput.setAttribute('value', content);
    jsonInput.value = content;
    tooltip.appendChild(jsonInput);
    changeTooltip($(".show_fleet_apikey"), tooltip.outerHTML);
};
/**
 * SHIP LOGIC
 */


FleetDispatcher.prototype.selectShip = function (shipId, number) {
    let shipsAvailable = this.getNumberOfShipsOnPlanet(shipId);
    number = Math.min(shipsAvailable, number);

    if (number <= 0) {
        this.removeShip(shipId);
    } else if (this.hasShip(shipId)) {
        this.updateShip(shipId, number);
    } else {
        this.addShip(shipId, number);
    }

    this.resetCargo();
};

FleetDispatcher.prototype.addShip = function (shipId, number) {
    this.shipsToSend.push({
        id: shipId,
        number: number
    });
};

FleetDispatcher.prototype.findShip = function (shipId) {
    return this.shipsToSend.find(function (ship) {
        return ship.id === shipId;
    });
};

FleetDispatcher.prototype.getNumberOfShipsSelected = function (shipId) {
    let ship = this.findShip(shipId);

    if (ship !== undefined) {
        return ship.number;
    }

    return 0;
};

FleetDispatcher.prototype.hasShip = function (shipId) {
    return this.findShip(shipId) !== undefined;
};

FleetDispatcher.prototype.hasColonizationShip = function () {
    return this.hasShip(this.SHIP_ID_COLONIZATION);
};

FleetDispatcher.prototype.hasRecycler = function () {
    return this.hasShip(this.SHIP_ID_RECYCLER);
};

FleetDispatcher.prototype.hasValidTarget = function () {
    return (this.targetPlanet.galaxy !== this.currentPlanet.galaxy || this.targetPlanet.system !== this.currentPlanet.system || this.targetPlanet.position !== this.currentPlanet.position || this.targetPlanet.type !== this.currentPlanet.type) && this.targetPlanet.galaxy > 0 && this.targetPlanet.system > 0 && this.targetPlanet.position > 0;
};

FleetDispatcher.prototype.removeShip = function (shipId) {
    let shipIndex = this.shipsToSend.findIndex(function (ship) {
        return ship.id === shipId;
    });

    if (shipIndex != -1) {
        this.shipsToSend.splice(shipIndex, 1);
    }
};

FleetDispatcher.prototype.updateShip = function (shipId, number) {
    let ship = this.findShip(shipId);

    if (ship) {
        ship.number = number;
    }
};

FleetDispatcher.prototype.getNumberOfShipsOnPlanet = function (shipId) {
    let ship = this.shipsOnPlanet.find(function (ship) {
        return ship.id === shipId;
    });

    if (ship) {
        return ship.number;
    }

    return 0;
};

FleetDispatcher.prototype.getTotalNumberOfShipsSelected = function () {
    let numberOfShipsSelected = 0;
    this.shipsToSend.forEach(function (ship) {
        numberOfShipsSelected += ship.number;
    });
    return numberOfShipsSelected;
};

FleetDispatcher.prototype.getShipIds = function () {
    return this.shipsToSend.map(function (ship) {
        return ship.id;
    });
};

FleetDispatcher.prototype.resetShips = function () {
    this.shipsToSend = [];
};

FleetDispatcher.prototype.selectAllShips = function () {
    let that = this;
    this.shipsOnPlanet.forEach(function (ship) {
        that.selectShip(ship.id, ship.number);
    });
};

FleetDispatcher.prototype.selectMaxShips = function (shipId) {
    let number = this.getNumberOfShipsOnPlanet(shipId);
    this.selectShip(shipId, number);
};

FleetDispatcher.prototype.selectShips = function (ships) {
    for (let shipId in ships) {
        let number = ships[shipId];
        this.selectShip(parseInt(shipId), number);
    }
};

FleetDispatcher.prototype.selectStandardFleet = function (standardFleetId) {
    let standardFleet = this.standardFleets.find(function (item) {
        return item.id === standardFleetId;
    });

    if (standardFleet === undefined || standardFleet.ships === undefined) {
        return;
    }

    this.selectShips(standardFleet.ships);
};
/**
 * FLEET 2
 */


FleetDispatcher.prototype.initFleet2 = function () {
    // @todo jquery is loaded twice
    addPercentageBarPlugin();
    initToggleHeader('fleet2'); // reorder fleet-box snippets based on settings

    let reorderFleetBox = Object.fromEntries(Object.entries(this.fleetBoxOrder).sort(([, a], [, b]) => a - b));
    let parent = $("#fleet2 #buttonz");

    for (let fleetBox in reorderFleetBox) {
        let child = $("#fleet2 #buttonz #" + fleetBox);
        $(parent).append(child);
    }

    let that = this;
    let elem = $('#fleet2').off();
    $('#speedPercentage').percentageBar().on('change', function (e) {
        that.setFleetPercent(e.value);
        that.refresh();
    });
    elem.find('#slbox').ogameDropDown();
    elem.find('#aksbox').ogameDropDown();
    elem.on('click', '#backToFleet1', function (e) {
        e.preventDefault();
        that.switchToPage(FLEET_DISPATCH_PAGE1);
    }); // clear inputs on focus

    elem.on('focus', '#galaxy', function () {
        clearInput('#galaxy');
        that.targetPlanet.galaxy = '';
        that.refreshFleet2();
    });
    elem.on('focus', '#system', function () {
        clearInput('#system');
        that.targetPlanet.system = '';
        that.refreshFleet2();
    });
    elem.on('focus', '#position', function () {
        clearInput('#position');
        that.targetPlanet.position = '';
        that.refreshFleet2();
    });
    elem.on('keyup', '#galaxy, #system, #position', function (e) {
        let coordinatesCount = (1 * $("#galaxy").val() > 0 ? 1 : 0) + (1 * $("#system").val() > 0 ? 1 : 0) + (1 * $("#position").val() > 0 ? 1 : 0);
        that.updateTarget(coordinatesCount === 3);
        that.updateTargetDropDowns();
        that.refresh();

        if (coordinatesCount !== 3) {
            that.clearMissions();
            that.updateTargetDropDowns();
        }
    });
    elem.on('click', '#pbutton', function (e) {
        e.preventDefault();
        that.clearMissions();
        that.setTargetType(that.fleetHelper.PLANETTYPE_PLANET);
        that.updateTargetDropDowns();
        that.refresh();
    });
    elem.on('click', '#mbutton', function (e) {
        e.preventDefault();
        that.clearMissions();
        that.setTargetType(that.fleetHelper.PLANETTYPE_MOON);
        that.updateTargetDropDowns();
        that.refresh();
    });
    elem.on('click', '#dbutton', function (e) {
        e.preventDefault();
        that.clearMissions();
        that.setTargetType(that.fleetHelper.PLANETTYPE_DEBRIS);
        that.updateTargetDropDowns();
        that.refresh();
    });
    elem.on('change', '#slbox', function (e) {
        e.preventDefault();
        that.selectShortLink($(e.currentTarget));
        that.updateTarget();
        that.refresh();
    });
    elem.on('change', '#aksbox', function (e) {
        e.preventDefault();
        that.selectCombatUnion($(e.currentTarget));
        that.updateTarget();
        that.refresh();
    });
    elem.on('click', '#selectMaxMetal', function (e) {
        e.preventDefault();
        that.selectMaxMetal();
        that.refresh();
        that.focusSendFleet();
    });
    elem.on('click', '#selectMinMetal', function (e) {
        e.preventDefault();
        that.selectMinMetal();
        that.refresh();
        that.focusSendFleet();
    });
    elem.on('click', '#selectMaxCrystal', function (e) {
        e.preventDefault();
        that.selectMaxCrystal();
        that.refresh();
        that.focusSendFleet();
    });
    elem.on('click', '#selectMinCrystal', function (e) {
        e.preventDefault();
        that.selectMinCrystal();
        that.refresh();
        that.focusSendFleet();
    });
    elem.on('click', '#selectMaxDeuterium', function (e) {
        e.preventDefault();
        that.selectMaxDeuterium();
        that.refresh();
        that.focusSendFleet();
    });
    elem.on('click', '#selectMinDeuterium', function (e) {
        e.preventDefault();
        that.selectMinDeuterium();
        that.refresh();
        that.focusSendFleet();
    });
    elem.on('click', '#selectMaxFood', function (e) {
        e.preventDefault();
        that.selectMaxFood();
        that.refresh();
        that.focusSendFleet();
    });
    elem.on('click', '#selectMinFood', function (e) {
        e.preventDefault();
        that.selectMinFood();
        that.refresh();
        that.focusSendFleet();
    });
    elem.on('click', '#allresources', function (e) {
        e.preventDefault();
        that.selectMaxAll();
        that.refresh();
        that.focusSendFleet();
    });
    elem.on('keyup', '#metal', function (e) {
        that.updateMetal();
        that.refresh();
    });
    elem.on('change', '#metal', function (e) {
        that.updateMetal();
        that.refresh();
    });
    elem.on('keyup', '#crystal', function (e) {
        that.updateCrystal();
        that.refresh();
    });
    elem.on('change', '#crystal', function (e) {
        that.updateCrystal();
        that.refresh();
    });
    elem.on('keyup', '#deuterium', function (e) {
        that.updateDeuterium();
        that.refresh();
    });
    elem.on('change', '#deuterium', function (e) {
        that.updateDeuterium();
        that.refresh();
    });
    elem.on('keyup', '#food', function (e) {
        that.updateFood();
        that.refresh();
    });
    elem.on('change', '#food', function (e) {
        that.updateFood();
        that.refresh();
    });
    elem.on('click', '#sendFleet', async function (e) {
        e.preventDefault();
        await new Promise((resolve, reject) => setTimeout(() => resolve(), 250));
        that.trySubmitFleet2();
    });
    elem.on('click', '#missions > li > a', function (e) {
        e.preventDefault();
        let mission = parseInt($(e.currentTarget).data('mission') || this.fleetHelper.MISSION_NONE);
        that.selectMission(mission);
        that.focusSendFleet();
    });
    elem.on('click', '.prioButton', function (e) {
        e.preventDefault();
        let type = $(e.currentTarget).attr('data-resource-type');
        let priority = parseInt($(e.currentTarget).attr('data-resource-prio'));
        that.selectPriority(type, priority);
        that.refresh();
        that.focusSendFleet();
    });

    FleetDispatcher.prototype.focusSendFleet = function () {
        $('#sendFleet').focus();
    };

    elem.on('change', 'input[name=retreatAfterDefenderRetreat]', function (e) {
        that.selectRetreatAfterDefenderRetreat($(e.currentTarget).is(':checked'));
    });
    elem.on('change', 'input[name=lootFoodOnAttack]', function (e) {
        that.selectLootFoodOnAttack($(e.currentTarget).is(':checked'));
    });
    elem.on('change keyup', '#holdingtime', function () {
        that.updateHoldingTime();
        that.refresh();
        that.focusSendFleet();
    });
    elem.on('change keyup', '#expeditiontime', function (e) {
        that.updateExpeditionTime();
        that.refresh();
        that.focusSendFleet();
    });
    this.fetchTargetPlayerData();
};

FleetDispatcher.prototype.validateFleet2 = function () {
    if (!this.hasValidTarget() || !this.hasMission()) {
        return false;
    }

    return true;
};

FleetDispatcher.prototype.trySubmitFleet2 = function () {
    clearTimeout(this.fetchTargetPlayerDataTimeout);
    this.fetchTargetPlayerDataTimeout = null;
    let that = this; // call refreshNavigationFleet2 to show error messages if any

    this.refreshNavigationFleet2(true);

    if ($("#sendFleet.off").length === 1) {
        return;
    }

    if (this.validateFleet2() === false) {
        return;
    }

    if (this.moveInProgress) {
        errorBoxDecision(this.loca.LOCA_ALL_NETWORK_ATTENTION, this.loca.LOCA_PLANETMOVE_BREAKUP_WARNING, this.loca.LOCA_ALL_YES, this.loca.LOCA_ALL_NO, function () {
            that.submitFleet2();
        });
    } else if (this.warningsEnabled && this.targetIsStrong && !this.targetIsOutlaw && !this.targetIsBuddyOrAllyMember && !this.playerIsOutlaw && this.fleetHelper.isAggressiveMission(this.mission)) {
        errorBoxDecision(this.loca.LOCA_ALL_NETWORK_ATTENTION, this.locadyn.locaAllOutlawWarning, this.loca.LOCA_ALL_YES, this.loca.LOCA_ALL_NO, function () {
            that.submitFleet2();
        });
    } else if (this.mission === this.fleetHelper.MISSION_COLONIZE && this.fleetHelper.COLONIZATION_ENABLED === true && !this.hasFreePlanetSlots()) {
        errorBoxDecision(this.loca.LOCA_ALL_NOTICE, this.loca.LOCA_FLEETSENDING_MAX_PLANET_WARNING, this.loca.LOCA_ALL_YES, this.loca.LOCA_ALL_NO, function () {
            that.submitFleet2();
        });
    } else {
        this.submitFleet2();
    }
};

FleetDispatcher.prototype.refreshFleet2 = function () {
    this.refreshNavigationFleet2();
    this.refreshTarget();
    this.refreshBriefing();
    this.refreshCargo();
    this.refreshPriorities();
};

FleetDispatcher.prototype.refreshTarget = function () {
    if (this.targetPlanet.type === this.fleetHelper.PLANETTYPE_PLANET) {
        $('#pbutton').attr('class', 'planet_selected');
    } else {
        $('#pbutton').attr('class', 'planet');
    }

    if (this.targetPlanet.type === this.fleetHelper.PLANETTYPE_DEBRIS) {
        $('#dbutton').attr('class', 'debris_selected');
    } else {
        $('#dbutton').attr('class', 'debris');
    }

    if (this.targetPlanet.type === this.fleetHelper.PLANETTYPE_MOON) {
        $('#mbutton').attr('class', 'moon_selected');
    } else {
        $('#mbutton').attr('class', 'moon');
    }

    $('#galaxy').val(this.targetPlanet.galaxy);
    $('#system').val(this.targetPlanet.system);
    $('#position').val(this.targetPlanet.position);
    $('#type').val(this.targetPlanet.type);
    $('#distanceValue').html(tsdpkt(this.getDistance()));
    let planetName = this.getOwnPlanetName(this.targetPlanet, this.targetPlanet.type);

    if (planetName !== undefined && planetName !== '') {
        $('#targetPlanetName').html(planetName);
    } else if (this.targetPlanet.type === this.fleetHelper.PLANETTYPE_PLANET) {
        $('#targetPlanetName').html(this.loca.LOCA_ALL_PLANET);
    } else if (this.targetPlanet.type === this.fleetHelper.PLANETTYPE_DEBRIS) {
        $('#targetPlanetName').html(this.loca.LOCA_FLEET_DEBRIS);
    } else if (this.targetPlanet.type === this.fleetHelper.PLANETTYPE_MOON) {
        $('#targetPlanetName').html(this.loca.LOCA_ALL_MOON);
    } // After we've chosen another Planet update the Missions


    this.refreshMissions();
};

FleetDispatcher.prototype.refreshBriefing = function () {
    this.refreshDuration();
    this.refreshConsumption();
    this.refreshStorage();
    this.refreshFleetTimes();
    this.refreshMaxSpeed();
    this.refreshEmptySystems();
    this.refreshInactiveSystems();
};

FleetDispatcher.prototype.refreshTargetPlanet = function () {
    let targetName = '[' + this.targetPlanet.galaxy + ':' + this.targetPlanet.system + ':' + this.targetPlanet.position + '] ' + (this.targetPlanet.type === this.fleetHelper.PLANETTYPE_DEBRIS ? this.loca.LOCA_FLEET_DEBRIS : this.targetPlanet.name);
    let elem = $('#fleet2 #targetPlanet');
    let tooltip = this.targetInhabited === true ? this.loca.LOCA_ALL_PLAYER + ': ' + this.targetPlayerName : '';
    elem.toggleClass('tooltip', this.targetInhabited).toggleClass('active', this.targetInhabited).attr('title', tooltip).html(targetName);
    changeTooltip(elem);
};

FleetDispatcher.prototype.refreshDuration = function () {
    let duration = this.getDuration();
    duration = !isNaN(duration) && isFinite(duration) ? duration : 0;
    $('#fleet2 #duration').html(formatTime(duration) + ' h');
};

FleetDispatcher.prototype.refreshConsumption = function () {
    let fuelCapacity = this.getFuelCapacity();
    let deuterium = getValue($('#deuterium').val());
    let consumption = this.getConsumption();
    consumption = !isNaN(consumption) && isFinite(consumption) ? consumption : 0;
    let styleClass = consumption > fuelCapacity || consumption > deuterium ? 'overmark' : 'undermark';
    let fuelLevel = Math.ceil(100 * consumption / fuelCapacity);
    let htmlConsumption = '<span class="' + styleClass + '">' + tsdpkt(consumption) + ' (' + fuelLevel + '%)</span>';
    $('#fleet2 #consumption').html(htmlConsumption);
};

FleetDispatcher.prototype.refreshStorage = function () {
    let cargoSpace = this.getFreeCargoSpace();
    let styleClass = cargoSpace < 0 ? 'overmark' : 'undermark';
    let htmlStorage = '<span class="' + styleClass + '">' + tsdpkt(cargoSpace) + '</span>';
    $('#storage').html(htmlStorage);
};

FleetDispatcher.prototype.refreshFleetTimes = function () {
    let duration = this.getDuration();
    let holdingTime = 0;

    if (this.mission === this.fleetHelper.MISSION_EXPEDITION) {
        holdingTime = this.expeditionTime * 3600;
    }

    if (this.mission === this.fleetHelper.MISSION_HOLD) {
        holdingTime = this.holdingTime * 3600;
    }

    duration = !isNaN(duration) && isFinite(duration) ? duration : 0;
    holdingTime = !isNaN(holdingTime) && isFinite(holdingTime) ? holdingTime : 0;
    let arrivalTime = getFormatedDate(serverTime.getTime() + duration * 1000, '[d].[m].[y] [G]:[i]:[s]');
    let returnTime = getFormatedDate(serverTime.getTime() + (2 * duration + holdingTime) * 1000, '[d].[m].[y] [G]:[i]:[s]');
    $('#fleet2 #arrivalTime').html(arrivalTime);
    $('#fleet2 #returnTime').html(returnTime);

    if (this.mission === this.fleetHelper.MISSION_UNIONATTACK) {
        let union = this.getUnionData(this.union);

        if (union !== null) {
            let durationAKS = parseInt(union.time - serverTime.getTime() / 1000);
            let unionArrivalTime = formatTime(durationAKS);
            $('#durationAKS').html(unionArrivalTime);
        }
    }
};

FleetDispatcher.prototype.refreshMaxSpeed = function () {
    let maxSpeed = this.getMaxSpeed();
    $('#maxspeed').html(tsdpkt(maxSpeed));
};

FleetDispatcher.prototype.refreshEmptySystems = function () {
    $('#emptySystems').html(this.emptySystems);
};

FleetDispatcher.prototype.refreshInactiveSystems = function () {
    $('#inactiveSystems').html(this.inactiveSystems);
};

FleetDispatcher.prototype.getPlanetIcon = function (planetType, showTooltip) {
    showTooltip = showTooltip || true;
    let className = '';
    let name = '';

    switch (planetType) {
        case this.fleetHelper.PLANETTYPE_MOON:
            className = "moon";
            name = this.loca.LOCA_ALL_MOON;
            break;

        case this.fleetHelper.PLANETTYPE_DEBRIS:
            className = "tf";
            name = this.loca.LOCA_FLEET_DEBRIS;
            break;

        case this.fleetHelper.PLANETTYPE_PLANET:
        default:
            className = "planet";
            name = this.loca.LOCA_ALL_PLANET;
    }

    let title = '';

    if (showTooltip) {
        className += " tooltip js_hideTipOnMobile";
        title = ' title="' + name + '"';
    }

    return '<figure class="planetIcon ' + className + '"' + title + '></figure>';
};

FleetDispatcher.prototype.updateTarget = function (fetch = true) {
    let galaxy = clampInt(getValue($('#galaxy').val()), 1, this.fleetHelper.MAX_GALAXY, true);
    let system = clampInt(getValue($('#system').val()), 1, this.fleetHelper.MAX_SYSTEM, true);
    let position = clampInt(getValue($('#position').val()), 1, this.fleetHelper.MAX_POSITION, true);
    this.targetPlanet.galaxy = galaxy;
    this.targetPlanet.system = system;
    this.targetPlanet.position = position;

    if (this.targetPlanet.position === this.fleetHelper.EXPEDITION_POSITION) {
        this.targetPlanet.type = this.fleetHelper.PLANETTYPE_PLANET;
    }

    clearTimeout(this.fetchTargetPlayerDataTimeout);

    if (fetch && $('#fleet2').is(':visible')) {
        let that = this;
        this.fetchTargetPlayerDataTimeout = setTimeout(() => {
            that.deferred.push($.Deferred()); // check if this is the only target fetch in queue or there are other pending calls

            if (that.deferred.length === 1) {
                that.fetchTargetPlayerData();
            }

            that.deferred[that.deferred.length - 1].done(() => {
                if (that.deferred.length !== 0) {
                    that.fetchTargetPlayerData();
                }
            });
        }, 500);
    }
};

FleetDispatcher.prototype.updateTargetDropDowns = function () {
    this.resetDropDown("#slbox");
    this.resetDropDown("#aksbox");
};

FleetDispatcher.prototype.resetDropDown = function (elementId) {
    let coords = [this.targetPlanet.galaxy, this.targetPlanet.system, this.targetPlanet.position, this.targetPlanet.type].join('#');
    let selection = $(elementId).find("option[value^=\"" + coords + "\"]");

    if (selection.length === 0) {
        $(elementId).ogameDropDown('select', '-');
    }
};

FleetDispatcher.prototype.selectShortLink = function (elem) {
    let value = elem.val();
    let parts = value.split('#');

    if (parts instanceof Array && parts.length >= 5) {
        $('#galaxy').val(parts[0]);
        $('#system').val(parts[1]);
        $('#position').val(parts[2]);
        this.setTargetType(parseInt(parts[3]), true);
    }
};

FleetDispatcher.prototype.setTargetType = function (type, doNotFetchDataAboutTarget) {
    this.targetPlanet.type = type;

    if (!doNotFetchDataAboutTarget && $('#fleet2').is(':visible')) {
        clearTimeout(this.fetchTargetPlayerDataTimeout);
        this.fetchTargetPlayerDataTimeout = null;
        this.fetchTargetPlayerData();
    }
};

FleetDispatcher.prototype.selectCombatUnion = function (elem) {
    let value = elem.val();
    let parts = value.split('#');

    if (parts instanceof Array && parts.length >= 5) {
        $('#galaxy').val(parts[0]);
        $('#system').val(parts[1]);
        $('#position').val(parts[2]);
        this.setTargetType(parseInt(parts[3]), true);
        this.union = parseInt(parts[5]);
    } else {
        this.mission = this.fleetHelper.MISSION_NONE;
        this.union = 0;
    }
};

FleetDispatcher.prototype.setFleetPercent = function (speedPercent) {
    this.speedPercent = speedPercent;
};

FleetDispatcher.prototype.findOwnPlanet = function (coords, type) {
    if (!coords) return undefined;
    if (!type) return undefined;
    let planet = this.planets.find(function (elem) {
        if (elem.galaxy != coords.galaxy) return false;
        if (elem.system != coords.system) return false;
        if (elem.position != coords.position) return false;
        if (elem.type != type) return false;
        return true;
    });
    return planet;
};

FleetDispatcher.prototype.getOwnPlanetName = function (coords, type) {
    if (!coords) return undefined;
    if (!type) return undefined;
    let planet = this.findOwnPlanet(coords, type);

    if (planet) {
        return planet.name;
    }

    return undefined;
};

FleetDispatcher.prototype.getDistance = function () {
    return this.fleetHelper.calcDistance(this.currentPlanet, this.targetPlanet, this.emptySystems, this.inactiveSystems);
};

FleetDispatcher.prototype.getConsumption = function () {
    return this.fleetHelper.calcConsumption(this.shipsToSend, this.getDistance(), this.speedPercent, this.getHoldingTime(), this.mission);
};

FleetDispatcher.prototype.getDuration = function () {
    let distance = this.getDistance();
    let maxSpeed = this.getMaxSpeed();
    return this.fleetHelper.calcDuration(distance, maxSpeed, this.speedPercent, this.mission);
};

FleetDispatcher.prototype.getHoldingTime = function () {
    switch (this.mission) {
        case this.fleetHelper.MISSION_EXPEDITION:
            return this.expeditionTime;

        case this.fleetHelper.MISSION_HOLD:
            return this.holdingTime;

        default:
            return 0;
    }
};

FleetDispatcher.prototype.getMaxSpeed = function () {
    let shipIds = this.getShipIds();
    return this.fleetHelper.getMaxSpeed(shipIds);
};

FleetDispatcher.prototype.getCargoCapacity = function () {
    let that = this;
    let cargoCapacity = 0;
    this.shipsToSend.forEach(function (ship) {
        cargoCapacity += that.fleetHelper.calcCargoCapacity(ship.id, ship.number);
    });
    return Math.floor(cargoCapacity);
};

FleetDispatcher.prototype.getFuelCapacity = function () {
    let that = this;
    let fuelCapacity = 0;
    this.shipsToSend.forEach(function (ship) {
        fuelCapacity += that.fleetHelper.calcFuelCapacity(ship.id, ship.number);
    });
    return Math.floor(fuelCapacity);
};

FleetDispatcher.prototype.getFreeCargoSpace = function () {
    return this.getCargoCapacity() - this.cargoMetal - this.cargoCrystal - this.cargoDeuterium - this.cargoFood;
};

FleetDispatcher.prototype.getUsedCargoSpace = function () {
    return this.cargoMetal + this.cargoCrystal + this.cargoDeuterium + this.cargoFood;
};

FleetDispatcher.prototype.setOrders = function (ordersNew) {
    this.orders = ordersNew;
};

FleetDispatcher.prototype.setTargetInhabited = function (inhabitedNew) {
    this.targetInhabited = inhabitedNew;
};

FleetDispatcher.prototype.setTargetPlayerId = function (targetPlayerIdNew) {
    this.targetPlayerId = targetPlayerIdNew;
};

FleetDispatcher.prototype.setTargetPlayerName = function (targetPlayerNameNew) {
    this.targetPlayerName = targetPlayerNameNew;
};

FleetDispatcher.prototype.setTargetIsStrong = function (targetIsStrongNew) {
    this.targetIsStrong = targetIsStrongNew;
};

FleetDispatcher.prototype.setTargetIsOutlaw = function (targetIsOutlawNew) {
    this.targetIsOutlaw = targetIsOutlawNew;
};

FleetDispatcher.prototype.setTargetIsBuddyOrAllyMember = function (targetIsBuddyOrAllyMemberNew) {
    this.targetIsBuddyOrAllyMember = targetIsBuddyOrAllyMemberNew;
};

FleetDispatcher.prototype.setPlayerIsOutlaw = function (playerIsOutlawNew) {
    this.playerIsOutlaw = playerIsOutlawNew;
};

FleetDispatcher.prototype.setTargetPlayerColorClass = function (targetPlayerColorClassNew) {
    this.targetPlayerColorClass = targetPlayerColorClassNew;
};

FleetDispatcher.prototype.setTargetPlayerRankIcon = function (targetPlayerRankIconNew) {
    this.targetPlayerRankIcon = targetPlayerRankIconNew;
};

FleetDispatcher.prototype.setTargetPlanet = function (targetPlanetNew) {
    this.targetPlanet = targetPlanetNew;
};

FleetDispatcher.prototype.fetchTargetPlayerData = function () {
    if (!this.fetchTargetPlayerDataTimeout) {
        this.fetchTargetPlayerDataTimeout = true;
    }

    let that = this; // Prevent spaming the Planets (Destination)

    this.startLoading();
    let params = {};
    this.appendShipParams(params);
    this.appendTargetParams(params);
    this.appendTokenParams(params);
    params.union = this.union;

    if (this.hasColonizationShip()) {
        params.cs = 1;
    }

    if (this.hasRecycler()) {
        params.recycler = 1;
    }

    $.post(this.checkTargetUrl, params, function (data) {
        let status = data.status || 'failure';
        $("#additionalFleetSpeedInfo").html(data.additionalFlightSpeedinfo);
        that.fleetHelper.shipsData = data.shipsData;

        if (status === 'success') {
            let {
                targetPlanet
            } = data;

            if (targetPlanet && parseInt($('#galaxy').val()) === targetPlanet.galaxy && parseInt($('#system').val()) === targetPlanet.system && parseInt($('#position').val()) === targetPlanet.position) {
                that.refreshDataAfterAjax(data);
                that.refreshStatusBarFleet();
            }
        } else {
            that.setTargetPlayerNameOnStatusBarFleet();
            that.setTargetPlayerPlanetNameOnStatusBarFleet();

            if (that.currentPage === "fleet2") {
                that.clearMissions();
                that.updateTargetDropDowns();
                that.displayErrors(data.errors);
            }
        }

        if (that.currentPage === "fleet2") {
            if (that.mission !== that.fleetHelper.MISSION_NONE && !that.isMissionAvailable(that.mission)) {
                that.mission = that.fleetHelper.MISSION_NONE;
            } //select ACS attack if no mission is selected and if union is selected


            if (that.union !== 0 && that.hasMission() === false && that.isMissionAvailable(that.fleetHelper.MISSION_UNIONATTACK)) {
                that.selectMission(that.fleetHelper.MISSION_UNIONATTACK);
            }

            that.validateMissions();
        }

        that.updateToken(data.newAjaxToken);
        that.updateEmptySystems(data.emptySystems);
        that.updateInactiveSystems(data.inactiveSystems);
        that.refreshTargetPlanet();
        that.refreshFleet2();
        that.fetchTargetPlayerDataTimeout = null;
        that.stopLoading();

        if (data.bashingSystemLimitReached) {
            $('#attackMissionsDisabledBashingLimit').show();
        } else {
            $('#attackMissionsDisabledBashingLimit').hide();
        }

        let deferred = that.deferred.shift();

        if (deferred) {
            deferred.resolve();
        }
    });
};

FleetDispatcher.prototype.setTargetPlayerNameOnStatusBarFleet = function (serverResponse) {
    let elemTargetPlayerName = $('#statusBarFleet .targetPlayerName');
    let targetPlayerName = '';

    if (!serverResponse) {
        targetPlayerName = this.loca.LOCA_EVENTH_ENEMY_INFINITELY_SPACE;
    } else {
        if (serverResponse.targetPlanet && serverResponse.targetPlanet.type === this.fleetHelper.PLANETTYPE_DEBRIS) {
            targetPlayerName = this.loca.LOCA_EVENTH_ENEMY_INFINITELY_SPACE;
        } else {
            if (!serverResponse.targetPlayerName) {
                targetPlayerName = this.loca.LOCA_EVENTH_ENEMY_INFINITELY_SPACE;
            } else if (serverResponse.targetPlayerId === this.playerId) {
                targetPlayerName = serverResponse.targetPlayerName;
            } else {
                targetPlayerName = serverResponse.targetPlayerRankIcon + '<span class="status_abbr_{color}">{name}</span>';
                targetPlayerName = targetPlayerName.replace('{color}', serverResponse.targetPlayerColorClass);
                targetPlayerName = targetPlayerName.replace('{name}', serverResponse.targetPlayerName);
            }
        }
    }

    elemTargetPlayerName.closest('li').show();
    elemTargetPlayerName.html(targetPlayerName);
};

FleetDispatcher.prototype.setTargetPlayerPlanetNameOnStatusBarFleet = function (serverResponse) {
    let targetName;

    if (!serverResponse || serverResponse && !serverResponse.targetPlanet) {
        let planetIcon = this.getPlanetIcon(this.fleetHelper.PLANETTYPE_PLANET, false);
        targetName = `[${$('#galaxy').val()}:${$('#system').val()}:${$('#position').val()}] ${planetIcon} ?`;
    } else {
        let planetIcon = this.getPlanetIcon(serverResponse.targetPlanet.type, false);
        targetName = '[' + serverResponse.targetPlanet.galaxy + ':' + serverResponse.targetPlanet.system + ':' + serverResponse.targetPlanet.position + '] ' + planetIcon + serverResponse.targetPlanet.name;
    }

    $('#statusBarFleet .targetName').html(targetName);
};

FleetDispatcher.prototype.submitFleet2 = function (force) {
    force = force || false;
    let that = this;
    let params = {};
    this.appendTokenParams(params);
    this.appendShipParams(params);
    this.appendTargetParams(params);
    this.appendCargoParams(params);
    this.appendPrioParams(params);
    params.mission = this.mission;
    params.speed = this.speedPercent;
    params.retreatAfterDefenderRetreat = this.retreatAfterDefenderRetreat === true ? 1 : 0;
    params.lootFoodOnAttack = this.lootFoodOnAttack === true ? 1 : 0;
    params.union = this.union;
    if (force) params.force = force;
    params.holdingtime = this.getHoldingTime();
    this.startLoading();
    $.post(this.sendFleetUrl, params, function (response) {
        let data = JSON.parse(response); // request successful

        if (data.success === true) {
            fadeBox(data.message, false);
            $("#sendFleet").removeAttr("disabled");
            window.location = data.redirectUrl;
        } // request failed
        else {
            // @TODO display confirmation popup to infringe bashlimit rules
            if (data.responseArray && data.responseArray.limitReached && !data.responseArray.force) {
                that.updateToken(data.newAjaxToken || '');
                errorBoxDecision(that.loca.LOCA_ALL_NETWORK_ATTENTION, that.locadyn.localBashWarning, that.loca.LOCA_ALL_YES, that.loca.LOCA_ALL_NO, function () {
                    that.submitFleet2(true);
                });
            } else {
                that.displayErrors(data.errors);
                that.updateToken(data.newAjaxToken || '');
                $("#sendFleet").removeAttr("disabled");
                that.stopLoading();
            }
        }
    });
};

FleetDispatcher.prototype.refreshNavigationFleet2 = function (displayErrors = false) {
    let invalidInfo = null;
    const sendFleetElement = document.getElementById('sendFleet');

    if (!this.hasShipsSelected()) {
        sendFleetElement.classList.add('off');
        sendFleetElement.classList.remove('on');
        invalidInfo = this.loca.LOCA_FLEET_NO_SELECTION;
    } else if (!this.hasMission()) {
        sendFleetElement.classList.add('off');
        sendFleetElement.classList.remove('on');
        invalidInfo = this.loca.LOCA_FLEETSENDING_NO_MISSION_SELECTED;
    } else if (!this.hasFreeSlots()) {
        sendFleetElement.classList.add('off');
        sendFleetElement.classList.remove('on');
        invalidInfo = this.loca.LOCA_FLEET_NO_FREE_SLOTS;
    } else if (!this.hasEnoughFuel()) {
        sendFleetElement.classList.add('off');
        sendFleetElement.classList.remove('on');
        invalidInfo = this.loca.LOCA_FLEETSENDING_NOT_ENOUGH_FOIL;
    } else {
        sendFleetElement.classList.add('on');
        sendFleetElement.classList.remove('off');
        sendFleetElement.removeAttribute('disabled');
    }

    if (displayErrors && invalidInfo != null) {
        this.displayErrors([{
            message: invalidInfo
        }]);
    }
};

FleetDispatcher.prototype.refreshStatusBarFleet = function () {
    this.hasValidTarget();
    let missionData = this.getMissionData(this.mission);
    let missionName = missionData !== null ? missionData.name : this.loca.LOCA_FLEET_NO_SELECTION;
    let planetIcon = this.getPlanetIcon(this.targetPlanet.type, false);
    let targetName = '[' + this.targetPlanet.galaxy + ':' + this.targetPlanet.system + ':' + this.targetPlanet.position + '] ' + planetIcon + (this.targetPlanet.type === this.fleetHelper.PLANETTYPE_DEBRIS ? this.loca.LOCA_FLEET_DEBRIS : this.targetPlanet.name);
    $('#statusBarFleet .missionName').text(missionName);
    $('#statusBarFleet .targetName').html(targetName);
    let elemTargetPlayerName = $('#statusBarFleet .targetPlayerName');

    if (this.targetPlanet.type === this.fleetHelper.PLANETTYPE_DEBRIS) {
        elemTargetPlayerName.closest('li').hide();
        elemTargetPlayerName.html('');
    } else {
        let targetPlayerName = '';

        if (this.targetPlayerId === 0 || this.fleetHelper.isPlayerSpace(this.targetPlayerId)) {
            targetPlayerName = this.loca.LOCA_EVENTH_ENEMY_INFINITELY_SPACE;
        } else if (this.targetPlayerId === this.playerId) {
            targetPlayerName = this.targetPlayerName;
        } else {
            targetPlayerName = this.targetPlayerRankIcon + '<span class="status_abbr_{color}">{name}</span>';
            targetPlayerName = targetPlayerName.replace('{color}', this.targetPlayerColorClass);
            targetPlayerName = targetPlayerName.replace('{name}', this.targetPlayerName);
        }

        elemTargetPlayerName.closest('li').show();
        elemTargetPlayerName.html(targetPlayerName);
    }
};

FleetDispatcher.prototype.clearMissions = function () {
    this.mission = this.fleetHelper.MISSION_NONE;

    for (let order in this.orders) {
        this.orders[order] = false;
    }
};

FleetDispatcher.prototype.validateMissions = function () {
    let invalid = false;

    if (!this.hasShipsSelected()) {
        invalid = true;
    } else if (!this.hasFreeSlots()) {
        invalid = true;
    } else if (!this.hasValidTarget() || Object.values(this.orders).indexOf(true) === -1) {
        invalid = true;
    }

    if (invalid) {
        this.clearMissions();
    }
};

FleetDispatcher.prototype.refreshMissions = function () {
    $('#missions>li>a.selected').removeClass('selected'); //select expedition if no mission is selected and if it is the only one available

    if (this.isOnlyMissionAvailable(this.fleetHelper.MISSION_EXPEDITION)) {
        if (this.hasMission() === false) {
            this.selectMission(this.fleetHelper.MISSION_EXPEDITION);
        }

        this.updateExpeditionTime();
    } // refresh mission buttons


    for (let mission in this.orders) {
        let missionData = this.getMissionData(mission);
        $('#missions>li#button' + mission).toggleClass('on', missionData.isAvailable === true).toggleClass('off', missionData.isAvailable === false);
    } // @TODO LOCA_FLEET_NO_SELECTION when no mission selected
    // refresh mission


    let missionData = this.getMissionData(this.mission);

    if (missionData !== null) {
        $('.missionName').text(missionData.name);
        $('.mission_description').text(missionData.description);
        $('#missions>li#button' + this.mission + '>a').toggleClass('selected', true);

        if (missionData.isAvailable === false) {
            $('.briefing_overlay').show();
            $('#missionNameWrapper').addClass('off');
        } else {
            $('.briefing_overlay').hide();
            $('#missionNameWrapper').removeClass('off');
        }
    } else {
        $('.briefing_overlay').show();
        $('#missionNameWrapper').addClass('off');
        $('.missionName').text(this.loca.LOCA_FLEET_NO_SELECTION);
        $('.mission_description').text('');
    }

    $('form input[name="mission"]').val(this.mission);
    $('#fightAfterRetreat,' + '#aks,' + '#holdtimeline,' + '#expeditiontimeline,' + '.prioButton,' + '.fleet_dispatch_toggle_wrap').hide();

    if (this.mission === this.fleetHelper.MISSION_ATTACK) {
        $('#fightAfterRetreat').show();
        $('.prioButton').show();
        $('.fleet_dispatch_toggle_wrap').show();
    }

    if (this.mission === this.fleetHelper.MISSION_UNIONATTACK) {
        $('#aks').show();
        $('.prioButton').show();
        $('.fleet_dispatch_toggle_wrap').show();
    }

    if (this.mission === this.fleetHelper.MISSION_DESTROY) {
        $('.prioButton').show();
        $('.fleet_dispatch_toggle_wrap').show();
    }

    if (this.mission === this.fleetHelper.MISSION_HOLD) {
        $('#holdtimeline').show();
    }

    if (this.mission === this.fleetHelper.MISSION_EXPEDITION) {
        $('#expeditiontimeline').show();
    }
};

FleetDispatcher.prototype.refreshCargo = function () {
    formatNumber($('#metal'), this.cargoMetal);
    formatNumber($('#crystal'), this.cargoCrystal);
    formatNumber($('#deuterium'), this.cargoDeuterium);

    if (this.lifeformEnabled) {
        formatNumber($('#food'), this.cargoFood);
    }

    let cargoSpaceUsed = this.getUsedCargoSpace();
    let cargoSpaceFree = this.getFreeCargoSpace();
    let cargoCapacity = this.getCargoCapacity();
    let styleClass = cargoSpaceFree < 0 ? 'overmark' : 'undermark';
    $('#remainingresources').html('<span class="' + styleClass + '">' + tsdpkt(cargoSpaceFree) + '</style>');
    $('#maxresources').html(tsdpkt(cargoCapacity));
    $('#loadRoom .bar_container').data('currentAmount', cargoSpaceUsed).data('capacity', cargoCapacity);
    refreshBars('bar_container', 'filllevel_bar');
};

FleetDispatcher.prototype.refreshPriorities = function () {
    $('form input[name="prioMetal"]').val(this.prioMetal);
    $('form input[name="prioCrystal"]').val(this.prioCrystal);
    $('form input[name="prioDeuterium"]').val(this.prioDeuterium);

    if (this.lifeformEnabled) {
        $('form input[name="prioFood"]').val(this.prioFood);
    }

    $('#prioM1').attr('src', '/img/icons/4b53e83f8b8583ea279fd26f3a55a5.gif');
    $('#prioM2').attr('src', '/img/icons/8afbd59ffe091239a7c6f1e961b267.gif');
    $('#prioM3').attr('src', '/img/icons/4acc67e1ca4d8debb1b114abcb7c1e.gif');

    if (this.lifeformEnabled) {
        $('#prioM4').attr('src', '/img/icons/8860dee24c03537549ad782922b6b5.gif');
    }

    switch (this.prioMetal) {
        case 1:
            $('#prioM1').attr('src', '/img/icons/b357323b99e20a46fc0b2495728351.gif');
            break;

        case 2:
            $('#prioM2').attr('src', '/img/icons/f8959fe540cd329f3a764ad9aeaf93.gif');
            break;

        case 3:
            $('#prioM3').attr('src', '/img/icons/823b3270ed0f4a243287c12d4ee5f8.gif');
            break;

        case 4:
            $('#prioM4').attr('src', '/img/icons/43bf98a73ba1abb53860f2c5b8edc3.gif');
            break;
    }

    $('#prioC1').attr('src', '/img/icons/4b53e83f8b8583ea279fd26f3a55a5.gif');
    $('#prioC2').attr('src', '/img/icons/8afbd59ffe091239a7c6f1e961b267.gif');
    $('#prioC3').attr('src', '/img/icons/4acc67e1ca4d8debb1b114abcb7c1e.gif');

    if (this.lifeformEnabled) {
        $('#prioC4').attr('src', '/img/icons/8860dee24c03537549ad782922b6b5.gif');
    }

    switch (this.prioCrystal) {
        case 1:
            $('#prioC1').attr('src', '/img/icons/b357323b99e20a46fc0b2495728351.gif');
            break;

        case 2:
            $('#prioC2').attr('src', '/img/icons/f8959fe540cd329f3a764ad9aeaf93.gif');
            break;

        case 3:
            $('#prioC3').attr('src', '/img/icons/823b3270ed0f4a243287c12d4ee5f8.gif');
            break;

        case 4:
            $('#prioC4').attr('src', '/img/icons/43bf98a73ba1abb53860f2c5b8edc3.gif');
            break;
    }

    $('#prioD1').attr('src', '/img/icons/4b53e83f8b8583ea279fd26f3a55a5.gif');
    $('#prioD2').attr('src', '/img/icons/8afbd59ffe091239a7c6f1e961b267.gif');
    $('#prioD3').attr('src', '/img/icons/4acc67e1ca4d8debb1b114abcb7c1e.gif');

    if (this.lifeformEnabled) {
        $('#prioD4').attr('src', '/img/icons/8860dee24c03537549ad782922b6b5.gif');
    }

    switch (this.prioDeuterium) {
        case 1:
            $('#prioD1').attr('src', '/img/icons/b357323b99e20a46fc0b2495728351.gif');
            break;

        case 2:
            $('#prioD2').attr('src', '/img/icons/f8959fe540cd329f3a764ad9aeaf93.gif');
            break;

        case 3:
            $('#prioD3').attr('src', '/img/icons/823b3270ed0f4a243287c12d4ee5f8.gif');
            break;

        case 4:
            $('#prioD4').attr('src', '/img/icons/43bf98a73ba1abb53860f2c5b8edc3.gif');
            break;
    }

    if (this.lifeformEnabled) {
        $('#prioF1').attr('src', '/img/icons/4b53e83f8b8583ea279fd26f3a55a5.gif');
        $('#prioF2').attr('src', '/img/icons/8afbd59ffe091239a7c6f1e961b267.gif');
        $('#prioF3').attr('src', '/img/icons/4acc67e1ca4d8debb1b114abcb7c1e.gif');
        $('#prioF4').attr('src', '/img/icons/8860dee24c03537549ad782922b6b5.gif');

        switch (this.prioFood) {
            case 1:
                $('#prioF1').attr('src', '/img/icons/b357323b99e20a46fc0b2495728351.gif');
                break;

            case 2:
                $('#prioF2').attr('src', '/img/icons/f8959fe540cd329f3a764ad9aeaf93.gif');
                break;

            case 3:
                $('#prioF3').attr('src', '/img/icons/823b3270ed0f4a243287c12d4ee5f8.gif');
                break;

            case 4:
                $('#prioF4').attr('src', '/img/icons/43bf98a73ba1abb53860f2c5b8edc3.gif');
                break;
        }
    }
};

FleetDispatcher.prototype.isMissionAvailable = function (missionId) {
    return this.orders[missionId] === true;
};

FleetDispatcher.prototype.hasMission = function () {
    return this.fleetHelper.isMissionValid(this.mission) && this.isMissionAvailable(this.mission);
};

FleetDispatcher.prototype.hasFreePlanetSlots = function () {
    return this.planetCount < this.fleetHelper.MAX_NUMBER_OF_PLANETS;
};

FleetDispatcher.prototype.getAvailableMissions = function () {
    let missions = [];

    for (let mission in this.orders) {
        if (this.orders[mission] === true) {
            missions.push(parseInt(mission));
        }
    }

    return missions;
};

FleetDispatcher.prototype.isOnlyMissionAvailable = function (missionId) {
    let missionsAvailable = this.getAvailableMissions();
    return missionsAvailable.length === 1 && missionsAvailable[0] === missionId;
};

FleetDispatcher.prototype.getMissionData = function (missionId) {
    if (missionId === this.fleetHelper.MISSION_NONE) {
        return null;
    }

    return {
        isAvailable: this.orders[missionId] || false,
        name: this.orderNames[missionId] || '',
        description: this.orderDescriptions[missionId] || ''
    };
};

FleetDispatcher.prototype.getUnionData = function (unionId) {
    for (let i = 0; i < this.unions.length; ++i) {
        if (this.unions[i].id === unionId) {
            return this.unions[i];
        }
    }

    return null;
};

FleetDispatcher.prototype.selectMaxMetal = function () {
    let amount;
    amount = this.getCargoCapacity() - this.cargoCrystal - this.cargoDeuterium - this.cargoFood;
    amount = Math.max(amount, 0);
    amount = Math.min(amount, this.metalOnPlanet);
    this.cargoMetal = Math.max(this.cargoMetal, amount);
};

FleetDispatcher.prototype.selectMinMetal = function () {
    this.cargoMetal = 0;
};

FleetDispatcher.prototype.selectMaxCrystal = function () {
    let amount;
    amount = this.getCargoCapacity() - this.cargoMetal - this.cargoDeuterium - this.cargoFood;
    amount = Math.max(amount, 0);
    amount = Math.min(amount, this.crystalOnPlanet);
    this.cargoCrystal = Math.max(this.cargoCrystal, amount);
};

FleetDispatcher.prototype.getDeuteriumOnPlanetWithoutConsumption = function () {
    return Math.max(0, this.deuteriumOnPlanet - this.getConsumption());
};

FleetDispatcher.prototype.selectMinCrystal = function () {
    this.cargoCrystal = 0;
};

FleetDispatcher.prototype.selectMaxDeuterium = function () {
    let amount;
    amount = this.getCargoCapacity() - this.cargoMetal - this.cargoCrystal - this.cargoFood;
    amount = Math.max(amount, 0);
    amount = Math.min(amount, this.getDeuteriumOnPlanetWithoutConsumption());
    this.cargoDeuterium = Math.max(this.cargoDeuterium, amount);
};

FleetDispatcher.prototype.selectMinDeuterium = function () {
    this.cargoDeuterium = 0;
};

FleetDispatcher.prototype.selectMaxFood = function () {
    let amount;
    amount = this.getCargoCapacity() - this.cargoMetal - this.cargoCrystal - this.cargoDeuterium;
    amount = Math.max(amount, 0);
    amount = Math.min(amount, this.foodOnPlanet);
    this.cargoFood = Math.max(this.cargoFood, amount);
};

FleetDispatcher.prototype.selectMinFood = function () {
    this.cargoFood = 0;
};

FleetDispatcher.prototype.selectMaxAll = function () {
    this.cargoMetal = 0;
    this.cargoCrystal = 0;
    this.cargoDeuterium = 0;
    this.selectMaxDeuterium();
    this.selectMaxCrystal();
    this.selectMaxMetal();

    if ($("#food_box").length) {
        this.cargoFood = 0;
        this.selectMaxFood();
    }
};

FleetDispatcher.prototype.resetCargo = function () {
    this.cargoMetal = 0;
    this.cargoCrystal = 0;
    this.cargoDeuterium = 0;
    this.cargoFood = 0;
};

FleetDispatcher.prototype.updateCargo = function () {
    this.updateMetal();
    this.updateCrystal();
    this.updateDeuterium();

    if ($("#food_box").length) {
        this.updateFood();
    }
};

FleetDispatcher.prototype.updateMetal = function () {
    let amount = getValue($('#metal').val());
    let cargoSpace = this.getCargoCapacity() - this.cargoCrystal - this.cargoDeuterium - this.cargoFood;
    this.cargoMetal = Math.min(amount, this.metalOnPlanet, cargoSpace);
};

FleetDispatcher.prototype.updateCrystal = function () {
    let amount = getValue($('#crystal').val());
    let cargoSpace = this.getCargoCapacity() - this.cargoMetal - this.cargoDeuterium - this.cargoFood;
    this.cargoCrystal = Math.min(amount, this.crystalOnPlanet, cargoSpace);
};

FleetDispatcher.prototype.updateDeuterium = function () {
    let amount = getValue($('#deuterium').val());
    let cargoSpace = this.getCargoCapacity() - this.cargoMetal - this.cargoCrystal - this.cargoFood;
    let deuteriumOnPlanetWithoutConsumption = this.getDeuteriumOnPlanetWithoutConsumption();
    this.cargoDeuterium = Math.min(amount, this.deuteriumOnPlanet, cargoSpace, deuteriumOnPlanetWithoutConsumption);
};

FleetDispatcher.prototype.updateFood = function () {
    if (!this.lifeformEnabled) return;
    let amount = getValue($('#food').val());
    let cargoSpace = this.getCargoCapacity() - this.cargoMetal - this.cargoCrystal - this.cargoDeuterium;
    this.cargoFood = Math.min(amount, this.foodOnPlanet, cargoSpace);
};

FleetDispatcher.prototype.selectMission = function (mission) {
    if (this.fleetHelper.isMissionValid(mission)) {
        this.mission = mission;
    }

    this.updateHoldingTime();
    this.updateExpeditionTime();
    this.refresh();
};

FleetDispatcher.prototype.selectRetreatAfterDefenderRetreat = function (retreatAfterDefenderRetreat) {
    this.retreatAfterDefenderRetreat = retreatAfterDefenderRetreat;
};

FleetDispatcher.prototype.selectLootFoodOnAttack = function (lootFoodOnAttack) {
    this.lootFoodOnAttack = lootFoodOnAttack;
};

FleetDispatcher.prototype.updateHoldingTime = function () {
    if (this.mission === this.fleetHelper.MISSION_HOLD) {
        this.holdingTime = getValue($('#fleet2 #holdingtime').val());
    } else {
        this.holdingTime = 0;
    }
};

FleetDispatcher.prototype.updateExpeditionTime = function () {
    if (this.mission === this.fleetHelper.MISSION_EXPEDITION) {
        this.expeditionTime = getValue($('#fleet2 #expeditiontime').val());
    } else {
        this.expeditionTime = 0;
    }
};

FleetDispatcher.prototype.selectPriority = function (type, priority) {
    if (!this.lifeformEnabled && priority === 4) return;

    switch (type) {
        case 'metal':
            if (this.prioMetal === priority) break;
            if (this.prioCrystal === priority) this.prioCrystal = this.prioMetal;
            if (this.prioDeuterium === priority) this.prioDeuterium = this.prioMetal;
            if (this.prioFood === priority) this.prioFood = this.prioMetal;
            this.prioMetal = priority;
            break;

        case 'crystal':
            if (this.prioCrystal === priority) break;
            if (this.prioMetal === priority) this.prioMetal = this.prioCrystal;
            if (this.prioDeuterium === priority) this.prioDeuterium = this.prioCrystal;
            if (this.prioFood === priority) this.prioFood = this.prioCrystal;
            this.prioCrystal = priority;
            break;

        case 'deuterium':
            if (this.prioDeuterium === priority) break;
            if (this.prioMetal === priority) this.prioMetal = this.prioDeuterium;
            if (this.prioCrystal === priority) this.prioCrystal = this.prioDeuterium;
            if (this.prioFood === priority) this.prioFood = this.prioDeuterium;
            this.prioDeuterium = priority;
            break;

        case 'food':
            if (this.prioFood === priority) break;
            if (this.prioMetal === priority) this.prioMetal = this.prioFood;
            if (this.prioCrystal === priority) this.prioCrystal = this.prioFood;
            if (this.prioDeuterium === priority) this.prioDeuterium = this.prioFood;
            this.prioFood = priority;
            break;
    }
};

FleetDispatcher.prototype.refreshDataAfterAjax = function (data) {
    this.setOrders(data.orders);
    this.setTargetInhabited(data.targetInhabited);
    this.setTargetPlayerId(data.targetPlayerId);
    this.setTargetPlayerName(data.targetPlayerName);
    this.setTargetIsStrong(data.targetIsStrong);
    this.setTargetIsOutlaw(data.targetIsOutlaw);
    this.setTargetIsBuddyOrAllyMember(data.targetIsBuddyOrAllyMember);
    this.setTargetPlayerColorClass(data.targetPlayerColorClass);
    this.setTargetPlayerRankIcon(data.targetPlayerRankIcon);
    this.setPlayerIsOutlaw(data.playerIsOutlaw);
    this.setTargetPlanet(data.targetPlanet);
};
function FleetHelper(cfg) {
    // player specific ship data
    this.shipsData = cfg.shipsData; // game constants

    this.COLONIZATION_ENABLED = cfg.COLONIZATION_ENABLED;
    this.MAX_NUMBER_OF_PLANETS = cfg.MAX_NUMBER_OF_PLANETS;
    this.PLAYER_ID_LEGOR = cfg.PLAYER_ID_LEGOR;
    this.PLAYER_ID_SPACE = cfg.PLAYER_ID_SPACE; // mission constants

    this.MISSION_NONE = cfg.missions.MISSION_NONE;
    this.MISSION_ATTACK = cfg.missions.MISSION_ATTACK;
    this.MISSION_UNIONATTACK = cfg.missions.MISSION_UNIONATTACK;
    this.MISSION_TRANSPORT = cfg.missions.MISSION_TRANSPORT;
    this.MISSION_DEPLOY = cfg.missions.MISSION_DEPLOY;
    this.MISSION_HOLD = cfg.missions.MISSION_HOLD;
    this.MISSION_ESPIONAGE = cfg.missions.MISSION_ESPIONAGE;
    this.MISSION_COLONIZE = cfg.missions.MISSION_COLONIZE;
    this.MISSION_RECYCLE = cfg.missions.MISSION_RECYCLE;
    this.MISSION_DESTROY = cfg.missions.MISSION_DESTROY;
    this.MISSION_MISSILEATTACK = cfg.missions.MISSION_MISSILEATTACK;
    this.MISSION_EXPEDITION = cfg.missions.MISSION_EXPEDITION; // galaxy related constants

    this.DONUT_GALAXY = cfg.DONUT_GALAXY;
    this.DONUT_SYSTEM = cfg.DONUT_SYSTEM;
    this.MAX_GALAXY = cfg.MAX_GALAXY;
    this.MAX_SYSTEM = cfg.MAX_SYSTEM;
    this.MAX_POSITION = cfg.MAX_POSITION;
    this.EXPEDITION_POSITION = cfg.EXPEDITION_POSITION; // fleet related constants

    this.SPEEDFAKTOR_FLEET_PEACEFUL = cfg.SPEEDFAKTOR_FLEET_PEACEFUL;
    this.SPEEDFAKTOR_FLEET_WAR = cfg.SPEEDFAKTOR_FLEET_WAR;
    this.SPEEDFAKTOR_FLEET_HOLDING = cfg.SPEEDFAKTOR_FLEET_HOLDING;
    this.FLEET_DEUTERIUM_SAVE_FACTOR = cfg.FLEET_DEUTERIUM_SAVE_FACTOR; // target types

    this.PLANETTYPE_PLANET = cfg.PLANETTYPE_PLANET;
    this.PLANETTYPE_DEBRIS = cfg.PLANETTYPE_DEBRIS;
    this.PLANETTYPE_MOON = cfg.PLANETTYPE_MOON;
}

FleetHelper.prototype.isPlayerSpace = function (playerId) {
    return playerId === this.PLAYER_ID_SPACE;
};

FleetHelper.prototype.isPlayerLegor = function (playerId) {
    return playerId === this.PLAYER_ID_LEGOR;
};

FleetHelper.prototype.calcDistance = function (from, to, emptySystems, inactiveSystems) {
    let diffGalaxy = Math.abs(from.galaxy - to.galaxy);
    let diffSystem = Math.abs(from.system - to.system);
    let diffPlanet = Math.abs(from.position - to.position);

    if (diffGalaxy != 0) {
        let diff2 = Math.abs(diffGalaxy - this.MAX_GALAXY);

        if (this.DONUT_GALAXY == 1 && diff2 < diffGalaxy) {
            return diff2 * 20000;
        } else {
            return diffGalaxy * 20000;
        }
    } else if (diffSystem != 0) {
        let diff2 = Math.abs(diffSystem - this.MAX_SYSTEM);
        let deltaSystem = 0;

        if (this.DONUT_SYSTEM == 1 && diff2 < diffSystem) {
            deltaSystem = diff2;
        } else {
            deltaSystem = diffSystem;
        }

        deltaSystem = Math.max(deltaSystem - emptySystems - inactiveSystems, 1);
        return deltaSystem * 5 * 19 + 2700;
    } else if (diffPlanet != 0) {
        return diffPlanet * 5 + 1000;
    } else {
        return 5;
    }
};

FleetHelper.prototype.getFleetSpeedFaktor = function (mission) {
    let peaceful = [this.MISSION_TRANSPORT, this.MISSION_DEPLOY, this.MISSION_COLONIZE, this.MISSION_EXPEDITION];
    let war = [this.MISSION_ATTACK, this.MISSION_UNIONATTACK, this.MISSION_ESPIONAGE, this.MISSION_RECYCLE, this.MISSION_DESTROY, this.MISSION_MISSILEATTACK];
    let holding = [this.MISSION_HOLD];
    if (peaceful.includes(mission)) return this.SPEEDFAKTOR_FLEET_PEACEFUL;else if (war.includes(mission)) return this.SPEEDFAKTOR_FLEET_WAR;else if (holding.includes(mission)) return this.SPEEDFAKTOR_FLEET_HOLDING;else return 0;
};

FleetHelper.prototype.calcDuration = function (distance, maxSpeed, speedPercent, mission) {
    mission = mission || this.MISSION_NONE;
    return Math.max(Math.round((35000 / speedPercent * Math.sqrt(distance * 10 / maxSpeed) + 10) / this.getFleetSpeedFaktor(mission)), 1);
};

FleetHelper.prototype.calcConsumption = function (ships, distance, speedPercent, holdingTime, mission) {
    mission = mission || this.MISSION_NONE;
    let that = this;
    let consumption = 0;
    let holdingCosts = 0;
    let shipIds = ships.map(function (ship) {
        return ship.id;
    });
    let maxSpeed = this.getMaxSpeed(shipIds);
    let duration = this.calcDuration(distance, maxSpeed, speedPercent, mission);
    let speedValue = Math.max(0.5, duration * this.getFleetSpeedFaktor(mission) - 10);
    ships.forEach(function (ship) {
        if (ship.number) {
            let shipData = that.getShipData(ship.id);
            let shipSpeedValue = 35000 / speedValue * Math.sqrt(distance * 10 / shipData.speed);
            holdingCosts += shipData.fuelConsumption * ship.number * holdingTime;
            consumption += Math.max(shipData.fuelConsumption * ship.number * distance / 35000 * (shipSpeedValue / 10 + 1) * (shipSpeedValue / 10 + 1), 1);
        }
    });
    consumption = Math.round(consumption);
    consumption += holdingTime > 0 ? Math.max(Math.floor(holdingCosts / 10), 1) : 0;
    return consumption;
};

FleetHelper.prototype.calcCargoCapacity = function (shipId, number) {
    let shipData = this.getShipData(shipId);
    return Math.floor(shipData.baseCargoCapacity * number);
};

FleetHelper.prototype.calcFuelCapacity = function (shipId, number) {
    let shipData = this.getShipData(shipId);
    return shipData.baseFuelCapacity * number;
};

FleetHelper.prototype.getMaxSpeed = function (shipIds) {
    let that = this;
    let speeds = [];
    shipIds.forEach(function (shipId) {
        let shipData = that.getShipData(shipId);
        if (shipData && shipData.speed) speeds.push(shipData.speed);
    });
    let maxSpeed = speeds.reduce(function (a, b) {
        return Math.min(a, b);
    }, 1000000000);
    return maxSpeed;
};

FleetHelper.prototype.getShipData = function (shipId) {
    // shipsData is undefined when you switch to fast
    // the Planets (Target Planet)
    if (typeof this.shipsData === 'undefined') return null;
    return this.shipsData[shipId];
};

FleetHelper.prototype.isAggressiveMission = function (mission) {
    switch (mission) {
        case this.MISSION_ATTACK:
        case this.MISSION_UNIONATTACK:
        case this.MISSION_ESPIONAGE:
        case this.MISSION_DESTROY:
            return true;
    }

    return false;
};

FleetHelper.prototype.isMissionValid = function (mission) {
    switch (mission) {
        case this.MISSION_ATTACK:
        case this.MISSION_UNIONATTACK:
        case this.MISSION_TRANSPORT:
        case this.MISSION_DEPLOY:
        case this.MISSION_HOLD:
        case this.MISSION_ESPIONAGE:
        case this.MISSION_COLONIZE:
        case this.MISSION_RECYCLE:
        case this.MISSION_DESTROY:
        case this.MISSION_MISSILEATTACK:
        case this.MISSION_EXPEDITION:
            return true;
    }

    return false;
};
function reloadEventbox(m) {
    var n;
    if (typeof(m) == "string") {
        n = $.parseJSON(m)
    } else {
        n = m
    }
    var o = typeof n.eventText;
    var l = parseInt(n.friendly) + parseInt(n.neutral) + parseInt(n.hostile);
    if (l > 0) {
        if ($("#eventboxFilled .event_list").length > 0) {
            return
        }
        var k;
        var p = $('<p class="event_list">');
        if ($("body").attr("id") === "galaxy") {
            p.append('<span class="next_event">' + eventboxLoca.nextEvent + ': <span class="countdown" id="tempcounter" name="countdown"></span></span>').append('<span class="next_event">' + eventboxLoca.nextEventText + ': <span class="' + n.eventType + '">' + n.eventText + "</span></span>");
            k = p
        } else {
            var h = (l === 1) ? eventboxLoca.mission : eventboxLoca.missions;
            k = $('<p class="event_list">' + l + " " + h + ": </p>");
            if (n.friendly) {
                k.append('<span class="undermark">' + n.friendly + " " + eventboxLoca.friendly + "</span>")
            }
            if (n.neutral) {
                if (n.friendly) {
                    k.append(", ")
                }
                k.append('<span class="middlemark">' + n.neutral + " " + eventboxLoca.neutral + "</span>")
            }
            if (n.hostile) {
                if (n.friendly || n.neutral) {
                    k.append(", ")
                }
                k.append('<span class="overmark">' + n.hostile + " " + eventboxLoca.hostile + "</span>")
            }
            p.append('<span class="next_event">' + eventboxLoca.nextEvent + ': <span class="countdown" id="tempcounter" name="countdown"></span></span>').append('<span class="next_event">' + eventboxLoca.nextEventText + ': <span class="' + n.eventType + '">' + n.eventText + "</span></span>");
            k.append(p)
        }
        $("#eventboxFilled").prepend(k)
    }
    if (o === "string" || o === "undefined") {
        $("#eventboxLoading").hide();
        if (l > 0) {
            $("#eventboxBlank").hide();
            $("#eventboxFilled").show();
            new simpleCountdown(getElementByIdWithCache("tempcounter"), n.eventTime, function () {
                setTimeout(getAjaxEventbox, 3000)
            })
        } else {
            $("#eventboxBlank").show();
            $("#eventboxFilled").hide()
        }
    }
}
function reloadResources(d, f) {
    var e;
    if (typeof(d) == "string") {
        e = $.parseJSON(d)
    } else {
        e = d
    }
    reloadResourceTicker(e);
    $("#resources_metal").html(e.metal.resources["actualFormat"]);
    $("#resources_metal").attr("class", e.metal["class"]);
    changeTooltip($("#metal_box"), e.metal.tooltip);
    $("#resources_crystal").html(e.crystal.resources["actualFormat"]);
    $("#resources_crystal").attr("class", e.crystal["class"]);
    changeTooltip($("#crystal_box"), e.crystal.tooltip);
    $("#resources_deuterium").html(e.deuterium.resources["actualFormat"]);
    $("#resources_deuterium").attr("class", e.deuterium["class"]);
    changeTooltip($("#deuterium_box"), e.deuterium.tooltip);
    $("#resources_energy").html(e.energy.resources["actualFormat"]);
    $("#resources_energy").attr("class", e.energy["class"]);
    changeTooltip($("#energy_box"), e.energy.tooltip);
    $("#resources_darkmatter").html(e.darkmatter.resources["actualFormat"]);
    $("#resources_darkmatter").attr("class", e.darkmatter["class"]);
    changeTooltip($("#darkmatter_box"), e.darkmatter.tooltip);
    honorScore = e.honorScore;
    darkMatter = e.darkmatter.resources["actual"];
    if (typeof(f) == "function") {
        f(e)
    }
}
function reloadResourceTicker(b) {
    if (typeof(b) == "string") {
        b = $.parseJSON(b)
    }
    resourceTickerMetal = {
        available: b.metal.resources["actual"],
        limit: b.metal.resources["max"],
        production: b.metal.resources["production"],
        valueElem: "resources_metal"
    };
    resourceTickerCrystal = {
        available: b.crystal.resources["actual"],
        limit: b.crystal.resources["max"],
        production: b.crystal.resources["production"],
        valueElem: "resources_crystal"
    };
    resourceTickerDeuterium = {
        available: b.deuterium.resources["actual"],
        limit: b.deuterium.resources["max"],
        production: b.deuterium.resources["production"],
        valueElem: "resources_deuterium"
    };
    if (!vacation) {
        if (typeof(metalTicker) != "undefined") {
            timerHandler.removeCallback(metalTicker.intervalObj)
        }
        if (typeof(crystalTicker) != "undefined") {
            timerHandler.removeCallback(crystalTicker.intervalObj)
        }
        if (typeof(deuteriumTicker) != "undefined") {
            timerHandler.removeCallback(deuteriumTicker.intervalObj)
        }
        metalTicker = new resourceTicker(resourceTickerMetal);
        crystalTicker = new resourceTicker(resourceTickerCrystal);
        deuteriumTicker = new resourceTicker(resourceTickerDeuterium)
    }
}
function reloadRightmenu(b) {
    $.get(b, {}, displayRightmenu)
}
function displayRightmenu(b) {
    $("#rechts").replaceWith(b);
    initPlanetSorting()
}
function ajaxFormSubmit(l, f, k) {
    var h = $("#" + l + "").serialize();
    var g = null;
    if (k != null && typeof k == "function") {
        g = k
    }
    $.ajax({type: "POST", url: f, data: h, success: g})
}
function initConnectionErrorFunction() {
    if (isMobile) {
        document.addEventListener("deviceready", function () {
            $(document).ajaxError(function (h, g, e, f) {
                HostApp.ShowNoConnectionScreen()
            })
        }, false)
    }
}
function initAllianceInfo() {
    initConnectionErrorFunction();
    initTooltips();
    initOverlays();
    initHideElements()
}
function manageTabs(f) {
    var d = "#" + f;
    var e = $(d).attr("rel");
    if ($(d).hasClass("opened")) {
        $(d).addClass("closed");
        $(d).removeClass("opened");
        $("#" + e).hide()
    } else {
        $(d).removeClass("closed");
        $(d).addClass("opened");
        $("#" + e).show();
        $(".alliancetexts").keyup()
    }
}
function ajaxLoad(b) {
    $("#eins select").ogameDropDown("destroy");
    $("#eins").html('<div class="ajaxLoad">' + LocalizationStrings.loading + "</div>");
    console.log('AjaxLoad()');
    $.post(b, {ajax: 1}, function (a) {
        $("#eins").html(a).find("select").ogameDropDown()
    })
}
function initAlliance() {
    initToggleHeader("alliance");
    $(".navi").click(function () {
        var b = $(this).attr("rel");
        $("#tab-ally li").removeClass("aktiv");
        $(this).parent().addClass("aktiv");
        hideTipsOnTabChange();
        ajaxLoad(b)
    })
}
function initAllianceBroadcast() {
    $("#allianceBroadCast").submit(function () {
        var b = $(this);
        if ($.trim(b.find('textarea[name="text"]').val()).length == 0) {
            errorBoxNotify(LocalizationStrings.error, chatLoca.TEXT_EMPTY, LocalizationStrings.ok);
            return false
        }
        $.post(b.attr("action"), b.serialize() + "&ajax=1", function (f) {
            try {
                var a = $.parseJSON(f);
                if (typeof a.message != "undefined") {
                    $('textarea[name="text"]').val("");
                    errorBoxNotify(LocalizationStrings.error, a.message, LocalizationStrings.ok)
                }
            } catch (e) {
                $("#eins").html(f)
            }
        });
        return false
    })
}
function initAllianceManagement() {
    $(".contentz").tabs({activate: hideTipsOnTabChange});
    $(".allyTagChange").tabs({activate: hideTipsOnTabChange});
    $(".quitAlly").tabs({activate: hideTipsOnTabChange});
    $(".dissolve").bind("click", dissolve);
    $(".deleteRank").bind("click", deleteRank);
    $(".transferLeadership").bind("click", transferLeadership);
    $(".takeoverLeadership").bind("click", takeoverLeadership)
}
function initBBCodeEditor(s, H, C, E, D, v) {
    var A;
    if (typeof(E) == "undefined" || E == null) {
        A = $("textarea:not(.markItUpEditor)")
    } else {
        A = $(E).filter(":not(.markItUpEditor)")
    }
    if (A.length == 0) {
        return
    }
    var C = C || false;
    var u = [];
    for (var B = 6; B <= 30; B += 2) {
        u.push({
            name: B,
            openWith: "[size=" + B + "]",
            closeWith: "[/size]",
            placeHolder: "Text",
            className: "fontSize" + B
        })
    }
    var G = [];
    $.each(H, function (a, b) {
        G.push({name: b, replaceWith: "[item]" + a + "[/item]"})
    });
    function J(b) {
        if (b.selection.length == 0) {
            return
        }
        var a = $(b.textarea);
        var e = a.getSelection();
        var g = a.val().indexOf(b.openWith, e.start);
        var c = g + b.openWith.length;
        var f = typeof(b.placeHolder) == "string" ? b.placeHolder.length : 0;
        var d = {start: c, end: c + f};
        a.setSelection(d)
    }

    function I(b) {
        var d = b.openWith;
        var a = $(b.textarea);
        var e = a.getSelection();
        a.siblings(".colorpicker").val("").colorpicker("open").colorpicker("option", "close", function (g, f) {
            var k = d.replace(/%colorCode%/, f.formatted);
            var h = "%colorCode%".length - f.formatted.length;
            e.start = e.start - h;
            e.end = e.end - h;
            a.val(a.val().replace(d, k)).setSelection(e)
        });
        var c = a.siblings(".markItUpHeader").find("." + b.className);
        $(".ui-colorpicker:visible").css("top", c.offset().top + c.height()).css("left", c.offset().left);
        $(".ui-colorpicker").draggable();
        $(".ui-colorpicker-rgb-r .ui-colorpicker-number").focus();
        return b
    }

    function w(a) {
        var f = $(a.textarea);
        var e = f.getSelection();
        var d = a.openWith;
        var b = $("#backgroundImagePicker");
        if (b.is(":visible")) {
            b.dialog("close")
        }
        b.find("input:checked").prop("checked", false);
        b.find(".url").val("http://").focus();
        openOverlay(b, {
            type: "inline",
            title: s.backgroundImage,
            close: function () {
                var g = b.find(".url").val();
                var l = b.find(".repeatX:checked").length;
                var m = b.find(".repeatY:checked").length;
                var h = "";
                if (l && m) {
                    h = "yes"
                } else {
                    if (l) {
                        h = "yes-x"
                    } else {
                        if (m) {
                            h = "yes-y"
                        }
                    }
                }
                if (h.length) {
                    g += " image-repeat=" + h
                }
                var k = d.replace(/%image%/, g);
                var n = "%image%".length - g.length;
                e.start = e.start - n;
                e.end = e.end - n;
                f.val(f.val().replace(d, k)).setSelection(e)
            }
        });
        var c = f.siblings(".markItUpHeader").find("." + a.className);
        b.parent().css("top", c.offset().top + c.height()).css("left", c.offset().left);
        return a
    }

    var y = v ? [{
        name: s.bold,
        key: "B",
        openWith: "[b]",
        closeWith: "[/b]",
        className: "bold"
    }, {
        name: s.italic,
        key: "I",
        openWith: "[i]",
        closeWith: "[/i]",
        className: "italic"
    }, {
        name: s.fontColor,
        afterInsert: I,
        openWith: "[color=%colorCode%]",
        closeWith: "[/color]",
        placeHolder: s.textPlaceHolder,
        className: "fontColor"
    }, {name: s.fontSize, className: "fontSize", dropMenu: u}, {
        name: s.list,
        openWith: "[*]",
        multiline: true,
        openBlockWith: "[list]\n",
        closeBlockWith: "\n[/list]",
        className: "list",
        afterMultiInsert: J,
        placeHolder: s.textPlaceHolder
    }, {
        name: s.coordinates,
        openWith: "[coordinates]",
        closeWith: "[/coordinates]",
        placeHolder: s.coordinatePlaceHolder,
        className: "coordinates"
    }] : [{
        name: s.bold,
        key: "B",
        openWith: "[b]",
        closeWith: "[/b]",
        className: "bold"
    }, {
        name: s.italic,
        key: "I",
        openWith: "[i]",
        closeWith: "[/i]",
        className: "italic"
    }, {
        name: s.fontColor,
        afterInsert: I,
        openWith: "[color=%colorCode%]",
        closeWith: "[/color]",
        placeHolder: s.textPlaceHolder,
        className: "fontColor"
    }, {name: s.fontSize, className: "fontSize", dropMenu: u}, {
        name: s.list,
        openWith: "[*]",
        multiline: true,
        openBlockWith: "[list]\n",
        closeBlockWith: "\n[/list]",
        className: "list",
        afterMultiInsert: J,
        placeHolder: s.textPlaceHolder
    }, {
        name: s.link,
        key: "L",
        openWith: "[url=[![" + s.link + ":!:http://]!]]",
        closeWith: "[/url]",
        placeHolder: s.textPlaceHolder,
        className: "link"
    }, {
        name: s.coordinates,
        openWith: "[coordinates]",
        closeWith: "[/coordinates]",
        placeHolder: s.coordinatePlaceHolder,
        className: "coordinates"
    }];
    var F = v ? [{
        name: s.underline,
        key: "U",
        openWith: "[u]",
        closeWith: "[/u]",
        className: "underline"
    }, {
        name: s.stroke,
        key: "S",
        openWith: "[s]",
        closeWith: "[/s]",
        className: "strikeThrough"
    }, {
        name: s.sub,
        openWith: "[sub]",
        closeWith: "[/sub]",
        className: "sub"
    }, {
        name: s.sup,
        openWith: "[sup]",
        closeWith: "[/sup]",
        className: "sup"
    }, {separator: "-"}, {
        name: s.item,
        className: "item",
        dropMenu: G
    }, {
        name: s.player,
        openWith: "[player]",
        closeWith: "[/player]",
        placeHolder: s.playerPlaceHolder,
        className: "player"
    }, {separator: "-"}, {
        name: s.alignLeft,
        openWith: "[align=left]",
        closeWith: "[/align]",
        className: "leftAlign"
    }, {
        name: s.alignCenter,
        openWith: "[align=center]",
        closeWith: "[/align]",
        className: "centerAlign"
    }, {
        name: s.alignRight,
        openWith: "[align=right]",
        closeWith: "[/align]",
        className: "rightAlign"
    }, {
        name: s.alignJustify,
        openWith: "[align=justify]",
        closeWith: "[/align]",
        className: "justifyAlign"
    }, {separator: "-"}, {
        name: s.code,
        openWith: "[code]",
        closeWith: "[/code]",
        className: "code"
    }, {separator: "-"}, {
        name: s.email,
        key: "E",
        openWith: "[email=[![" + s.email + ":!:]!]]",
        closeWith: "[/email]",
        placeHolder: s.textPlaceHolder,
        className: "email"
    }, {
        name: s.preview,
        className: "preview",
        call: "preview"
    }] : [{
        name: s.underline,
        key: "U",
        openWith: "[u]",
        closeWith: "[/u]",
        className: "underline"
    }, {
        name: s.stroke,
        key: "S",
        openWith: "[s]",
        closeWith: "[/s]",
        className: "strikeThrough"
    }, {
        name: s.sub,
        openWith: "[sub]",
        closeWith: "[/sub]",
        className: "sub"
    }, {
        name: s.sup,
        openWith: "[sup]",
        closeWith: "[/sup]",
        className: "sup"
    }, {
        name: s.backgroundColor,
        afterInsert: I,
        openWith: "[background color=%colorCode%]",
        closeWith: "[/background]",
        placeHolder: s.textPlaceHolder,
        className: "backgroundColor"
    }, {
        name: s.backgroundImage,
        afterInsert: w,
        openWith: "[background image=%image%]",
        closeWith: "[/background]",
        placeHolder: s.textPlaceHolder,
        className: "backgroundImage"
    }, {separator: "-"}, {
        name: s.item,
        className: "item",
        dropMenu: G
    }, {
        name: s.player,
        openWith: "[player]",
        closeWith: "[/player]",
        placeHolder: s.playerPlaceHolder,
        className: "player"
    }, {
        name: s.tooltip,
        openWith: '[tooltip position="top" text="[![Tooltip Text:!:Tooltip Text]!]"]',
        closeWith: "[/tooltip]",
        placeHolder: s.textPlaceHolder,
        className: "tooltip"
    }, {separator: "-"}, {
        name: s.alignLeft,
        openWith: "[align=left]",
        closeWith: "[/align]",
        className: "leftAlign"
    }, {
        name: s.alignCenter,
        openWith: "[align=center]",
        closeWith: "[/align]",
        className: "centerAlign"
    }, {
        name: s.alignRight,
        openWith: "[align=right]",
        closeWith: "[/align]",
        className: "rightAlign"
    }, {
        name: s.alignJustify,
        openWith: "[align=justify]",
        closeWith: "[/align]",
        className: "justifyAlign"
    }, {separator: "-"}, {
        name: s.block,
        openWith: "[p]",
        closeWith: "[/p]",
        className: "block"
    }, {
        name: s.code,
        openWith: "[code]",
        closeWith: "[/code]",
        className: "code"
    }, {
        name: s.spoiler,
        openWith: "[spoiler]",
        closeWith: "[/spoiler]",
        className: "spoiler"
    }, {separator: "-"}, {
        name: s.hr,
        openWith: "[hr]",
        className: "hr"
    }, {separator: "-"}, {
        name: s.picture,
        key: "Z",
        replaceWith: "[img][![" + s.picture + ":!:http://]!][/img]",
        className: "picture"
    }, {
        name: s.email,
        key: "E",
        openWith: "[email=[![" + s.email + ":!:]!]]",
        closeWith: "[/email]",
        placeHolder: s.textPlaceHolder,
        className: "email"
    }, {name: s.preview, className: "preview", call: "preview"}];
    if (!C) {
        $.each(F, function (a) {
            if (this.className == "picture" || this.className == "backgroundImage") {
                F.splice(a, 1)
            }
        })
    }
    if (isMobile) {
        $.each(y, function (a) {
            if (this.className == "fontColor" || this.className == "backgroundColor") {
                y.splice(a, 1)
            }
        });
        $.each(F, function (a) {
            if (this.className == "fontColor" || this.className == "backgroundColor") {
                F.splice(a, 1)
            }
        })
    }
    var x = {
        onShiftEnter: {keepDefault: false, replaceWith: "\n"},
        onCtrlEnter: {keepDefault: false, openWith: "\n[p]", closeWith: "[/p]"},
        onTab: {keepDefault: false, replaceWith: "\t"},
        markupSet: [y, F],
        resizeHandle: false,
        previewParserPath: bbcodePreviewUrl + "&imgAllowed=" + (C ? 1 : 0),
        previewAutoRefresh: true,
        previewParserVar: "text",
        previewInElement: $('<div class="miu_preview_container"></div>'),
        afterInsert: function (a) {
            $(a.textarea).trigger("keyup")
        }
    };
    $.colorpicker.regional.custom = s.colorPicker;
    A.each(function () {
        var a = $(this);
        a.markItUp(x).after($('<input type="hidden" class="colorpicker"/>').colorpicker({
            color: "#000000",
            colorFormat: "#HEX",
            hsv: false,
            parts: "popup",
            regional: "custom",
            showCancelButton: false
        }));
        x.previewInElement.insertAfter(a);
        $(".miu_advanced .preview").hide();
        var b = $('<div class="miu_footer clearfix"></div>');
        b.append('<a role="button" class="fright txt_link preview_link">' + s.preview + "</a>").append('<span class="fleft"><span class="cnt_chars">' + D + "</span> " + s.charsLeft + "</span>");
        b.insertAfter(a);
        a.on("keyup.bbCodeEditor", function () {
            if (a.val().length > D) {
                a.val(a.val().substr(0, D))
            }
            a.closest(".markItUpContainer").find(".cnt_chars").html(D - a.val().length)
        });
        $(".miu_preview_container").hide();
        $(".preview_link").on("click.bbCodeEditor", function () {
            $(".miu_preview_container").show();
            $(".preview").click()
        });
        if (isMobile) {
            a.siblings(".markItUpHeader").find("a").attr("title", "");
            a.siblings(".markItUpHeader").find("li:not(.markItUpDropMenu) a").bind("mouseup", function () {
                a.focus()
            })
        } else {
            a.siblings(".markItUpHeader").find("ul ul a").attr("title", "")
        }
        if ($("#backgroundImagePicker").length == 0) {
            $("body").append($('<div id="backgroundImagePicker" style="display: none;"><table><tr><td>' + s.backgroundImage + ':</td><td><input type="text" class="url"/></td></tr><tr><td>' + s.backgroundImagePicker.repeatX + ':</td><td><input type="checkbox" class="repeatX"/></td></tr><tr><td>' + s.backgroundImagePicker.repeatY + ':</td><td><input type="checkbox" class="repeatY"/></td></tr></table><div><a href="javascript:void(0);" class="btn_blue">' + s.backgroundImagePicker.ok + "</a></div></div>"));
            $("#backgroundImagePicker").find("a").bind("click", function () {
                $("#backgroundImagePicker").dialog("close")
            })
        }
    });
    $(".toggle_miu_advanced").on("click.bbCodeEditor", function () {
        if ($(".miu_advanced").is(":visible")) {
            $(".miu_advanced").hide();
            $(this).removeClass("hide_miu_advanced").addClass("show_miu_advanced")
        } else {
            $(".miu_advanced").show();
            $(this).removeClass("show_miu_advanced").addClass("hide_miu_advanced")
        }
    })
}
function initBBCodes() {
    $(document).undelegate(".spoilerHeader", "click").delegate(".spoilerHeader", "click", function () {
        var b = this;
        $(this).next(".spoilerText").toggle(0, function () {
            Tipped.refresh(b)
        })
    })
}
ogame.buddies = {
    initBuddyList: function () {
        $.tablesorter.addParser({
            id: "coordinates", is: function (b) {
                return false
            }, format: function (f) {
                var d = $.trim(f).slice(1, -1).split(":");
                var e = (d[0] * 16384) + (d[1] * 32) + d[2] * 1;
                return e
            }, type: "numeric"
        });
        $.tablesorter.addParser({
            id: "commaDigit", is: function (e, c) {
                var f = c.config;
                return jQuery.tablesorter.isDigit(e.replace(/\./g, ""), f)
            }, format: function (b) {
                return jQuery.tablesorter.formatFloat(b.replace(/\./g, ""))
            }, type: "numeric"
        });
        $(".content_table").tablesorter({
            widgets: ["zebra"],
            headers: {
                0: {sorter: false},
                2: {sorter: "commaDigit"},
                5: {sorter: "coordinates"},
                6: {sorter: false}
            },
            cssHeader: "ct_sortable_title",
            cssAsc: "ct_sort_asc",
            cssDesc: "ct_sort_desc"
        });
        $("#buddylist").off(".buddyList");
        $("#buddylist").on("click.buddyList", ".deleteBuddy", deleteBuddy);
        $("#chatContent").on("click.chat_info", ".deleteBuddy", deleteBuddy)
    }, initBuddies: function () {
        $(".zebra tr").mouseover(function () {
            $(this).addClass("over")
        }).mouseout(function () {
            $(this).removeClass("over")
        });
        $(".js_accordion").accordion({
            collapsible: true,
            heightStyle: "content"
        });
        $(".js_tabs").tabs();
        $(".js_scrollbar").mCustomScrollbar({theme: "ogame"})
    }
};
function initInviteCodes() {
    $("#buddyinvite .code").click(function () {
        $(this).selectText()
    })
}
function incrementBuddyCount() {
    var c = parseInt($("#buddyCount").text()) + 1;
    var d = parseInt($("#newRequestCount").text()) - 1;
    updateRequestCount(d);
    updateBuddyCount(c)
}
function updateRequestCount(b) {
    $("#newRequestCount").html(b)
}
function updateBuddyCount(b) {
    $("#buddyCount").html(b)
}
function reportMessage(f, d, e) {
    $.ajax({
        type: "POST",
        url: "?page=reportSpam_ajax",
        dataType: "json",
        data: {messageId: f, from: d, to: e},
        success: function (a) {
            fadeBox(a.message, !a.result)
        },
        error: function () {
        }
    })
}
function reportAllyMessage(c, d) {
    $.ajax({
        type: "POST",
        url: "?page=reportSpam_ajax",
        dataType: "json",
        data: {messageId: c, from: d},
        success: function (a) {
            fadeBox(a.message, !a.result)
        },
        error: function () {
        }
    })
}
var elem, messageId, senderId;
function reportAllyRoundMessage(h, e, g, f) {
    elem = h;
    messageId = e;
    senderId = g;
    errorBoxDecision(LocalizationStrings.attention, f, LocalizationStrings.yes, LocalizationStrings.no, reportMessageCallback)
}
function reportMessageCallback() {
    elem.hide();
    reportAllyMessage(messageId, senderId)
}
function requestsReady() {
    $(document).on("click", ".acceptRequest", acceptRequest);
    $(document).on("click", ".rejectRequest", rejectRequest);
    $(document).on("click", ".cancelRequest", cancelRequest);
    $(document).on("click", ".reportRequest", reportRequest)
}
function initBuddyRequestForm() {
    $(".overlayDiv .buddyRequest form").unbind("submit").bind("submit", function (c) {
        var d = $(this);
        c.preventDefault();
        $.post(d.attr("action"), d.serialize(), "html").done(function (a) {
            document.open();
            document.write(a);
            document.close()
        }).fail(function () {
            var a = window.location.href;
            window.location = a.substring(0, a.indexOf("?")) + "?page=buddies"
        }).always(function () {
            return false
        })
    });
    $(".buddyRequest").each(function () {
        var c = $(this);
        var d = c.parents(".ui-dialog").find(".ui-dialog-title");
        if (!d.find("span.buddyName").length) {
            d.append($(document.createElement("span")).addClass("buddyName").text(" (" + c.attr("data-title") + ")"))
        }
    })
}
function initBuyResourceOverlay(g, e, h) {
    $(".close_buyResourceOverlay").on("click", function () {
        $("#buyResourceOverlayBody").closest(".ui-dialog").find(".ui-icon-closethick").click()
    });
    var f = function () {
        if (g && e) {
            errorBoxDecision(h.allNetworkAttention, h.slotWarning, h.allYes, h.allNo, sendDMAcceptanceForm)
        } else {
            sendDMAcceptanceForm()
        }
    };
    $("#premiumConfirmButton").on("click", function (a) {
        a.preventDefault();
        f()
    });
    $(document).on("ajaxShowOverlay", function (a) {
        $("#premiumConfirmButton").focus()
    });
    $("#premiumConfirmButton").on("keyup", function (a) {
        a.stopPropagation();
        if (a.keyCode == 13) {
            f()
        }
    })
}
function sendDMAcceptanceForm() {
    $("#premiumAcceptForm").submit();
    return
}
function openBuyResourceDialog(b) {
    openOverlay(b, {"class": "buyResourceDialog"})
}
function abortBuyResource() {
    $(".overlaydiv .abort_button").on("click", function () {
        $(".overlaydiv").dialog("close")
    })
}
function initBuyResources() {
    refreshBars("bar_container", "filllevel_bar");
    $(".fill_resource").on("click", ".fillup", onChangeToPremium).on("click", ".btn_premium", submitBuyRequest)
}
function onChangeToPremium(g) {
    var f = $(g.currentTarget).find(".btn_blue"), h = f.closest(".fillup"), e = f.closest(".fill_resource_ctn").find(".premium_bar");
    $(".fillup").removeClass("premium").parent().find(".current_stock span").removeClass("premium_txt").each(function () {
        var a = $(this);
        a.text(a.data("currentAmount"))
    });
    $(".fill_resource .btn_premium").html(loca.fillUpResource).attr("class", "btn_blue");
    $(".premium_bar").css("width", "0%").data("premiumPercent", 0);
    if (f.attr("disabled") == "disabled") {
        return
    }
    f.html(loca.buyNow).attr("class", "btn_premium small");
    h.addClass("premium");
    h.parent().find(".current_stock span").addClass("premium_txt").text(f.data("newValueFormatted"));
    e.data("premiumPercent", f.data("premiumPercent"));
    changeTooltip(e, "+" + tsdpkt(Math.floor(f.data("premiumValue"))));
    refreshBars("bar_container", "filllevel_bar", "premium_bar")
}
function submitBuyRequest(l) {
    var n = $(l.currentTarget), m = n.data("resource"), e = n.data("premiumCosts"), k = n.data("packageType"), h = n.data("traderBuyResource");
    $.ajax({
        url: "index.php?page=traderOverview",
        data: {buyResource: m, buyPackage: k, costs: e, token: h, ajax: 1},
        type: "POST",
        dataType: "json",
        success: function (a) {
            refreshToken = function (b) {
                $(".btn_blue").each(function () {
                    $(this).data("traderBuyResource", b)
                })
            };
            refreshToken(a.buyResourceToken);
            if (!a.success) {
                fadeBox(a.message, true);
                return
            }
            getAjaxResourcebox(function (b) {
                $(".fill_resource .bar_container").each(function () {
                    var c = $(this);
                    c.data("currentAmount", b[c.data("resource")]["resources"]["actual"]);
                    c.parent().find(".current_stock span").html(a[c.data("resource")]).data("currentAmount", a[c.data("resource")]);
                    refreshBars("fill_resource .bar_container", "filllevel_bar")
                })
            });
            $(".fill_resource .fillup").each(function () {
                var c = $(this);
                var d = c.find("a");
                var g = d.data("resource");
                var b = d.data("packageType");
                if (!a.possiblePackages[g][b]["isBuyable"]) {
                    d.attr("disabled", "disabled");
                    c.attr("disabled", "disabled");
                    c.addClass("disabled")
                }
                d.data("premiumCosts", a.possiblePackages[g][b]["costs"]);
                d.data("premiumValue", a.possiblePackages[g][b]["resources"]);
                d.data("newValueFormatted", a.possiblePackages[g][b]["newValueFormatted"]);
                if (a.possiblePackages[g][b]["displayCosts"]) {
                    c.find(".fillup_cost .premium_txt").html(a.possiblePackages[g][b]["formattedCosts"])
                } else {
                    c.find(".fillup_cost").addClass("overmark").html("-")
                }
                if (b == 3) {
                    var f = d.data("buyButtonClass");
                    if (!a.possiblePackages[g][b]["isCapped"] && c.children("." + f).length) {
                        c.children("." + f).removeClass(f).addClass("fillup_100percent");
                        c.children(".fillup_txt").html(loca.fillUpTo)
                    }
                }
            })
        },
        error: function () {
        }
    })
}
function countdown(l, g, f) {
    if (g == null || g == "") {
        g = 2
    }
    var h = this;
    h.countValue = parseInt(f) || -1;
    h.timestamp = 0;
    h.maxDigits = parseInt(g);
    h.delimiter = " ";
    h.approx = "";
    h.showunits = true;
    h.zerofill = false;
    var k = new Date();
    h.startTime = k.getTime();
    h.startLeftoverTime = parseInt(l);
    this.getCurrentTimestring = function () {
        return h.formatTime(h.getLeftoverTime())
    };
    this.getLeftoverTime = function () {
        var a = new Date();
        return Math.round((h.startLeftoverTime + ((a.getTime() - h.startTime) * h.countValue) / 1000))
    };
    this.formatTime = function (a) {
        return formatTimeWrapper(a, h.maxDigits, h.showunits, h.delimiter, h.zerofill, h.approx)
    }
}
function formatTimeWrapper(o, u, q, v, s, n) {
    var k = [];
    k.week = 604800;
    k.day = 86400;
    k.hour = 3600;
    k.minute = 60;
    k.second = 1;
    var w = "";
    for (var r in k) {
        var p = Math.floor(o / k[r]);
        if (u > 0 && (p > 0 || s && w != "")) {
            o = o - p * k[r];
            if (w != "") {
                w += v;
                if (p < 10 && p > 0 && s) {
                    p = "0" + p
                }
                if (p == 0) {
                    p = "00"
                }
            }
            w += p + (q ? LocalizationStrings.timeunits["short"][r] : "");
            u--
        }
    }
    if (o > 0) {
        w = n + w
    }
    return w
}
function bauCountdown(k, l, f, g) {
    if (typeof(k) == "object") {
        var h = this;
        h.totalTime = f;
        h.startHeight = k.offsetHeight;
        h.htmlObj = $(k);
        h.timeHtmlObj = h.htmlObj.siblings(".timeLink").find(".time");
        this.updateCountdown = function () {
            h.countdown.getCurrentTimestring();
            timestamp = h.countdown.getLeftoverTime();
            timestring = h.countdown.getCurrentTimestring();
            h.timeHtmlObj.text(timestring);
            var a = Math.max(0, timestamp) / h.totalTime;
            if (a > 0) {
                var b = Math.round(h.startHeight * a);
                h.htmlObj.css({
                    height: b + "px",
                    marginTop: (h.startHeight - b) + "px"
                })
            } else {
                h.timeHtmlObj.text(LocalizationStrings.status.ready);
                h.htmlObj.css({height: h.startHeight + "px", marginTop: 0});
                if (timestamp <= -1 && timestamp > -10 && !isOverlayOpen()) {
                    reload_page(g)
                }
            }
        };
        if (h.timeHtmlObj.length) {
            h.countdown = new countdown(l);
            timerHandler.appendCallback(h.updateCountdown);
            h.updateCountdown()
        } else {
            window.status = "kein timeHtmlObj"
        }
    }
}
function schiffbauCountdown(o, k, m, q, r, l) {
    if (typeof(o) == "object") {
        var n = this;
        n.totalTime = r;
        n.oneShipTime = r;
        n.shipCount = k;
        n.currentShips = m;
        n.startHeight = o.offsetHeight;
        n.htmlObj = $(o);
        var p = n.htmlObj.siblings(".timeLink");
        n.timeHtmlObj = p.find(".time");
        n.countHtmlObj = $("#shipcount");
        n.shipsHtmlObj = $("#bestand");
        this.updateCountdown = function () {
            n.countdown.getCurrentTimestring();
            timestamp = n.countdown.getLeftoverTime();
            timestring = n.countdown.getCurrentTimestring();
            n.timeHtmlObj.text(timestring);
            var a = Math.max(0, timestamp) / n.totalTime;
            if (a > 0) {
                var b = Math.round(n.startHeight * a);
                n.htmlObj.css({
                    height: b + "px",
                    marginTop: (n.startHeight - b) + "px"
                })
            } else {
                if (n.shipCount > 0) {
                    n.shipCount--;
                    n.currentShips++
                }
                if (n.shipCount >= 0) {
                    n.countHtmlObj.text(n.shipCount);
                    $("#shipcount").text(n.shipCount)
                }
                n.shipsHtmlObj.text(gfNumberGetHumanReadable(n.currentShips));
                if (n.shipCount > 0) {
                    n.countdown = new countdown(r);
                    n.timeHtmlObj.text("-")
                } else {
                    if (timestamp <= -1 && timestamp > -10) {
                        if (l != null && timestamp > -10 && !isOverlayOpen()) {
                            reload_page(l)
                        }
                        timerHandler.removeCallback(n.timer)
                    }
                    n.timeHtmlObj.text(LocalizationStrings.status.ready)
                }
            }
        };
        if (n.timeHtmlObj && n.countHtmlObj && n.shipsHtmlObj) {
            totalTime = Math.floor(k * r);
            n.countdown = new countdown(q);
            n.timer = timerHandler.appendCallback(n.updateCountdown);
            n.updateCountdown()
        } else {
            window.status = "kein: timeHtmlObj oder countHtmlObj oder shipsHtmlObj"
        }
    }
}
function baulisteCountdown(k, f, g, l) {
    if (typeof(k) == "object") {
        var h = this;
        h.timeHtmlObj = k;
        h.updateCountdown = function () {
            var a = h.countdown.getLeftoverTime();
            if (a > 0) {
                $(h.timeHtmlObj).html(h.countdown.getCurrentTimestring())
            } else {
                $(h.timeHtmlObj).html(LocalizationStrings.status.ready);
                if (typeof(l) == "function") {
                    l()
                }
                if (a <= -1 && a > -10) {
                    if (g != null && a > -10 && !isOverlayOpen()) {
                        reload_page(g)
                    }
                    timerHandler.removeCallback(h.timer)
                }
            }
        };
        if (h.timeHtmlObj) {
            h.countdown = new countdown(f, 3);
            h.timer = timerHandler.appendCallback(h.updateCountdown);
            h.updateCountdown()
        }
    }
}
function eventboxCountdown(l, n, h, m, g) {
    if (typeof(l) == "object") {
        var k = this;
        k.timeHtmlObj = l;
        this.updateCountdown = function () {
            k.countdown.getCurrentTimestring();
            var a = k.countdown.getLeftoverTime();
            var b = k.countdown.getCurrentTimestring();
            if (a > 0) {
                $(k.timeHtmlObj).html(b)
            } else {
                timerHandler.removeCallback(k.timer);
                $(k.timeHtmlObj).html(LocalizationStrings.status.ready);
                if (!timerHandler.checkEventsAlreadyQueued) {
                    timerHandler.checkEventsAlreadyQueued = true;
                    setTimeout(function () {
                        console.log('eventboxCountdown()');
                        $.post(m, {ids: g}, function (c) {
                            var e = $.parseJSON(c);
                            for (var d in e.rows) {
                                $(h).find("#eventRow-" + e.rows[d]).remove();
                                $(".union" + e.rows[d]).remove()
                            }
                            $(".eventFleet").removeClass("odd");
                            $(".partnerInfo").removeClass("part-even");
                            $(".eventFleet:odd").addClass("odd");
                            $(".partnerInfo:even").addClass("part-even");
                            timerHandler.checkEventsAlreadyQueued = false
                        })
                    }, 2500)
                }
            }
        };
        if (k.timeHtmlObj) {
            k.countdown = new countdown(n, 3);
            k.timer = timerHandler.appendCallback(k.updateCountdown);
            k.updateCountdown()
        }
    }
}
function simpleCountdown(k, g, l, f) {
    if (typeof(k) == "object") {
        var h = this;
        h.timeHtmlObj = $(k)[0];
        this.updateCountdown = function () {
            var a = h.countdownObject.getLeftoverTime();
            var b = h.countdownObject.getCurrentTimestring();
            if (a > 0) {
                $("#" + h.timeHtmlObj.id).text(b);
                if (typeof f == "string" && $.isFunction(window[f])) {
                    window[f]()
                } else {
                    if ($.isFunction(f)) {
                        f()
                    }
                }
            } else {
                timerHandler.removeCallback(h.timer);
                $("#" + h.timeHtmlObj.id).text(LocalizationStrings.status.ready);
                if (typeof l == "string" && $.isFunction(window[l])) {
                    window[l]()
                } else {
                    if ($.isFunction(l)) {
                        l()
                    }
                }
            }
        };
        if (typeof(h.timer) != "undefined") {
            timerHandler.removeCallback(h.timer)
        }
        if (h.timeHtmlObj) {
            h.countdownObject = new countdown(g, 3);
            h.timer = timerHandler.appendCallback(h.updateCountdown);
            h.updateCountdown()
        }
    }
}
function countdownWithTickFunction(m, p, h, n, o, k) {
    if (typeof(m) == "object") {
        var l = this;
        l.timeHtmlObj = m;
        if (typeof($(m).attr("data-countdown")) != "undefined") {
            timerHandler.removeCallback($(m).attr("data-countdown"))
        }
        this.updateCountdown = function () {
            timestamp = l.countdown.getLeftoverTime();
            timestring = l.countdown.getCurrentTimestring();
            if (timestamp > 0) {
                l.timeHtmlObj.innerHTML = timestring;
                if (typeof o == "string" && $.isFunction(window[o])) {
                    window[o](timestamp, h)
                } else {
                    if ($.isFunction(o)) {
                        o(timestamp, h)
                    }
                }
            } else {
                timerHandler.removeCallback(l.timer);
                l.timeHtmlObj.innerHTML = LocalizationStrings.status.ready;
                if (typeof n == "string" && $.isFunction(window[n])) {
                    window[n]()
                } else {
                    if ($.isFunction(n)) {
                        n()
                    }
                }
            }
        };
        if (l.timeHtmlObj) {
            l.countdown = new countdown(p, k);
            l.timer = timerHandler.appendCallback(l.updateCountdown);
            l.updateCountdown();
            $(m).attr("data-countdown", l.timer)
        }
        return l
    }
}
function reloadCountdown(h, e, f) {
    if (typeof(h) == "object") {
        var g = this;
        g.timeHtmlObj = h;
        this.updateCountdown = function () {
            g.countdown.getCurrentTimestring();
            timestamp = g.countdown.getLeftoverTime();
            timestring = g.countdown.getCurrentTimestring();
            if (timestamp > 0) {
                g.timeHtmlObj.innerHTML = timestring
            } else {
                g.timeHtmlObj.innerHTML = LocalizationStrings.status.ready;
                if (timestamp <= -2 && timestamp > -10 && !isOverlayOpen()) {
                    reload_page(f)
                }
            }
        };
        if (g.timeHtmlObj) {
            g.countdown = new countdown(e, 3);
            timerHandler.appendCallback(g.updateCountdown);
            g.updateCountdown()
        }
    }
}
function movementImageCountdown(m, p, n, k, h, o) {
    if (typeof(m) == "object") {
        var l = this;
        l.timeHtmlObj = m;
        this.updateCountdown = function () {
            l.countdown.getCurrentTimestring();
            var a = l.countdown.getLeftoverTime();
            var b = l.countdown.getCurrentTimestring();
            if (a > 0) {
                percent = 100 - a / (n / 100);
                if (!k) {
                    pixel = Math.abs((o / 100) * percent)
                } else {
                    pixel = (o * 2) - Math.abs(((o * 2) / 100) * percent)
                }
                pixel = Math.round(pixel);
                if (h) {
                    l.timeHtmlObj.style.marginRight = pixel + "px"
                } else {
                    l.timeHtmlObj.style.marginLeft = pixel + "px"
                }
            }
        };
        if (l.timeHtmlObj) {
            l.countdown = new countdown(p, 3);
            timerHandler.appendCallback(l.updateCountdown);
            l.updateCountdown()
        }
    }
}
function shipCountdown(r, o, l, q, u, m, n, p) {
    if ((typeof(r) == "object") && (typeof(o) == "object") && (typeof(l) == "object")) {
        var s = this;
        s.totalTimeHtmlObj = r;
        s.unitTimeHtmlObj = o;
        s.sumCountHtmlObj = l;
        this.updateCountdown = function () {
            s.unitCountdown.getCurrentTimestring();
            unitTimestamp = s.unitCountdown.getLeftoverTime();
            unitTimestring = s.unitCountdown.getCurrentTimestring();
            s.totalCountdown.getCurrentTimestring();
            totalTimestamp = s.totalCountdown.getLeftoverTime();
            totalTimestring = s.totalCountdown.getCurrentTimestring();
            if (unitTimestamp > 0) {
                s.unitTimeHtmlObj.innerHTML = unitTimestring
            } else {
                n--;
                s.unitTimeHtmlObj.innerHTML = LocalizationStrings.status.ready;
                if (n > 0) {
                    s.unitCountdown = new countdown(q);
                    s.sumCountHtmlObj.innerHTML = n
                } else {
                    s.sumCountHtmlObj.innerHTML = 0
                }
            }
            if (n > 0) {
                s.totalTimeHtmlObj.innerHTML = totalTimestring
            } else {
                s.totalTimeHtmlObj.innerHTML = LocalizationStrings.status.ready;
                if (!isOverlayOpen()) {
                    reload_page(p)
                }
            }
        };
        if ((s.totalTimeHtmlObj) && (s.unitTimeHtmlObj) && (s.sumCountHtmlObj)) {
            s.totalCountdown = new countdown(m);
            s.unitCountdown = new countdown(u);
            timerHandler.appendCallback(s.updateCountdown);
            s.updateCountdown()
        }
    }
}
function reload_page(b) {
    if (timerHandler && timerHandler.pageReloadAlreadyTriggered == false) {
        timerHandler.pageReloadAlreadyTriggered = true;
        openParentLocation(b)
    }
}
function initItemActivation(c) {
    inventoryObj.initalizeSlider(inventoryObj.items_inventory, "js_activeItemSlider", 395, 172, " ", true, " ", true, true);
    if (typeof(c) == "undefined" || c.length == 0 || c == 1) {
        var d = $(".item_img_box .detail_button").filter(":first");
        if (d.length === 0) {
            $("#noItems").show();
            $("#itemDetailBox").hide();
            return
        } else {
            $.bbq.pushState({item: d.attr("ref")})
        }
    } else {
        $.bbq.pushState({item: c});
        $(window).trigger("hashchange")
    }
    $("#activeBuffDetails .js_is_active").each(function () {
        $durationEl = $(this).parent().siblings(".js_duration");
        $pusherEl = $(this).parent().siblings(".pusher");
        startCooldown($durationEl, $pusherEl, 75)
    });
    $(document).undelegate("#activeBuffDetails .detail_button", "click.updateItemDetails").delegate("#activeBuffDetails .detail_button", "click.updateItemDetails", function () {
        if ($(this).hasClass("active")) {
            return
        }
        $("#activeBuffDetails .detail_button").removeClass("active");
        $(this).addClass("active");
        $.bbq.pushState({item: $(this).attr("ref")})
    }).undelegate("#activeBuffDetails .build-it", "click.activateItem").delegate("#activeBuffDetails .build-it", "click.activateItem", function () {
        activateItem($(this).attr("ref"))
    }).undelegate("#activeBuffDetails .buyAndActivate.dm.build-it_disabled", "click.activateItem").delegate("#activeBuffDetails .buyAndActivate.dm.build-it_disabled", "click.activateItem", function () {
        if (vacation) {
            return
        }
        var a = $(this).attr("ref");
        if ($("#js_activeItemSlider>li a[ref='" + a + "']").length == 0) {
            return
        }
        errorBoxDecision(LocalizationStrings.error, translation.buyDMDecision, LocalizationStrings.yes, LocalizationStrings.no, function () {
            window.location.href = $("#darkmatter_box a").attr("href")
        })
    }).undelegate("#activeBuffDetails .close_detail", "click.changeHash").delegate("#activeBuffDetails .close_detail", "click.changeHash", function () {
        $.bbq.pushState({item: ""})
    })
}
function initBuffBar() {
    $(".sliderWrapper .active_items").anythingSlider({
        resizeContents: false,
        buildNavigation: false,
        buildStartStop: false,
        infiniteSlides: false,
        stopAtEnd: true
    });
    $(".sliderWrapper .active_items").removeClass("hidden");
    $(window).unbind("hashchange.openBuffBar").bind("hashchange.openBuffBar", function (k) {
        var l = $.deparam.fragment(k.fragment);
        if (typeof(l.item) != "undefined") {
            var f = $("#buffBar .activate_item");
            $("#buffBar a").removeClass("active");
            var h = l.item;
            if (h != "") {
                if ($("#activeBuffDetails:visible").length) {
                    if (typeof(inventoryObj.items_inventory[h]) == "undefined") {
                        var g = $("#activeBuffDetails .detail_button").filter(":first");
                        $.bbq.pushState({item: g.attr("ref")});
                        return
                    }
                    $("#buffBar a[ref='" + l.item + "']").addClass("active");
                    f.addClass("active");
                    $("#noItems").hide();
                    $("#itemDetailBox").show();
                    updateItemDetails(h)
                } else {
                    $("#buffBar a[ref='" + l.item + "']").addClass("active");
                    f.addClass("active");
                    gfSlider.slideIn(getElementByIdWithCache("detail"), h)
                }
            } else {
                if ($("#activeBuffDetails .detail_button").filter(":first").length === 0) {
                    $("#noItems").show();
                    $("#itemDetailBox").hide()
                }
                $("#activeBuffDetails .close_details").click();
                f.removeClass("active")
            }
        }
    });
    $(document).undelegate("#buffBar a", "click.openDetails").delegate("#buffBar a", "click.openDetails", function () {
        if ($(this).hasClass("active")) {
            $.bbq.pushState({item: ""})
        } else {
            $.bbq.pushState({item: $(this).attr("ref")})
        }
    });
    $("#buffBar").unbind("click.openDetails").bind("click.openDetails", function (b) {
        if (!$(b.target).is("#buffBar .activate_item") && !$(b.target).is(".arrow a")) {
            $("#buffBar .activate_item").click()
        }
    });
    $("#buffBar .active_items div:not(.activate_item)").each(function () {
        $durationEl = $(this).find(".js_duration");
        $pusherEl = $(this).find(".pusher");
        startCooldown($durationEl, $pusherEl, 32)
    });
    $(window).trigger("hashchange")
}
function getItem(b) {
    if (typeof(inventoryObj.items_inventory[b]) != "undefined") {
        return inventoryObj.items_inventory[b]
    }
    return null
}
function updateItemDetails(e) {
    var h = getItem(e);
    $("#activeBuffDetails .detail_button").removeClass("active");
    $('#activeBuffDetails .detail_button[ref="' + e + '"]').addClass("active");
    $("#activeBuffDetails .js_itemName").html(h.name);
    $("#activeBuffDetails .js_itemEffect").html(h.effect);
    $("#activeBuffDetails .js_itemAmount").html(h.amount);
    if (h.firstStatus) {
        $("#activeBuffDetails .js_itemDurationStatus").html(translation.durationType[h.firstStatus])
    } else {
        $("#activeBuffDetails .js_itemDurationStatus").html(translation.durationType.effecting)
    }
    if (h.duration) {
        if (h.durationExtension) {
            $("#activeBuffDetails .js_itemDuration").html(formatTimeWrapper(h.duration, 2, true, " ", false, "") + h.durationExtension)
        } else {
            $("#activeBuffDetails .js_itemDuration").html(formatTimeWrapper(h.duration, 2, true, " ", false, ""))
        }
    } else {
        if (h.duration === null) {
            if (h.moonOnlyItem) {
                $("#activeBuffDetails .js_itemDuration").html(translation.permanentMoon)
            } else {
                $("#activeBuffDetails .js_itemDuration").html(translation.permanent)
            }
        } else {
            $("#activeBuffDetails .js_itemDuration").html(translation.now)
        }
    }
    if (h.timeLeft) {
        $("#activeBuffDetails .js_itemTimeLeftTxt").show();
        $("#activeBuffDetails .js_itemTimeLeft").html(formatTimeWrapper(h.timeLeft, 2, true, " ", false, ""))
    } else {
        $("#activeBuffDetails .js_itemTimeLeftTxt").hide()
    }
    var g = $("#activationButton");
    g.attr("ref", e);
    g.removeClass("buyAndActivate activateItem build-it_disabled build-it dm bp").addClass(h.currency);
    if (h.amount > 0) {
        g.addClass("activateItem").html("<span>" + ((h.timeLeft > 0 && h.extendable) ? translation.extend : translation.activate) + "</span>").addClass(h.canBeActivated ? "build-it" : "build-it_disabled")
    } else {
        var f = (h.timeLeft > 0 && h.extendable) ? translation.buyAndExtend : translation.buyAndActivate;
        f = f.replace(/%price%/, tsdpkt(h.costs));
        f = f.replace(/%currency%/, translation.currencies[h.currency]);
        g.addClass("buyAndActivate").html("<span>" + f + "</span>").addClass(h.canBeBoughtAndActivated && h.hasEnoughCurrency ? "build-it" : "build-it_disabled")
    }
}
function activateItem(e) {
    var f = {
        ajax: 1,
        token: activateToken,
        referrerPage: $.deparam.querystring().page
    };
    var h = getItem(e);
    if (h.amount > 0) {
        f.item = e
    } else {
        f.buyAndActivate = e
    }
    function g() {
        $.ajax({
            cache: false,
            url: inventoryObj.inventoryUrl,
            data: f,
            type: "POST",
            dataType: "json",
            success: function (F, P, D) {
                activateToken = F.newToken;
                if (F.error) {
                    fadeBox(F.message, true);
                    return
                }
                if (F.message.reload) {
                    location.href = getRedirectLink();
                    return
                }
                fadeBox(F.message.message, false);
                if (F.message.buff != false) {
                    var a = getItem(F.message.buff);
                    var H = true;
                    var Q = $(".active_items");
                    var c = Q.data("AnythingSlider");
                    var I;
                    Q.find("li a").removeClass("active");
                    Q.find("li a.activate_item").addClass("active");
                    Q.find("div[data-id=" + F.message.buffId + "]").each(function () {
                        $(this).hide().show("pulsate").find("a").addClass("active");
                        H = false;
                        I = $(this)
                    });
                    if (H == true) {
                        var N = $('<div data-uuid="' + a.ref + '" data-id="' + F.message.buffId + '"><div class="js_duration" style="display: none;"></div><a href="javascript:void(0);" ref="' + a.ref + '" class="detail_button slideIn active_item active r_' + F.message.item.rarity + ' border3px tooltipHTML" title="' + F.message.item.toolTip + '"><div class="pusher" style="height: 0%; "></div><img src="/img/icons/items/' + a.image + '-small.png" alt=""/></a></div>');
                        var E = 14;
                        var d = c.currentPage;
                        var b = c.options.animationTime;
                        if (typeof(F.message.upgraded) != "undefined") {
                            for (var R in F.message.upgraded) {
                                var G = F.message.upgraded[R];
                                Q.find("div[data-uuid=" + G + "]").remove()
                            }
                            var K = $(document.createDocumentFragment());
                            var O = Q.find("li > div");
                            O.each(function (l, k) {
                                if (l % E == 0) {
                                }
                                $(this).appendTo(K.children().last())
                            });
                            c.updateSlider()
                        }
                        var J = Q.children().last().children().length;
                        if (J < E) {
                            N.hide().appendTo(Q.children().last()).show("pulsate");
                            if (d == c.pages) {
                                c.options.animationTime = 0
                            }
                            c.gotoPage(c.pages);
                            if (d == c.pages) {
                                c.options.animationTime = b
                            }
                        } else {
                            N = N.hide().wrap("<li/>");
                            N.parent().appendTo(Q).children().last();
                            c.updateSlider();
                            if (d == c.pages) {
                                c.options.animationTime = 0
                            }
                            c.gotoPage(c.pages);
                            if (d == c.pages) {
                                c.options.animationTime = b
                            }
                            N.show("pulsate")
                        }
                        I = N
                    } else {
                        console.log(a.ref);
                        var L = $('<div data-uuid="' + a.ref + '" data-id="' + F.message.buffId + '"><div class="js_duration" style="display: none;"></div><a href="javascript:void(0);" ref="' + a.ref + '" class="detail_button slideIn active_item active r_' + F.message.item.rarity + ' border3px tooltipHTML" title="' + F.message.item.toolTip + '"><div class="pusher" style="height: 0%; "></div><img src="/img/icons/items/' + a.image + '-small.png" alt=""/></a></div>');
                        var G = a.ref;
                        Q.find("div[data-uuid=" + G + "]").remove();
                        L.hide().appendTo(Q.children().last()).show("pulsate");
                        I = L
                    }
                }
                var C = I.find(".pusher");
                var M = I.find(".js_duration");
                M.attr("data-total-duration", F.message.totalDuration).text(F.message.item.timeLeft);
                startCooldown(M, C, 32);
                getAjaxResourcebox();
                $.ajax({
                    type: "POST",
                    url: detailUrl,
                    data: {type: e},
                    beforeSend: function () {
                        $("#detailWrapper .detail_screen").html('<p class="ajaxLoad">' + LocalizationStrings.loading + "</p>")
                    },
                    success: function (k) {
                        $("#detailWrapper .detail_screen").html(k)
                    }
                })
            },
            error: function (a) {
                fadeBox("Error!", true)
            }
        })
    }

    if (h.isAnUpgrade) {
        errorBoxDecision(LocalizationStrings.activateItem.upgradeItemQuestionHeader, LocalizationStrings.activateItem.upgradeItemQuestion, LocalizationStrings.yes, LocalizationStrings.no, g);
        return
    }
    g()
}
function initEmpireEquipment() {
    $(".overview_equipment .item_img_box .hidden").each(function () {
        startCooldown($(this), $(this).parent().parent().find(".pusher"), 32)
    })
}
function startCooldown(e, f, g) {
    if ($.trim(e.text()).match(/^\d+$/)) {
        var h = new countdownWithTickFunction(e[0], parseInt($.trim(e.text())), parseInt(e.attr("data-total-duration")), function () {
            location.href = getRedirectLink()
        }, function (b, a) {
            var d = 1 - (b / a);
            var c = Math.floor(g * d);
            f.css("height", c + "px")
        })
    }
}
function errorBoxAsArray(b) {
    if (b.type == "notify") {
        notifyBoxAsArray(b)
    } else {
        if (b.type == "decision") {
            decisionBoxAsArray(b)
        } else {
            if (b.type == "fadeBox") {
                fadeBox(b.text, b.failed)
            }
        }
    }
}
function notifyBoxAsArray(b) {
    errorBoxNotify(b.title, b.text, b.buttonOk, String(b.okFunction), b.removeOpen, b.modal)
}
function fadeBox(d, e, f) {
    if (e) {
        $("#fadeBoxStyle").attr("class", "failed")
    } else {
        $("#fadeBoxStyle").attr("class", "success")
    }
    $("#fadeBoxContent").html(d);
    $("#fadeBox").stop(false, true).show().fadeOut(10000, f)
}
function decisionBoxAsArray(b) {
    errorBoxDecision(b.title, b.text, b.buttonOk, b.buttonNOk, String(b.okFunction), String(b.nokFunction), b.removeOpen)
}
function errorBoxDecision(q, s, y, n, v, x, w) {
    var r = getIEVersion() <= 9 && (w || false);
    var p = $("#errorBoxDecision");
    p.find("#errorBoxDecisionHead").html(q);
    p.find("#errorBoxDecisionContent").html(s);
    var o = function (a) {
        a.stopPropagation();
        if (typeof(p.data("uiDialog")) != "undefined") {
            p.dialog("destroy")
        }
        if (typeof(v) == "function") {
            v()
        }
        if (v == "submit_form") {
            $("#planetMaintenanceDelete").submit()
        }
    };
    var u = function (a) {
        a.stopPropagation();
        if (typeof(p.data("uiDialog")) != "undefined") {
            p.dialog("destroy")
        }
        if (x == "checkPassword") {
            location.reload()
        }
        if (typeof(x) == "function") {
            x()
        }
    };
    p.find(".yes, .no").unbind("click");
    p.unbind("keydown.yesHandler");
    setTimeout(function () {
        var b = p.find(".yes");
        var a = p.find(".no");
        b.unbind("click").bind("click", o).focus().find("#errorBoxDecisionYes").html(y);
        a.unbind("click").bind("click", u).find("#errorBoxDecisionNo").html(n);
        if (r) {
            b.attr("href", "#");
            a.attr("href", "#")
        } else {
            b.attr("href", "javascript:void(0);");
            a.attr("href", "javascript:void(0);")
        }
        p.bind("keydown.yesHandler", function (c) {
            if (c.which == KeyEvent.DOM_VK_RETURN) {
                p.find(".yes").trigger("click")
            }
        })
    }, 100);
    Tipped.hideAll();
    p.dialog({
        resizable: false,
        modal: true,
        title: q,
        close: u,
        width: 400,
        dialogClass: "errorBox"
    })
}
function errorBoxNotify(n, p, m, q, r) {
    var o = getIEVersion() <= 9 && (r || false);
    var l = $("#errorBoxNotify");
    l.find("#errorBoxNotifyHead").html(n);
    l.find("#errorBoxNotifyContent").html(p);
    var u = function (a) {
        a.stopPropagation();
        l.dialog("destroy");
        if (typeof(q) == "function") {
            q()
        } else {
            if (typeof(window[q]) == "function") {
                window[q]()
            }
        }
    };
    var s = l.find(".ok");
    s.unbind("click").bind("click", u).find("#errorBoxNotifyOk").html(m);
    if (o) {
        s.attr("href", "#")
    } else {
        s.attr("href", "javascript:void(0);")
    }
    Tipped.hideAll();
    l.dialog({
        resizable: false,
        modal: true,
        title: n,
        close: u,
        width: 400,
        dialogClass: "errorBox"
    })
}
function eventBDayInitGalaxy() {
    if (isMobile) {
        $(".js_bday_details").hide();
        $(".bdaySlotBox .name").click(function (b) {
            $(".row").children().each(function () {
                if ($(this).html().trim()) {
                    $(this).removeClass("active")
                }
            });
            $(".bdaySlotBox .name").removeClass("active");
            $(".js_detailRow").hide();
            $(this).toggleClass("active");
            if ($(b.target).attr("class").indexOf("planet") !== -1) {
                $(".js_detailRowPlanet17").toggle()
            } else {
                if ($(b.target).attr("class").indexOf("debris") !== -1) {
                    $(".js_detailRowDebris17").toggle()
                }
            }
        })
    }
}
function eventBDayInit() {
    var b = $(".event_box");
    $("#eventBDayWrapper").click(function (a) {
        if ($(a.target).attr("id") === "BDayContent" || $(a.target).attr("id") === "BDayEventClose" || $(a.target).closest("#BDayHeader").length > 0) {
            b.hide();
            $(".bday_box").removeClass("active")
        }
        a.stopPropagation()
    });
    $(".bday_box").click(function (d) {
        $(".bday_box").removeClass("active");
        var a = $(d.target).closest(".bday_box").attr("id").replace("box", "");
        b.removeClass().addClass("event_box " + eventBoxData[a].eventTypeClass);
        if (eventBoxData[a] !== undefined) {
            b.attr("id", "eventBox" + a).show();
            $("#box" + a).addClass("active");
            if (eventBoxData[a].eventTypeClass !== "future") {
                $("#eventBox" + a + " #BDayEventDate").html(eventBoxData[a].date + ": ")
            } else {
                $("#eventBox" + a + " #BDayEventDate").html("")
            }
            $("#eventBox" + a + " #BDayEventTitle").html(eventBoxData[a].title);
            $("#eventBox" + a + " #BDayofficerImg").attr("src", eventBoxData[a].eventOfficerImgSrc);
            if (eventBoxData[a].eventTypeClass !== "future" || eventBoxData[a].txtChronic !== undefined) {
                $("#eventBox" + a + " #BDayEventTxtChronic").html(eventBoxData[a].txtChronic);
                $("#eventBox" + a + " #BDayChronic").show()
            } else {
                $("#eventBox" + a + " #BDayChronic").hide()
            }
            if (eventBoxData[a].eventImgSrc === undefined && eventBoxData[a].eventTypeClass === "future") {
                $("#eventBox" + a + " #BDayEventImg").attr("src", "/img/icons/d995359d038c9a0c21aed16b3cc162.png")
            } else {
                $("#eventBox" + a + " #BDayEventImg").attr("src", eventBoxData[a].eventImgSrc)
            }
            if (eventBoxData[a].eventTxtDesc === undefined) {
                $("#eventBox" + a + " #BDayEventTxtDesc").html("")
            } else {
                $("#eventBox" + a + " #BDayEventTxtDesc").html(eventBoxData[a].eventTxtDesc)
            }
            $("#eventBox" + a + " #BDayEventPastTxt").hide();
            if (eventBoxData[a].eventTypeClass === "past") {
                $("#eventBox" + a + " #BDayEventPastTxt").html(eventPastTxt).show()
            }
            $("#eventBox" + a + " #BDayEventBtnCTA").hide();
            if ((eventBoxData[a].eventTypeClass !== ("past" || "future")) && eventBoxData[a].btnCTA !== undefined) {
                $("#eventBox" + a + " #BDayEventBtnCTA").html(eventBoxData[a].btnCTA).attr("href", eventBoxData[a].btnCTALink).show()
            }
        }
    })
}
function initBDayEventHints() {
    $(document).undelegate(".event_build_faster, .event_active_hint", "click").delegate(".event_build_faster, .event_active_hint", "click", function (b) {
        b.stopPropagation();
        if ($(this).parent().attr("id") === "expeditionbutton") {
            doExpedition()
        } else {
            $(this).siblings(".detail_button").click()
        }
    })
}
function initEventTable() {
    $(".eventFleet:odd").addClass("odd");
    $(".partnerInfo:even").addClass("part-even");
    $(".partnerInfo").hide();
    $(document).undelegate(".toggleDetails", "click").delegate(".toggleDetails", "click", function () {
        var b = $(".partnerInfo." + $(this).attr("rel"));
        if ($(b).is(":hidden")) {
            $(b).show();
            $(this).parents("tr").addClass("detailsOpened").removeClass("detailsClosed")
        } else {
            $(b).hide();
            $(this).parents("tr").addClass("detailsClosed").removeClass("detailsOpened")
        }
    })
}
function initExodus() {
    if ($("#exodus-indicator").length && exodus.ready == false) {
        exodus.ready = true;
        exodus.createIndicator();
        var d = function (a) {
            if ($("#exodus-timer").hasClass("end-soon")) {
                return
            }
            if (a < 86400) {
                $("#exodus-timer").addClass("end-soon")
            }
        };
        var c = parseInt($("#exodus-timer").attr("data-timeleft"));
        d(c);
        new simpleCountdown(getElementByIdWithCache("exodus-timer"), c, function () {
            $("#exodus-timer").remove()
        }, function (a) {
            d(a)
        })
    }
}
var exodus = {
    ready: false,
    noServers: true,
    secondaryShown: false,
    createIndicator: function () {
        exodus.indicator = $("#exodus-indicator");
        if (exodus.indicator.length > 0) {
            exodus.indicator.bind("click", exodus.showDialog)
        }
    },
    appendServerRow: function (h, l, m, o) {
        var p = (exodus.data["migration-host"] == l.host);
        var k = $('<li class="' + (exodus.odd++ % 2 ? "odd" : "even") + '" id="server-' + l.id + '"/>').bind("click", function () {
            if ($(this).hasClass("disabled")) {
                return
            } else {
                if ($(this).hasClass("row-selected")) {
                    exodus.confirmButton.removeClass("confirm");
                    $(this).removeClass("row-selected");
                    exodus.markedServer = null
                } else {
                    exodus.markedServer = l;
                    if (exodus.markedServer != exodus.selectedServer) {
                        exodus.confirmButton.addClass("confirm")
                    } else {
                        if (exodus.confirmButton.hasClass("confirm")) {
                            exodus.confirmButton.removeClass("confirm")
                        }
                    }
                    h.find("li").removeClass("row-selected");
                    $(this).addClass("row-selected")
                }
            }
        }).hide().append($('<span class="exodus-universe-treeview-column-checkbox"/>').append($("<span/>"))).append($('<span class="exodus-universe-treeview-column-name"/>').text(l.name)).append($('<span class="exodus-universe-treeview-column-startdate"/>').text(l.since)).append($('<span class="exodus-universe-treeview-column-free-spaces"/>')).append($('<span class="exodus-universe-treeview-column-features"/>').text(l.features));
        h.append(k);
        var n = $('<li id="wait-server-' + l.id + '"/>').append($('<img alt="' + exodus.data.translations.loading + '" src="' + exodus.data["load-image"] + '"/>'));
        h.append(n);
        if (p) {
            exodus.markedServer = l;
            exodus.selectedServer = l;
            k.addClass("server-selected");
            k.addClass("row-selected")
        }
        $.jsonp({
            url: "https://" + l.host + "/service/exodus.php?action=getServerInfo&data=" + l.data + "&callback=?",
            error: function () {
                exodus.handleError(l.id, exodus.data.translations["error-no-server"]);
                $("#server-" + l.id).show();
                $("#wait-server-" + l.id).remove();
                if (exodus.noServers && m) {
                    exodus.showSecondaryServers(h)
                }
            },
            success: function (a) {
                if (!a.currentPlayerCount) {
                    exodus.handleError(l.id, exodus.data.translations["error-no-server"]);
                    $("#server-" + l.id).show();
                    $("#wait-server-" + l.id).remove();
                    return
                }
                $("#server-" + l.id + " .exodus-universe-treeview-column-free-spaces").text(a.freeSlots);
                if (a.alreadyMigrating) {
                    exodus.handleSuccess(l.id, exodus.data.translations["success-server-selected"]);
                    if (!o) {
                        exodus.noServers = false
                    }
                } else {
                    if (a.alreadyRegistered) {
                        exodus.handleError(l.id, exodus.data.translations["error-account"])
                    } else {
                        if (a.usernameInUse) {
                            exodus.handleError(l.id, exodus.data.translations["error-name-in-use"])
                        } else {
                            if (a.freeSlots <= 0) {
                                exodus.handleError(l.id, exodus.data.translations["error-no-free-slots"])
                            } else {
                                if (!o) {
                                    exodus.noServers = false
                                }
                            }
                        }
                    }
                }
                if (exodus.noServers && m) {
                    exodus.showSecondaryServers(h)
                }
                $("#server-" + l.id).show();
                $("#wait-server-" + l.id).remove()
            }
        })
    },
    handleError: function (d, c) {
        $("#server-" + d).find("span.exodus-success").remove();
        $("#server-" + d).find("span.exodus-error").remove();
        $("#server-" + d).append('<span class="exodus-error"><strong>' + exodus.data.translations["error-impossible"] + "</strong><br/>" + c + "</span>");
        $("#server-" + d).addClass("disabled")
    },
    handleSuccess: function (d, c) {
        $("#server-" + d).find("span.exodus-success").remove();
        $("#server-" + d).find("span.exodus-error").remove();
        $("#server-" + d).append('<span class="exodus-success"><strong>' + c + "</strong></span>")
    },
    showSecondaryServers: function (d) {
        for (var c = 0; c < exodus.data["secondary-servers"].length; c++) {
            exodus.appendServerRow(d, exodus.data["secondary-servers"][c], false, true)
        }
        exodus.secondaryShown = true
    },
    showDialog: function () {
        if (exodus.isOpen != null) {
            if (exodus.isOpen == false) {
                exodus.overlay.show();
                exodus.dialog.show();
                $("html, body").animate({scrollTop: 0}, 100)
            }
            return
        }
        exodus.data = {
            "load-image": exodus.indicator.attr("data-load-image"),
            "exodus-start": exodus.indicator.attr("data-exodus-start"),
            "exodus-end": exodus.indicator.attr("data-exodus-end"),
            "next-migration": exodus.indicator.attr("data-next-migration"),
            translations: $.parseJSON(exodus.indicator.attr("data-translations")),
            "migration-host": exodus.indicator.attr("data-migration-host"),
            "primary-servers": $.parseJSON(exodus.indicator.attr("data-primary-servers")),
            "secondary-servers": $.parseJSON(exodus.indicator.attr("data-secondary-servers")),
            "user-data": exodus.indicator.attr("data-user-data"),
            "user-validation": exodus.indicator.attr("data-user-validation"),
            "see-dialog": exodus.indicator.attr("data-user-see-dialog"),
            "ally-id": exodus.indicator.attr("data-user-ally-id"),
            "buddy-amount": exodus.indicator.attr("data-user-buddy-amount")
        };
        if (exodus.data["user-validation"] == 0) {
            errorBoxNotify(LocalizationStrings.error, exodus.data.translations["error-user-not-validated"], LocalizationStrings.ok);
            return
        }
        exodus.isOpen = true;
        exodus.selectedServer = null;
        exodus.markedServer = null;
        exodus.dialog = $('<div id="exodus-dialog"/>');
        exodus.overlay = $('<div id="exodus-overlay"/>');
        var h = $('<div id="exodus-header"/>');
        var f = $('<div id="exodus-close" class="ui-icon ui-icon-closethick"/>');
        var k = $('<div id="exodus-content"/>');
        var l = $('<div id="exodus-top-content"/>');
        var g = $('<ul id="exodus-tab-bar"/>');
        exodus.overlay.bind("click", exodus.closeDialog);
        f.bind("click", exodus.closeDialog);
        h.append($('<div id="exodus-header-content"/>').text(exodus.data.translations["exodus-dialog-title"]));
        l.text(exodus.data.translations["exodus-period"] + " " + exodus.data["exodus-start"] + " – " + exodus.data["exodus-end"]);
        if (exodus.data["next-migration"] != "") {
            l.append($('<span id="exodus-next-migration"/>').text(exodus.data["next-migration"]));
            l.append($("<span/>").text(": " + exodus.data.translations["next-migration-processing"]))
        }
        allyView = $('<li id="ally-show"/>').text(exodus.data.translations["tab-ally-mebers"]);
        allyView.bind("click", function () {
            exodus.showAllyMemberTab()
        });
        buddyView = $('<li id="buddy-show"/>').text(exodus.data.translations["tab-buddies"]);
        buddyView.bind("click", function () {
            exodus.showBuddyTab()
        });
        serverView = $('<li id="uni-select"/>').text(exodus.data.translations["tab-uni-selection"]);
        serverView.bind("click", function () {
            exodus.showServerSelection()
        });
        rulesView = $('<li id="rules-show"/>').text(exodus.data.translations["tab-rules"]);
        rulesView.bind("click", function () {
            exodus.showRulesTab()
        });
        g.append(serverView);
        if (exodus.data["ally-id"] > 0) {
            g.append(allyView)
        }
        if (exodus.data["buddy-amount"] > 0) {
            g.append(buddyView)
        }
        g.append(rulesView);
        k.append(l).append(g);
        exodus.dialog.append(h).append(k).append(f);
        $("body").append(exodus.overlay).append(exodus.dialog);
        if (exodus.data["see-dialog"] == "0") {
            exodus.showRulesTab();
            exodus.data["see-dialog"] = "1";
            exodus.indicator.attr("data-user-see-dialog", 1);
            $.jsonp({
                url: "/service/exodus.php?action=seeDialog&data=" + exodus.data["user-data"] + "&callback=?",
                error: function (a) {
                    errorBoxNotify(LocalizationStrings.error, "TEST: " + exodus.data["user-data"], LocalizationStrings.ok)
                },
                success: ""
            })
        } else {
            exodus.showServerSelection()
        }
        $("html, body").animate({scrollTop: 0}, 100)
    },
    closeDialog: function () {
        exodus.dialog.hide();
        exodus.overlay.hide();
        exodus.isOpen = false
    },
    createButton: function (b) {
        return $('<div class="exodus-button"/>').append($('<div class="exodus-button-left"/>')).append($('<div class="exodus-button-label"/>').text(b)).append($('<div class="exodus-button-right"/>'))
    },
    showServerSelection: function () {
        this.resetView("#uni-select");
        if (exodus.tabContent != null) {
            exodus.tabContent.show()
        } else {
            exodus.tabContent = $('<div id="exodus-tab-content"/>');
            exodus.universeTreeviewHeader = $('<div id="exodus-universe-treeview-header"/>').append($('<span class="exodus-universe-treeview-column-checkbox"/>').text("\u2714").css("visibility", "hidden")).append($('<span class="exodus-universe-treeview-column-name"/>').text(exodus.data.translations["uni-selection-name"])).append($('<span class="exodus-universe-treeview-column-startdate"/>').text(exodus.data.translations["uni-selection-start"])).append($('<span class="exodus-universe-treeview-column-free-spaces"/>').text(exodus.data.translations["uni-selection-free-spaces"])).append($('<span class="exodus-universe-treeview-column-features"/>').text(exodus.data.translations["uni-selection-specifics"]));
            var e = $('<ul id="exodus-universe-treeview"/>');
            exodus.confirmButton = exodus.createButton(exodus.data.translations["uni-selection-confirm"]);
            exodus.revertButton = exodus.createButton(exodus.data.translations["uni-selection-revert"]);
            exodus.confirmButton.bind("click", function () {
                if (!$(this).hasClass("confirm") || exodus.markedServer == null) {
                    return
                }
                var a = exodus.markedServer;
                $.jsonp({
                    url: "https://" + a.host + "/service/exodus.php?action=requestMigration&data=" + a.data + "&callback=?",
                    error: function () {
                        exodus.handleError(a.id, exodus.data.translations["error-no-server"])
                    },
                    success: function (b) {
                        if (b.errorMessage) {
                            exodus.handleError(a.id, exodus.data.translations["error-no-server"])
                        } else {
                            if (exodus.selectedServer != null) {
                                e.find("li").removeClass("row-selected");
                                e.find("li").removeClass("server-selected");
                                $("#server-" + exodus.selectedServer.id).find("span.exodus-success").remove();
                                $("#server-" + exodus.selectedServer.id).find("span.exodus-error").remove()
                            }
                            exodus.indicator.attr("data-migration-host", a.host);
                            exodus.data["migration-host"] = a.host;
                            $("#exodus-indicator-waiting").attr("id", "exodus-indicator-acknowledged");
                            exodus.handleSuccess(a.id, exodus.data.translations["success-server-selected"]);
                            exodus.revertButton.addClass("cancel");
                            $("#server-" + a.id).addClass("server-selected");
                            exodus.selectedServer = a;
                            var c = $("#server-" + a.id).find("span.exodus-universe-treeview-column-free-players");
                            c.text(parseInt(c.text()) - 1);
                            exodus.confirmButton.removeClass("confirm")
                        }
                    }
                })
            });
            exodus.revertButton.bind("click", function () {
                if (!$(this).hasClass("cancel") || exodus.selectedServer == null) {
                    return
                }
                var a = exodus.selectedServer;
                $.jsonp({
                    url: "https://" + a.host + "/service/exodus.php?action=cancelMigration&data=" + a.data + "&callback=?",
                    error: function () {
                        exodus.closeDialog()
                    },
                    success: function (b) {
                        if (b.errorMessage) {
                            exodus.closeDialog()
                        } else {
                            exodus.indicator.attr("data-migration-host", "");
                            $("#exodus-indicator-acknowledged").attr("id", "exodus-indicator-waiting");
                            e.find("li").removeClass("row-selected");
                            e.find("li").removeClass("server-selected");
                            $("#server-" + a.id).find("span.exodus-success").remove();
                            $("#server-" + a.id).find("span.exodus-error").remove();
                            exodus.confirmButton.removeClass("confirm");
                            exodus.revertButton.removeClass("cancel");
                            var c = $("#server-" + a.id).find("span.exodus-universe-treeview-column-free-players");
                            c.text(parseInt(c.text()) + 1);
                            exodus.markedServer = null;
                            exodus.selectedServer = null
                        }
                    }
                })
            });
            if (exodus.data["migration-host"] != "") {
                exodus.revertButton.addClass("cancel")
            }
            exodus.tabContent.append(exodus.universeTreeviewHeader).append(e).append(exodus.confirmButton).append(exodus.revertButton);
            exodus.odd = 0;
            for (var d = 0; d < exodus.data["primary-servers"].length; d++) {
                var f = (exodus.data["primary-servers"].length == d + 1);
                exodus.appendServerRow(e, exodus.data["primary-servers"][d], f, false)
            }
            if (!exodus.secondaryShown) {
                for (var d = 0; d < exodus.data["secondary-servers"].length; d++) {
                    if (exodus.data["migration-host"] == exodus.data["secondary-servers"][d]["host"]) {
                        exodus.appendServerRow(e, exodus.data["secondary-servers"][d], false, true)
                    }
                }
                exodus.secondaryShown = true
            }
            $("#exodus-content").append(exodus.tabContent)
        }
    },
    showAllyMemberTab: function () {
        this.resetView("#ally-show");
        if (exodus.allyMemberContent != null) {
            exodus.allyMemberContent.show()
        } else {
            exodus.allyMemberContent = $('<div id="exodus-ally-content"/>');
            $.jsonp({
                url: "/service/exodus.php?action=getAllyMemberSelection&data=" + exodus.data["user-data"] + "&callback=?",
                error: function () {
                },
                success: function (g) {
                    if (g.errorMessage) {
                        exodus.closeDialog()
                    } else {
                        var h = $('<div id="exodus-universe-treeview-header"/>').append($('<span class="exodus-universe-treeview-column-member-name"/>').text(exodus.data.translations["ally-members-name"])).append($('<span class="exodus-universe-treeview-column-server-name"/>').text(exodus.data.translations["ally-members-server"]));
                        var l = $('<div id="exodus-universe-treeview"/>');
                        for (var f = 0; f < g.length; f++) {
                            var k = $('<li id="server-' + f + '" class="' + (f % 2 ? "odd" : "even") + '"/>').append($('<span class="exodus-universe-treeview-column-member-name"/>').text(g[f].db_character));
                            if (g[f].server_name != null) {
                                k.append($('<span class="exodus-universe-treeview-column-server-name"/>').text(g[f].server_name))
                            } else {
                                k.append($('<span class="exodus-universe-treeview-column-server-name"/>').text(exodus.data.translations["ally-member-no-selction"]))
                            }
                            l.append(k)
                        }
                        exodus.allyMemberContent.append(h);
                        exodus.allyMemberContent.append(l);
                        $("#exodus-content").append(exodus.allyMemberContent)
                    }
                }
            })
        }
    },
    showBuddyTab: function () {
        this.resetView("#buddy-show");
        if (exodus.buddyContent != null) {
            exodus.buddyContent.show()
        } else {
            exodus.buddyContent = $('<div id="exodus-buddy-content"/>');
            $.jsonp({
                url: "/service/exodus.php?action=getBuddySelection&data=" + exodus.data["user-data"] + "&callback=?",
                error: function () {
                },
                success: function (d) {
                    if (d.errorMessage) {
                        exodus.closeDialog()
                    } else {
                        header = $('<div id="exodus-universe-treeview-header"/>').append($('<span class="exodus-universe-treeview-column-member-name"/>').text(exodus.data.translations["ally-members-name"])).append($('<span class="exodus-universe-treeview-column-server-name"/>').text(exodus.data.translations["ally-members-server"]));
                        var c = $('<div id="exodus-universe-treeview"/>');
                        for (i = 0; i < d.length; i++) {
                            row = $('<li id="server-' + i + '" class="' + (i % 2 ? "odd" : "even") + '"/>').append($('<span class="exodus-universe-treeview-column-member-name"/>').text(d[i].db_character));
                            if (d[i].server_name != null) {
                                row.append($('<span class="exodus-universe-treeview-column-server-name"/>').text(d[i].server_name))
                            } else {
                                row.append($('<span class="exodus-universe-treeview-column-server-name"/>').text(exodus.data.translations["ally-member-no-selction"]))
                            }
                            c.append(row)
                        }
                        exodus.buddyContent.append(header);
                        exodus.buddyContent.append(c);
                        $("#exodus-content").append(exodus.buddyContent)
                    }
                }
            })
        }
    },
    showRulesTab: function () {
        this.resetView("#rules-show");
        rules = new Array("uni-fusion", "pre-exodus", "exodus-phase", "post-exodus", "exodus-uni", "target-uni");
        if (exodus.rulesContent != null) {
            exodus.rulesContent.show()
        } else {
            exodus.rulesContent = $('<div id="exodus-rules-content"/>');
            rule = $('<div class="exodus_rule"/>');
            for (var b = 0; b < rules.length; b++) {
                rule.append($('<h2 class="exodus-rule-title" />').text(exodus.data.translations["title-" + rules[b]]));
                rule.append($('<p class="exodus-rule-description" />').text(exodus.data.translations["description-" + rules[b]]));
                exodus.rulesContent.append(rule)
            }
            $("#exodus-content").append(exodus.rulesContent)
        }
    },
    resetView: function (b) {
        if ($(b).hasClass("selected")) {
            return
        }
        if ($("#uni-select").hasClass("selected")) {
            exodus.tabContent.hide()
        } else {
            if ($("#buddy-show").hasClass("selected")) {
                exodus.buddyContent.hide()
            } else {
                if ($("#ally-show").hasClass("selected")) {
                    exodus.allyMemberContent.hide()
                } else {
                    if ($("#rules-show").hasClass("selected")) {
                        exodus.rulesContent.hide()
                    }
                }
            }
        }
        $("#uni-select").removeClass("selected");
        $("#ally-show").removeClass("selected");
        $("#buddy-show").removeClass("selected");
        $("#rules-show").removeClass("selected");
        $(b).addClass("selected")
    }
};
function initFleet1() {
    checkShips("shipsChosen");
    initToggleHeader("fleet1");
    $(".combatunits").unbind("change").bind("change", function () {
        setTemplate(shipTemplates[$(this).val()], maxShips);
        checkShips("shipsChosen")
    });
    focusOnTabChange("#continue", true)
}
function setTemplate(d, e) {
    for (var f in d) {
        if (!$("#ship_" + f).attr("disabled")) {
            $("#ship_" + f).val(d[f])
        }
        if (typeof e[f] == "undefined") {
            e[f] = 0
        }
        checkIntInput("#ship_" + f, 0, e[f])
    }
}
function resetForm() {
    $(".fleetValues").val("")
}
function checkShips(D) {
    if (document.forms[D] != undefined) {
        var s = 0;
        var r = document.forms[D].length;
        for (var w = 0; w < r; w++) {
            var C = document.forms[D].elements[w].id;
            if (typeof C != "undefined") {
                expl = C.split("_");
                if (expl[0] == "ship") {
                    value = document.forms[D].elements[w].value;
                    if (!$("#" + C).attr("disabled") && value != "") {
                        s = s + value
                    }
                }
            }
        }
        var p = "";
        if (s == 0 || !sendingEnabled) {
            validated = false;
            $("#continue").attr("class", "off");
            p = loca.fleetNoSelection;
            if (!sendingEnabled) {
                p = loca.fleetNoFreeSlots
            }
        } else {
            validated = true;
            $("#continue").attr("class", "on")
        }
        var y = createAPIFleet(D);
        if (!$("#FLEETAPI").val()) {
            var x = $(".show_fleet_apikey").attr("title");
            var A = x.indexOf("value='") + 7;
            var u = x.indexOf("' readonly");
            var q = x.slice(0, A);
            var B = x.slice(u, x.length);
            var v = q + y + B;
            $(".show_fleet_apikey").attr("title", v)
        } else {
            $("#FLEETAPI").val(y)
        }
        $("#allornone .info").html(p)
    }
}
function createAPIFleet(h) {
    var k = "";
    if (document.forms[h] != undefined) {
        var g = document.forms[h].length;
        for (var l = 0; l < g; l++) {
            var f = document.forms[h].elements[l].id;
            expl = f.split("_");
            if (expl[0] == "ship") {
                value = document.forms[h].elements[l].value;
                if (value > 0 || value != "") {
                    type = expl[1];
                    k = k + type + ";" + value + "|"
                }
            }
        }
    }
    k = k.substring(0, k.length - 1);
    return techData + k
}
function initStandardFleet() {
    $(".list tr:even").addClass("alt");
    $(".standardFleetSubmit").unbind("click").bind("click", function () {
        $(this).parents("form").submit()
    });
    $(".standardFleetReset").unbind("click").bind("click", function () {
        $(this).parents("form")[0].reset()
    });
    $(".changeFleet").unbind("click").bind("click", function () {
        $(".combatunits").val($(this).attr("rel")).trigger("change");
        $(this).parents(".ui-dialog").find(".ui-dialog-titlebar-close").click()
    })
}
function setShipsFleet(e, h, f) {
    $("#template_id").val(f);
    $("#template_name").val(h);
    for (var g in e) {
        $("#ship" + g).val(e[g])
    }
}
function toggleMaxShips(h, g, f) {
    var e = $(h).find("#ship_" + g);
    if (parseInt(e.val()) !== f) {
        e.val(f)
    } else {
        e.val("")
    }
    $("#continue").focus()
}
function initFleet2() {
    updateVariables();
    timerHandler.appendCallback(updateTimesFleet2);
    if (!isMobile) {
        $("#galaxy").focus()
    }
    initToggleHeader("fleet2");
    initBackButton();
    focusOnTabChange("#continue", true);
    detachEventHandlers();
    attachEventHandlers();
    if ($(".combatunits>option:selected").length) {
        $(".combatunits>option:selected").change()
    }
}
function attachEventHandlers() {
    var b = $("#speed");
    $(document).on("mouseover focus", "#speedLinks>a", function (a) {
        b.val($(this).attr("data-value"));
        updateVariables()
    }).on("mouseleave blur", "#speedLinks>a", function (a) {
        resetSpeedToSelected()
    }).on("mouseup touchstart", "#speedLinks>a", function (a) {
        $("#speedLinks>a.selected").removeClass("selected");
        $(this).addClass("selected").focus();
        b.val($(this).attr("data-value"));
        updateVariables()
    }).on("keyup", "#speedLinks>a", function (a) {
        if (a.keyCode == KeyEvent.DOM_VK_LEFT) {
            $(this).prev().focus()
        } else {
            if (a.keyCode == KeyEvent.DOM_VK_RIGHT) {
                $(this).next().focus()
            } else {
                if (a.keyCode == KeyEvent.DOM_VK_RETURN) {
                    a.stopPropagation();
                    a.preventDefault();
                    if ($(this).hasClass("selected")) {
                        trySubmit()
                    } else {
                        $(this).trigger("mouseup")
                    }
                }
            }
        }
    }).on("keypress", "#speedLinks>a", function (a) {
        if (a.keyCode == KeyEvent.DOM_VK_RETURN) {
            a.stopPropagation();
            a.preventDefault();
            if ($(this).hasClass("selected")) {
                trySubmit()
            } else {
                $(this).click()
            }
        }
    }).on("keypress", "#contentWrapper #inhalt", submitOnEnter)
}
function detachEventHandlers() {
    $(document).off("mouseover focus mouseleave blur mouseup touchstart keyup keypress", "#speedLinks>a").off("keypress", "#contentWrapper #inhalt")
}
function resetSpeedToSelected() {
    if (currentPage == "fleet2") {
        $("#speed").val($("#speedLinks>a.selected").attr("data-value"));
        updateVariables()
    }
}
function initBackButton() {
    $("#back").unbind("click").bind("click", function () {
        resetSpeedToSelected();
        $(this).parents("form").attr("action", returnLink).submit()
    })
}
function prepareVariables() {
    checkCoords();
    speed = $("#speed").val()
}
function setTType(b) {
    b = b == null ? $("#type").val() : b;
    if (b == 1) {
        $("#pbutton").attr("class", "planet_selected")
    } else {
        $("#pbutton").attr("class", "planet")
    }
    if (b == 2) {
        $("#dbutton").attr("class", "debris_selected")
    } else {
        $("#dbutton").attr("class", "debris")
    }
    if (b == 3) {
        $("#mbutton").attr("class", "moon_selected")
    } else {
        $("#mbutton").attr("class", "moon")
    }
    if (b == 1) {
        $("#targetPlanetName").html(locaAllPlanet)
    } else {
        if (b == 2) {
            $("#targetPlanetName").html(locaAllDebris)
        } else {
            if (b == 3) {
                $("#targetPlanetName").html(locaAllMoon)
            }
        }
    }
    $("#type").val(b)
}
function shortLinkChange(d) {
    var e;
    if (d != null) {
        e = $("#aksbox").val()
    } else {
        e = $("#slbox").val()
    }
    if (e != "-") {
        var f = e.split("#");
        $("#galaxy").val(f[0]);
        $("#system").val(f[1]);
        $("#position").val(f[2]);
        setTType(f[3]);
        $("#targetPlanetName").html(f[4]);
        targetGalaxy = f[0];
        targetSystem = f[1];
        targetPosition = f[2]
    }
    focusContinueButton()
}
function focusContinueButton() {
    setTimeout(function () {
        $("#continue").focus()
    }, 100)
}
function handleUnion() {
    if ($("#aksbox").val() == "-") {
        document.details.union.value = 0;
        document.details.mission.value = mission
    } else {
        parts = $("#aksbox").val().split("#");
        document.details.union.value = parts[5];
        document.details.mission.value = missionUnionattack
    }
}
function hideStatusBar() {
    if ($(".fleetStatus") && (targetGalaxy != defaultTargetGalaxy || targetSystem != defaultTargetSystem || targetPosition != defaultTargetPosition)) {
        $(".fleetStatus").hide();
        $("input[name='mission']").value = ""
    }
}
function checkCoords() {
    checkIntInput("#galaxy", 1, maxGalaxy);
    checkIntInput("#system", 1, maxSystem);
    checkIntInput("#position", 1, maxPosition);
    targetGalaxy = $("#galaxy").val();
    targetSystem = $("#system").val();
    targetPosition = $("#position").val();
    if (targetPosition == 16) {
        setTType(1);
        modifyPlanetName();
        checkOk()
    }
}
function checkTarget() {
    var d = checkUrl;
    var c = {};
    c.galaxy = $("#galaxy").val();
    c.system = $("#system").val();
    c.planet = $("#position").val();
    c.type = $("#type").val();
    if ($("form[name='details'] input[name='am" + colonizationID + "']").length > 0 && $("form[name='details'] input[name='am" + colonizationID + "']").val() > 0) {
        c.cs = 1
    }
    if ($("form[name='details'] input[name='am" + recyclerID + "']").length > 0 && $("form[name='details'] input[name='am" + recyclerID + "']").val() > 0) {
        c.recycler = 1
    }
    console.log('checkTarget()');
    $.post(d, c, displayError)
}
function updateTimesFleet2() {
    var d = getFormatedDate(serverTime.getTime() + 1000 * duration, "[d].[m].[y] [G]:[i]:[s]");
    var c = getFormatedDate(serverTime.getTime() + 1000 * 2 * duration, "[d].[m].[y] [G]:[i]:[s]");
    if (document.getElementById) {
        $("#arrivalTime").html(d);
        $("#returnTime").html(c)
    }
}
function initFleet3() {
    timerHandler.appendCallback(updateTimesFleet3);
    if (!isMobile) {
        $("#metal").focus()
    }
    initToggleHeader("fleet3");
    initBackButton();
    updatePrioButtons();
    if ($("#missions .on .selected").length) {
        $("#missions .on .selected")[0].onclick()
    }
    $("#contentWrapper #inhalt").unbind("keydown.continue").bind("keydown.continue", function (b) {
        if (b.keyCode == KeyEvent.DOM_VK_RETURN) {
            trySubmit()
        }
    })
}
function updatePrioButtons() {
    $("#prioM1").attr("src", "/img/icons/4b53e83f8b8583ea279fd26f3a55a5.gif");
    $("#prioM2").attr("src", "/img/icons/8afbd59ffe091239a7c6f1e961b267.gif");
    $("#prioM3").attr("src", "/img/icons/4acc67e1ca4d8debb1b114abcb7c1e.gif");
    switch (prioMetal) {
        case 1:
            $("#prioM1").attr("src", "/img/icons/b357323b99e20a46fc0b2495728351.gif");
            break;
        case 2:
            $("#prioM2").attr("src", "/img/icons/f8959fe540cd329f3a764ad9aeaf93.gif");
            break;
        case 3:
            $("#prioM3").attr("src", "/img/icons/823b3270ed0f4a243287c12d4ee5f8.gif");
            break
    }
    $("#prioC1").attr("src", "/img/icons/4b53e83f8b8583ea279fd26f3a55a5.gif");
    $("#prioC2").attr("src", "/img/icons/8afbd59ffe091239a7c6f1e961b267.gif");
    $("#prioC3").attr("src", "/img/icons/4acc67e1ca4d8debb1b114abcb7c1e.gif");
    switch (prioCrystal) {
        case 1:
            $("#prioC1").attr("src", "/img/icons/b357323b99e20a46fc0b2495728351.gif");
            break;
        case 2:
            $("#prioC2").attr("src", "/img/icons/f8959fe540cd329f3a764ad9aeaf93.gif");
            break;
        case 3:
            $("#prioC3").attr("src", "/img/icons/823b3270ed0f4a243287c12d4ee5f8.gif");
            break
    }
    $("#prioD1").attr("src", "/img/icons/4b53e83f8b8583ea279fd26f3a55a5.gif");
    $("#prioD2").attr("src", "/img/icons/8afbd59ffe091239a7c6f1e961b267.gif");
    $("#prioD3").attr("src", "/img/icons/4acc67e1ca4d8debb1b114abcb7c1e.gif");
    switch (prioDeuterium) {
        case 1:
            $("#prioD1").attr("src", "/img/icons/b357323b99e20a46fc0b2495728351.gif");
            break;
        case 2:
            $("#prioD2").attr("src", "/img/icons/f8959fe540cd329f3a764ad9aeaf93.gif");
            break;
        case 3:
            $("#prioD3").attr("src", "/img/icons/823b3270ed0f4a243287c12d4ee5f8.gif");
            break
    }
}
function selectPrio(d, c) {
    switch (d) {
        case"metal":
            if (prioMetal == c) {
                break
            }
            if (prioCrystal == c) {
                prioCrystal = prioMetal
            }
            if (prioDeuterium == c) {
                prioDeuterium = prioMetal
            }
            prioMetal = c;
            break;
        case"crystal":
            if (prioCrystal == c) {
                break
            }
            if (prioMetal == c) {
                prioMetal = prioCrystal
            }
            if (prioDeuterium == c) {
                prioDeuterium = prioCrystal
            }
            prioCrystal = c;
            break;
        case"deuterium":
            if (prioDeuterium == c) {
                break
            }
            if (prioMetal == c) {
                prioMetal = prioDeuterium
            }
            if (prioCrystal == c) {
                prioCrystal = prioDeuterium
            }
            prioDeuterium = c;
            break
    }
    $('form input[name="prioMetal"]').val(prioMetal);
    $('form input[name="prioCrystal"]').val(prioCrystal);
    $('form input[name="prioDeuterium"]').val(prioDeuterium);
    updatePrioButtons()
}
function updateHoldingOrExpTime() {
    if ($('form input[name="mission"]').val() == missionHold) {
        $('form input[name="holdingOrExpTime"]').val($('form input[name="holdingtime"]').val());
        holdingTime = $('form [name="holdingtime"]').val()
    } else {
        if ($('form input[name="mission"]').val() == missionExpedition) {
            $('form input[name="holdingOrExpTime"]').val($('form input[name="expeditiontime"]').val());
            holdingTime = $('form [name="expeditiontime"]').val()
        } else {
            $('form input[name="holdingOrExpTime"]').val(0);
            holdingTime = 0
        }
    }
}
function checkRessourceByType(h) {
    var g = getValue($("#" + h).val());
    var f = 0;
    var k = 0;
    if (h == "metal") {
        f = metalOnPlanet;
        k = cargoSpace - crystal - deuterium
    } else {
        if (h == "crystal") {
            f = crystalOnPlanet;
            k = cargoSpace - metal - deuterium
        } else {
            if (h == "deuterium") {
                f = deuteriumOnPlanet;
                k = cargoSpace - metal - crystal
            } else {
                f = metalOnPlanet;
                k = cargoSpace - crystal - deuterium
            }
        }
    }
    if (g != "") {
        var l = parseInt(g);
        l = isNaN(l) ? 0 : l;
        l = Math.abs(l);
        l = Math.min(l, f);
        if (l > k) {
            l = k
        }
        updateRessVarByType(h, l);
        formatNumber($("#" + h), l)
    } else {
        updateRessVarByType(h, 0)
    }
}
function updateRessVarByType(d, c) {
    if (d == "metal") {
        metal = c
    } else {
        if (d == "crystal") {
            crystal = c
        } else {
            if (d == "deuterium") {
                deuterium = c
            } else {
                metal = c
            }
        }
    }
}
function resetByRessourceType(b) {
    if (b == "metal") {
        metal = 0
    }
    if (b == "crystal") {
        crystal = 0
    }
    if (b == "deuterium") {
        deuterium = 0
    }
    $("#" + b).val(0);
    updateVariables()
}
function maxMetal() {
    var b;
    b = cargoSpace - crystal - deuterium;
    b = Math.max(b, 0);
    b = Math.min(b, metalOnPlanet);
    metal = Math.max(metal, b);
    formatNumber($("#metal"), metal)
}
function maxCrystal() {
    var b;
    b = cargoSpace - metal - deuterium;
    b = Math.max(b, 0);
    b = Math.min(b, crystalOnPlanet);
    crystal = Math.max(crystal, b);
    formatNumber($("#crystal"), crystal)
}
function maxDeuterium() {
    var b;
    b = cargoSpace - metal - crystal;
    b = Math.max(b, 0);
    b = Math.min(b, deuteriumOnPlanet - consumption);
    b = Math.max(b, 0);
    deuterium = Math.max(deuterium, b);
    formatNumber($("#deuterium"), deuterium)
}
function maxAll() {
    metal = 0;
    crystal = 0;
    deuterium = 0;
    maxDeuterium();
    maxCrystal();
    maxMetal()
}
function updateTimesFleet3() {
    durationAKS = durationAKS - 1;
    checkTimes()
}
function checkTimes() {
    var f = duration;
    if ($("#missionButton2").hasClass("selected")) {
        f = Math.max(durationAKS, duration)
    }
    var e = serverTime.getTime() + 1000 * f;
    var d = e + 1000 * duration + holdingTime * 3600 * 1000;
    if (durationAKS >= duration) {
        $("#durationAKS").html(getFormatedTime(durationAKS))
    }
    $("#arrivalTime").text(getFormatedDate(e, "[d].[m].[y] [G]:[i]:[s]"));
    $("#returnTime").text(getFormatedDate(d, "[d].[m].[y] [G]:[i]:[s]"))
}
function setSelected(b) {
    $("#missions>li>a.selected").removeClass("selected");
    $("#missionButton" + b).addClass("selected");
    isAggressiveMission = ((b == 1) || (b == 2) || (b == 6) || (b == 9));
    $("#fightAfterRetreat,#aks,#holdtimeline,#expeditiontimeline,.prioButton").hide();
    switch (b) {
        case 1:
            $("#fightAfterRetreat").show();
            $(".prioButton").show();
            break;
        case 2:
            $("#aks").show();
            $(".prioButton").show();
            break;
        case 5:
            $("#holdtimeline").show();
            break;
        case 8:
            $("#expeditiontimeline").hide();
            break;
        case 15:
            $("#expeditiontimeline").show();
            break
    }
    checkTimes()
}
function updateMission(g, e, f, h) {
    $(".missionName").text(g);
    $(".mission_description").text(e);
    $("#missionNameWrapper").removeClass("off");
    $(".briefing_overlay").hide();
    if (f == "off") {
        $("#missionNameWrapper").addClass("off");
        $(".briefing_overlay").show()
    }
    $('form input[name="mission"]').val(h);
    updateHoldingOrExpTime();
    updateVariables()
}
var validated = false;
var sendingEnabled = true;
var shipIDs = [];
var speeds = [];
var completeConsumptions = [];
var maxSpeed = 0;
var speedFactor = 1;
var maxGalaxy = null;
var maxSystem = null;
var maxPosition = null;
var DONUT_GALAXY = null;
var DONUT_SYSTEM = null;
var currentGalaxy = 1;
var currentSystem = 1;
var currentPosition = 1;
var currentPlanetType = 1;
var targetGalaxy = 1;
var targetSystem = 1;
var targetPosition = 1;
var defaultTargetGalaxy = 1;
var defaultTargetSystem = 1;
var defaultTargetPosition = 1;
var speed = 0;
var holdingTime = 0;
var metal = 0;
var crystal = 0;
var deuterium = 0;
var currentDeuterium = 0;
var returnLink = "";
var checkUrl = "";
var colonizationID = 0;
var missionNone = null;
var missionUnionattack = null;
var distance = 5;
var duration = 0;
var consumption = 0;
var cargoSpace = 0;
var cargoLeft = 0;
var locaAllPlanet = "";
var locaAllMoon = "";
var locaAllDebris = "";
var metal = 0;
var crystal = 0;
var deuterium = 0;
var distance = 5;
var duration = 0;
var consumption = 0;
var cargoCapacity = 0;
var fuelCapacity = 0;
var metalOnPlanet = 0;
var crystalOnPlanet = 0;
var deuteriumOnPlanet = 0;
var returnLink = "";
var missionHold = null;
var missionExpedition = null;
var durationAKS = 0;
var prioMetal;
var prioCrystal;
var prioDeuterium;
var isAggressiveMission = false;
function getDistance() {
    var e;
    var f;
    var h;
    var g;
    e = Math.abs(currentGalaxy - targetGalaxy);
    f = Math.abs(currentSystem - targetSystem);
    h = Math.abs(currentPosition - targetPosition);
    if (e != 0) {
        g = Math.abs(e - maxGalaxy);
        if (DONUT_GALAXY == 1 && (g < e)) {
            return g * 20000
        } else {
            return e * 20000
        }
    } else {
        if (f != 0) {
            g = Math.abs(f - maxSystem);
            if (DONUT_SYSTEM == 1 && (g < f)) {
                return g * 5 * 19 + 2700
            } else {
                return f * 5 * 19 + 2700
            }
        } else {
            if (h != 0) {
                return h * 5 + 1000
            } else {
                return 5
            }
        }
    }
}
function getDuration() {
    return Math.round(((35000 / speed * Math.sqrt(distance * 10 / maxSpeed) + 10) / speedFactor))
}
function getConsumption(h) {
    var k = 0;
    var f = 0;
    var g = 0;
    var l = Math.max(1, duration * speedFactor - 10);
    for (i = 0, maxI = shipIDs.length; i < maxI; i++) {
        if (h == 0 || h == null || shipIDs[i] == h) {
            g++;
            shipSpeedValue = 35000 / l * Math.sqrt(distance * 10 / speeds[i]);
            f += completeConsumptions[i] * holdingTime;
            k += completeConsumptions[i] * distance / 35000 * ((shipSpeedValue / 10) + 1) * ((shipSpeedValue / 10) + 1)
        }
    }
    if (g > 0) {
        k = Math.round(k) + 1;
        if (holdingTime > 0) {
            k += Math.max(Math.floor(f / 10), 1)
        }
        k = Math.ceil(Math.round(k * fleetDeutSaveFactor));
        return k
    } else {
        return 0
    }
}
function getFreeStorage() {
    return cargoCapacity
}
function updateVariables() {
    if (currentPage == "fleet2") {
        prepareVariables()
    }
    distance = getDistance();
    duration = getDuration();
    consumption = getConsumption();
    cargoSpace = getFreeStorage();
    cargoLeft = cargoSpace - metal - crystal - deuterium;
    refreshFormData()
}
function refreshFormData() {
    $("#duration").html(formatTime(duration) + " h");
    $("#distanceValue").html(tsdpkt(distance));
    styleClass = cargoSpace < 0 ? "overmark" : "undermark";
    $("#storage").html('<span class="' + styleClass + '">' + tsdpkt(cargoSpace) + "</span>");
    styleClass = ((consumption > fuelCapacity) || (consumption > $("#resources_deuterium").text().replace(/\./g, ""))) ? "overmark" : "undermark";
    $("#consumption").html('<span class="' + styleClass + '">' + tsdpkt(consumption) + " (" + Math.ceil(100 * consumption / fuelCapacity) + "%)</span>");
    styleClass = cargoLeft < 0 ? "overmark" : "undermark";
    $("#remainingresources").html('<span class="' + styleClass + '">' + tsdpkt(cargoLeft) + "</style>");
    $(".bar_container").data("currentAmount", cargoSpace - cargoLeft);
    $(".bar_container").data("capacity", cargoSpace);
    refreshBars("bar_container", "filllevel_bar");
    setTType();
    if (currentPage == "fleet2") {
        modifyPlanetName()
    }
    checkOk()
}
function modifyPlanetName() {
    newName = getOwnName();
    if (newName != "") {
        $("#targetPlanetName").html(newName);
        $("#statusTarget").html(newName)
    }
    hideStatusBar()
}
function checkOk() {
    switch (currentPage) {
        case"fleet2":
            if ((currentGalaxy == $("#galaxy").val() && currentSystem == $("#system").val() && currentPosition == $("#position").val() && currentPlanetType == $("#type").val()) || $("#galaxy").val() == "" || $("#system").val() == "" || $("#position").val() == "" || consumption > currentDeuterium || consumption > fuelCapacity || cargoSpace < 0) {
                validated = false;
                $("#continue").attr("class", "off")
            } else {
                validated = true;
                $("#continue").attr("class", "on")
            }
            break;
        case"fleet3":
            if (isMissionValid() && cargoLeft >= 0) {
                validated = true;
                $("#start").attr("class", "on")
            } else {
                validated = false;
                $("#start").attr("class", "off")
            }
            break
    }
}
if (typeof Object.assign !== "function") {
    Object.assign = function (g) {
        if (g == null) {
            throw new TypeError("Cannot convert undefined or null to object")
        }
        g = Object(g);
        for (var e = 1; e < arguments.length; e++) {
            var h = arguments[e];
            if (h != null) {
                for (var f in h) {
                    if (Object.prototype.hasOwnProperty.call(h, f)) {
                        g[f] = h[f]
                    }
                }
            }
        }
        return g
    }
}
if (typeof Number.isInteger !== "function") {
    Number.isInteger = function (b) {
        return (typeof b === "number" && isFinite(b) && b > -9007199254740992 && b < 9007199254740992 && Math.floor(b) === b)
    }
}
var Formatter = {
    timeUnits: {
        second: 1,
        minute: 60,
        hour: 60 * 60,
        day: 24 * 60 * 60,
        week: 7 * 24 * 60 * 60
    }, secondsToTime: function (k, h) {
        var l = {
            segments: -1,
            delimiter: " ",
            units: {
                weeks: "w",
                days: "d",
                hours: "h",
                minutes: "m",
                seconds: "s"
            },
            now: "now"
        };
        h = Object.assign(l, h);
        if (!Number.isInteger(k)) {
            throw"Integer expected for parameter seconds"
        }
        if (k <= 0) {
            return h.now
        }
        var m = {
            weeks: Math.floor(k / Formatter.timeUnits.week),
            days: Math.floor((k % Formatter.timeUnits.week) / Formatter.timeUnits.day),
            hours: Math.floor((k % Formatter.timeUnits.day) / Formatter.timeUnits.hour),
            minutes: Math.floor((k % Formatter.timeUnits.hour) / Formatter.timeUnits.minute),
            seconds: k % Formatter.timeUnits.minute
        };
        var g = [];
        for (var n in m) {
            if ((m[n] > 0) && (h.segments == -1 || g.length < h.segments)) {
                g.push(m[n] + h.units[n])
            }
        }
        return g.join(h.delimiter)
    }, secondsToPeriod: function (h) {
        if (!Number.isInteger(h)) {
            throw"Integer expected for parameter seconds"
        }
        if (h <= 0) {
            return "PT0H0M0S"
        }
        var k = {
            days: {value: Math.floor(h / Formatter.timeUnits.day), unit: "D"},
            hours: {
                value: Math.floor((h % Formatter.timeUnits.day) / Formatter.timeUnits.hour),
                unit: "H"
            },
            minutes: {
                value: Math.floor((h % Formatter.timeUnits.hour) / Formatter.timeUnits.minute),
                unit: "M"
            },
            seconds: {value: h % Formatter.timeUnits.minute, unit: "S"}
        };
        var f = [], g = [];
        for (var l in k) {
            if (k[l].value > 0) {
                if (l == "days") {
                    f.push(k[l].value + k[l].unit)
                } else {
                    g.push(k[l].value + k[l].unit)
                }
            }
        }
        return "P" + f.join("") + (g.length > 0 ? "T" + g.join("") : "")
    }, numberToString: function (M, K) {
        var L = 0;
        var J = 3;
        var v = 1;
        var F = 2;
        var y = 3;
        var w = function (a, b) {
            if (typeof a !== "number") {
                throw"Numeric expected for parameter number"
            }
            if (!Number.isInteger(b)) {
                throw"Integer expected for parameter precision"
            }
            if (b <= 0) {
                return Math.round(a)
            }
            return Math.round(a * Math.pow(10, b)) / Math.pow(10, b)
        };
        var N = function (a, b) {
            if (typeof a !== "number") {
                throw"Numeric expected for parameter number"
            }
            if (!Number.isInteger(b)) {
                throw"Integer expected for parameter precision"
            }
            if (b <= 0) {
                return Math.ceil(a)
            }
            return Math.ceil(a * Math.pow(10, b)) / Math.pow(10, b)
        };
        var C = function (a, b) {
            if (typeof a !== "number") {
                throw"Numeric expected for parameter number"
            }
            if (!Number.isInteger(b)) {
                throw"Integer expected for parameter precision"
            }
            if (b <= 0) {
                return Math.floor(a)
            }
            return Math.floor(a * Math.pow(10, b)) / Math.pow(10, b)
        };
        var G = function (b, a, c) {
            switch (a) {
                case v:
                    b = w(b, c);
                    break;
                case F:
                    b = N(b, c);
                    break;
                case y:
                    b = C(b, c);
                    break
            }
            return b
        };
        var I = {
            transform: v,
            precision: {minimum: L, maximum: J},
            separators: {thousands: ",", decimals: "."},
            boundaries: {1000000: "M", 1000000000: "Bn"}
        };
        K = Object.assign(I, K);
        if (typeof M !== "number") {
            throw"Numeric expected for parameter number"
        }
        if (typeof K.precision === "undefined" || typeof K.precision.minimum === "undefined") {
            throw"Minimum precision not specified"
        }
        if (typeof K.precision === "undefined" || typeof K.precision.maximum === "undefined") {
            throw"Maximum precision not specified"
        }
        if (K.precision.minimum > K.precision.maximum) {
            throw"Minimum precision larger than maximum precision"
        }
        var x = Object.keys(K.boundaries).sort(function (a, b) {
            return parseFloat(b) - parseFloat(a)
        });
        var H = "";
        for (var D = 0; D < x.length; D++) {
            var B = parseInt(x[D]);
            if (B === 0) {
                continue
            }
            if (Math.abs(M) >= B) {
                M /= B;
                H = K.boundaries[x[D]];
                break
            }
        }
        var A = K.precision.maximum;
        while ((M = G(M, K.transform, A)) == G(M, K.transform, A - 1) && A > K.precision.minimum) {
            A--
        }
        M = M.toFixed(A);
        var E = M.toString().split(".");
        E[0] = E[0].replace(/\B(?=(\d{3})+(?!\d))/g, K.separators.thousands);
        return E.join(K.separators.decimals) + H
    }
};
function submitOnKey(b) {
    if (b == 37) {
        system = system > 1 ? parseInt(system) - 1 : maxSystems;
        loadContent(galaxy, system, true)
    } else {
        if (b == 39) {
            system = system < maxSystems ? parseInt(system) + 1 : 1;
            loadContent(galaxy, system, true)
        } else {
            if (b == 40) {
                galaxy = galaxy > 1 ? parseInt(galaxy) - 1 : maxGalaxies;
                loadContent(galaxy, system, true)
            } else {
                if (b == 38) {
                    galaxy = galaxy < maxGalaxies ? parseInt(galaxy) + 1 : 1;
                    loadContent(galaxy, system, true)
                }
            }
        }
    }
}
function keyevent(d) {
    var c;
    if ($(":focus").closest(".ui-dialog").length) {
        return true
    }
    if ($(":focus").closest(".chat_box_textarea").length) {
        return true
    }
    if (window.event) {
        c = window.event.keyCode
    } else {
        if (d) {
            c = d.which
        } else {
            return true
        }
    }
    submitOnKey(c)
}
function launchMissiles(b) {
    var b = $.parseJSON(b);
    if (b.status) {
        $("#missileValue").html(b.rockets)
    }
    errorBoxAsArray(b.errorbox);
    $("#rocketattack").parent().dialog("close")
}
function errorBoxSubmitYes() {
    location.href = officersLink
}
function movePlanet(d, e) {
    function f() {
        console.log('movePlanet()');
        $.post(d, function (a) {
            if ((a == "") || (a == null)) {
                fadeBox(galaxyLoca.reservationSuccess, false);
                setTimeout('reload_page("' + e + '")', 3000)
            } else {
                fadeBox(a, true)
            }
        })
    }

    errorBoxDecision(galaxyLoca.questionTitle, galaxyLoca.question, LocalizationStrings.yes, LocalizationStrings.no, f)
}
function addToTable(n, q, m) {
    var l = n;
    if (m != null) {
        l += " (" + tsdpkt(m) + ") " + LocalizationStrings.ok
    }
    if (isMobile) {
        fadeBox(l, q != "success");
        return
    }
    var r = new Date();
    var s = "fleetstatus" + r.getTime();
    var o = 'id="' + s + '"';
    var p = 'class="' + q + '"';
    var u = "<div " + o + " " + p + ">" + l + "</div>";
    if ($("#fleetstatusrow").has("div").length) {
        $("#fleetstatusrow").empty()
    }
    $(u).prependTo("#fleetstatusrow").fadeOut(3000, function () {
        $(this).remove()
    })
}
function setShips(d, e) {
    var f = document.getElementById(d);
    f.innerHTML = e
}
function displayContentGalaxy(c) {
    dataObject = c; // JSON.parse(c);
    var d = getTooltipSelector("#inhalt");
    removeTooltip(d);
    $("#galaxyContent").html(dataObject.galaxy);
    tabletInitGalaxyDetails();
    eventBDayInitGalaxy();
    $("#galaxyLoading").hide();
    if (preserveSystemOnPlanetChange) {
        $(".planetlink, .moonlink").querystring({
            galaxy: galaxy,
            system: system
        })
    }
    updateAjaxResourcebox(dataObject.resources)
}
function submitForm() {
    galaxy = $("#galaxy_input").val();
    system = $("#system_input").val();
    if (0 === galaxy.length || !$.isNumeric(+galaxy)) {
        galaxy = 1
    }
    if (0 === system.length || !$.isNumeric(+system)) {
        system = 1
    }
    loadContent(galaxy, system, true)
}
function loadContent(f, d, e) {
    $("#galaxyLoading").show();
    if (0 === f.length || !$.isNumeric(+f)) {
        f = 1
    }
    if (0 === d.length || !$.isNumeric(+d)) {
        d = 1
    }
    $("#galaxy_input").val(f);
    $("#system_input").val(d);
    removeTooltip($("#galaxytable tbody *"));
    if (e) {
        $.each(buildListCountdowns, function () {
            timerHandler.removeCallback(this.timer)
        })
    }
    console.log('loadContent()');
    $.post(contentLink, {galaxy: f, system: d}, displayContentGalaxy)
}
function errorBoxDeuterium() {
    fadeBox(galaxyLoca.deuteriumNeeded, true)
}
function doScan(d, c) {
    sendShips(constants.espionage, galaxy, system, d, c, spionageAmount)
}
function initPhalanx() {
    getAjaxResourcebox();
    $(".eventFleet:odd").addClass("odd");
    $(".partnerInfo:even").addClass("part-even");
    $(".toggleInfos").click(function () {
        id = $(this).attr("rel");
        if ($(this).attr("class") == "toggleInfos infosOpen") {
            $(this).removeClass("infosOpen");
            $(this).addClass("infosClosed");
            $(this).children().attr("src", "/img/icons/de1e5f629d9e47d283488eee0c0ede.gif");
            $("." + id).attr("style", "display: none;")
        } else {
            $(this).addClass("infosOpen");
            $(this).removeClass("infosClosed");
            $(this).children().attr("src", "/img/icons/577565fadab7780b0997a76d0dca9b.gif");
            $("." + id).attr("style", "display: block;")
        }
    });
    var b = $(".overlayDiv.phalanx").siblings(".ui-dialog-titlebar");
    if (b.find(".refreshPhalanxLink").length) {
        $("#phalanxWrap .refreshPhalanxLink").remove()
    } else {
        b.find(".ui-dialog-title").append($("#phalanxWrap .refreshPhalanxLink"))
    }
}
function initMissleAttackLayer() {
    $("#rocketattack").parent().dialog("option", "title", $("#rocketattack").attr("data-title"));
    $("#rocketattack input#anz").keyup(function () {
        checkIntInput($(this), 1, $(this).data("max"))
    }).change(function () {
        checkIntInput($(this), 1, $(this).data("max"))
    }).focus();
    $("#rocketattack #number").bind("click", function () {
        var a = $("#rocketattack input#anz");
        if (parseInt(a.val()) != a.data("max")) {
            a.val(a.data("max"))
        } else {
            a.val("1")
        }
    });
    $("#rocketattack #priority a").bind("click", function () {
        var d = $(this);
        var a = $("#primaryTarget");
        $("#rocketattack #priority a").not(d).removeClass("active");
        if (d.hasClass("active")) {
            d.removeClass("active");
            a.val("");
            $("#noPriorityInfo").show()
        } else {
            d.addClass("active");
            a.val(d.attr("ref"));
            $("#noPriorityInfo").hide()
        }
    });
    $("form#rocketForm").submit(function () {
        ajaxFormSubmit("rocketForm", $(this).attr("action"), launchMissiles);
        return false
    });
    function b() {
        var a = $("#rocketattack #arrivalTime #timer");
        a.html(getFormatedDate(serverTime.getTime() + 1000 * a.data("duration"), "[d].[m].[y] [G]:[i]:[s]"))
    }

    timerHandler.appendCallback(b);
    b()
}
function displayMiniFleetMessage(d) {
    var f = d.message;
    if (typeof(d.coordinates) != "undefined") {
        f += " [" + d.coordinates.galaxy + ":" + d.coordinates.system + ":" + d.coordinates.position + "]"
    }
    if (d.success) {
        var e = "#ownFleetStatus_" + d.coordinates.position + "_" + d.planetType;
        switch (d.type) {
            case 1:
                $(e).removeClass("fleetNeutral");
                $(e).attr("title", galaxyLoca.fleetAttacking).addClass("fleetHostile").addClass("tooltip");
                break;
            case 2:
                $(e).attr("title", galaxyLoca.fleetUnderway).addClass("fleetNeutral").addClass("tooltip");
                break
        }
        addToTable(f, "success", d.shipsSent);
        $("#slotUsed").html(tsdpkt(d.slots));
        setShips("probeValue", tsdpkt(d.probes));
        setShips("recyclerValue", tsdpkt(d.recyclers));
        setShips("missileValue", tsdpkt(d.missiles))
    } else {
        addToTable(f, "error")
    }
    shipsendingDone = 1
}
function filterToggle(d) {
    var e = d.target;
    var f;
    switch (e.id) {
        case"filter_empty":
            f = ".empty_filter";
            break;
        case"filter_inactive":
            f = ".inactive_filter";
            break;
        case"filter_vacation":
            f = ".vacation_filter";
            break;
        case"filter_strong":
            f = ".strong_filter";
            break;
        case"filter_newbie":
            f = ".newbie_filter";
            break
    }
    e = $(e);
    if (e.hasClass("filter_active")) {
        e.removeClass("filter_active");
        $(f).each(function (b, a) {
            $(this).removeClass("filtered_" + $(d.target)[0].id)
        });
        sendFilterToggle($(d.target)[0].id, 0);
        d.stopPropagation()
    } else {
        e.addClass("filter_active");
        $(f).each(function (b, a) {
            $(this).addClass("filtered_" + $(d.target)[0].id)
        });
        sendFilterToggle($(d.target)[0].id, 1);
        d.stopPropagation()
    }
}
function sendFilterToggle(c, d) {
    $.ajax({
        type: "POST",
        url: "?page=togglefilter",
        dataType: "json",
        data: {id: c, state: d},
        success: function (a) {
        },
        error: function () {
        }
    })
}
var DOM_GET_ELEMENT_BY_ID_CACHE = [];
function getElementByIdWithCache(b) {
    if (!DOM_GET_ELEMENT_BY_ID_CACHE[b]) {
        DOM_GET_ELEMENT_BY_ID_CACHE[b] = document.getElementById(b)
    }
    return DOM_GET_ELEMENT_BY_ID_CACHE[b]
}
function number_format(v, x, o, w) {
    o = o || LocalizationStrings.decimalPoint;
    w = w || LocalizationStrings.thousandSeperator;
    var q = "";
    var p = v.toString();
    var r = p.indexOf("e");
    if (r > -1) {
        q = p.substring(r);
        v = parseFloat(p.substring(0, r))
    }
    if (x != null) {
        var n = Math.pow(10, x);
        v = Math.round(v * n) / n
    }
    var y = v < 0 ? "-" : "";
    var s = (v > 0 ? Math.floor(v) : Math.abs(Math.ceil(v))).toString();
    var u = v.toString().substring(s.length + y.length);
    o = o != null ? o : ".";
    u = x != null && x > 0 || u.length > 1 ? (o + u.substring(1)) : "";
    if (x != null && x > 0) {
        for (i = u.length - 1, z = x; i < z; ++i) {
            u += "0"
        }
    }
    w = (w != o || u.length == 0) ? w : null;
    if (w != null && w != "") {
        for (i = s.length - 3; i > 0; i -= 3) {
            s = s.substring(0, i) + w + s.substring(i)
        }
    }
    return y + s + u + q
}
function gfNumberGetHumanReadable(g, e, f) {
    g = Math.floor(g);
    e = e || false;
    var h = "";
    var f = f || 3;
    if (e) {
        if (g >= 1000000000) {
            h = LocalizationStrings.unitMilliard;
            g = g / 1000000000
        } else {
            if (g >= 1000000) {
                h = LocalizationStrings.unitMega;
                g = g / 1000000
            }
        }
    }
    floorWithPrecision = function (a, b) {
        return Math.floor(a * Math.pow(10, b)) / Math.pow(10, b)
    };
    g = floorWithPrecision(g, f);
    while (f >= 0) {
        if (floorWithPrecision(g, f - 1) != g) {
            break
        }
        f = f - 1
    }
    return number_format(g, f, LocalizationStrings.decimalPoint, LocalizationStrings.thousandSeperator) + h
}
function getNumberFormatShort(f, e) {
    if (typeof(e) == "undefined") {
        e = 0
    }
    f = Math.floor(f);
    var d = "";
    if (f >= 1000000000) {
        d = LocalizationStrings.unitMilliard;
        f = f / 1000000000
    }
    if (f >= 1000000) {
        d = LocalizationStrings.unitMega;
        f = f / 1000000
    }
    if (f >= 1000) {
        d = LocalizationStrings.unitKilo;
        f = f / 1000
    }
    return number_format(f, e, LocalizationStrings.decimalPoint, LocalizationStrings.thousandSeperator) + d
}
function createExpireTime(c) {
    var d = new Date();
    c = c * 1000;
    d.setTime(c);
    return d
}
function initHighscore() {
    $("a.navButton, a.subnavButton").click(function () {
        var h = $(this).attr("rel");
        var a = $(this).parent();
        var l = "";
        if (a.attr("id") == "typeButtons") {
            $("#typeButtons > a.active").removeClass("active")
        } else {
            if (a.attr("id") == "categoryButtons") {
                $("#categoryButtons > a.active").removeClass("active");
                $("#typeButtons a.active").each(function () {
                    h = $(this).attr("rel")
                })
            }
        }
        if (searchRelId != null && a.attr("id") == "typeButtons" || a.attr("id") == "subnav_fleet") {
            l = "&searchRelId=" + searchRelId
        }
        $(".subnavButton[rel!=" + h + "]").removeClass("active");
        $("#stat_list_content").html(LocalizationStrings.loading);
        $(this).addClass("active");
        var b = $("#categoryButtons > a.active").attr("rel");
        var k = highscoreContentUrl + "?category=" + b + "&type=" + h + l;
        if ((a.attr("id") == "typeButtons" || $(this).hasClass("subnavButton")) && searchSite != site) {
            k = k + "&site=" + site
        }
        removeTooltip(getTooltipSelector("#highscoreContent #ranks"));
        ajaxSumbit(k, "send", "stat_list_content");
        if ($(".navButton.active").attr("rel") == 1) {
            $("#highscoreContent .header h2").text(highscoreLoca.playerHighscore)
        } else {
            $("#highscoreContent .header h2").text(highscoreLoca.allianceHighscore)
        }
    });
    $(".stat_filter").click(function () {
        var a = $(this).attr("id");
        $(".subnav").hide();
        $("#subnav_" + a).fadeIn("slow")
    });
    var d = $("#ranks").offset().top;
    var c = $("#scrollToTop");
    $(window).unbind("scroll.highscoreTop").bind("scroll.highscoreTop", function (a) {
        var b = $(this).scrollTop();
        if (b > d) {
            c.css("visibility", "visible")
        } else {
            c.css("visibility", "hidden")
        }
    });
    $(document).undelegate(".scrollToTop", "click").delegate(".scrollToTop", "click", function () {
        $("html, body").animate({scrollTop: 0}, 50)
    })
}
function initHighscoreContent() {
    if (userWantsFocus) {
        if ($("#position" + searchPosition).length > 0) {
            $("html, body").animate({scrollTop: Math.max(0, $("#position" + searchPosition).offset().top - 200)}, 1000)
        }
    }
    $(".changeSite").change(function () {
        var a = $(this).val();
        $("#stat_list_content").html('<div class="ajaxLoad">' + LocalizationStrings.loading + "</div>");
        ajaxCall(highscoreContentUrl + "?category=" + currentCategory + "&type=" + currentType + "&page=" + a, "stat_list_content")
    });
    var d = $("#scrollToTop");
    var e = $("#ranks thead .score");

    function f() {
        if (e.length) {
            d.css("left", e.offset().left)
        }
    }

    f();
    $(window).unbind("resize.highscoreTop").bind("resize.highscoreTop", f)
}
function saveImperiumOrder(e, d) {
    var f = "impSortOrder";
    if (d) {
        f = "impSortOrderMoon"
    }
    $.ajax({
        url: saveUrl,
        method: "post",
        dataType: "json",
        data: {ajax: 1, type: f, planets: $(e).sortable("toArray")}
    })
}
function clearImperiumOrder() {
    $.ajax({
        url: saveUrl,
        method: "post",
        dataType: "json",
        data: {ajax: 1, type: "reset"},
        success: function (b) {
            if (!b.error) {
                location.reload()
            }
        }
    })
}
function createSummaryHtml(n) {
    var q = "";
    var l = null;
    var o = 0;
    var r = 0;
    var k = "";
    q = q + '<div class="planetHead"><div class="planetname">' + n.translations.summary + '</div><div class="planetImg"><img src="/img/icons/7efb2e73ca11d2344bbed43668da10.jpg"/></div><div class="planetData"><ul><li class="coords textLeft"></li><li class="fields textRight"></li></ul></div><div class="clearfloat"/></div>';
    for (group in n.groups) {
        q = q + '<div class="row" /><div class="values ' + group + " group" + group + '">';
        for (r = 0; k = n.groups[group][r]; r++) {
            if (n.translations.planets[k] == null) {
                continue
            }
            var m = {hourly: 0, daily: 0, weekly: 0};
            if (k == "name") {
                o = n.translations.summary
            } else {
                o = 0;
                if (group == "research") {
                    if (!isNaN(n.planets[0][k])) {
                        o = n.planets[0][k]
                    }
                } else {
                    $.each(n.planets, function () {
                        l = this;
                        if (!isNaN(l[k])) {
                            o = o + parseInt(l[k]);
                            if (group == "supply" && !isNaN(l.production.hourly[k - 1])) {
                                m.hourly += l.production.hourly[k - 1];
                                m.daily += l.production.daily[k - 1];
                                m.weekly += l.production.weekly[k - 1]
                            }
                        }
                    })
                }
            }
            if (group == "supply" || group == "station") {
                o = "&#x00F8; " + tsdpkt(round(o / n.planets.length, 1))
            } else {
                if (group == "items") {
                    o = "&nbsp;"
                } else {
                    o = tsdpkt(o)
                }
            }
            if (group == "supply" && k != "name" && m.hourly > 0) {
                var p = "<table><tr><td>" + n.translations.production.hourly + ":</td><td style=&quot;text-align: right;&quot;>" + tsdpkt(m.hourly) + "</td></tr><tr><td>" + n.translations.production.daily + ":</td><td style=&quot;text-align: right;&quot;>" + tsdpkt(m.daily) + "</td></tr><tr><td>" + n.translations.production.weekly + ":</td><td style=&quot;text-align: right;&quot;>" + tsdpkt(m.weekly) + "</td></tr></table>";
                p = p.replace(/</, "&lt;").replace(/>/, "&gt;");
                q = q + '<div class="tooltipRight ' + k + '" title="' + p + '">' + o + "</div>"
            } else {
                q = q + '<div class="' + k + '">' + o + "</div>"
            }
        }
        q = q + "</div>"
    }
    q = '<div id="planet0" class="planet summary">' + q + "</div>";
    return q
}
function createHeaderHtml(g) {
    var h = "";
    var e = 0;
    var f = "";
    h = h + '<div id="wrapTL"><div id="tab-left"><a id="planetsTab" href="javascript:void(0);" class="active" title=""><span>' + g.translations.planetsTab + '</span></a><a id="moonsTab" href="javascript:void(0);" title="" class=""><span>' + g.translations.moonsTab + "</span></a></div></div>";
    for (group in g.groups) {
        h = h + '<div id="' + group + '" class="firstCat headers ' + group + " headers" + group + '" group="' + group + '"><h3 class="open"><span>' + g.translations.groups[group] + '</span></h3><ul class="secondCat ' + group + " group" + group + '">';
        for (e = 0; f = g.groups[group][e]; e++) {
            if (g.translations.planets[f] == null) {
                continue
            }
            h += '<li class="' + f + '">';
            if (g.translations.planets[f + "_full"] != g.translations.planets[f]) {
                h += '<span class="tooltipLeft" title="' + g.translations.planets[f + "_full"] + '">' + g.translations.planets[f] + "</span>"
            } else {
                h += "<span>" + g.translations.planets[f] + "</span>"
            }
            h += "</li>"
        }
        h = h + "</ul></div>"
    }
    h = '<div id="empireTab"><div class="wrapTab"><div class="tab-part01"></div><h2>' + g.translations.header + '</h2><span class="reset"><img src="/img/icons/f805c477d15ae3131b7c39c7d70e48.gif" width="16" height="16"><a href="javascript:void(0);" onClick="clearImperiumOrder(); return false;">' + g.translations.reset + '</a></span><div class="wrapCorner"></div><br class="clearfloat"/></div></div><div class="header">' + h + "</div>";
    return h
}
function createPlanetsHtml(m) {
    var r = "";
    var q = "";
    var n = "";
    var l = "";
    var k = "";
    var o = 0;
    var p = "";
    $.each(m.planets, function () {
        r = this;
        n = "";
        l = "";
        q = (r.name.length > 13) ? r.name.substr(0, 11) + "..." : r.name;
        n += '<div class="planetHead">';
        if (r.name != q) {
            n += '<div class="planetname tooltip" title="' + r.name + '">' + q + "</div>"
        } else {
            n += '<div class="planetname">' + q + "</div>"
        }
        if (isMobile) {
            n += '<div class="planetImg"><img class="' + r.border + '" src="' + r.image + '"/></div><div class="planetData"><div class="planetDataTop odd"><ul><li class="coords textLeft"><a class="dark_highlight_tablet" href="' + r.coordinatesLink + '" >' + r.coordinates + '</a></li><li class="coords"><span class="dark_highlight_tablet energy tooltipRight" title="' + (r.type == 3 ? r.diameterTooltip : r.energyTooltip) + '">' + (r.type == 3 ? "\u2300: " + r.diameter : r.energyDescr + r.energy) + '</span></li></ul></div><div class="planetDataTop"><ul class="planet_data_2"><li class="fields textLeft">' + r.fieldUsed + "/" + r.fieldMax + '</li><li class="fields textLeft">' + r.temperature + '</li></ul></div></div><div class="clearfloat"/></div>'
        } else {
            n += '<div class="planetImg"><img class="' + r.border + '" src="' + r.image + '"/></div><div class="planetData"><div class="planetDataTop odd"><ul><li class="coords textLeft"><a href="' + r.coordinatesLink + '" >' + r.coordinates + '</a></li><li class="fields textRight">' + r.fieldUsed + "/" + r.fieldMax + '</li></ul></div><div class="planetDataTop"><ul><li class="coords textLeft">' + (r.type == 3 ? r.diameterDescr : r.energyDescr) + '</li><li class="coords textRight">' + (r.type == 3 ? r.diameter : r.energy) + '</li></ul></div><div class="planetDataBottom odd"><ul><li class="fields textCenter">' + r.temperature + '</li></ul></div></div><div class="clearfloat"/></div>'
        }
        for (var a in m.groups) {
            n = n + '<div class="row" /><div class="values ' + a + " group" + a + '">';
            for (o = 0; p = m.groups[a][o]; o++) {
                p = String(p);
                if (r[p + "_html"] != null) {
                    p = p + "_html"
                }
                l = p;
                if (p.substring(p.length - 5) == "_html") {
                    l = p.substring(0, p.length - 5)
                }
                n = n + '<div class="' + l + '">' + r[p] + "</div>"
            }
            n = n + "</div>"
        }
        k = k + '<div id="planet' + this.id + '" class="planet">' + n + "</div>"
    });
    return k
}
function createImperiumHtml(n, r, p, m) {
    var u = 0;
    if (typeof p.planets != "undefined") {
        u = p.planets.length
    }
    var q = 345 + u * 165;
    $("#mainWrapper").attr("style", "width: " + q + "px");
    $(r).show();
    var o = createHeaderHtml(p) + '<div class="planetWrapper">' + createPlanetsHtml(p) + createSummaryHtml(p) + '</div><br class="clearfloat"/>';
    $(n).append(o);
    $(n + " .planetWrapper").sortable({
        start: function () {
            removeTooltip(getTooltipSelector())
        }, update: function () {
            saveImperiumOrder(n + " .planetWrapper", m)
        }
    }).disableSelection();
    for (group in p.groups) {
        $(n + " .headers" + group).click(function () {
            var b = n + " .group" + $(this).attr("group");
            var a = "#" + $(this).attr("group") + " h3";
            $(b).toggle();
            $(a).removeClass("openhover").removeClass("closehover").removeClass("close").removeClass("open");
            if ($(b).attr("style").toLowerCase().substr(9, 4) == "none") {
                $(a).addClass("close");
                $.cookie("impToggleState" + $(this).attr("group"), "1", {expires: 365})
            } else {
                $(a).addClass("open");
                $.cookie("impToggleState" + $(this).attr("group"), "0", {expires: 365})
            }
        });
        var s = $.cookie("impToggleState" + group);
        if (s != null && s == "1") {
            $("#" + group + " > h3").removeClass("open");
            $("#" + group + " > h3").addClass("close");
            $(n + " .group" + group).toggle()
        }
    }
    $(r).hide();
    var l = $.inArray(0, empireOrder);
    if (l > -1) {
        $(".planetWrapper .planet:eq(" + l + "):not(:last-child)").before($("#planet0"))
    }
    initTooltips()
}
function displayMessage(b) {
    location.reload(true)
}
function doUpgrade(m, q, p, l, n) {
    if (forcedToVacation) {
        errorBoxNotify(LocalizationStrings.error, LocalizationStrings.forcedVacationWarning, LocalizationStrings.ok);
        return
    }
    var o = {};
    o.modus = p;
    o.techid = m;
    o.listid = l;
    o.planet = q;
    var r = LocalizationStrings.lastSlotWarningPlanet;
    var k = upgradeUrl;
    if (p == 2) {
        k += "&token=" + cancelBuildingToken
    }
    if (planetType == 1) {
        r = LocalizationStrings.lastSlotWarningMoon
    }
    console.log('doUpgrade()');
    if (n) {
        errorBoxDecision(LocalizationStrings.attention, r, LocalizationStrings.yes, LocalizationStrings.no, function () {
            $.post(k, o, displayMessage)
        })
    } else {
        $.post(k, o, displayMessage)
    }
}
function initEmpire() {
    initConnectionErrorFunction();
    $(".secondCat").each(function () {
        $(this).find("li:last").addClass("catbox-end")
    });
    $(".values").each(function () {
        if (!$(this).hasClass("groupitems")) {
            $(this).find("div:even").addClass("even");
            $(this).find("div:odd").addClass("odd");
            $(this).find("div:last").addClass("box-end")
        }
        if ($(this).children().hasClass("equipment")) {
            $(this).children(".equipment").addClass("box-end")
        }
    });
    $("#settings li:last").addClass("set-end");
    $(".header h3").hover(function () {
        $(this).addClass($(this).attr("class") + "hover")
    }, function () {
        $(this).removeClass("openhover").removeClass("closehover")
    });
    $(".header h3").click(function () {
        $(this).removeClass("openhover").removeClass("closehover");
        var b = $(this).attr("class");
        if (b == "open") {
            $(this).addClass("close")
        } else {
            $(this).addClass("open")
        }
        $(this).removeClass(b)
    });
    $(".planet").hover(function () {
        $(this).addClass("move")
    }, function () {
        $(this).removeClass("move")
    });
    $(".values div img").hover(function () {
        $(this).addClass("imghover")
    }, function () {
        $(this).removeClass("imghover")
    });
    $("#planetsTab").click(function () {
        window.location.href = empireUrl + "&planetType=0"
    });
    if (moonCount > 0) {
        $("#moonsTab").click(function () {
            window.location.href = empireUrl + "&planetType=1"
        })
    } else {
        $("#moonsTab").addClass("nomoons")
    }
    if (planetType == 1) {
        $("#planetsTab").removeClass("active");
        $("#moonsTab").addClass("active")
    }
    initBuffBarEmpire()
}
function initBuffBarEmpire() {
    var b = $(".empireItems");
    b.anythingSlider({
        resizeContents: false,
        buildNavigation: false,
        buildStartStop: false,
        infiniteSlides: false,
        stopAtEnd: true
    });
    b.removeClass("hidden")
}
function toggleEvents(b) {
    if ($("#eventboxContent").is(":hidden")) {
        $("#eventboxContent").slideDown("fast");
        $("#js_eventDetailsClosed").hide();
        $("#js_eventDetailsOpen").show();
        if (typeof toggleEvents.loaded == "undefined" || !toggleEvents.loaded) {
            $("#eventboxContent").html('<img height="16" width="16" src="/img/icons/3f9884806436537bdec305aa26fc60.gif" />');
            $.get(eventlistLink, function (a) {
                $("#eventboxContent").html(a);
                toggleEvents.loaded = true
            })
        }
    } else {
        if (b) {
            return
        }
        $("#eventboxContent").slideUp("fast");
        $("#js_eventDetailsClosed").show();
        $("#js_eventDetailsOpen").hide()
    }
    $("#contentWrapper select").ogameDropDown("hide")
}
function changeSetting(l, k, h, f, g) {
    $.ajax({
        type: "POST",
        url: changeSettingsLink,
        dataType: "json",
        data: {token: changeSettingsToken, key: l, value: k},
        success: function (a) {
            changeSettingsToken = a.newToken;
            if (a.message.length > 0) {
                fadeBox(a.message, a.error)
            }
            if (!a.error && typeof(h) == "function") {
                h()
            } else {
                if (a.error && typeof(f) == "function") {
                    f()
                }
            }
        },
        error: function (a) {
            if (typeof(g) == "undefined" || g) {
                fadeBox(LocalizationStrings.error, true)
            }
            if (a.error && typeof(f) == "function") {
                f()
            }
        }
    })
}
function getOverlayText(b) {
    if (b.hasClass("building") && b.children().hasClass("build-faster-img")) {
        return locaPremium.buildingHalfOverlay
    } else {
        if (b.hasClass("building") && b.children().hasClass("build-finish-img")) {
            return locaPremium.buildingFullOverlay
        } else {
            if (b.hasClass("ships") && b.children().hasClass("build-faster-img")) {
                return locaPremium.shipsHalfOverlay
            } else {
                if (b.hasClass("ships") && b.children().hasClass("build-finish-img")) {
                    return locaPremium.shipsFullOverlay
                } else {
                    if (b.hasClass("research") && b.children().hasClass("build-faster-img")) {
                        return locaPremium.researchHalfOverlay
                    } else {
                        if (b.hasClass("research") && b.children().hasClass("build-finish-img")) {
                            return locaPremium.researchFullOverlay
                        }
                    }
                }
            }
        }
    }
}
function getFastBuildPrice(b) {
    if (b.hasClass("building")) {
        return priceBuilding
    } else {
        if (b.hasClass("research")) {
            return priceResearch
        } else {
            if (b.hasClass("ships")) {
                return priceShips
            }
        }
    }
}
function getRedirectLink(f) {
    var d = {};
    if (f != undefined) {
        for (var e in f) {
            d[e] = f[e]
        }
        return $.param.fragment($.param.querystring(window.location.href, d), {})
    } else {
        return window.location.href.split("#")[0]
    }
}
function sendShips(h, k, l, g, n, m) {
    if (shipsendingDone == 1) {
        shipsendingDone = 0;
        params = {
            mission: h,
            galaxy: k,
            system: l,
            position: g,
            type: n,
            shipCount: m,
            token: miniFleetToken
        };
        $.ajax(miniFleetLink, {
            data: params,
            dataType: "json",
            type: "POST",
            success: function (a) {
                if (typeof(a.newToken) != "undefined") {
                    miniFleetToken = a.newToken
                }
                displayMiniFleetMessage(a.response)
            }
        })
    }
}
function sendShipsWithPopup(h, k, l, g, n, m) {
    params = {
        mission: h,
        galaxy: k,
        system: l,
        position: g,
        type: n,
        shipCount: m,
        token: miniFleetToken
    };
    $.ajax(miniFleetLink, {
        data: params,
        dataType: "json",
        type: "POST",
        success: function (a) {
            if (typeof(a.newToken) != "undefined") {
                miniFleetToken = a.newToken
            }
            fadeBox(a.response.message + " " + a.response.coordinates.galaxy + ":" + a.response.coordinates.system + ":" + a.response.coordinates.position, !a.response.success)
        }
    })
}
function outlawWarning(q, u, s, p, n, l, m) {
    if (typeof(m) != "function") {
        if (q == constants.espionage) {
            m = r
        } else {
            if (q == constants.missleattack) {
                m = o
            }
        }
    }
    if (showOutlawWarning) {
        errorBoxDecision(LocalizationStrings.attention, LocalizationStrings.outlawWarning, LocalizationStrings.yes, LocalizationStrings.no, m)
    } else {
        m()
    }
    function r() {
        sendShips(q, u, s, p, n, l)
    }

    function o() {
        openOverlay(missleAttackLink + "&galaxy=" + u + "&system=" + s + "&position=" + p + "&planetType=" + n, {modal: true})
    }
}
function initThousandSeparator() {
    $(".checkThousandSeparator").unbind("keyup.checkThousandSeparator").bind("keyup.checkThousandSeparator", function (e) {
        if (e.which == 8 || e.which == 46) {
            var f = $(this).getSelection();
            var g = $(this).val();
            if (g.substr(f.start - 1, 1) == LocalizationStrings.thousandSeperator) {
                var h;
                if (e.which == 8) {
                    h = g.substr(0, f.start - 2) + g.substr(f.start - 1)
                } else {
                    h = g.substr(0, f.start) + g.substr(f.start + 1)
                }
                formatNumber($(this), h)
            }
        }
    })
}
function initIndex() {
    initConnectionErrorFunction();
    timerHandler.appendCallback(function () {
        localTime = new Date();
        serverTime = new Date(localTime.valueOf() + timeDiff);
        $(".OGameClock").html(getFormatedDate(serverTime.getTime(), "[d].[m].[Y] <span>[H]:[i]:[s]</span>"))
    });
    $("select").ogameDropDown();
    $("#planet .slot").hover(function () {
        $(this).addClass("slot-hover")
    }, function () {
        $(this).removeClass("slot-hover")
    });
    $("#eventboxFilled").hover(function () {
        $(this).addClass("eventboxHover")
    }, function () {
        $(this).removeClass("qeventboxHover")
    });
    $(document).undelegate(".eventToggle", "click").delegate(".eventToggle", "click", function () {
        toggleEvents();
        return false
    }).undelegate("a.build-faster", "click").delegate("a.build-faster", "click", function () {
        var d = $(this);
        if (darkMatter < getFastBuildPrice(d)) {
            errorBoxDecision(LocalizationStrings.error, loca.errorNotEnoughDM, LocalizationStrings.yes, LocalizationStrings.no, redirectPremium);
            return
        }
        var a = $.deparam.querystring().page;
        errorBoxDecision(loca.notice, getOverlayText(d), LocalizationStrings.yes, LocalizationStrings.no, function () {
            $.ajax({
                url: d.attr("rel"),
                data: {ajax: 1, token: activateToken, referrerPage: a},
                type: "POST",
                dataType: "json",
                error: function () {
                    fadeBox(LocalizationStrings.error, true);
                    d.addClass("disabled")
                },
                success: function (c) {
                    activateToken = c.newToken;
                    if (c.error) {
                        fadeBox(c.message, true);
                        d.addClass("disabled")
                    } else {
                        location.href = getRedirectLink()
                    }
                }
            });
            return false
        })
    }).undelegate(".slideIn", "click").delegate(".slideIn", "click", function () {
        $(".slideIn").removeClass("active");
        var a = $(this).attr("ref");
        $("a[ref='" + a + "']").addClass("active");
        Tipped.hideAll();
        $("html, body").animate({scrollTop: 0}, 500);
        gfSlider.slideIn(getElementByIdWithCache("detail"), a)
    });
    if ($("#eventboxContent").is(":visible")) {
        toggleEvents.loaded = true;
        $("#js_eventDetailsClosed").hide();
        $("#js_eventDetailsOpen").show()
    }
    $("#banner_skyscraper a.close_details").click(function () {
        changeSetting("hideBanner", $(this).attr("ref"), function () {
            $("#banner_skyscraper").remove()
        })
    });
    var b = $("#wreckFieldCountDown");
    if (b) {
    }
    initHideElements();
    initOverlays();
    initThousandSeparator();
    initExodus();
    initTooltips();
    initAjaxResourcebox();
    initPlanetSorting();
    initRetinaImages();
    initBDayEventHints()
}
function initPlanetSorting() {
    $("#planetList.sortable").sortable({
        start: function () {
            Tipped.hideAll()
        }, stop: function () {
            Tipped.hideAll();
            changeSetting("customPlanetOrder", $(this).sortable("toArray"))
        }
    });
    if ($(".lockPlanets").hasClass("closed")) {
        $("#planetList.sortable").sortable("disable")
    }
    $(".lockPlanets").unbind("click").bind("click", function () {
        var b = $(this);
        changeSetting("planetOrderLocked", b.hasClass("open") ? 1 : 0, function () {
            var a;
            if (b.hasClass("open")) {
                b.removeClass("open").addClass("closed");
                $("#planetList.sortable").sortable("disable");
                a = LocalizationStrings.planetOrder.unlock
            } else {
                b.removeClass("closed").addClass("open");
                $("#planetList.sortable").sortable("enable");
                a = LocalizationStrings.planetOrder.lock
            }
            changeTooltip(b, a)
        })
    })
}
function initHideElements() {
    $(document).undelegate("html", "touchstart.hideElem click.hideElem").delegate("html", "touchstart.hideElem click.hideElem", function (l) {
        l.stopPropagation();
        if ($(this).data("noclick")) {
            return
        }
        if (isMobile) {
            var h = l.target.tagName.toUpperCase();
            if (!(h === "TEXTAREA" || h === "INPUT" || h === "SELECT")) {
                document.activeElement.blur()
            }
            if (!$(l.target).parents(".markItUpHeader ul").length) {
                $(".markItUpHeader ul ul").hide()
            }
        }
        if (!$(l.target).parents(".t_Tooltip").length) {
            Tipped.hideAll()
        }
        if (!isMobile) {
            if ($(l.target).parents(".ui-dialog").length || $(l.target).parents(".t_Tooltip").length) {
                return
            }
            var k = $(".overlayDiv");
            if (typeof(k.data("uiDialog")) != "undefined") {
                var n = k.find(".markItUpDropMenu[id]");
                for (var e = 0; e < n.length; ++e) {
                    var m = $("body>ul[rel=" + n[e].id + "]");
                    m.hide()
                }
                k.dialog("close")
            }
        }
    })
}
function initJumpgate() {
    $("select").ogameDropDown();
    $(".list tr:even").addClass("alt");
    $(document).undelegate("#jumpgateForm .ship_input_row .textinput", "keyup change input").delegate("#jumpgateForm .ship_input_row .textinput", "keyup change input", function () {
        checkIntInput(this, 0, $(this).attr("rel"))
    }).undelegate("#jumpgateForm .ship_input_row .textinput", "focus").delegate("#jumpgateForm .ship_input_row .textinput", "focus", function () {
        $(this).val("")
    });
    $("#jumpgate .answerHeadline, .js_openStandardMoonMenu").click(function () {
        if (!player.hasCommander) {
            errorBoxNotify(LocalizationStrings.error, translation.changeSettingOnlyWithCommander, LocalizationStrings.ok, null, false)
        } else {
            $("#jumpgate").find(".answerHeadline").toggleClass("open");
            $(".thirdCol").toggleClass("hidden")
        }
    });
    $(".js_executeJumpButton").click(function () {
        var d = $("#jumpgateForm").find('select[name="zm"]').val();
        if (d != 0) {
            var c = true;
            $(".ship_selection_table input").each(function () {
                if ($(this).val() > 0) {
                    c = false
                }
            });
            if (!c) {
                ajaxFormSubmit("jumpgateForm", $(this).attr("data-url"), jumpgateDone)
            } else {
                fadeBox(translation.noShipsWereSelected, true)
            }
        } else {
            fadeBox(translation.validTargetNeeded, true)
        }
    })
}
function jumpgateDone(b) {
    var b = $.parseJSON(b);
    if (b.status) {
        planet = b.targetMoon;
        $(".overlayDiv").dialog("destroy")
    }
    errorBoxAsArray(b.errorbox);
    if (typeof(b.newToken) != "undefined") {
        setNewTokenData(b.newToken)
    }
}
function jumpgateDefaultTargetSelectionCallback(f) {
    var f = $.parseJSON(f);
    if (f.status) {
        var e = $("#jumpgateForm").find('select[name="zm"]');
        e.find("option").removeAttr("selected");
        var d = e.find('option[value="' + f.targetMoon + '"]');
        if (d.length) {
            d.attr("selected", "selected")
        } else {
            if (e.find('option[value="0"]').length == 0) {
                e.append($(document.createElement("option")).attr("value", 0).attr("selected", "selected").text("--"))
            } else {
                e.find('option[value="0"]').attr("selected", "selected")
            }
        }
        e.trigger("change");
        e.ogameDropDown("refresh")
    }
    errorBoxAsArray(f.errorbox);
    if (typeof(f.newToken) != "undefined") {
        setNewTokenData(f.newToken)
    }
}
function setNewTokenData(b) {
    $('#jumpgateForm input[name="token"]').val(b);
    $('#jumpgateDefaultTargetSelectionForm input[name="token"]').val(b)
}
if (typeof KeyEvent == "undefined") {
    var KeyEvent = {
        DOM_VK_CANCEL: 3,
        DOM_VK_HELP: 6,
        DOM_VK_BACK_SPACE: 8,
        DOM_VK_TAB: 9,
        DOM_VK_CLEAR: 12,
        DOM_VK_RETURN: 13,
        DOM_VK_ENTER: 14,
        DOM_VK_SHIFT: 16,
        DOM_VK_CONTROL: 17,
        DOM_VK_ALT: 18,
        DOM_VK_PAUSE: 19,
        DOM_VK_CAPS_LOCK: 20,
        DOM_VK_ESCAPE: 27,
        DOM_VK_SPACE: 32,
        DOM_VK_PAGE_UP: 33,
        DOM_VK_PAGE_DOWN: 34,
        DOM_VK_END: 35,
        DOM_VK_HOME: 36,
        DOM_VK_LEFT: 37,
        DOM_VK_UP: 38,
        DOM_VK_RIGHT: 39,
        DOM_VK_DOWN: 40,
        DOM_VK_PRINTSCREEN: 44,
        DOM_VK_INSERT: 45,
        DOM_VK_DELETE: 46,
        DOM_VK_0: 48,
        DOM_VK_1: 49,
        DOM_VK_2: 50,
        DOM_VK_3: 51,
        DOM_VK_4: 52,
        DOM_VK_5: 53,
        DOM_VK_6: 54,
        DOM_VK_7: 55,
        DOM_VK_8: 56,
        DOM_VK_9: 57,
        DOM_VK_SEMICOLON: 59,
        DOM_VK_EQUALS: 61,
        DOM_VK_A: 65,
        DOM_VK_B: 66,
        DOM_VK_C: 67,
        DOM_VK_D: 68,
        DOM_VK_E: 69,
        DOM_VK_F: 70,
        DOM_VK_G: 71,
        DOM_VK_H: 72,
        DOM_VK_I: 73,
        DOM_VK_J: 74,
        DOM_VK_K: 75,
        DOM_VK_L: 76,
        DOM_VK_M: 77,
        DOM_VK_N: 78,
        DOM_VK_O: 79,
        DOM_VK_P: 80,
        DOM_VK_Q: 81,
        DOM_VK_R: 82,
        DOM_VK_S: 83,
        DOM_VK_T: 84,
        DOM_VK_U: 85,
        DOM_VK_V: 86,
        DOM_VK_W: 87,
        DOM_VK_X: 88,
        DOM_VK_Y: 89,
        DOM_VK_Z: 90,
        DOM_VK_CONTEXT_MENU: 93,
        DOM_VK_NUMPAD0: 96,
        DOM_VK_NUMPAD1: 97,
        DOM_VK_NUMPAD2: 98,
        DOM_VK_NUMPAD3: 99,
        DOM_VK_NUMPAD4: 100,
        DOM_VK_NUMPAD5: 101,
        DOM_VK_NUMPAD6: 102,
        DOM_VK_NUMPAD7: 103,
        DOM_VK_NUMPAD8: 104,
        DOM_VK_NUMPAD9: 105,
        DOM_VK_MULTIPLY: 106,
        DOM_VK_ADD: 107,
        DOM_VK_SEPARATOR: 108,
        DOM_VK_SUBTRACT: 109,
        DOM_VK_DECIMAL: 110,
        DOM_VK_DIVIDE: 111,
        DOM_VK_F1: 112,
        DOM_VK_F2: 113,
        DOM_VK_F3: 114,
        DOM_VK_F4: 115,
        DOM_VK_F5: 116,
        DOM_VK_F6: 117,
        DOM_VK_F7: 118,
        DOM_VK_F8: 119,
        DOM_VK_F9: 120,
        DOM_VK_F10: 121,
        DOM_VK_F11: 122,
        DOM_VK_F12: 123,
        DOM_VK_F13: 124,
        DOM_VK_F14: 125,
        DOM_VK_F15: 126,
        DOM_VK_F16: 127,
        DOM_VK_F17: 128,
        DOM_VK_F18: 129,
        DOM_VK_F19: 130,
        DOM_VK_F20: 131,
        DOM_VK_F21: 132,
        DOM_VK_F22: 133,
        DOM_VK_F23: 134,
        DOM_VK_F24: 135,
        DOM_VK_NUM_LOCK: 144,
        DOM_VK_SCROLL_LOCK: 145,
        DOM_VK_COMMA: 188,
        DOM_VK_PERIOD: 190,
        DOM_VK_SLASH: 191,
        DOM_VK_BACK_QUOTE: 192,
        DOM_VK_OPEN_BRACKET: 219,
        DOM_VK_BACK_SLASH: 220,
        DOM_VK_CLOSE_BRACKET: 221,
        DOM_VK_QUOTE: 222,
        DOM_VK_META: 224
    }
}
(function (b) {
    b.fn.extend({
        ogameDropDown: function (l) {
            if (b("body.showOldDropdowns").length) {
                return this
            }
            function a(e) {
                var d = e.outerHeight();
                var g = b('.dropdown.currentlySelected[rel="' + e.attr("id") + '"]');
                if (g.length) {
                    var p = Math.min(b(window).innerWidth() + b(window).scrollLeft() - e.width() - 3, g.offset().left);
                    var c;
                    var f = Math.ceil(g.offset().top);
                    if (f + g.height() + d + b("#siteFooter").outerHeight() >= b(window).innerHeight() + b(window).scrollTop()) {
                        c = f - d + 1
                    } else {
                        c = f + g.height() + 1
                    }
                    e.css("left", p).css("top", c).css("min-width", g.width())
                }
            }

            var k = {
                destroy: function () {
                    b(this).filter("select.dropdownInitialized").each(function () {
                        var c = b(this);
                        b('.dropdown[rel="' + c.data("dropdownId") + '"]').remove();
                        b("ul#" + c.data("dropdownId")).remove();
                        c.removeClass("dropdownInitialized").data("dropdownId", "").show()
                    })
                }, hide: function () {
                    b(this).filter("select.dropdownInitialized").each(function () {
                        var c = b('.currentlySelected[rel="' + b(this).data("dropdownId") + '"]');
                        c.find("a").removeClass("hover");
                        b(".dropdownList#" + c.attr("rel")).hide()
                    })
                }, reposition: function () {
                    b(this).filter("select.dropdownInitialized").each(function () {
                        a(b("#" + b(this).data("dropdownId")))
                    })
                }, refresh: function () {
                    var d = b(this).find("option[selected]");
                    var e = getIEVersion() < 999 ? "#" : "javascript:void(0);";
                    var c = b('a[class="' + d.attr("class") + '"][rel="' + b(this).data("dropdownId") + '"]').text(d.text())
                }
            };
            if (typeof(l) == "string") {
                if (typeof(k[l]) == "function") {
                    k[l].call(this)
                }
                return this
            }
            b(this).filter("select:not(.dropdownInitialized)").each(function () {
                var r = b(this);
                var e = "dropdown" + Math.floor(Math.random() * 1000);
                var u = r.find("option[selected]");
                if (u.length == 0) {
                    u = r.find("option:first-child")
                }
                var d = getIEVersion() < 999 ? "#" : "javascript:void(0);";
                var g = b('<a class="' + u.attr("class") + '" data-value="' + u.val() + '" rel="' + e + '" href="' + d + '">' + u.text() + "</a>");
                var s = b('<span class="dropdown currentlySelected ' + r.attr("class") + '" rel="' + e + '"></span>').append(g).width(r.css("width").length ? r.css("width") : r.width()).data("selectElement", r);
                if (r.is("[readonly]") || r.is(":disabled")) {
                    s.addClass("disabled")
                }
                r.after(s).hide().addClass("dropdownInitialized").data("dropdownId", e);
                var c = b('<ul class="dropdown dropdownList" id="' + e + '"></ul>').delegate("a", "click", function (o) {
                    o.stopPropagation();
                    g.html(b(this).html()).attr("class", b(this).attr("class")).attr("data-value", b(this).attr("data-value"));
                    c.hide().find("a").removeClass("focus");
                    b(this).addClass("focus");
                    var p = b(this).attr("data-value");
                    r.val(b(this).attr("data-value")).trigger("change").find('option[value="' + p + '"], option:contains("' + p + '")').trigger("click")
                });

                function f() {
                    if (r.is(r.is("[readonly]") || ":disabled")) {
                        return
                    }
                    if (!c.hasClass("initialized")) {
                        c.addClass("initialized");
                        r.find("option").each(function () {
                            var o = b(this).html();
                            if (typeof(b(this).attr("data-html")) != "undefined") {
                                o = b(this).attr("data-html")
                            }
                            if (typeof(b(this).attr("data-html-prepend")) != "undefined") {
                                o = b(this).attr("data-html-prepend") + o
                            }
                            if (typeof(b(this).attr("data-html-append")) != "undefined") {
                                o += b(this).attr("data-html-append")
                            }
                            $li = b('<li><a class="' + b(this).attr("class") + '" data-value="' + b(this).val() + '">' + o + "</a></li>");
                            c.append($li);
                            if (b(this).is(":selected")) {
                                $li.find("a").addClass("focus")
                            }
                        })
                    }
                }

                g.bind("focus", function (o) {
                    b(".dropdownList").not(c).hide();
                    b(".dropdown.currentlySelected").removeClass("focus");
                    b(this).addClass("hover");
                    s.addClass("focus");
                    f()
                }).bind("mousewheel", function (o) {
                    f();
                    b(this).unbind("mousewheel")
                }).bind("click", function (o) {
                    o.preventDefault();
                    if (r.is(r.is("[readonly]") || ":disabled")) {
                        return
                    }
                    b(".dropdownList").not(c).hide();
                    b(".dropdown.currentlySelected").removeClass("focus");
                    s.addClass("focus");
                    if (c.is(":hidden")) {
                        b(this).addClass("hover");
                        f();
                        a(c);
                        b(window).unbind("resize.dropdown" + e).bind("resize.dropdown" + e, function () {
                            a(c)
                        });
                        c.show();
                        if (c.hasScrollbar()) {
                            c.find("a").css("padding-right", 22)
                        }
                    } else {
                        b(this).removeClass("hover");
                        b(window).unbind("resize.dropdown" + e);
                        c.hide()
                    }
                });
                b("body").append(c)
            });
            var m = "";
            var h;

            function n(g, q) {
                m = g;
                clearTimeout(h);
                h = setTimeout(function () {
                    m = ""
                }, 1500);
                var d = b(".dropdownList:visible");
                var r = false;
                if (d.length == 0) {
                    var e = b(".dropdown.currentlySelected.focus");
                    if (e.length) {
                        d = b("#" + e.attr("rel"));
                        r = true
                    } else {
                        return
                    }
                }
                var c = m.toLowerCase();
                var f = d.find("a").filter(function () {
                    if (b(this).attr("data-value").toLowerCase().indexOf(c) == 0) {
                        return true
                    }
                    return b(this).text().trim().toLowerCase().indexOf(c) == 0
                });
                if (f.length) {
                    q.preventDefault();
                    d.find("a").removeClass("focus");
                    b(f.get(0)).addClass("focus").focus();
                    if (r) {
                        f.click()
                    }
                } else {
                    clearTimeout(h);
                    m = ""
                }
            }

            b(document).undelegate("html", "touchstart.dropdown click.dropdown").delegate("html", "touchstart.dropdown click.dropdown", function (c) {
                if (b(c.target).closest(".dropdown").length == 0) {
                    b(".dropdownList").hide();
                    b(".currentlySelected a").removeClass("hover");
                    b(".currentlySelected").removeClass("focus")
                }
            }).undelegate(".dropdown", "mousewheel.dropdown").delegate(".dropdown", "mousewheel.dropdown", function (e, B) {
                e.preventDefault();
                var x = b(e.target).closest(".dropdown");
                var f;
                if (x.hasClass("currentlySelected")) {
                    f = b("#" + x.attr("rel"))
                } else {
                    f = x
                }
                var d = b('[rel="' + f.attr("id") + '"] a');
                var y = f.find("a:focus");
                if (y.length == 0) {
                    y = f.find("a.focus")
                }
                if (y.length == 0) {
                    y = f.find('a[data-value="' + d.attr("data-value") + '"]')
                }
                var v = y.parent();
                var A = null;
                var g = Math.abs(B);
                if (B > 0) {
                    for (var c = 0; c < g; c++) {
                        if (v.is(":first-child")) {
                            A = v.find("a");
                            break
                        } else {
                            A = v.prev().find("a")
                        }
                        v = A.parent()
                    }
                } else {
                    for (var c = 0; c < g; c++) {
                        if (v.is(":last-child")) {
                            A = v.find("a");
                            break
                        } else {
                            A = v.next().find("a")
                        }
                        v = A.parent()
                    }
                }
                if (A != null) {
                    v = A.parent();
                    f.find("a").removeClass("focus");
                    A.addClass("focus").focus();
                    if (f.is(":hidden")) {
                        A.click()
                    } else {
                        var w = v.position().top;
                        if (w < 0) {
                            f.scrollTop(f.scrollTop() + w)
                        } else {
                            if (w + v.outerHeight() > f.innerHeight()) {
                                f.scrollTop(f.scrollTop() + w + v.outerHeight() - f.innerHeight())
                            }
                        }
                    }
                }
            }).undelegate("*", "focus.dropdown").delegate("*", "focus.dropdown", function (c) {
                if (b(c.target).closest(".dropdown").length == 0) {
                    b(".currentlySelected a").removeClass("hover");
                    b(".currentlySelected").removeClass("focus")
                }
            }).unbind("keydown.dropdown").bind("keydown.dropdown ", function (f) {
                if (b(":focus").length > 0 && b(":focus").parents(".dropdown").length == 0) {
                    return
                }
                var e = false;
                var s = b(".dropdownList:visible");
                if (s.length == 0) {
                    var g = b(".dropdown.currentlySelected.focus");
                    if (g.length) {
                        s = b("#" + g.attr("rel"));
                        e = true
                    } else {
                        return
                    }
                }
                var d = b('[rel="' + s.attr("id") + '"] a');
                var w = s.find("a:focus");
                if (w.length == 0) {
                    w = s.find("a.focus")
                }
                if (w.length == 0) {
                    w = s.find('a[data-value="' + d.attr("data-value") + '"]')
                }
                var u = w.parent();
                var c = null;
                if (f.keyCode == KeyEvent.DOM_VK_UP || f.keyCode == KeyEvent.DOM_VK_DOWN || typeof(delta) != "undefined") {
                    if (f.keyCode == KeyEvent.DOM_VK_UP) {
                        if (u.is(":first-child")) {
                            c = u.find("a")
                        } else {
                            c = u.prev().find("a")
                        }
                        u = c.parent()
                    } else {
                        if (u.is(":last-child")) {
                            c = u.find("a")
                        } else {
                            c = u.next().find("a")
                        }
                        u = c.parent()
                    }
                    f.preventDefault()
                } else {
                    if (f.keyCode == KeyEvent.DOM_VK_BACK_SPACE) {
                        n(m.substring(0, m.length - 1), f)
                    } else {
                        if (f.keyCode == KeyEvent.DOM_VK_RETURN) {
                            f.preventDefault();
                            if (e) {
                                d.parents("form").submit();
                                return
                            } else {
                                e = true;
                                c = w
                            }
                        } else {
                            if (f.keyCode == KeyEvent.DOM_VK_ESCAPE) {
                                c = s.find('[data-value="' + d.attr("data-value") + '"]');
                                e = true
                            }
                        }
                    }
                }
                if (c != null) {
                    u = c.parent();
                    s.find("a").removeClass("focus");
                    c.addClass("focus").focus();
                    if (e) {
                        c.click()
                    } else {
                        var v = u.position().top;
                        if (v < 0) {
                            s.scrollTop(s.scrollTop() + v)
                        } else {
                            if (v + u.outerHeight() > s.innerHeight()) {
                                s.scrollTop(s.scrollTop() + v + u.outerHeight() - s.innerHeight())
                            }
                        }
                    }
                }
            }).unbind("keypress.dropdown").bind("keypress.dropdown", function (c) {
                if (b(":focus").length > 0 && b(":focus").parents(".dropdown").length == 0 || c.charCode == 0) {
                    return
                }
                n(m + String.fromCharCode(c.charCode), c)
            });
            return b(this)
        }, selectText: function () {
            var a, k, g = this[0], l = {
                func: "function",
                obj: "object"
            }, h = function (d, c) {
                return typeof c === d
            };
            if (h(l.obj, g.ownerDocument) && h(l.obj, g.ownerDocument.defaultView) && h(l.func, g.ownerDocument.defaultView.getSelection)) {
                k = g.ownerDocument.defaultView.getSelection();
                if (h(l.func, k.setBaseAndExtent)) {
                    k.setBaseAndExtent(g, 0, g, b(g).contents().size())
                } else {
                    if (h(l.func, g.ownerDocument.createRange)) {
                        a = g.ownerDocument.createRange();
                        if (h(l.func, a.selectNodeContents) && h(l.func, k.removeAllRanges) && h(l.func, k.addRange)) {
                            a.selectNodeContents(g);
                            k.removeAllRanges();
                            k.addRange(a)
                        }
                    }
                }
            } else {
                if (h(l.obj, document.body) && h(l.obj, document.body.createTextRange)) {
                    a = document.body.createTextRange();
                    if (h(l.obj, a.moveToElementText) && h(l.obj, a.select)) {
                        a.moveToElementText(g);
                        a.select()
                    }
                }
            }
            return this
        }, hasScrollbar: function () {
            return this.get(0).scrollHeight > this.innerHeight()
        }
    })
})(jQuery);

function preCloseMovements() {
    $.each(currentMovementTabExtensionStates, function (g, h) {
        if (h[0] == 0) {
            var e = $("#fleet" + g + " span.openDetails a");
            var f = e.attr("data-end-time");
            closeDetails(g, f)
        }
    })
}
function initMovement() {
    initToggleHeader("movement");
    preCloseMovements();
    if (b == undefined) {
        var b = 0
    }
    $("a.openCloseDetails").click(function () {
        openCloseDetails($(this).attr("data-mission-id"), $(this).attr("data-end-time"))
    });
    $(".closeAll").click(function () {
        if (b == 0) {
            b = 1;
            $(".closeAll").children().removeClass("all_open").addClass("all_closed")
        } else {
            b = 0;
            $(".closeAll").children().removeClass("all_closed").addClass("all_open")
        }
        $("a.openCloseDetails").each(function () {
            if (b === 1) {
                closeDetails($(this).attr("data-mission-id"), $(this).attr("data-end-time"))
            } else {
                if (b === 0) {
                    openDetails($(this).attr("data-mission-id"), $(this).attr("data-end-time"))
                }
            }
        })
    });
    timerHandler.appendCallback(function () {
    })
}
function addUserToUnion() {
    $("#participantselect").append($("#buddyselect").find("li.ui-selected"))
}
function removeUserFromUnion() {
    $("#buddyselect").append($("#participantselect").find("li.ui-selected"))
}
function addUserToUnionByForm() {
    var d = $("#unionUserSearch").find('[name="addtogroup"]');
    var f = d.val();
    var e = $("#participantselect");
    if (e.find('li[ref="' + f + '"]').length == 0) {
        e.append($(document.createElement("li")).attr("ref", f).text(f))
    }
    d.val("")
}
function setUnionUsers() {
    var b = "";
    $("#participantselect").find("li").each(function () {
        b += $(this).attr("ref") + ";"
    });
    b = b.substring(0, b.length - 1);
    $("#unionUsers").val(b)
}
function unionUser(d) {
    var c = $.parseJSON(d);
    if (c.status) {
        addUserToUnionByForm()
    } else {
        errorBoxAsArray(c.errorbox)
    }
}
function initFederationLayer() {
    $("#switch").click(function () {
        var b = $("#searchFed");
        b.find("> .wrap").toggle();
        b.find("> #honorWarning").toggle()
    });
    $("#buddyselect, #participantselect").selectable({filter: "li:not(.undermark)"});
    $(document).undelegate("ul#buddyselect li", "dblclick").delegate("ul#buddyselect li", "dblclick", function () {
        addUserToUnion()
    }).undelegate("ul#participantselect li", "dblclick").delegate("ul#participantselect li", "dblclick", function () {
        removeUserFromUnion()
    })
}
function submit_unionform() {
    setUnionUsers();
    ajaxFormSubmit("unionform", $("form#unionform").attr("action"), unionEdit)
}
function recallShipCountdown(f, h) {
    var g = this;
    var e = $(".reversal_time[ref='" + f + "']");
    if (isMobile && e.length) {
        this.updateCountdown = function () {
            var b = g.countdown.getLeftoverTime();
            var a = getFormatedDate(new Date(b * 1000 + timeDiff), "[d].[m].[Y] [H]:[i]:[s]");
            e.html(a)
        };
        g.countdown = new countdown(h, 3, 2);
        g.timer = timerHandler.appendCallback(g.updateCountdown);
        g.updateCountdown()
    }
}
function initNotesForm() {
    $("select").ogameDropDown();
    $("#createNote .text").trigger("keyup");
    if ($("#popupContent").length) {
        initNotes()
    }
}
function initNotes() {
    $("select").ogameDropDown();
    function c(a) {
        var b = false;
        $(a).find(":input").each(function () {
            if (typeof($(this).data("value")) != "undefined") {
                if ($(this).data("value") != $(this).val()) {
                    b = true
                }
            }
        });
        return b
    }

    var d = $(".overlayDiv.notices");
    d.find(".openOverlay").unbind("click").bind("click", function () {
        var b = $(this).attr("data-overlay-class");
        var f = {
            title: $(this).attr("data-title"), close: function () {
                var e = $("." + b);
                if (c(e.find("form"))) {
                    errorBoxDecision(LocalizationStrings.question, locaNotes.changesNotSaved + "<br/><br/>" + locaNotes.questionSaveChanges, LocalizationStrings.yes, LocalizationStrings.no, function () {
                        e.find("form").trigger("submit");
                        e.remove()
                    }, function () {
                        e.remove()
                    }, true)
                } else {
                    e.remove()
                }
            }, "class": b
        };
        openOverlay($(this).attr("href"), f);
        if (b.indexOf("newNote-") === 0) {
            var a = parseInt(b.replace(/^newNote-/, "")) + 1;
            $(this).attr("data-overlay-class", "newNote-" + a)
        }
        return false
    });
    $(document).undelegate("#noteList form", "submit").delegate("#noteList form", "submit", function () {
        console.log('noteList submit()');
        $.post($("#noteList").attr("rel"), $(this).serialize(), function (a) {
            d.html(a)
        })
    }).undelegate("#createNote form [type=submit]", "click").delegate("#createNote form [type=submit]", "click", function (a) {
        a.preventDefault();
        $(this).parents("form").submit()
    }).undelegate("#createNote form", "submit").delegate("#createNote form", "submit", function (a) {
        a.preventDefault();
        var b = $(this);
        $.ajax({
            url: $(this).attr("rel"),
            type: "post",
            data: b.serialize(),
            dataType: "json",
            error: function () {
                fadeBox(LocalizationStrings.error, true)
            },
            success: function (f) {
                if (f.error != null) {
                    fadeBox(f.error, true)
                } else {
                    if ($("#popupContent").length) {
                        $(window).unbind("beforeunload.checkChanges");
                        location.href = b.attr("rel") + "&popup=1"
                    } else {
                        if (b.parents(".overlayDiv").is(":visible")) {
                            b.parents(".overlayDiv").dialog("option", "close", function () {
                                $(this).remove()
                            }).dialog("close")
                        }
                        if (f.success != null) {
                            fadeBox(f.success, false)
                        }
                        d.load(d.find("#noteList").attr("rel"))
                    }
                }
            }
        });
        return false
    }).undelegate("#createNote .textBox", "keyup touchstart change").delegate("#createNote .textBox", "keyup touchstart change", function () {
        var a = $(this).val().length;
        var f = $(this).attr("data-max-length");
        if (a > f) {
            var b = $(this).getSelection();
            $(this).val($(this).val().substr(0, f));
            a = f;
            $(this).setSelection(b)
        }
        $(this).parents("form").find(".cntChars").text(a)
    });
    $(window).unbind("beforeunload.checkChanges").bind("beforeunload.checkChanges", function () {
        var a = false;
        $("#createNote form").each(function () {
            if (c(this)) {
                a = true
            }
        });
        if (a) {
            return locaNotes.changesNotSaved
        }
    })
}
function scrollToTopOfDialog(b) {
    $("html, body").stop().animate({scrollTop: Math.max(0, b.offset().top - 300)}, 200)
}
function openOverlay(N, G) {
    console.log('openOverlay start');
    if (typeof(openOverlay.index) == "undefined") {
        openOverlay.index = 0
    } else {
        openOverlay.index++
    }
    var T = openOverlay.index;
    var G = G || {};
    if ((typeof(G.type) == "undefined" || G.type != "inline") && !N.match(new RegExp("^(" + ogameUrl + "|" + startpageUrl + ")"))) {
        console.log('overlay a href does not match regex? opening new tab');
        window.open("redir.php?url=" + encodeURIComponent(N), "_newtab");
        return
    }
    if (typeof(G.height) == "undefined") {
        G.height = "auto"
    }
    if (typeof(G.width) == "undefined") {
        G.width = "auto"
    }
    if (typeof(G.position) == "undefined") {
        if (isMobile && !isMobileApp) {
            G.position = {my: "top", at: "top"}
        } else {
            G.position = {my: "center", at: "center"}
        }
    }
    G.closeText = "";
    if ($(".overlayDiv").length && !isMobile) {
        var K = $(".overlayDiv:last");
        var M = K.offset();
        G.position = {
            my: "left top",
            at: "left+" + (M.left + 10) + " top+" + (M.top + 10)
        }
    }
    function B(a) {
        var b = a.parent(".ui-dialog");
        if (b.length) {
            b.css("top", Math.max(0, parseInt(b.css("top").replace(/px$/, "")))).css("left", Math.max(0, parseInt(b.css("left").replace(/px$/, ""))))
        }
    }

    var Q = G.type;
    delete G.type;
    if (Q != "inline") {
        var P = $(document.createElement("img")).attr("src", "/img/icons/4161a64a933a5345d00cb9fdaa25c7.gif").attr("alt", LocalizationStrings.loading);
        var L = $(document.createElement("div")).css("text-align", "center").css("margin-top", "20px").append(P);
        var C = $(document.createElement("div")).addClass("overlayDiv").css("display", "none").append(L).appendTo("body");
        var H = function () {
            C.find("select").ogameDropDown("destroy");
            C.remove();
            Tipped.hideAll()
        };
        switch (typeof(G.close)) {
            case"function":
                break;
            case"string":
                var A = G.close.split(" ");
                G.close = function () {
                    $.each(A, function (a, b) {
                        if (b == "__default") {
                            H()
                        } else {
                            window[b]()
                        }
                    })
                };
                break;
            default:
                G.close = H;
                break
        }
    }
    if (typeof(N) == "string") {
        var R = $.deparam($.param.querystring(N));
        if (typeof(R.page) != "undefined") {
            C.attr("data-page", R.page)
        }
        if (!isMobile && $.inArray(R.page, popupWindows) != -1) {
            var J = Math.max(0, Math.floor($(window).height() / 2 - G.popupHeight / 2));
            var O = Math.max(0, Math.floor($(window).width() / 2 - G.popupWidth / 2));
            var U = window.open(N + "&popup=1", R.page, "width=" + G.popupWidth + ",height=" + G.popupHeight + ",scrollbars=yes,resizable=yes,top=" + J + ",left=" + O);
            C.remove();
            U.focus();
            return
        }
    }
    if (typeof(G["class"]) != "undefined") {
        var S = G["class"].split(" ").join(".");
        if ($(".overlayDiv." + S).length) {
            $.get(N, {}, function (a) {
                $(".overlayDiv." + G["class"]).empty().append(a).dialog("moveToTop")
            });
            C.remove();
            C = $(".overlayDiv." + S);
            if (typeof(R.page) != "undefined") {
                C.attr("data-page", R.page)
            }
            if (typeof(G.title) != "undefined") {
                C.dialog("option", "title", G.title)
            }
            scrollToTopOfDialog(C);
            return true
        } else {
            C.addClass(G["class"])
        }
    }
    if (Q == "inline") {
        C = $(N)
    }
    if (isNaN(G.dragStart) && isNaN(G.dragStop)) {
        var D;
        G.dragStart = function () {
            $("html").data("noclick", true);
            C.dialog("option", "width", C.width()).dialog("option", "height", C.height());
            D = {
                bg: C.css("background"),
                image: C.css("background-image"),
                x: C.css("background-position-x"),
                y: C.css("background-position-y"),
                position: C.css("background-position")
            };
            C.find("select").ogameDropDown("hide");
            C.children().hide();
            var d = C.find(".markItUpDropMenu[id]");
            for (var e = 0; e < d.length; ++e) {
                var a = $("body>ul[rel=" + d[e].id + "]");
                var c = (typeof a.attr("old_left") == "undefined" ? -18 : 0);
                var b = (typeof a.attr("old_left") == "undefined" ? -6 : 0);
                a.attr("old_top", C.offset()["top"] + c).attr("old_left", C.offset()["left"] + b).hide()
            }
            C.css("background", "#000000")
        };
        G.dragStop = function () {
            setTimeout(function () {
                $("html").data("noclick", false)
            }, 100);
            if (typeof(C.bg) == "undefined" || C.bg.length == 0) {
                C.css("background-image", D.image);
                if (typeof(D.position) == "undefined" || D.position.length == 0) {
                    C.css("background-position-x", D.x).css("background-position-y", D.y)
                } else {
                    C.css("background-position", D.position)
                }
            } else {
                C.css("background", D.bg)
            }
            C.children().show();
            var c = C.find(".markItUpDropMenu[id]");
            for (var a = 0; a < c.length; ++a) {
                var b = $("body>ul[rel=" + c[a].id + "]");
                b.css({
                    top: (parseInt(b.css("top")) - b.attr("old_top") + C.offset()["top"]) + "px",
                    left: (parseInt(b.css("left")) - b.attr("old_left") + C.offset()["left"]) + "px"
                });
                if ($(c[a]).attr("data-opened") == 1) {
                    b.show()
                }
            }
            C.dialog("option", "width", G.width).dialog("option", "height", G.height);
            B(C)
        }
    }
    if (isNaN(G.resizable)) {
        G.resizable = false
    }
    if (isMobile) {
        G.draggable = false
    }
    if (G.modal) {
        G.open = function () {
            $(".ui-widget-overlay").css("height", "").css("width", "")
        }
    }
    switch (Q) {
        case"iframe":
            var E = overlayWidth;
            var I = overlayHeight;
            if (typeof(G.iframeWidth) != "undefined") {
                E = G.iframeWidth;
                delete G.iframeWidth
            }
            if (typeof(G.iframeHeight) != "undefined") {
                I = G.iframeHeight;
                delete G.iframeHeight
            }
            C.html("<iframe allowTransparency='true'frameborder='0' hspace='0' src='" + N + "' id='TB_iframeContent' name='TB_iframeContent" + Math.round(Math.random() * 1000) + "' style='width:" + (E + 25) + "px;height:" + (I + 1) + "px;' ></iframe>").dialog(G).dialog("moveToTop");
            B(C);
            break;
        case"inline":
            var F = $(N);
            var V = F.parent();
            F.addClass("overlayDiv").dialog(G).dialog("moveToTop");
            B(F);
            break;
        default:
            C.dialog(G).dialog("moveToTop");
            $.get(N, {}).done(function (a) {
                C.empty().append(a).dialog("option", "position", C.dialog("option", "position"));
                setTimeout(function () {
                    C.dialog("option", "position", C.dialog("option", "position"));
                    B(C)
                }, 100);
                $(document).trigger("ajaxShowOverlay")
            }).fail(function () {
            })
    }
    Tipped.hideAll();
    $("select").ogameDropDown("hide");
    if (!isMobile) {
        $(window).bind("resize.overlay" + T, function () {
            if (C.is(":data(dialog)")) {
                C.dialog("option", "position", C.dialog("option", "position"));
                B(C)
            } else {
                $(window).unbind("resize.overlay" + T)
            }
        })
    }

    console.log('openOverlay finish');
}
function isOverlayOpen() {
    return $(".overlayDiv").length > 0
}
function initOverlays() {
    $(document).undelegate('a[href*="overlay=1"], button[data-target*="overlay=1"], a.overlay, button.overlay', "click").delegate('a[href*="overlay=1"], button[data-target*="overlay=1"], a.overlay, button.overlay', "click", function (k) {
        k.preventDefault();
        var e = $(this).attr("href") || $(this).attr("data-target");
        if ($(this).data("overlay-same")) {
            var h = $(this).parents(".ui-dialog");
            var l = h.find(".overlayDiv");
            if ($(this).data("overlay-same") && l.length > 0) {
                $.get(e, {}, function (a) {
                    removeTooltip(l.find(getTooltipSelector()));
                    l.empty().append(a).dialog("moveToTop");
                    l.dialog("option", "position", l.dialog("option", "position"));
                    h.hide();
                    h.show()
                });
                return false
            }
        }
        var g = {zIndex: 4000};
        if ($(this).data("overlay-title")) {
            g.title = $(this).data("overlay-title")
        } else {
            if (typeof($(this).attr("title")) != "undefined" && $(this).attr("title").length) {
                g.title = $(this).attr("title")
            } else {
                if ($(this).data("tipped_restore_title")) {
                    g.title = $(this).data("tipped_restore_title").replace(/^.+\|/, "")
                }
            }
        }
        if ($(this).data("overlay-class")) {
            g["class"] = $(this).data("overlay-class")
        }
        if ($(this).data("overlay-width")) {
            g.width = $(this).data("overlay-width")
        }
        if ($(this).data("overlay-height")) {
            g.height = $(this).data("overlay-height")
        }
        if ($(this).data("overlay-popup-width")) {
            g.popupWidth = $(this).data("overlay-popup-width")
        }
        if ($(this).data("overlay-popup-height")) {
            g.popupHeight = $(this).data("overlay-popup-height")
        }
        if ($(this).data("overlay-modal")) {
            g.modal = $(this).data("overlay-modal");
            g.resizable = false;
            g.draggable = false
        }
        if ($(this).data("overlay-iframe")) {
            g.type = "iframe";
            if ($(this).data("iframe-width")) {
                g.iframeWidth = $(this).data("iframe-width")
            }
            if ($(this).data("iframe-height")) {
                g.iframeHeight = $(this).data("iframe-height")
            }
        } else {
            if ($(this).data("overlay-inline")) {
                g.type = "inline";
                e = $(this).data("overlay-inline")
            }
        }
        if ($(this).data("overlay-close")) {
            g.close = $(this).data("overlay-close")
        }
        console.log('openOverlay called?')
        openOverlay(e, g);
        return false
    })
}
function initOverview() {
    $(".cancelMove").click(function () {
        var c = $(this);
        var d = window.location;
        errorBoxDecision(planetMoveLoca.askTitle, planetMoveLoca.askCancel, planetMoveLoca.yes, planetMoveLoca.no, function () {
            $.ajax({
                method: "get",
                url: c.attr("rel"),
                dataType: "json",
                cache: false,
                success: function (a) {
                    if (a.error.length > 0) {
                        fadeBox(a.error, true)
                    } else {
                        location.href = getRedirectLink()
                    }
                },
                error: function () {
                    fadeBox(planetMoveLoca.error, true)
                }
            })
        })
    });
    $(document).undelegate("#planetMaintenanceDelete", "submit").delegate("#planetMaintenanceDelete", "submit", function (b) {
        b.preventDefault();
        ajaxFormSubmit("planetMaintenanceDelete", $(this).attr("action"), planetGivenup)
    }).undelegate("#abandonplanet #block", "click").delegate("#abandonplanet #block", "click", function (c) {
        c.preventDefault();
        if (isMobileOnly || isFacebookUser) {
            var d = $("#giveupHeadline").attr("rel") == 3 ? loca.moonGiveupQuestion : loca.planetGiveupQuestion;
            d = d.replace("%planetName%", $("#giveupName").text()).replace("%planetCoordinates%", $("#giveupCoordinates").text());
            errorBoxDecision($("#giveupHeadline").text(), d, LocalizationStrings.yes, LocalizationStrings.no, function () {
                $("#planetMaintenanceDelete").submit()
            })
        } else {
            show_hide_menus("#validate");
            show_hide_menus("#giveUpNotification")
        }
    }).undelegate(".openPlanetRenameGiveupBox", "click").delegate(".openPlanetRenameGiveupBox", "click", function (b) {
        b.stopPropagation();
        openPlanetRenameGiveupBox()
    })
}
function clearField() {
    currentValue = $("#planetName").val();
    if (defaultName == currentValue) {
        clearInput("#planetName")
    }
}
function fillField() {
    currentValue = $("#planetName").val();
    if (currentValue == "") {
        $("#planetName").val(defaultName)
    }
}
function openBuddyOverlay(d, c) {
    openOverlay(d, {"class": "buddies", title: c})
}
function planetGivenup(b) {
    var b = $.parseJSON(b);
    errorBoxAsArray(b.errorbox);
    if (typeof(b.newToken) == "string") {
        $("#planetMaintenanceDelete input[name='token']").val(b.newToken)
    }
    if (typeof(b.password_checked) != "undefined" && b.password_checked) {
        $("#planetMaintenanceDelete").attr("action", b.intend)
    }
}
function initPreferences() {
    $(".category").click(function () {
        document.prefs.reset()
    });
    $("div.wrap > div.group").hide();
    $("div.wrap > div.group:first,div.wrap:eq(1) > div.group:eq(0),div.wrap:eq(2) > div.group:eq(0),div.wrap:eq(3) > div.group:eq(0)").show();
    $("div.wrap > div.bar").click(function () {
        $(this).next("div.group:hidden").slideDown("fast", function () {
            Tipped.show($(":input:visible"))
        }).siblings("div.group:visible").slideUp("fast", function () {
            Tipped.hide($(":input:not(:visible)"))
        });
        $(".formError").validationEngine("closePrompt")
    });
    $(".content .bar").hover(function () {
        $(this).addClass("bar-hover")
    }, function () {
        $(this).removeClass("bar-hover")
    });
    $("#newpass1").bind("keyup", function () {
        var u = $(this).val();
        var E = u.length;
        var w = u.match(/[^A-Za-z\d]/);
        var x = u.match(/\d/);
        var s = u.match(/[a-z]/) && u.match(/[A-Z]/);
        var D = 0;
        var q = 4;
        var v = {
            length: false,
            "mixed-case": false,
            "special-chars": false,
            numbers: false
        };
        if (E >= passwordMinLength && E <= passwordMaxLength) {
            v.length = true;
            D++
        }
        if (s) {
            v["mixed-case"] = true;
            D++
        }
        if (x) {
            v.numbers = true;
            D++
        }
        if (w) {
            v["special-chars"] = true;
            D++
        }
        for (var F in v) {
            var y = v[F];
            var A = $("#password-meter-status-" + F);
            A.find("img.status-checked").css("visibility", y ? "visible" : "hidden")
        }
        var C = Math.floor(D / q * 2);
        var r = new Array("low", "medium", "high");
        for (var B in r) {
            if (B != C) {
                $("#password-meter-rating-" + r[B]).removeClass("arrow")
            } else {
                $("#password-meter-rating-" + r[B]).addClass("arrow")
            }
        }
    });
    $(".contentzs").tabs({
        beforeActivate: function (d, c) {
            $("input#selectedTab").val($(c.tab).parent().prevAll().length)
        }, activate: function () {
            Tipped.hide($("input:not(:visible)"));
            Tipped.show($("input:visible"))
        }, active: selectedTab
    });
    $("#sortSetting").unbind("change").bind("change", function () {
        var d = "settings_order";
        if ($(this).val() == customSorting) {
            var e = $("#sortOrder");
            e.attr("disabled", "disabled").attr("name", "");
            $("#sortOrderHidden").attr("name", d).val(e.val());
            $("#sortOrder").next(".dropdown").addClass("disabled")
        } else {
            $("#sortOrder").next(".dropdown").removeClass("disabled");
            var f = $("#sortOrderHidden");
            f.attr("name", "");
            $("#sortOrder").removeClass("disabled").attr("name", d).removeAttr("disabled").val(f.val())
        }
    }).trigger("change");
    if (moveInProgress) {
        $("form#prefs").on("submit", function (c) {
            var d = $(this);
            if (d.find("input#urlaubs_modus.notOnVacation:checked").length) {
                errorBoxDecision(LocalizationStrings.attention, preferenceLoca.planetMoveQuestion, LocalizationStrings.yes, LocalizationStrings.no, function () {
                    d.off("submit").submit()
                });
                c.preventDefault();
                return false
            }
        })
    }
    if (isMobileOnly) {
        $("#prefs").bind("submit", function () {
            var b = $(this);
            if (!b.data("asking") && $("#db_character", b).val().length) {
                b.data("asking", true);
                errorBoxDecision(preferenceLoca.changeNameTitle, preferenceLoca.changeNameQuestion.replace("%newName%", $("#db_character", b).val()), LocalizationStrings.yes, LocalizationStrings.no, function () {
                    b.submit();
                    b.data("asking", false)
                }, function () {
                    b.data("asking", false)
                });
                return false
            }
        })
    }
    if (tabsDisabled) {
        $(".contentzs").tabs("option", "disabled", [1, 2]);
        $("#tabGeneral, #tabRepresentation").attr("title", preferenceLoca.tabDisabled).attr("class", "tooltip")
    }
    $("div.wrap:visible > div.bar:eq(" + openGroup + ")").click()
}
function display_info(b) {
    if (document.getElementById("infoInput").innerHTML == "" || document.getElementById("infoInput").innerHTML != get_displayText(b)) {
        document.getElementById("infoInput").innerHTML = get_displayText(b)
    }
}
function display_error(b) {
    if (document.getElementById("errorInput").innerHTML == "" || document.getElementById("errorInput").innerHTML != get_errorText(b)) {
        document.getElementById("errorInput").innerHTML = get_errorText(b);
        document.getElementById("error").style.display = "block"
    }
}
function hide_error(b) {
    document.getElementById("errorInput").innerHTML = "";
    document.getElementById("error").style.display = "none"
}
function checkUsername() {
    var b = document.forms["new"].elements.username.value;
    if (b.length < 3 || b.length >= 20) {
        display_error("username")
    } else {
        hide_error()
    }
}
function checkEmail() {
    var b = document.forms["new"].elements.email.value;
    validate = b.match(/[a-zA-Z0-9]+@+[a-zA-Z0-9]+[.]+[a-zA-Z0-9]{2,4}/);
    if (b.length < 3 || b.length >= 64 || !validate) {
        display_error("email")
    } else {
        hide_error()
    }
}
var TECHID_REPAIR_DOCK = 36;
var burnUpCountDownForStationScreen = {};
var repairTimeDownForStationScreen = {};
function displayBurnUpEnquiry() {
    var b = $("input.burnUpButton");
    errorBoxDecision(b.data("loca_box_text"), b.data("loca_decision_text"), b.data("loca_yes"), b.data("loca_no"), function () {
        $.ajax({
            url: b.data("url"), success: function (a) {
                var d = jQuery.parseJSON(a);
                if (d.success) {
                    fadeBox(d.reason, false, function () {
                    });
                    redirectSpaceDock()
                } else {
                    fadeBox(d.reason, true, function () {
                    })
                }
            }
        })
    }, function () {
    })
}
function startWreckFieldRepairs() {
    var b = $("input.startRepairsButton");
    $.ajax({
        url: b.data("url"), success: function (a) {
            var d = jQuery.parseJSON(a);
            if (d.success) {
                fadeBox(d.reason, false, function () {
                });
                redirectSpaceDock()
            } else {
                fadeBox(d.reason, true, function () {
                })
            }
        }
    })
}
function reCommissionShips() {
    var b = $("input.reCommissionButton");
    $.ajax({
        url: b.data("url"), success: function (a) {
            var d = jQuery.parseJSON(a);
            if (d.success) {
                fadeBox(d.reason, false, function () {
                });
                redirectSpaceDock()
            } else {
                fadeBox(d.reason, true, function () {
                })
            }
        }
    })
}
function registerBurnUpCountDown(e) {
    var f = $(e);
    var d = $(e).data("duration");
    if (d > 0) {
        if (!burnUpCountDownForStationScreen[e]) {
            burnUpCountDownForStationScreen[e] = new simpleCountdown(f, d, function () {
                location.reload()
            })
        }
    }
}
function registerRepairTimeCountDown(e) {
    var d = $(e);
    var f = $(e).data("duration");
    if (f > 0) {
        if (!repairTimeDownForStationScreen[e]) {
            repairTimeDownForStationScreen[e] = new simpleCountdown(d, f, function () {
                location.reload()
            })
        }
    }
}
$(document).on("click", "input.burnUpButton", displayBurnUpEnquiry);
$(document).on("click", "input.startRepairsButton", startWreckFieldRepairs);
$(document).on("click", "input.reCommissionButton", reCommissionShips);
$(document).on("ajaxShowElement", function (d, c) {
    if (c == TECHID_REPAIR_DOCK) {
        registerBurnUpCountDown("#burnUpCountDownForStationScreen");
        registerRepairTimeCountDown("#repairTimeCountDownForStationScreen")
    }
});
$(document).on("ajaxShowOverlay", function (b) {
    registerBurnUpCountDown("#burnUpCountDownForRepairOverlay");
    registerRepairTimeCountDown("#repairTimeCountDownForRepairOverlay")
});
function resourceTicker(e) {
    var f = this;
    f.config = e;
    f.htmlObj = document.getElementById(f.config.valueElem);
    var d = new Date();
    f.startTime = d.getTime();
    f.updateResource = function () {
        var a = new Date().getTime();
        nrResource = f.config.available + f.config.production * (a - f.startTime) / 1000;
        nrResource = Math.max(0, Math.floor(nrResource));
        if (nrResource < f.config.available || nrResource >= f.config.available && nrResource < f.config.limit) {
            f.htmlObj.innerHTML = gfNumberGetHumanReadable(nrResource, isMobile);
            if (nrResource >= f.config.limit[1]) {
                f.htmlObj.className = "overmark"
            } else {
                if (nrResource >= f.config.limit * 0.9 && nrResource < f.config.limit) {
                    f.htmlObj.className = "middlemark"
                } else {
                    if (nrResource <= f.config.limit * 0.9) {
                        f.htmlObj.className = ""
                    }
                }
            }
            if (f.config.production < 0 && nrResource == 0 || f.config.production == 0) {
                timerHandler.removeCallback(f.intervalObj)
            }
        } else {
            if (f.config.production > 0 && nrResource >= f.config.available && nrResource >= f.config.limit) {
                nrResource = gfNumberGetHumanReadable(f.config.limit, isMobile);
                f.htmlObj.innerHTML = nrResource;
                f.htmlObj.className = "overmark";
                timerHandler.removeCallback(f.intervalObj)
            }
        }
    };
    if (f.config.production > 0 && f.config.available >= f.config.limit) {
        return
    }
    if (f.config.production <= 0 && f.config.available == 0) {
        return
    }
    f.intervalObj = timerHandler.appendCallback(f.updateResource)
}
function initResourceTrader() {
    $(".big_tabs").tabs({activate: hideTipsOnTabChange});
    $(".resource_link").on("click", onSelectResource);
    $(".btn_calltrader").on("click", callTrader)
}
function onSelectResource(f) {
    var e = $(f.currentTarget);
    if (!e.hasClass("active")) {
        $(".resource_link").removeClass("active");
        e.addClass("active");
        $(".btn_calltrader").attr("disabled", false).data("offerId", e.data("resourceId"));
        var d = $(".getNewTraderDiv");
        if (d.hasClass("hidden") && !e.hasClass("oldTraderActive") || !d.hasClass("hidden") && e.hasClass("oldTraderActive")) {
            d.parent().children().toggleClass("hidden")
        }
    }
}
function showTradeNowButton() {
    if ($("#callTrader").hasClass("traderActive")) {
        $("#callTrader").show()
    } else {
        $("#callTrader").hide()
    }
}
function calcCosts(c, d) {
    return Math.ceil(d * factor[offer_id] / factor[c])
}
function calcInputFromCosts(c, d) {
    return Math.max(Math.floor(d / factor[offer_id] * factor[c]), 0)
}
function setValue(c, d) {
    if (offer_id == c) {
        $("#" + c + "_value_label").html(number_format(d, 0, loca.decimalPoint, loca.thousandsSeparator))
    } else {
        formatNumber("#" + c + "_value", d)
    }
}
function checkValue(b) {
    setValue(b, Math.min(getValue($("#" + b + "_value").val()), Math.round(storage[b])));
    free_id = 6 - b - offer_id;
    offer_costs = calcCosts(free_id, getValue($("#" + free_id + "_value").val()));
    costs = calcCosts(b, getValue($("#" + b + "_value").val()));
    freeOfferCosts = Math.round(offer_amount - (offer_costs));
    if (costs > freeOfferCosts) {
        setValue(b, calcInputFromCosts(b, freeOfferCosts));
        costs = calcCosts(b, getValue($("#" + b + "_value").val()))
    }
    offer_costs = offer_costs + costs;
    setValue(offer_id, offer_costs);
    document.getElementById(b + "_storage").innerHTML = number_format((storage[b] - getValue($("#" + b + "_value").val())), 0, loca.decimalPoint, loca.thousandsSeparator)
}
function setMaxValue(b) {
    setValue(b, storage[b]);
    checkValue(b)
}
function callTrader(h) {
    if ($(h.currentTarget).attr("disabled") == "disabled") {
        return
    }
    var g = $(h.currentTarget).data("offerId"), e = $(h.currentTarget).data("askOverwrite");
    if (typeof(e) == "undefined") {
        e = true
    }
    if (darkMatter < traderCosts) {
        errorBoxDecision(LocalizationStrings.error, loca.errorNotEnoughDM, LocalizationStrings.yes, LocalizationStrings.no, redirectPremium);
        return
    }
    function f() {
        if (!$(".call_trader_box .getNewTraderDiv").hasClass("hidden")) {
            $(".call_trader_box").children().toggleClass("hidden")
        }
        $(".resource_list .resource_link").removeClass("oldTraderActive").filter(function (a) {
            return $(this).data("resourceId") == g
        }).addClass("oldTraderActive");
        $("#callTrader").show().addClass("traderActive");
        console.log('f() traderCallLink');

        $.post(traderCallLink, {
            offer_id: g,
            token: traderResourcesToken
        }, function (a) {
            a = $.parseJSON(a);
            traderResourcesToken = a.newToken;
            if (a.status == "1") {
                traderObj.reloadResources();
                $("#callTrader").addClass("traderActive").show();
                openOverlay(traderOverlayLink, {"class": "traderlayer"});
                var d = $("#activeTrader");
                var b = "metal";
                var c = loca.traderResourceTitleMetal;
                switch (g) {
                    case 2:
                        b = "crystal";
                        c = loca.traderResourceTitleCrystal;
                        break;
                    case 3:
                        b = "deut";
                        c = loca.traderResourceTitleDeuterium;
                        break
                }
                d.find(".left_content #material").attr("class", b);
                d.find("p.stimulus").html(c);
                d.show();
                $("#boxHeader, #boxFooter").show()
            } else {
                errorBoxAsArray(a.errorbox)
            }
        })
    }

    if (e && $("#callTrader").is(":visible")) {
        errorBoxDecision(loca.traderResourceNewQuestionHeadline, loca.traderResourceNewQuestion, LocalizationStrings.yes, LocalizationStrings.no, f)
    } else {
        f()
    }
}
function tradeDone(b) {
    b = $.parseJSON(b);
    traderResourcesToken = b.newToken;
    if (b.status == "1") {
        $(".overlayDiv.traderlayer").dialog("close");
        $(".call_trader_box").children().toggleClass("hidden");
        traderObj.reloadResources();
        $("#callTrader").removeClass("traderActive").hide();
        $(".resource_link").removeClass("oldTraderActive active");
        $(".btn_calltrader").attr("disabled", true);
        $("#activeTrader").hide()
    }
    errorBoxAsArray(b.errorbox)
}
function closeSearch() {
    if (typeof(currentPage != "undefined")) {
        if (currentPage == "fleet1" || currentPage == "fleet2") {
            $("a#continue").focus()
        } else {
            if (currentPage == "fleet3") {
                $("a#start").focus()
            }
        }
    }
}
function GFSlider(d) {
    var c = this;
    c.duration = 500;
    c.zIndex = 10;
    c.intervalTime = 30;
    c.lastTid = 0;
    c.inAction = false;
    c.isOpen = false;
    c.lastObj = false;
    c.currHeight = d.offsetHeight;
    c.opacity = 1;
    c.header = document.getElementById("header_text");
    c.ressButton = document.getElementById("resources_button");
    c.areaMap = document.getElementById("transImg");
    this.slideIn = function (b, a, f) {
        if (!c.inAction) {
            c.slideInObj = b;
            if (c.lastTid != a || f) {
                b.opacity = 1;
                c.lastTid = a;
                $("#detail").html('<div id="techDetailLoading"></div>');
                if (!c.isOpen) {
                    if (c.ressButton) {
                        c.ressButton.style.display = "none"
                    }
                    b.style.height = "1px";
                    b.style.display = "block";
                    b.style.overflow = "hidden";
                    c.inAction = true;
                    c.startTime = new Date().getTime();
                    c.slideInStep();
                    c.isOpen = true
                } else {
                    loadDetails(c.lastTid)
                }
            } else {
                c.header.style.display = "block";
                c.opacity = 0;
                c.lastTid = 0;
                c.inAction = true;
                c.isOpen = false;
                c.startTime = new Date().getTime();
                c.slideOutObj = c.slideInObj;
                c.slideOutStep()
            }
        }
    };
    this.slideInStep = function () {
        d = c.slideInObj;
        var a = new Date().getTime();
        var b = parseInt(c.currHeight * ((a - c.startTime) / c.duration));
        if (b < c.currHeight) {
            d.style.height = (b) + "px";
            d.style.marginTop = (c.currHeight - 1 - b) + "px";
            window.setTimeout(c.slideInStep, c.intervalTime);
            c.opacity = Math.max(c.opacity - 0.1, 0);
            c.header.style.opacity = c.opacity;
            c.header.style.filter = "Alpha(opacity=" + (0.5 * 100) + ")"
        } else {
            d.style.height = c.currHeight + "px";
            d.style.marginTop = "0px";
            c.inAction = false;
            c.header.style.display = "none";
            loadDetails(c.lastTid);
            if (c.lastObj && d != c.lastObj) {
                c.hideLast()
            }
            c.lastObj = d
        }
    };
    this.slideOutStep = function () {
        d = c.slideInObj;
        var a = new Date().getTime();
        height = parseInt(c.currHeight * ((a - c.startTime) / c.duration));
        if (height < c.currHeight) {
            d.style.height = (c.currHeight - 1 - height) + "px";
            d.style.marginTop = (height) + "px";
            window.setTimeout(c.slideOutStep, c.intervalTime);
            c.opacity = Math.max(c.opacity + 0.1, 0);
            c.header.style.opacity = c.opacity
        } else {
            d.style.height = c.currHeight + "px";
            d.style.marginTop = "0px";
            c.opacity = 1;
            c.header.style.opacity = c.opacity;
            if (c.ressButton) {
                c.ressButton.style.display = "block"
            }
            d.style.display = "none";
            c.inAction = false;
            c.hideLast()
        }
    };
    this.hideLast = function () {
        if (c.lastObj) {
            $(".slideIn").removeClass("active");
            c.lastObj.style.display = "none";
            c.inAction = false
        }
        $(document).trigger("ajaxHideElement", c.lastTid)
    };
    this.hide = function (a) {
        $(".slideIn").removeClass("active");
        c.slideOutObj = a;
        c.opacity = 1;
        c.header.style.opacity = c.opacity;
        c.header.style.display = "block";
        if (c.ressButton) {
            c.ressButton.style.display = "block"
        }
        if (c.areaMap) {
            c.areaMap.style.display = "block"
        }
        c.slideOutObj.style.display = "none";
        c.inAction = false;
        c.lastTid = 0;
        c.isOpen = false
    }
}
function rocketsDestroyed(b) {
    var b = $.parseJSON(b);
    errorBoxAsArray(b.errorbox);
    if (!b.errorbox.failed) {
        $(".rocketlayer").dialog("close");
        gfSlider.slideIn(getElementByIdWithCache("detail"), techID, true)
    }
}
function supplyFleet(b) {
    var b = $.parseJSON(b);
    if (b.status) {
        getAjaxResourcebox();
        supplyTimes[b.id] = b.time;
        new simpleCountdown($("#holdingTime-" + b.id), b.time)
    }
    errorBoxAsArray(b.errorbox)
}
function updateSupplyDetails(e, f, d) {
    $("#shipCount").html(gfNumberGetHumanReadable(e));
    $("#deutCosts").html(gfNumberGetHumanReadable(f));
    $("span.countdown").hide();
    $("#holdingTime-" + d).show()
}
function initAllianceDepot() {
    $(".overlayDiv[data-page='allydepotlayer'] select").ogameDropDown();
    $(".holdingTime:first-child").show();
    for (var b in supplyTimes) {
        new simpleCountdown($("#holdingTime-" + b), supplyTimes[b])
    }
    $("#supplyTimeInput").focus(function () {
        clearInput(this)
    }).keyup(function () {
        var a = getValue($("#resources_deuterium").text());
        var d = getValue($("#deutCosts").text());
        checkIntInput(this, 1, Math.floor(a / d))
    })
}
function tabletInitOverviewAdvice() {
    if (!isMobile) {
        return false
    }
    var f = $(".adviceWrapper");
    var d = f.find("#exodus-indicator, #exodus-timer");
    var e = f.find("#exodus-indicator-processed");
    f.prev().before(d);
    f.prev().before(e);
    $("#planetdata").after(f)
}
function tabletInitGalaxyDetails() {
    if (!isMobile) {
        return false
    }
    var b = ["js_planet", "js_moon", "js_debris", "js_playerName", "js_allyTag"];
    $(".js_detailRow").css("display", "none");
    $(".js_detailRow").each(function (e) {
        e = $(this).attr("rel");
        for (var f = 0; f < b.length; f++) {
            var a = $("." + b[f] + e);
            if (a === undefined || a.length == 0) {
                if (e == 17) {
                    continue
                }
                return
            }
            if (a.attr("class").indexOf("js_no_action") >= 0) {
                continue
            }
            a.unbind();
            a.bind("click.planet", function (c) {
                if ($(this).hasClass("active")) {
                    $(".row *.active").removeClass("active");
                    $(".js_detailRow").css("display", "none")
                } else {
                    $(".row *.active").removeClass("active");
                    if ($(".bdaySlotBox")) {
                        $(".bdaySlotBox .name").removeClass("active")
                    }
                    $(".js_detailRow").css("display", "none");
                    if ($(this).html().trim()) {
                        $(this).addClass("active");
                        if ($(this).attr("class").indexOf("js_planet") >= 0) {
                            elem = ".js_detailRowPlanet" + e
                        } else {
                            if ($(this).attr("class").indexOf("js_moon") >= 0) {
                                elem = ".js_detailRowMoon" + e
                            } else {
                                if ($(this).attr("class").indexOf("js_debris") >= 0) {
                                    elem = ".js_detailRowDebris" + e
                                } else {
                                    if ($(this).attr("class").indexOf("js_playerName") >= 0) {
                                        elem = ".js_detailRowPlayer" + e
                                    } else {
                                        if ($(this).attr("class").indexOf("js_allyTag") >= 0) {
                                            elem = ".js_detailRowAlliance" + e
                                        }
                                    }
                                }
                            }
                        }
                        if (e == 17) {
                            $(elem).css("display", "block")
                        } else {
                            $(elem).css("display", "table-row")
                        }
                    }
                }
            })
        }
    });
    $("a.planetMoveIcons").bind("click", function (a) {
        a.stopPropagation()
    })
}
function tabletToggleTechtreeInfos(f) {
    if (!isMobile) {
        return false
    }
    var e = $("div.techtree[data-id='" + f + "']");
    var d = e.find(".techImage a");
    d.each(function () {
        var b = $(this);
        var c = b.parent().hasClass("built") ? "undermark" : "overmark";
        var a = b.data("tech-name");
        var h = b.data("tech-type");
        b.append('<div class="short_info" style="display: none"><span class="' + c + '">' + a + "</span><br/>" + h + "</div>")
    });
    if (d.length) {
        e.append($('<a id="toggleDetails" href="javascript:void(0)" class="btn_blue">' + LocalizationStrings.moreDetails + "</a>").click(function () {
            var a = e.find(".short_info");
            if (a.is(":visible")) {
                $(this).text(LocalizationStrings.moreDetails)
            } else {
                $(this).text(LocalizationStrings.lessDetails)
            }
            a.toggle()
        }))
    }
}
function tabletInitEmpire() {
    if (!isMobile) {
        return false
    }
    var b = $("#mainWrapper").width();
    b = (b < 1024) ? "1024" : b;
    $("#outerWrapper").width(b);
    $(".reset").hide()
}
function tabletInitPayment() {
    if (!isMobile) {
        return false
    }
    $("#payment").parent(".overlayDiv").dialog("option", "title", paymentLoca.title);
    document.addEventListener("deviceready", function () {
        $("#mobilePayment a.js_buyPacket").unbind("click").bind("click", function () {
            HostApp.StartPayment($(this).attr("ref"), userData.id, constants.name, constants.language)
        });
        HostApp.OnPaymentFinished = function () {
            getAjaxResourcebox(function (b) {
                fadeBox(paymentLoca.success, false);
                $("#payment").parent().dialog("close");
                $("#planet #content .level span").attr("class", "undermark").text(b.darkmatter.string)
            })
        };
        HostApp.OnPaymentFailed = function () {
            fadeBox(paymentLoca.error, true)
        }
    }, false)
}
function tabletInitGalaxy() {
    if (!isMobile) {
        return false
    }
    $("#galaxyContent").wipetouch({
        wipeLeft: function (b) {
            if (!$("#galaxyLoading:visible").length) {
                submitOnKey(39)
            }
        },
        wipeRight: function (b) {
            if (!$("#galaxyLoading:visible").length) {
                submitOnKey(37)
            }
        },
        preventDefault: false,
        preventDefaultWhenTriggering: true,
        moveX: 180,
        moveY: 60
    })
}
function initRetinaImages() {
    if ($(".js_replace2x").css("font-size") == "1px") {
        $("img.js_replace2x").each(function () {
            $(this).attr("src", $(this).attr("rel"))
        })
    }
}
function setupOverlay(e, d, f) {
    $(".build-it_premium").addClass("overlay");
    $(".build-it_premium").attr("href", e);
    $(".build-it_premium").data("overlay-title", d);
    $(".build-it_premium").data("techid", f)
}
function setupBuildinglistForBuildItButton(e, f, d) {
    new baulisteCountdown(document.getElementById("possibleInTime"), buildableAt, pageToReload)
}
function drawErrorbox(p, n, l, h, o, m) {
    var m = m == undefined ? false : m;
    var k = m !== false ? $("." + m) : $(".build-it_disabled");
    if (typeof(o) == "undefined" || o == "") {
        o = document.location.href
    }
    k.click(function () {
        if (l !== undefined && h !== undefined && o !== undefined) {
            if (p == "notify") {
                errorBoxNotify(l, n, h.allOk, function () {
                    window.location.href = o
                })
            }
            if (p == "decision") {
                errorBoxDecision(l, n, h.allYes, h.allNo, function () {
                    window.location.href = o
                })
            }
        }
        if (p == "fadeBox") {
            fadeBox(n, true)
        }
    })
}
function initializeBuildItButton() {
    if (hasCommander && buildableAt > 0) {
        setupBuildinglistForBuildItButton(loca.allDetailNow, techID, showSlotWarning)
    }
    if (buttonState) {
        $(".build-it").on("click", function () {
            sendBuildRequest(null, null, showSlotWarning)
        })
    } else {
        if (couldBeBuild) {
            $errorCount = showErrors()
        } else {
            $errorCount = 99
        }
        if ((error == null || error == 0) && $errorCount == 0) {
            $(".build-it_premium").on("click", function () {
                var c = $("#number").val();
                if (typeof c == "undefined") {
                    c = 1
                }
                var d = links.overlay + "&amount=" + c;
                setupOverlay(d, overlayTitle, techID)
            })
        }
    }
    $(document).off("keypress.submitBuild").on("keypress.submitBuild", "#contentWrapper #inhalt #number", function (c) {
        if (c.keyCode != 13) {
            return
        }
        c.stopPropagation();
        var d = $(".build-it_premium");
        if (d.length) {
            d.trigger("click")
        } else {
            $(".build-it").trigger("click")
        }
    })
}
function showErrors() {
    var b = {allYes: loca.allYes, allNo: loca.allNo, allOk: loca.allOk};
    if (isBuildlistNeeded) {
        if (!hasCommander && !(isShip || isRocket)) {
            drawErrorbox("decision", loca.infoBuildlist, loca.allError, b, links.decisionCommander, "build-it_premium");
            return 1
        }
        if (isRocketAndStorageNotFree) {
            drawErrorbox("notify", loca.noRocketsiloCapacity, loca.allError, b, links.notify);
            return 1
        }
    } else {
        if (error !== null && error !== 0) {
            if (premiumerror) {
                if (showErrorOnPremiumbutton) {
                    drawErrorbox("decision", errorlist[error], loca.allError, b, links[error], buttonClass);
                    return 1
                } else {
                    drawErrorbox("decision", errorlist[error], loca.allError, b, links[error]);
                    return 1
                }
            } else {
                if (isRocketAndStorageNotFree) {
                    drawErrorbox("notify", loca.noRocketsiloCapacity, loca.allError, b, links.notify);
                    return 1
                } else {
                    if (isBusy) {
                        return 1
                    } else {
                        drawErrorbox("notify", errorlist[error], loca.allError, b, "");
                        return 1
                    }
                }
            }
        }
    }
    return 0
}
function initTechDetailsAjax() {
    initializeBuildItButton();
    refreshBars("bar_container", "filllevel_bar")
}
function initGlobalTechtree(c) {
    var d = $("div.techtree[data-id='" + c + "']");
    d.find(".headline").unbind("click").bind("click", function () {
        $(this).next().toggle(function () {
            var a = d.parents(".ui-dialog");
            a.hide();
            $(this).toggleClass("open");
            a.show()
        })
    });
    if (openTree == "all") {
        d.find(".techtree_content").show(0, function () {
            $(this).addClass("open")
        })
    } else {
        if (openTree != null) {
            d.find(".techtree_content_" + openTree).show(0, function () {
                $(this).addClass("open")
            })
        }
    }
}
function initOverlayName() {
    $("div.techtree").each(function () {
        if (typeof($(this).attr("data-title")) != "undefined") {
            $(this).parent(".overlayDiv").dialog("option", "title", $(this).attr("data-title"))
        }
    })
}
function initTechtree(g) {
    var h = $("div.techtree[data-id='" + g + "']");
    var e = h.find(".techImage").outerHeight(true);
    var f = 20;
    h.find(".techWrapper.depth1").each(function () {
        f += $(this).outerWidth()
    });
    h.css("width", f);
    $(document).ready(function () {
        var d = jsPlumb.getInstance();
        d.Defaults.Container = h.find(".graph");
        d.Defaults.Connector = ["Flowchart", {cornerRadius: 20}];
        d.Defaults.Endpoint = ["Rectangle", {
            cssClass: "endpoint",
            width: 1,
            height: 1
        }];
        d.Defaults.Anchors = ["ContinuousTop", "ContinuousBottom"];
        var H = {};
        $.each(endpoints, function () {
            var m = h.find(".tech" + this.toString());
            d.addEndpoint(m);
            var k = Math.floor(m.find("a").offset().left);
            var l = Math.floor(m.find("a").offset().top);
            H[this] = [k, l]
        });
        var D;
        do {
            D = false;
            $.each(connections, function () {
                var k = h.find(".tech" + this.source + " a");
                var l = h.find(".tech" + this.target + " a");
                if (k.offset().top >= l.offset().top - 10 && k.offset().top <= l.offset().top + 10) {
                    k.parent().css("margin-top", parseInt(k.parent().css("margin-top").replace(/px/, "")) + e);
                    k.parent().parent().find("a[data-tech-id]").each(function () {
                        H[$(this).attr("data-tech-id")][1] += e
                    });
                    D = true
                }
            })
        } while (D);
        var B = [];
        var F = [];
        for (var C in H) {
            if (B.indexOf(H[C][0]) == -1) {
                B.push(H[C][0])
            }
            if (F.indexOf(H[C][1]) == -1) {
                F.push(H[C][1])
            }
        }
        B.sort(function (k, l) {
            return (k > l ? 1 : -1)
        });
        F.sort(function (k, l) {
            return (k > l ? 1 : -1)
        });
        var b = {};
        for (var G in H) {
            b[G] = {left: B.indexOf(H[G][0]), top: F.indexOf(H[G][1])}
        }
        connections.sort(function (k, l) {
            return (Math.abs(b[k.source]["left"] - b[k.target]["left"]) < Math.abs(b[l.source]["left"] - b[l.target]["left"])) ? -1 : 1
        });
        var w = {
            hasRequirements: {strokeStyle: "#015100", lineWidth: 3},
            hasNotRequirements: {strokeStyle: " #510009", lineWidth: 3}
        };
        var x = [[0, 0.5, -1, 0], [0, 0.3, -1, 0], [0, 0.7, -1, 0], [0, 0.9, -1, 0]];
        var c = [[1, 0.5, 1, 0], [1, 0.3, 1, 0], [1, 0.7, 1, 0], [1, 0.9, 1, 0]];
        var E = [[0.5, 1, 0, 1], [0.3, 1, 0, 1], [0.7, 1, 0, 1], [0.9, 1, 0, 1]];
        var y = [[0.5, 0, 0, -1], [0.3, 0, 0, -1], [0.7, 0, 0, -1], [0.9, 0, 0, -1]];
        var A = {};

        function a(l, m, n, k) {
            if (!k[l]) {
                k[l] = {}
            }
            if (k[l][m] == undefined) {
                k[l][m] = 0
            }
            ++k[l][m];
            return n[k[l][m] - 1]
        }

        $.each(connections, function () {
            var m = h.find(".tech" + this.source + " a");
            var l = h.find(".tech" + this.target + " a");
            var k = {
                source: m,
                target: l,
                overlays: [["Arrow", {
                    location: -5,
                    paintStyle: w[this.paintStyle],
                    width: 8,
                    length: 8,
                    foldback: 0.8
                }], ["Label", {
                    label: this.label,
                    cssClass: "label " + this.paintStyle,
                    location: 0.85
                }]],
                paintStyle: w[this.paintStyle],
                hoverPaintStyle: {strokeStyle: "rgb(255, 255, 0)"}
            };
            if (b[this.target].left < b[this.source].left) {
                if (!lineInCoordinatesBlocked(b, b[this.source].left, b[this.source].top, b[this.source].left, b[this.target].top) && !positionInCoordinatesBlocked(b, b[this.source].left, b[this.target].top) && !lineInCoordinatesBlocked(b, b[this.source].left, b[this.target].top, b[this.target].left, b[this.target].top)) {
                    k.anchors = [a(this.source, "top", y, A), a(this.target, "right", c, A)]
                } else {
                    k.anchors = [a(this.source, "left", x, A), a(this.target, "bottom", E, A)];
                    k.overlays[1][1] = readableVersionOfLabel(k.overlays[1][1], A[this.target].bottom)
                }
            } else {
                if (b[this.target].left > b[this.source].left) {
                    if (!lineInCoordinatesBlocked(b, b[this.source].left, b[this.source].top, b[this.source].left, b[this.target].top) && !positionInCoordinatesBlocked(b, b[this.source].left, b[this.target].top) && !lineInCoordinatesBlocked(b, b[this.source].left, b[this.target].top, b[this.target].left, b[this.target].top)) {
                        k.anchors = [a(this.source, "top", y, A), a(this.target, "left", x, A)]
                    } else {
                        k.anchors = [a(this.source, "right", c, A), a(this.target, "bottom", E, A)];
                        k.overlays[1][1] = readableVersionOfLabel(k.overlays[1][1], A[this.target].bottom)
                    }
                } else {
                    if (b[this.target].top < b[this.source].top - 1 && lineInCoordinatesBlocked(b, b[this.source].left, b[this.source].top, b[this.target].left, b[this.target].top)) {
                        k.anchors = [a(this.source, "left", x, A), a(this.target, "left", x, A)]
                    } else {
                        k.anchors = [a(this.source, "top", y, A), a(this.target, "bottom", E, A)];
                        k.overlays[1][1] = readableVersionOfLabel(k.overlays[1][1], A[this.target].bottom)
                    }
                }
            }
            d.connect(k)
        })
    });
    tabletToggleTechtreeInfos(g)
}
function readableVersionOfLabel(e, f) {
    e.location = (-0.05 * f + 0.85);
    var d = e.label.indexOf("/");
    if (d) {
    }
    return e
}
function lineInCoordinatesBlocked(n, p, o, m, q) {
    if (p == m) {
        for (var r in n) {
            if (n[r].left == p && o > n[r].top && q < n[r].top) {
                return true
            }
        }
    } else {
        if (o == q && p > m) {
            for (var k in n) {
                if (n[k].top == o && p > n[k].left && m < n[k].left) {
                    return true
                }
            }
        } else {
            if (o == q && p < m) {
                for (var l in n) {
                    if (n[l].top == o && p < n[l].left && m > n[l].left) {
                        return true
                    }
                }
            }
        }
    }
    return false
}
function positionInCoordinatesBlocked(g, h, e) {
    for (var f in g) {
        if (g[f].left == h && g[f].top == e) {
            return true
        }
    }
    return false
}
var javascriptAvailable = true;
var days = new Array("Mon", "Tus", "Wed", "Thu", "Fri", "Sat", "Sun");
var months = new Array("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec");
function getFormatedDate(d, f) {
    var e = new Date();
    e.setTime(d);
    str = f;
    str = str.replace("[d]", dezInt(e.getDate(), 2));
    str = str.replace("[D]", days[e.getDay()]);
    str = str.replace("[m]", dezInt(e.getMonth() + 1, 2));
    str = str.replace("[M]", months[e.getMonth()]);
    str = str.replace("[j]", parseInt(e.getDate()));
    str = str.replace("[Y]", e.getFullYear());
    str = str.replace("[y]", e.getFullYear().toString().substr(2, 4));
    str = str.replace("[G]", e.getHours());
    str = str.replace("[H]", dezInt(e.getHours(), 2));
    str = str.replace("[i]", dezInt(e.getMinutes(), 2));
    str = str.replace("[s]", dezInt(e.getSeconds(), 2));
    return str
}
function dezInt(g, m, k) {
    k = (k) ? k : "0";
    var l = (g < 0) ? "-" : "", h = (k == "0") ? l : "";
    g = Math.abs(parseInt(g, 10));
    m -= ("" + g).length;
    for (var n = 1; n <= m; n++) {
        h += "" + k
    }
    h += ((k != "0") ? l : "") + g;
    return h
}
function getFormatedTime(b) {
    hours = Math.floor(b / 3600);
    timeleft = b % 3600;
    minutes = Math.floor(timeleft / 60);
    timeleft = timeleft % 60;
    seconds = timeleft;
    return dezInt(hours, 2) + ":" + dezInt(minutes, 2) + ":" + dezInt(seconds, 2)
}
function tsdpkt(h) {
    var f = "";
    if (h < 0) {
        f = "-"
    }
    h = Math.abs(h);
    var e = h % 1000;
    while (h >= 1000) {
        var g = "";
        if ((h % 1000) < 100) {
            g = "0"
        }
        if ((h % 1000) < 10) {
            g = "00"
        }
        if ((h % 1000) == 0) {
            g = "00"
        }
        h = Math.abs((h - (h % 1000)) / 1000);
        e = h % 1000 + LocalizationStrings.thousandSeperator + g + e
    }
    e = f + e;
    return e
}
function formatTime(f) {
    var e = Math.floor(f / 3600);
    f -= e * 3600;
    var d = Math.floor(f / 60);
    f -= d * 60;
    if (d < 10) {
        d = "0" + d
    }
    if (f < 10) {
        f = "0" + f
    }
    return e + ":" + d + ":" + f
}
function round(f, g) {
    if (g < 1 || g > 14) {
        return false
    }
    var h = Math.pow(10, g);
    var e = (Math.round(f * h) / h).toString();
    if (e.indexOf(".") == -1) {
        e += "."
    }
    e += h.toString().substring(1);
    return e.substring(0, e.indexOf(".") + g + 1)
}
function show_hide_menus(b) {
    if ($(b).is(":visible")) {
        $(b).hide()
    } else {
        $(b).show()
    }
}
function change_class(b) {
    if (document.getElementById(b).className == "closed") {
        document.getElementById(b).className = "opened"
    } else {
        document.getElementById(b).className = "closed"
    }
}
function show_hide_tbl(f) {
    var e = document.getElementById(f);
    try {
        if (e) {
            e.style.display = (e.style.display == "none" ? "table-row" : "none")
        }
    } catch (d) {
        e.style.display = "block"
    }
}
function cntchar(f, d) {
    var e = $(f);
    if (e.val().length > d) {
        e.val(e.val().substr(0, d))
    }
    e.parents("form").find(".cntChars").text(e.val().length)
}
function getSession() {
    return $('meta[name="ogame-session"]').attr("content")
}
function showGalaxy(f, d, e) {
    openParentLocation("index.php?page=galaxy&no_header=1&galaxy=" + f + "&system=" + d + "&planet=" + e)
}
function openParentLocation(c) {
    try {
        window.opener.document.location.href = c
    } catch (d) {
        try {
            window.parent.document.location.href = c
        } catch (d) {
            document.location.href = c
        }
    }
}
function submitOnEnter(d) {
    var c;
    if (window.event) {
        c = window.event.keyCode
    } else {
        if (d) {
            c = d.which
        } else {
            return true
        }
    }
    if (c == 13) {
        trySubmit();
        return false
    } else {
        return true
    }
}
function formSubmitOnEnter(d, e) {
    var f;
    if (window.event) {
        f = window.event.keyCode
    } else {
        if (e) {
            f = e.which
        } else {
            return true
        }
    }
    if (f == 13) {
        document.forms[d].submit();
        return false
    } else {
        return true
    }
}
function setMaxIntInput(e, d) {
    for (var f in d) {
        if (!$(e).find("#ship_" + f).attr("disabled")) {
            $(e).find("#ship_" + f).val(d[f]);
            checkIntInput($(e).find("ship_" + f), 0, d[f])
        }
    }
}
function clearInput(b) {
    $(b).val("")
}
function checkIntInput(g, f, h) {
    var e = $(g).val();
    if (typeof e != "undefined" && e != "") {
        intVal = Math.abs(getValue(e));
        if (h != null) {
            intVal = Math.min(intVal, h)
        }
        $(g).val(intVal)
    }
}
function handlerToSubmitAjaxForm(c) {
    var d = "submit_" + String(c);
    if ($.isFunction(window[d])) {
        window[d]()
    }
    return false
}
function ajaxCall(d, c) {
    $("#" + c + " select").ogameDropDown("destroy");
    $("#" + c).html('<p class="ajaxLoad"></p>');
    console.log('ajaxCall()');
    $.post(d, function (a) {
        $("#" + c).html(a);
        $("#" + c + " select").ogameDropDown()
    })
}
function ajaxSumbit(e, d, f) {
    $("#" + f + " select").ogameDropDown("destroy");
    $("#" + f).html('<p class="ajaxLoad"><?=LOCA_ALL_AJAXLOAD ?></p>');
    console.log('ajaxSubmit()');
    $.post(e, $("#" + d).serialize(), function (a) {
        $("#" + f).html(a);
        $("#" + f + " select").ogameDropDown()
    })
}
Number.prototype.isBetween = function (c, d) {
    return this >= c && this <= d
};
function getValue(b) {
    result = parseInt(b.toString().replace(/^k$/, "1000").replace(/k/, "000").replace(/^0+/, "").replace(/[^0-9]/g, ""));
    return isNaN(result) ? 0 : result
}
function loadScript(e, g) {
    if (typeof(loadScript.loadedScripts) == "undefined") {
        loadScript.loadedScripts = {}
    }
    if (typeof(loadScript.loadedScripts[e]) == "undefined") {
        loadScript.loadedScripts[e] = true;
        var f = document.createElement("script");
        f.type = "text/javascript";
        if (f.readyState) {
            f.onreadystatechange = function () {
                if (f.readyState == "loaded" || f.readyState == "complete") {
                    f.onreadystatechange = null;
                    g()
                }
            }
        } else {
            f.onload = function () {
                g()
            }
        }
        f.src = e;
        var h = document.getElementsByTagName("head")[0];
        h.appendChild(f)
    } else {
        g()
    }
}
function formatNumber(f, h) {
    var l = number_format(getValue(h), 0, LocalizationStrings.decimalPoint, LocalizationStrings.thousandsSeparator);
    var k = $(f);
    var g = k.getSelection();
    if (k.val() != l) {
        if (k.val().length != l.length) {
            g.start = g.start + (l.length - k.val().length);
            g.end = g.end + (l.length - k.val().length)
        }
    }
    k.val(l);
    if (k.is(":focus")) {
        k.setSelection(g)
    }
}
function initToggleHeader(b) {
    $("a.toggleHeader").click(function () {
        $("#planet").toggleClass("shortHeader");
        $(".c-left").toggleClass("shortCorner");
        $(".c-right").toggleClass("shortCorner");
        changeSetting("headerImage", b + "|" + ($("#planet.shortHeader").length == 1))
    })
}
function initFormValidation() {
    $("form.formValidation").validationEngine({
        validationEventTrigger: "keyup blur",
        promptPosition: "centerRight"
    })
}
Function.prototype.clone = function () {
    var e = this;
    var f = function () {
        return e.apply(this, arguments)
    };
    f.prototype = e.prototype;
    for (var d in e) {
        if (e.hasOwnProperty(d) && d !== "prototype") {
            f[d] = e[d]
        }
    }
    return f
};
jQuery.fn.slideFadeToggle = function (e, f, d) {
    return this.animate({opacity: "toggle", width: "toggle"}, e, f, d)
};
function focusOnTabChange(e, d) {
    var f = function () {
        $(e).focus()
    };
    if (d == true) {
        $(document).ready(f)
    }
    $(window).unbind("blur").bind("blur", f)
}
function getIEVersion() {
    var b = 999;
    if (navigator.appVersion.indexOf("MSIE") != -1) {
        b = parseFloat(navigator.appVersion.split("MSIE")[1])
    }
    return b
}
ogame.tools = {
    addHover: function (b) {
        $(b).on({
            mouseenter: function () {
                $(this).addClass("over")
            }, mouseleave: function () {
                $(this).removeClass("over")
            }
        })
    }, scrollToTop: function () {
        var b = $(".scroll_to_top");
        $(window).on("scroll.scrollToTop", function () {
            $(".scroll_to_top").css({visibility: (b.offset().top > window.innerHeight) ? "visible" : "hidden"}, 600)
        });
        b.on("click.scrollToTop", function () {
            $("body, html").animate({scrollTop: 0}, 600)
        })
    }
};
function refreshBars(f, h, e) {
    var g = $("." + f);
    g.each(function () {
        var a = $(this), o = a.data("currentAmount"), p = a.data("capacity"), n = o / p * 100, b = a.find("." + h);
        if (n > 100) {
            n = 100
        } else {
            if (n == 0) {
                n = 0
            } else {
                if (n < 1.3) {
                    n = 1.3
                }
            }
        }
        b.css("width", n + "%");
        if (n < 90) {
            b.attr("class", h + " filllevel_undermark")
        } else {
            if (n > 90 && n < 100) {
                b.attr("class", h + " filllevel_middlemark")
            } else {
                b.attr("class", h + " filllevel_overmark")
            }
        }
        if (e) {
            var c = a.find("." + e), d = c.data("premiumPercent");
            if ((n + d) > 100) {
                d = 100 - n
            }
            c.css("width", d + "%")
        }
    })
}
var TimerHandler = function (d, c) {
    if (typeof(d) == "undefined") {
        d = 1000
    }
    this._interval = d;
    this._callbacks = new Array();
    this._intervalId = null;
    this._lastId = 0;
    this.pageReloadAlreadyTriggered = false;
    this.checkEventsAlreadyQueued = false;
    if (c != false) {
        this.startTimer()
    }
};
TimerHandler.prototype.appendCallback = function (c) {
    var d = this._lastId++;
    this._callbacks[d] = c;
    return d
};
TimerHandler.prototype.removeCallback = function (b) {
    this._callbacks[b] = null
};
TimerHandler.prototype.startTimer = function () {
    var b = this;
    this._intervalId = window.setInterval(function () {
        b._timer()
    }, this._interval)
};
TimerHandler.prototype.stopTimer = function () {
    window.clearInterval(this._intervalId)
};
TimerHandler.prototype._timer = function () {
    for (var b in this._callbacks) {
        if (this._callbacks[b] != null) {
            this._callbacks[b]()
        }
    }
};